{"components":[{"$type":"class","alias":"widget.actionsheet","extended":"Ext.Sheet,Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Sheet","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","name":"Ext.ActionSheet","requires":"Ext.Button","text":"{@link Ext.ActionSheet ActionSheets} are used to display a list of {@link Ext.Button buttons}\nin a popup dialog.\n\nThe key difference between ActionSheet and {@link Ext.Sheet} is that ActionSheets are\ndocked at the bottom of the screen, and the {@link #defaultType} is set to\n{@link Ext.Button button}.\n\n## Example\n\n```javascript\n@example({ framework: 'extjs' })\nvar actionSheet = Ext.create('Ext.ActionSheet', {\n    items: [\n        {\n            text: 'Delete draft',\n            ui  : 'decline'\n        },\n        {\n            text: 'Save draft'\n        },\n        {\n            text: 'Cancel',\n            ui  : 'confirm'\n        }\n    ]\n});\n\nExt.Viewport.add(actionSheet);\nactionSheet.show();\n```\n\n## Edge Menus\nAction Sheets can be used with {@link Ext.Viewport#setMenu}. They can be linked with\nany side of the screen (top, left, bottom or right). To use this menu you will call various\nmenu related functions on the {@link Ext.Viewport Viewport} such as\n{@link Ext.Viewport#showMenu}, {@link Ext.Viewport#hideMenu}, {@link Ext.Viewport#toggleMenu},\n{@link Ext.Viewport#hideOtherMenus}, or {@link Ext.Viewport#hideAllMenus}.\n\n```javascript\n@example({ framework: 'extjs' })\nvar menu = Ext.create({\n    xtype: 'actionsheet',\n    items: [{\n        text: 'Settings',\n        iconCls: 'settings'\n    }, {\n        text: 'New Item',\n        iconCls: 'compose'\n    }, {\n        text: 'Star',\n        iconCls: 'star'\n    }]\n});\n\nExt.Viewport.add({\n    xtype: 'panel',\n    html: 'Main View Content'\n});\n\nExt.Viewport.setMenu(menu, {\n    side: 'left',\n    // omitting the reveal config defaults the animation to 'cover'\n    reveal: true\n});\n\nExt.Viewport.showMenu('left');\n```\n\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n    <ext-actionsheet displayed=\"true\">\n        <ext-button ui=\"decline\" text=\"Delete Draft\"></ext-button>\n        <ext-button text=\"Save Draft\"></ext-button>\n        <ext-button text=\"Cancel\"></ext-button>\n    </ext-actionsheet>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-actionsheet.component';\nimport '@sencha/ext-web-components/dist/ext-button.component';\n\nexport default class ActionSheetComponent {}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtActionSheet, ExtButton } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n   render() {\n       return (\n           <ExtContainer>\n               <ExtActionSheet displayed>\n                   <ExtButton ui=\"decline\" text=\"Delete Draft\"/>\n                   <ExtButton text=\"Save Draft\"/>\n                   <ExtButton text=\"Cancel\"/>\n               </ExtActionSheet>\n           </ExtContainer>\n       )\n   }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n         <ExtContainer>\n             <ExtActionSheet [displayed]=\"true\">\n                 <ExtButton ui=\"decline\" text=\"Delete Draft\"></ExtButton>\n                 <ExtButton text=\"Save Draft\"></ExtButton>\n                 <ExtButton text=\"Cancel\"></ExtButton>\n             </ExtActionSheet>\n         </ExtContainer>\n             `\n })\n export class AppComponent {\n\n }\n```\n","items":[{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$actionsheet-background-color","text":"ActionSheet background-color\n","type":"color","value":"$sheet-background-color","src":{"dynamic":"1151,9,32","name":"1151,9,1","text":"1151,7,4,29","type":"1151,6,10","value":"1151,9,40"}},{"$type":"property","dynamic":true,"name":"$actionsheet-border-color","text":"ActionSheet border-color\n","type":"color","value":"$sheet-border-color","src":{"dynamic":"1151,15,28","name":"1151,15,1","text":"1151,13,4,25","type":"1151,12,10","value":"1151,15,36"}},{"$type":"property","dynamic":true,"name":"$actionsheet-border-style","text":"ActionSheet border-style\n","type":"number","value":"$sheet-border-style","src":{"dynamic":"1151,27,28","name":"1151,27,1","text":"1151,25,4,25","type":"1151,24,10","value":"1151,27,36"}},{"$type":"property","dynamic":true,"name":"$actionsheet-border-width","text":"ActionSheet border-width\n","type":"number","value":"$sheet-border-width","src":{"dynamic":"1151,21,28","name":"1151,21,1","text":"1151,19,4,25","type":"1151,18,10","value":"1151,21,36"}},{"$type":"property","dynamic":true,"name":"$actionsheet-button-spacing","text":"Space between vertically aligned sheet buttons\n","type":"number","value":"$sheet-button-spacing","src":{"dynamic":"1151,33,30","name":"1151,33,1","text":"1151,31,4,47","type":"1151,30,10","value":"1151,33,38"}},{"$type":"property","dynamic":true,"name":"$actionsheet-padding","text":"ActionSheet padding\n","type":"number","value":"8px","src":{"dynamic":"1151,39,23","name":"1151,39,1","text":"1151,37,4,20","type":"1151,36,10","value":"1151,39,31"}}]}],"src":{"alias":"404,134,0","extends":"404,132,0","name":"1151,2,11","requires":"404,133,0","text":"404,2,4,3590"},"group":"Container","displayName":"Actionsheet"},{"$type":"class","alias":"widget.audio","extended":"Ext.Media,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Media","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Audio","text":"{@link Ext.Audio} is a simple class which provides a container for the\n[HTML5 Audio element](http://developer.mozilla.org/en-US/docs/Using_HTML5_audio_and_video).\n\n## Recommended File Types/Compression:\n\n* Uncompressed WAV and AIF audio\n* MP3 audio\n* AAC-LC\n* HE-AAC audio\n\n## Notes\n\nOn Android devices, the audio tags controls do not show. You must use the {@link #method-play},\n{@link #method-pause}, and {@link #toggle} methods to control the audio (example below).\n\n## Examples\n\nThis example shows the use of the {@link Ext.Audio} component in a fullscreen container--change\nthe url: item for the location of an audio file--note that the audio starts on page load:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    layout: {\n        type : 'vbox',\n        pack : 'center',\n        align: 'stretch'\n    },\n    items: [\n        {\n            xtype : 'toolbar',\n            docked: 'top',\n            title : 'Ext.Audio'\n        },\n        {\n            xtype: 'audio',\n            url  : 'touch-build/examples/audio/crash.mp3'\n        }\n    ]\n});\n```\n\nYou can also set the {@link #hidden} configuration of the {@link Ext.Audio} component to true\nby default, and then control the audio by using the {@link #method-play}, {@link #method-pause},\nand {@link #toggle} methods:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    layout: {\n        type: 'vbox',\n        pack: 'center'\n    },\n    items: [\n        {\n            xtype : 'toolbar',\n            docked: 'top',\n            title : 'Ext.Audio'\n        },\n        {\n            xtype: 'toolbar',\n            docked: 'bottom',\n            defaults: {\n                xtype: 'button',\n                handler: function() {\n                    var container = this.getParent().getParent(),\n                        // use ComponentQuery to get the audio component (using its xtype)\n                        audio = container.down('audio');\n\n                    audio.toggle();\n                    this.setText(audio.isPlaying() ? 'Pause' : 'Play');\n                }\n            },\n            items: [\n                { text: 'Play', flex: 1 }\n            ]\n        },\n        {\n            html: 'Hidden audio!'\n        },\n        {\n            xtype : 'audio',\n            hidden: true,\n            url   : 'touch-build/examples/audio/crash.mp3'\n        }\n    ]\n});\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"cls","text":"The CSS class to add to this widget's element, in\naddition to the {@link #baseCls}. In many cases, this property will be specified\nby the derived widget class. See {@link #userCls} for adding additional CSS\nclasses to widget instances (such as items in a {@link Ext.Container}).\n","type":"String/String[]","value":"Ext.baseCSSPrefix + 'audio'","src":{"accessor":"406,102,0","inheritdoc":"406,100,12","name":"406,99,17","text":"18,215,39,50:18,216,12,229","type":"18,215,18","value":"406,102,0"}},{"$type":"property","accessor":true,"name":"url","text":"The location of the audio to play.\n\n### Recommended file types are:\n* Uncompressed WAV and AIF audio\n* MP3 audio\n* AAC-LC\n* HE-AAC audio\n","type":"String","src":{"accessor":"406,113,12","name":"406,105,26","text":"406,106,12,137","type":"406,105,18"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"onActivate","src":{"access":"406,118,8","name":"406,120,0"}},{"$type":"method","access":"private","name":"onDeactivate","src":{"access":"406,131,8","name":"406,133,0"}}]}],"src":{"alias":"406,95,0","extends":"406,94,0","name":"406,93,0","text":"406,2,4,2430"},"group":"Other Components","displayName":"Audio"},{"$type":"class","extenders":"Ext.Evented,Ext.Mixin,Ext.mixin.Identifiable,Ext.mixin.Bindable,Ext.mixin.Pluggable,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.AbstractManager,Ext.mixin.Queryable,Ext.panel.Buttons,Ext.mixin.Toolable,Ext.data.Connection,Ext.Anim,Ext.AnimationQueue,Ext.app.BaseController,Ext.util.Schedulable,Ext.util.Fly,Ext.app.bind.Template,Ext.app.EventDomain,Ext.app.EventBus,Ext.app.Profile,Ext.app.Util,Ext.app.ViewModel,Ext.behavior.Behavior,Ext.mixin.ItemRippler,Ext.calendar.date.Range,Ext.calendar.date.Util,Ext.drag.Item,Ext.drag.proxy.None,Ext.field.Manager,Ext.form.Borders,Ext.data.Model,Ext.data.AbstractStore,Ext.calendar.theme.Palette,Ext.calendar.theme.Theme,Ext.calendar.util.Dom,Ext.calendar.view.DaysRenderer,Ext.calendar.view.WeeksRenderer,Ext.chart.axis.Axis,Ext.chart.axis.layout.Layout,Ext.chart.axis.segmenter.Segmenter,Ext.draw.sprite.Sprite,Ext.chart.Caption,Ext.chart.interactions.Abstract,Ext.chart.legend.SpriteLegend,Ext.draw.modifier.Modifier,Ext.plugin.Abstract,Ext.chart.series.Series,Ext.chart.theme.BaseTheme,Ext.chart.theme.series.Series,Ext.chart.Util,Ext.ComponentManager,Ext.ComponentQuery,Ext.d3.axis.Axis,Ext.d3.axis.Color,Ext.d3.canvas.HiDPI,Ext.d3.Helpers,Ext.d3.interaction.Abstract,Ext.d3.legend.Legend,Ext.d3.svg.Export,Ext.data.amf.Encoder,Ext.data.proxy.Proxy,Ext.data.reader.Reader,Ext.data.amf.RemotingMessage,Ext.data.amf.XmlEncoder,Ext.data.Batch,Ext.data.Error,Ext.util.AbstractMixedCollection,Ext.util.Sortable,Ext.data.field.Field,Ext.data.flash.BinaryXhr,Ext.util.Collection,Ext.data.identifier.Generator,Ext.data.JsonP,Ext.data.matrix.Matrix,Ext.data.matrix.Side,Ext.data.matrix.Slice,Ext.data.ModelManager,Ext.data.NodeInterface,Ext.data.operation.Operation,Ext.util.HashMap,Ext.util.BasicFilter,Ext.data.query.Compiler,Ext.data.query.Converter,Ext.data.query.Stringifier,Ext.data.Range,Ext.data.Request,Ext.data.request.Base,Ext.data.ResultSet,Ext.data.schema.Association,Ext.data.schema.Namer,Ext.data.schema.Role,Ext.data.schema.Schema,Ext.data.Session,Ext.mixin.Dirty,Ext.data.session.BatchVisitor,Ext.data.session.ChangesVisitor,Ext.data.SortTypes,Ext.data.summary.Base,Ext.data.Types,Ext.data.validator.Validator,Ext.data.virtual.Group,Ext.data.virtual.Page,Ext.data.virtual.PageMap,Ext.data.writer.Writer,Ext.dataview.GenericItem,Ext.dataview.Disclosable,Ext.dataview.Pinnable,Ext.dataview.ListCollapser,Ext.dataview.ListGroup,Ext.dataview.Location,Ext.dataview.selection.Selection,Ext.dd.Manager,Ext.dd.ScrollManager,Ext.promise.Deferred,Ext.direct.Event,Ext.direct.Provider,Ext.direct.Manager,Ext.direct.RemotingMethod,Ext.direct.Transaction,Ext.dom.CompositeElementLite,Ext.dom.Element,Ext.util.Positionable,Ext.util.Event,Ext.dom.GarbageCollector,Ext.dom.Helper,Ext.dom.Query,Ext.dom.Underlay,Ext.dom.TouchAction,Ext.dom.UnderlayPool,Ext.drag.Constraint,Ext.drag.Info,Ext.drag.Manager,Ext.draw.Animator,Ext.draw.Draw,Ext.draw.engine.SvgContext,Ext.draw.engine.SvgContext.Gradient,Ext.draw.gradient.Gradient,Ext.draw.gradient.GradientDefinition,Ext.draw.LimitedCache,Ext.draw.Matrix,Ext.draw.Path,Ext.draw.PathUtil,Ext.draw.Point,Ext.draw.SegmentTree,Ext.draw.sprite.AnimationParser,Ext.draw.sprite.AttributeDefinition,Ext.draw.sprite.AttributeParser,Ext.draw.TextMeasurer,Ext.draw.TimingFunctions,Ext.event.Event,Ext.event.gesture.Recognizer,Ext.event.publisher.Publisher,Ext.exporter.Base,Ext.exporter.data.Base,Ext.exporter.File,Ext.exporter.file.zip.File,Ext.field.InputMask,Ext.fx.Animation,Ext.fx.easing.Abstract,Ext.fx.easing.Easing,Ext.fx.Runner,Ext.fx.State,Ext.Glyph,Ext.mixin.StoreWatcher,Ext.layout.Auto,Ext.layout.overflow.Scroller,Ext.layout.wrapper.BoxDock,Ext.layout.wrapper.Inner,Ext.menu.Manager,Ext.mixin.Watchable,Ext.panel.Collapser,Ext.panel.Resizer,Ext.parse.Symbol,Ext.perf.Accumulator,Ext.perf.Monitor,Ext.pivot.Aggregators,Ext.pivot.axis.Base,Ext.pivot.axis.Item,Ext.pivot.dimension.Item,Ext.pivot.feature.PivotStore,Ext.pivot.filter.Base,Ext.pivot.plugin.configurator.FieldSettings,Ext.pivot.result.Base,Ext.pivot.result.Collection,Ext.ProgressBase,Ext.Promise,Ext.promise.Consequence,Ext.promise.Promise,Ext.route.Action,Ext.route.Handler,Ext.route.Route,Ext.route.Router,Ext.sparkline.CanvasBase,Ext.sparkline.RangeMap,Ext.sparkline.Shape,Ext.state.Builder,Ext.state.Provider,Ext.TaskQueue,Ext.Template,Ext.tip.Manager,Ext.util.Audio,Ext.util.Bag,Ext.util.Base64,Ext.util.ClickRepeater,Ext.util.CollectionKey,Ext.util.Color,Ext.util.Cookies,Ext.util.CSS,Ext.util.DelimitedValue,Ext.util.Draggable,Ext.util.Format,Ext.util.Sorter,Ext.util.History,Ext.util.Inflector,Ext.util.InputBlocker,Ext.util.KeyMap,Ext.util.KeyNav,Ext.util.LineSegment,Ext.util.LocalStorage,Ext.util.ObjectTemplate,Ext.util.Offset,Ext.util.PaintMonitor,Ext.util.paintmonitor.Abstract,Ext.util.Region,Ext.util.Scheduler,Ext.util.SizeMonitor,Ext.util.sizemonitor.Abstract,Ext.util.Spans,Ext.util.TaskRunner,Ext.util.TextMetrics,Ext.util.Wrapper,Ext.util.XTemplateParser,Ext.ux.ajax.Simlet,Ext.ux.ajax.SimManager,Ext.ux.ajax.SimXhr,Ext.ux.colorpick.Selection,Ext.ux.colorpick.ColorUtils,Ext.ux.event.Maker,Ext.ux.gauge.needle.Abstract,Ext.ux.google.Api,Ext.viewport.Viewport","extends":"Object","name":"Ext.Base","package":"core","text":"\nThe root of all classes created with {@link Ext#define}.\n\nExt.Base is the building block of all Ext classes. All classes in Ext inherit from Ext.Base.\nAll prototype and static members of this class are inherited by all other classes.\n","items":[{"$type":"methods","items":[{"$type":"method","access":"private","name":"addDeprecations","text":"This method applies a versioned, deprecation declaration to this class. This\nis typically called by the `deprecated` config.\n","items":[{"$type":"param","name":"deprecations","src":{"name":"46,164,0"}}],"src":{"access":"46,162,12","name":"46,164,0","text":"46,160,12,125"}},{"$type":"method","access":"protected","deprecatedMessage":"Use {@link #method-callParent} instead.\n","deprecatedVersion":"4.1.0","name":"callOverridden","text":"Call the original method that was previously overridden with {@link Ext.Base#override}\n\n    Ext.define('My.Cat', {\n        constructor: function() {\n            alert(\"I'm a cat!\");\n        }\n    });\n\n    My.Cat.override({\n        constructor: function() {\n            alert(\"I'm going to be a cat!\");\n\n            this.callOverridden();\n\n            alert(\"Meeeeoooowwww\");\n        }\n    });\n\n    var kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                              // alerts \"I'm a cat!\"\n                              // alerts \"Meeeeoooowwww\"\n","items":[{"$type":"param","name":"args","text":"The arguments, either an array or the `arguments` object\nfrom the current method, for example: `this.callOverridden(arguments)`\n","type":"Array/Arguments","src":{"name":"46,2098,33","text":"46,2098,38,57:46,2099,8,71","type":"46,2098,16"}},{"$type":"return","text":"Returns the result of calling the overridden method\n","type":"Object","src":{"text":"46,2100,25,52","type":"46,2100,17"}}],"src":{"access":"46,2102,8","deprecatedMessage":"46,2101,8","deprecatedVersion":"46,2101,8","name":"46,2075,16","text":"46,2076,8,569"}},{"$type":"method","access":"protected","name":"callParent","text":"Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see {@link Ext#define}).\n\n     Ext.define('My.Base', {\n         constructor: function(x) {\n             this.x = x;\n         },\n\n         statics: {\n             method: function(x) {\n                 return x;\n             }\n         }\n     });\n\n     Ext.define('My.Derived', {\n         extend: 'My.Base',\n\n         constructor: function() {\n             this.callParent([21]);\n         }\n     });\n\n     var obj = new My.Derived();\n\n     alert(obj.x);  // alerts 21\n\nThis can be used with an override as follows:\n\n     Ext.define('My.DerivedOverride', {\n         override: 'My.Derived',\n\n         constructor: function(x) {\n             this.callParent([x*2]); // calls original My.Derived constructor\n         }\n     });\n\n     var obj = new My.Derived();\n\n     alert(obj.x);  // now alerts 42\n\nThis also works with static and private methods.\n\n     Ext.define('My.Derived2', {\n         extend: 'My.Base',\n\n         // privates: {\n         statics: {\n             method: function(x) {\n                 return this.callParent([x*2]); // calls My.Base.method\n             }\n         }\n     });\n\n     alert(My.Base.method(10));     // alerts 10\n     alert(My.Derived2.method(10)); // alerts 20\n\nLastly, it also works with overridden static methods.\n\n     Ext.define('My.Derived2Override', {\n         override: 'My.Derived2',\n\n         // privates: {\n         statics: {\n             method: function(x) {\n                 return this.callParent([x*2]); // calls My.Derived2.method\n             }\n         }\n     });\n\n     alert(My.Derived2.method(10); // now alerts 40\n\nTo override a method and replace it and also call the superclass method, use\n{@link #method-callSuper}. This is often done to patch a method to fix a bug.\n","items":[{"$type":"param","name":"args","text":"The arguments, either an array or the `arguments` object\nfrom the current method, for example: `this.callParent(arguments)`\n","type":"Array/Arguments","src":{"name":"46,1438,37","text":"46,1438,42,57:46,1439,12,67","type":"46,1438,20"}},{"$type":"return","text":"Returns the result of calling the parent method\n","type":"Object","src":{"text":"46,1440,29,48","type":"46,1440,21"}}],"src":{"access":"46,1437,12","name":"46,1442,0","text":"46,1362,12,1847"}},{"$type":"method","access":"protected","name":"callSuper","text":"This method is used by an **override** to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.\n\nConsider:\n\n     Ext.define('Ext.some.Class', {\n         method: function() {\n             console.log('Good');\n         }\n     });\n\n     Ext.define('Ext.some.DerivedClass', {\n         extend: 'Ext.some.Class',\n\n         method: function() {\n             console.log('Bad');\n\n             // ... logic but with a bug ...\n\n             this.callParent();\n         }\n     });\n\nTo patch the bug in `Ext.some.DerivedClass.method`, the typical solution is to create an\noverride:\n\n     Ext.define('App.patches.DerivedClass', {\n         override: 'Ext.some.DerivedClass',\n\n         method: function() {\n             console.log('Fixed');\n\n             // ... logic but with bug fixed ...\n\n             this.callSuper();\n         }\n     });\n\nThe patch method cannot use {@link #method-callParent} to call the superclass\n`method` since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using `callParent` would produce \"Fixed\" then \"Bad\"\nthen \"Good\".\n","items":[{"$type":"param","name":"args","text":"The arguments, either an array or the `arguments` object\nfrom the current method, for example: `this.callSuper(arguments)`\n","type":"Array/Arguments","src":{"name":"46,1529,37","text":"46,1529,42,57:46,1530,12,66","type":"46,1529,20"}},{"$type":"return","text":"Returns the result of calling the superclass method\n","type":"Object","src":{"text":"46,1531,29,52","type":"46,1531,21"}}],"src":{"access":"46,1528,12","name":"46,1533,0","text":"46,1483,12,1263"}},{"$type":"method","name":"destroy","text":"This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.\n\nTo prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless {@link #clearPropertiesOnDestroy}\nis set to `false`.\n","src":{"name":"46,2039,0","text":"46,2031,12,360"}},{"$type":"method","disable":"2125","name":"destroyMembers","text":"Destroys member properties by name.\n\nIf a property name is the name of a *config*, the getter is *not* invoked, so\nif the config has not been initialized, nothing will be done.\n\nThe property will be destroyed, and the corrected name (if the property is a *config*\nand config names are prefixed) will set to `null` in this object's dictionary.\n","items":[{"$type":"param","name":"args","text":"One or more names of the properties to destroy and remove from\nthe object.\n","type":"String...","src":{"name":"46,1715,31","text":"46,1715,36,63:46,1716,12,12","type":"46,1715,20"}}],"src":{"disable":"46,1725,0","name":"46,1718,0","text":"46,1707,12,344"}},{"$type":"method","name":"getConfig","text":"Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.\n","items":[{"$type":"param","name":"name","optional":true,"text":"The name of the config property to get.\n","type":"String","src":{"name":"46,1660,29","text":"46,1660,35,40","type":"46,1660,20"}},{"$type":"param","name":"peek","optional":true,"text":"`true` to peek at the raw value without calling the getter.\n","type":"Boolean","value":"false","src":{"name":"46,1661,30","text":"46,1661,42,60","type":"46,1661,20","value":"46,1661,35"}},{"$type":"param","name":"ifInitialized","optional":true,"text":"`true` to only return the initialized property\nvalue, not the raw config value, and *not* to trigger initialization. Returns\n`undefined` if the property has not yet been initialized.\n","type":"Boolean","value":"false","src":{"name":"46,1662,30","text":"46,1662,51,47:46,1663,12,136","type":"46,1662,20","value":"46,1662,44"}},{"$type":"return","text":"The config property value.\n","type":"Object","src":{"text":"46,1665,29,27","type":"46,1665,21"}}],"src":{"name":"46,1667,0","text":"46,1658,12,151"}},{"$type":"method","access":"private","name":"getCurrentConfig","src":{"access":"46,1861,12","name":"46,1863,0"}},{"$type":"method","name":"getInitialConfig","text":"Returns the initial configuration passed to the constructor when\ninstantiating this class.\n\nGiven this example Ext.button.Button definition and instance:\n\n    Ext.define('MyApp.view.Button', {\n        extend: 'Ext.button.Button',\n        xtype: 'mybutton',\n\n        scale: 'large',\n        enableToggle: true\n    });\n\n    var btn = Ext.create({\n        xtype: 'mybutton',\n        renderTo: Ext.getBody(),\n        text: 'Test Button'\n    });\n\nCalling `btn.getInitialConfig()` would return an object including the config\noptions passed to the `{@link #static-method!create create}` method:\n\n    xtype: 'mybutton',\n    renderTo: // The document body itself\n    text: 'Test Button'\n\nCalling `btn.getInitialConfig('text')`returns **'Test Button'**.\n","items":[{"$type":"param","name":"name","optional":true,"text":"Name of the config option to return.\n","type":"String","src":{"name":"46,1906,29","text":"46,1906,35,37","type":"46,1906,20"}},{"$type":"return","text":"The full config object or a single config value\nwhen `name` parameter specified.\n","type":"Object/Mixed","src":{"text":"46,1907,35,48:46,1908,12,33","type":"46,1907,21"}}],"src":{"name":"46,1910,0","text":"46,1878,12,715"}},{"$type":"method","access":"private","name":"hasConfig","items":[{"$type":"param","name":"name","type":"String","src":{"name":"46,1870,28","type":"46,1870,20"}}],"src":{"access":"46,1871,12","name":"46,1873,0"}},{"$type":"method","access":"protected","chainable":true,"name":"initConfig","text":"Initialize configuration for this class. a typical example:\n\n    Ext.define('My.awesome.Class', {\n        // The default config\n        config: {\n            name: 'Awesome',\n            isAwesome: true\n        },\n\n        constructor: function(config) {\n            this.initConfig(config);\n        }\n    });\n\n    var awesome = new My.awesome.Class({\n        name: 'Super Awesome'\n    });\n\n    alert(awesome.getName()); // 'Super Awesome'\n","items":[{"$type":"param","name":"instanceConfig","type":"Object","src":{"name":"46,1640,28","type":"46,1640,20"}},{"$type":"return","text":"this\n","type":"Ext.Base","src":{"text":"46,1641,31,5","type":"46,1641,21"}}],"src":{"access":"46,1639,12","chainable":"46,1642,12","name":"46,1644,0","text":"46,1619,12,441"}},{"$type":"method","access":"private","name":"link","text":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via `{@link #method!destroy}`).\n","items":[{"$type":"param","name":"name","type":"String","src":{"name":"46,1926,28","type":"46,1926,20"}},{"$type":"param","name":"value","type":"Object","src":{"name":"46,1927,28","type":"46,1927,20"}},{"$type":"return","text":"The `value` passed.\n","type":"Object","src":{"text":"46,1928,29,20","type":"46,1928,21"}}],"src":{"access":"46,1929,12","name":"46,1931,0","text":"46,1924,12,147"}},{"$type":"method","chainable":true,"name":"setConfig","text":"Sets a single/multiple configuration options.\n","items":[{"$type":"param","name":"name","text":"The name of the property to set, or a set of key value\npairs to set.\n","type":"String/Object","src":{"name":"46,1771,35","text":"46,1771,40,55:46,1772,12,14","type":"46,1771,20"}},{"$type":"param","name":"value","optional":true,"text":"The value to set for the name parameter.\n","type":"Object","src":{"name":"46,1773,29","text":"46,1773,36,41","type":"46,1773,20"}},{"$type":"param","access":"private","name":"options","optional":true,"type":"Object","src":{"access":"46,1774,39","name":"46,1774,29","type":"46,1774,20"}},{"$type":"return","text":"this\n","type":"Ext.Base","src":{"text":"46,1775,31,5","type":"46,1775,21"}}],"src":{"chainable":"46,1834,0","name":"46,1777,0","text":"46,1770,12,46"}},{"$type":"method","access":"protected","name":"statics","text":"Get the reference to the class from which this object was instantiated. Note that unlike\n{@link Ext.Base#self}, `this.statics()` is scope-independent and it always returns\nthe class from which it was called, regardless of what `this` points to during run-time\n\n    Ext.define('My.Cat', {\n        statics: {\n            totalCreated: 0,\n            speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n        },\n\n        constructor: function() {\n            var statics = this.statics();\n\n            // always equals to 'Cat' no matter what 'this' refers to\n            // equivalent to: My.Cat.speciesName\n            alert(statics.speciesName);\n\n\n            alert(this.self.speciesName);   // dependent on 'this'\n\n            statics.totalCreated++;\n        },\n\n        clone: function() {\n            var cloned = new this.self();   // dependent on 'this'\n\n            // equivalent to: My.Cat.speciesName\n            cloned.groupName = this.statics().speciesName;\n\n            return cloned;\n        }\n    });\n\n\n    Ext.define('My.SnowLeopard', {\n        extend: 'My.Cat',\n\n        statics: {\n            speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n        },\n\n        constructor: function() {\n            this.callParent();\n        }\n    });\n\n    var cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\n    var snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\n    var clone = snowLeopard.clone();\n    alert(Ext.getClassName(clone));         // alerts 'My.SnowLeopard'\n    alert(clone.groupName);                 // alerts 'Cat'\n\n    alert(My.Cat.totalCreated);             // alerts 3\n","items":[{"$type":"return","type":"Ext.Class","src":{"type":"46,1348,21"}}],"src":{"access":"46,1347,12","name":"46,1350,0","text":"46,1291,12,1674"}},{"$type":"method","access":"private","chainable":true,"name":"unlink","text":"Destroys a given set of `{@link #link linked}` objects. This is only needed if\nthe linked object is being destroyed before this instance.\n","items":[{"$type":"param","name":"names","text":"The names of the linked objects to destroy.\n","type":"String[]","src":{"name":"46,1944,30","text":"46,1944,36,44","type":"46,1944,20"}},{"$type":"return","text":"this\n","type":"Ext.Base","src":{"text":"46,1945,31,5","type":"46,1945,21"}}],"src":{"access":"46,1946,12","chainable":"46,1974,0","name":"46,1948,0","text":"46,1942,12,138"}},{"$type":"method","access":"private","disable":"2125","name":"watchConfig","since":"6.7.0","text":"Watches config properties.\n\n     instance.watchConfig({\n         title: 'onTitleChange',\n         scope: me\n     });\n","items":[{"$type":"param","name":"name","src":{"name":"46,1852,0"}},{"$type":"param","name":"fn","src":{"name":"46,1852,0"}},{"$type":"param","name":"scope","src":{"name":"46,1852,0"}}],"src":{"access":"46,1849,12","disable":"46,1855,0","name":"46,1852,0","since":"46,1850,19","text":"46,1842,12,118"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"$className","value":"'Ext.Base'","src":{"access":"46,1199,13","name":"46,1200,0","value":"46,1200,0"}},{"$type":"property","access":"private","name":"$configPrefixed","since":"5.0.0","text":"The value `true` causes `config` values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of `false`\nstores `config` values as properties using their exact name (no prefix).\n","type":"Boolean","value":"true","src":{"access":"46,1225,12","name":"46,1221,32","since":"46,1226,19","text":"46,1222,12,225","type":"46,1221,23","value":"46,1228,0"}},{"$type":"property","access":"private","name":"$configStrict","since":"5.0.0","text":"The value `true` instructs the `{@link #method!initConfig initConfig}` method to only honor values for\nproperties declared in the `config` block of a class. When `false`, properties\nthat are not declared in a `config` block will be placed on the instance.\n","type":"Boolean","value":"true","src":{"access":"46,1235,12","name":"46,1231,32","since":"46,1236,19","text":"46,1232,12,229","type":"46,1231,23","value":"46,1238,0"}},{"$type":"property","access":"private","name":"$configTransforms","text":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.\n","type":"Object/Array","value":"{}","src":{"access":"46,1207,12","name":"46,1203,37","text":"46,1204,12,225","type":"46,1203,23","value":"46,1209,0"}},{"$type":"property","access":"protected","name":"clearPropertiesOnDestroy","optional":true,"since":"6.2.0","text":"Setting this property to `false` will prevent nulling object references\non a Class instance after destruction. Setting this to `\"async\"` will delay\nthe clearing for approx 50ms.\n","type":"Boolean/\"async\"","value":"true","src":{"access":"46,1269,12","name":"46,1265,41","since":"46,1270,19","text":"46,1266,12,178","type":"46,1265,23","value":"46,1265,66"}},{"$type":"property","access":"private","name":"clearPrototypeOnDestroy","optional":true,"since":"6.2.0","text":"Setting this property to `true` will result in setting the object's\nprototype to `null` after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.\n\nNote that this option can only work in browsers that support `Object.setPrototypeOf`\nmethod, and is only available in debugging mode.\n","type":"Boolean","value":"false","src":{"access":"46,1285,12","name":"46,1275,33","since":"46,1286,19","text":"46,1276,12,538","type":"46,1275,23","value":"46,1275,57"}},{"$type":"property","name":"destroyed","text":"This property is set to `true` after the `{@link #method!destroy destroy}` method is called.\n","type":"Boolean","value":"false","src":{"name":"46,1259,32","text":"46,1260,12,69","type":"46,1259,23","value":"46,1262,0"}},{"$type":"property","access":"protected","name":"isConfiguring","readonly":true,"since":"5.0.0","text":"This property is set to `true` during the call to `{@link #method!initConfig initConfig}`.\n","type":"Boolean","value":"false","src":{"access":"46,1243,12","name":"46,1241,32","readonly":"46,1244,12","since":"46,1245,19","text":"46,1242,12,64","type":"46,1241,23","value":"46,1247,0"}},{"$type":"property","access":"protected","name":"isFirstInstance","readonly":true,"since":"5.0.0","text":"This property is set to `true` if this instance is the first of its class.\n","type":"Boolean","value":"false","src":{"access":"46,1252,12","name":"46,1250,32","readonly":"46,1253,12","since":"46,1254,19","text":"46,1251,12,75","type":"46,1250,23","value":"46,1256,0"}},{"$type":"property","access":"protected","name":"isInstance","readonly":true,"text":"This value is `true` and is used to identify plain objects from instances of\na defined class.\n","type":"Boolean","value":"true","src":{"access":"46,1215,12","name":"46,1212,32","readonly":"46,1216,12","text":"46,1213,12,94","type":"46,1212,23","value":"46,1218,0"}},{"$type":"property","access":"protected","name":"self","text":"\nGet the reference to the current class from which this object was instantiated. Unlike\n{@link Ext.Base#statics}, `this.self` is scope-dependent and it's meant to be used\nfor dynamic inheritance. See {@link Ext.Base#statics} for a detailed comparison\n\n    Ext.define('My.Cat', {\n        statics: {\n            speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n        },\n\n        constructor: function() {\n            alert(this.self.speciesName); // dependent on 'this'\n        },\n\n        clone: function() {\n            return new this.self();\n        }\n    });\n\n\n    Ext.define('My.SnowLeopard', {\n        extend: 'My.Cat',\n        statics: {\n            speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n        }\n    });\n\n    var cat = new My.Cat();                     // alerts 'Cat'\n    var snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\n    var clone = snowLeopard.clone();\n    alert(Ext.getClassName(clone));             // alerts 'My.SnowLeopard'\n","type":"Ext.Class","value":"Base","src":{"access":"46,1608,12","name":"46,1574,34","text":"46,1575,12,1003","type":"46,1574,23","value":"46,1610,0"}}]},{"$type":"static-methods","items":[{"$type":"method","access":"private","inheritable":true,"name":"addConfig","static":true,"text":"Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.\n","items":[{"$type":"param","name":"config","type":"Object","src":{"name":"46,1086,28","type":"46,1086,20"}},{"$type":"param","name":"mixinClass","optional":true,"text":"The mixin class if the configs are from a mixin.\n","type":"Ext.Class","src":{"name":"46,1087,32","text":"46,1087,44,49","type":"46,1087,20"}}],"src":{"access":"46,1088,12","inheritable":"46,1090,12","name":"46,1092,0","static":"46,1089,12","text":"46,1082,12,197"}},{"$type":"method","access":"private","chainable":true,"inheritable":true,"name":"addInheritableStatics","static":true,"items":[{"$type":"param","name":"members","type":"Object","src":{"name":"46,519,28","type":"46,519,20"}},{"$type":"return","name":"this","src":{"name":"46,557,0"}}],"src":{"access":"46,516,12","chainable":"46,557,0","inheritable":"46,518,12","name":"46,521,0","static":"46,517,12"}},{"$type":"method","access":"private","chainable":true,"inheritable":true,"name":"addMember","static":true,"items":[{"$type":"param","name":"name","src":{"name":"46,728,19"}},{"$type":"param","name":"member","src":{"name":"46,729,19"}},{"$type":"param","name":"privacy","src":{"name":"46,730,19"}},{"$type":"return","name":"this","src":{"name":"46,737,0"}}],"src":{"access":"46,725,12","chainable":"46,737,0","inheritable":"46,727,12","name":"46,732,0","static":"46,726,12"}},{"$type":"method","chainable":true,"inheritable":true,"name":"addMembers","static":true,"text":"Add methods / properties to the prototype of this class.\n\n    Ext.define('My.awesome.Cat', {\n        constructor: function() {\n            ...\n        }\n    });\n\n     My.awesome.Cat.addMembers({\n         meow: function() {\n            alert('Meowww...');\n         }\n     });\n\n     var kitty = new My.awesome.Cat();\n     kitty.meow();\n","items":[{"$type":"param","name":"members","text":"The members to add to this class.\n","type":"Object","src":{"name":"46,578,28","text":"46,578,36,34","type":"46,578,20"}},{"$type":"param","name":"isStatic","optional":true,"text":"Pass `true` if the members are static.\n","type":"Boolean","value":"false","src":{"name":"46,579,30","text":"46,579,46,39","type":"46,579,20","value":"46,579,39"}},{"$type":"param","name":"privacy","optional":true,"text":"Pass `true` if the members are private. This\nonly has meaning in debug mode and only for methods.\n","type":"Boolean","value":"false","src":{"name":"46,580,30","text":"46,580,45,45:46,581,12,53","type":"46,580,20","value":"46,580,38"}},{"$type":"return","name":"this","src":{"name":"46,721,0"}}],"src":{"chainable":"46,721,0","inheritable":"46,583,12","name":"46,585,0","static":"46,582,12","text":"46,561,12,335"}},{"$type":"method","chainable":true,"inheritable":true,"name":"addStatics","static":true,"text":"Add / override static properties of this class.\n\n    Ext.define('My.cool.Class', {\n        ...\n    });\n\n    My.cool.Class.addStatics({\n        someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n        method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n        method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n    });\n","items":[{"$type":"param","name":"members","type":"Object","src":{"name":"46,504,28","type":"46,504,20"}},{"$type":"return","text":"this\n","type":"Ext.Base","src":{"text":"46,505,31,5","type":"46,505,21"}}],"src":{"chainable":"46,512,0","inheritable":"46,507,12","name":"46,509,0","static":"46,506,12","text":"46,492,12,402"}},{"$type":"method","access":"private","disable":"2125","inheritable":true,"name":"borrow","static":true,"text":"Borrow another class' members to the prototype of this class.\n\n    Ext.define('Bank', {\n        money: '$$$',\n        printMoney: function() {\n            alert('$$$$$$$');\n        }\n    });\n\n    Ext.define('Thief', {\n        ...\n    });\n\n    Thief.borrow(Bank, ['money', 'printMoney']);\n\n    var steve = new Thief();\n\n    alert(steve.money); // alerts '$$$'\n    steve.printMoney(); // alerts '$$$$$$$'\n","items":[{"$type":"param","name":"fromClass","text":"The class to borrow members from\n","type":"Ext.Base","src":{"name":"46,767,30","text":"46,767,40,33","type":"46,767,20"}},{"$type":"param","name":"members","text":"The names of the members to borrow\n","type":"Array/String","src":{"name":"46,768,34","text":"46,768,42,35","type":"46,768,20"}},{"$type":"return","text":"this\n","type":"Ext.Base","src":{"text":"46,769,31,5","type":"46,769,21"}}],"src":{"access":"46,772,12","disable":"46,777,0","inheritable":"46,771,12","name":"46,774,0","static":"46,770,12","text":"46,747,12,404"}},{"$type":"method","access":"protected","inheritable":true,"name":"callParent","static":true,"items":[{"$type":"param","name":"args","src":{"name":"46,951,0"}}],"src":{"access":"46,947,12","inheritable":"46,949,12","name":"46,951,0","static":"46,948,12"}},{"$type":"method","access":"protected","inheritable":true,"name":"callSuper","static":true,"items":[{"$type":"param","name":"args","src":{"name":"46,965,0"}}],"src":{"access":"46,961,12","inheritable":"46,963,12","name":"46,965,0","static":"46,962,12"}},{"$type":"method","disable":"2125","inheritable":true,"name":"create","static":true,"text":"Create a new instance of this Class.\n\n    Ext.define('My.cool.Class', {\n        ...\n    });\n\n    My.cool.Class.create({\n        someConfig: true\n    });\n\nAll parameters are passed to the constructor of the class.\n","items":[{"$type":"return","text":"the created instance.\n","type":"Object","src":{"text":"46,139,29,22","type":"46,139,21"}}],"src":{"disable":"46,144,0","inheritable":"46,141,12","name":"46,143,0","static":"46,140,12","text":"46,127,12,214"}},{"$type":"method","inheritable":true,"name":"createAlias","static":true,"text":"Create aliases for existing prototype methods. Example:\n\n    Ext.define('My.cool.Class', {\n        method1: function() { ... },\n        method2: function() { ... }\n    });\n\n    var test = new My.cool.Class();\n\n    My.cool.Class.createAlias({\n        method3: 'method1',\n        method4: 'method2'\n    });\n\n    test.method3(); // test.method1()\n\n    My.cool.Class.createAlias('method5', 'method3');\n\n    test.method5(); // test.method3() -> test.method1()\n","items":[{"$type":"param","name":"alias","text":"The new method name, or an object to set multiple aliases.\nSee {@link Ext.Function#flexSetter flexSetter}\n","type":"String/Object","src":{"name":"46,1166,35","text":"46,1166,41,59:46,1167,12,47","type":"46,1166,20"}},{"$type":"param","name":"origin","text":"The original method name\n","type":"String/Object","src":{"name":"46,1168,35","text":"46,1168,42,25","type":"46,1168,20"}}],"src":{"inheritable":"46,1170,12","name":"46,1173,0","static":"46,1169,12","text":"46,1146,12,456"}},{"$type":"method","access":"private","inheritable":true,"name":"extend","static":true,"items":[{"$type":"param","name":"parentClass","src":{"name":"46,403,19"}}],"src":{"access":"46,400,12","inheritable":"46,402,12","name":"46,405,0","static":"46,401,12"}},{"$type":"method","access":"private","inheritable":true,"name":"getConfigurator","static":true,"text":"Returns the `{@link Ext.Configurator}` for this class.\n","items":[{"$type":"return","type":"Ext.Configurator","src":{"type":"46,1115,21"}}],"src":{"access":"46,1116,12","inheritable":"46,1118,12","name":"46,1120,0","static":"46,1117,12","text":"46,1113,12,48"}},{"$type":"method","inheritable":true,"name":"getName","static":true,"text":"Get the current class' name in string format.\n\n    Ext.define('My.cool.Class', {\n        constructor: function() {\n            alert(this.self.getName()); // alerts 'My.cool.Class'\n        }\n    });\n\n    My.cool.Class.getName(); // 'My.cool.Class'\n","items":[{"$type":"return","text":"className\n","type":"String","src":{"text":"46,1137,29,10","type":"46,1137,21"}}],"src":{"inheritable":"46,1139,12","name":"46,1141,0","static":"46,1138,12","text":"46,1127,12,249"}},{"$type":"method","access":"private","chainable":true,"inheritable":true,"name":"mixin","static":true,"text":"Used internally by the mixins pre-processor\n","items":[{"$type":"param","name":"name","src":{"name":"46,981,0"}},{"$type":"param","name":"mixinClass","src":{"name":"46,981,0"}},{"$type":"return","name":"this","src":{"name":"46,1076,0"}}],"src":{"access":"46,977,12","chainable":"46,1076,0","inheritable":"46,979,12","name":"46,981,0","static":"46,978,12","text":"46,976,12,44"}},{"$type":"method","access":"private","chainable":true,"inheritable":true,"name":"onExtended","static":true,"items":[{"$type":"param","name":"fn","src":{"name":"46,482,0"}},{"$type":"param","name":"scope","src":{"name":"46,482,0"}},{"$type":"return","name":"this","src":{"name":"46,488,0"}}],"src":{"access":"46,478,12","chainable":"46,488,0","inheritable":"46,480,12","name":"46,482,0","static":"46,479,12"}},{"$type":"method","chainable":true,"inheritable":true,"name":"override","static":true,"text":"Override members of this class. Overridden methods can be invoked via\n{@link Ext.Base#method!callParent}.\n\n    Ext.define('My.Cat', {\n        constructor: function() {\n            alert(\"I'm a cat!\");\n        }\n    });\n\n    My.Cat.override({\n        constructor: function() {\n            alert(\"I'm going to be a cat!\");\n\n            this.callParent(arguments);\n\n            alert(\"Meeeeoooowwww\");\n        }\n    });\n\n    var kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                              // alerts \"I'm a cat!\"\n                              // alerts \"Meeeeoooowwww\"\n\nDirect use of this method should be rare. Use {@link Ext#define Ext.define}\ninstead:\n\n    Ext.define('My.CatOverride', {\n        override: 'My.Cat',\n        constructor: function() {\n            alert(\"I'm going to be a cat!\");\n\n            this.callParent(arguments);\n\n            alert(\"Meeeeoooowwww\");\n        }\n    });\n\nThe above accomplishes the same result but can be managed by the {@link Ext.Loader}\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).\n","items":[{"$type":"param","name":"members","text":"The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.\n","type":"Object","src":{"name":"46,839,28","text":"46,839,36,52:46,840,12,66","type":"46,839,20"}},{"$type":"return","text":"this class\n","type":"Ext.Base","src":{"text":"46,841,31,11","type":"46,841,21"}}],"src":{"chainable":"46,889,0","inheritable":"46,843,12","name":"46,845,0","static":"46,842,12","text":"46,797,12,1187"}},{"$type":"method","access":"private","disable":"2125","inheritable":true,"name":"triggerExtended","static":true,"src":{"access":"46,453,12","disable":"46,472,0","inheritable":"46,455,12","name":"46,457,0","static":"46,454,12"}}]},{"$type":"static-properties","items":[{"$type":"property","access":"private","inheritable":true,"name":"$onExtended","static":true,"value":"[]","src":{"access":"46,446,12","inheritable":"46,448,12","name":"46,450,0","static":"46,447,12","value":"46,450,0"}}]}],"src":{"name":"46,3,11","text":"46,4,4,235"},"displayName":"Base"},{"$type":"class","alias":"widget.breadcrumbbar","extended":"Ext.Toolbar,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Toolbar","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.BreadcrumbBar","requires":"Ext.data.TreeStore,Ext.SplitButton,Ext.layout.overflow.Scroller","text":"A toolbar that displays hierarchical data from a {@link Ext.data.TreeStore TreeStore}\nas a trail of breadcrumb buttons.  Each button represents a node in the store.  A click\non a button will \"select\" that node in the tree.  Non-leaf nodes will display their\nchild nodes on a dropdown menu of the corresponding button in the breadcrumb trail,\nand a click on an item in the menu will trigger selection of the corresponding child\nnode.\n\nThe selection can be set programmatically  using {@link #setSelection}, or retrieved\nusing {@link #getSelection}.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"btnCls","text":"The CSS class to add to this buttons widget element\n","type":"String","value":"''","src":{"accessor":"407,114,0","name":"407,111,26","text":"407,112,12,52","type":"407,111,18","value":"407,114,0"}},{"$type":"property","accessor":true,"name":"buttonConfig","text":"Button config to be added to button instance\n","type":"Object","value":"null","src":{"accessor":"407,108,0","name":"407,105,26","text":"407,106,12,45","type":"407,105,18","value":"407,108,0"}},{"$type":"property","accessor":true,"name":"buttonUI","text":"Button UI to use for breadcrumb items\n","type":"String","value":"''","src":{"accessor":"407,27,0","name":"407,24,26","text":"407,25,12,38","type":"407,24,18","value":"407,27,0"}},{"$type":"property","accessor":true,"name":"displayField","text":"The name of the field in the data model to display in the navigation items of\nthis breadcrumb toolbar\n","type":"String","value":"'text'","src":{"accessor":"407,34,0","name":"407,30,26","text":"407,31,12,102","type":"407,30,18","value":"407,34,0"}},{"$type":"property","accessor":true,"name":"menu","text":"A menu or menu configuration. This can be a reference to a menu instance, a menu\nconfig object or the `{@link #cfg!xtype xtype}` alias of a {@link Ext.menu.Menu menu}-derived class.\n","type":"Ext.menu.Menu/Boolean/Object","value":"true","src":{"accessor":"407,102,0","name":"407,98,48","text":"407,99,12,163","type":"407,98,18","value":"407,102,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"[\n    'selection'\n]","src":{"accessor":"275,185,0","inheritdoc":"407,126,8","name":"407,125,13","text":"275,104,12,2499","type":"275,103,18","value":"407,128,0"}},{"$type":"property","accessor":true,"name":"selection","text":"The selected node, or `\"root\"` to select the root node\n","type":"Ext.data.TreeModel/String","value":"'root'","src":{"accessor":"407,93,12","name":"407,91,45","text":"407,92,12,55","type":"407,91,18","value":"407,95,0"}},{"$type":"property","accessor":true,"name":"showIcons","text":"\nControls whether or not icons of tree nodes are displayed in the breadcrumb\nbuttons.  There are 3 possible values for this config:\n\n1. unspecified (`null`) - the default value. In this mode only icons that are\nspecified in the tree data using ({@link Ext.data.NodeInterface#icon icon}\nor {@link Ext.data.NodeInterface#iconCls iconCls} will be displayed, but the\ndefault \"folder\" and \"leaf\" icons will not be displayed.\n\n2. `true` - Icons specified in the tree data will be displayed, and the default\n\"folder\" and \"leaf\" icons will be displayed for nodes that do not specify\nan `icon` or `iconCls`.\n\n3. `false` - No icons will be displayed in the breadcrumb buttons, only text.\n","type":"Boolean","value":"null","src":{"accessor":"407,53,0","name":"407,37,27","text":"407,38,12,678","type":"407,37,18","value":"407,53,0"}},{"$type":"property","accessor":true,"name":"showMenuIcons","text":"\nControls whether or not icons of tree nodes are displayed in the breadcrumb\nmenu items. There are 3 possible values for this config:\n\n1. unspecified (`null`) - the default value. In this mode only icons that are\nspecified in the tree data using ({@link Ext.data.NodeInterface#icon icon}\nor {@link Ext.data.NodeInterface#iconCls iconCls} will be displayed, but the\ndefault \"folder\" and \"leaf\" icons will not be displayed.\n\n2. `true` - Icons specified in the tree data will be displayed, and the default\n\"folder\" and \"leaf\" icons will be displayed for nodes that do not specify\nan `icon` or `iconCls`.\n\n3. `false` - No icons will be displayed on the breadcrumb menu items, only text.\n","type":"Boolean","value":"null","src":{"accessor":"407,72,0","name":"407,56,27","text":"407,57,12,683","type":"407,56,18","value":"407,72,0"}},{"$type":"property","accessor":true,"name":"store","text":"The TreeStore that this breadcrumb toolbar should use as its data source\n","type":"Ext.data.TreeStore","value":"null","src":{"accessor":"407,78,0","name":"407,75,38","text":"407,76,12,73","type":"407,75,18","value":"407,78,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `value` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"[\n    'selection'\n]","src":{"accessor":"275,239,0","inheritdoc":"407,132,8","name":"407,131,13","text":"275,231,12,406","type":"275,230,18","value":"407,134,0"}},{"$type":"property","accessor":true,"name":"useSplitButtons","text":"`false` to use regular {@link Ext.Button Button}s instead of {@link\nExt.SplitButton Split Buttons}.  When `true`, a click on the body of a button\nwill navigate to the specified node, and a click on the arrow will show a menu\ncontaining the the child nodes.  When `false`, the only mode of navigation is\nthe menu, since a click anywhere on the button will show the menu.\n","type":"Boolean","value":"true","src":{"accessor":"407,88,0","name":"407,81,27","text":"407,82,12,370","type":"407,81,18","value":"407,88,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the user changes the selected record. In contrast to the\n{@link #selectionchange} event, this does\n*not* fire at render time, only in response to user activity.\n","items":[{"$type":"param","name":"this","type":"Ext.BreadcrumbBar","src":{"name":"407,155,35","type":"407,155,16"}},{"$type":"param","name":"node","text":"The selected node.\n","type":"Ext.data.TreeModel","src":{"name":"407,156,36","text":"407,156,41,19","type":"407,156,16"}},{"$type":"param","name":"prevNode","text":"The previously selected node.\n","type":"Ext.data.TreeModel","src":{"name":"407,157,36","text":"407,157,45,30","type":"407,157,16"}}],"src":{"name":"407,151,15","text":"407,152,8,172"}},{"$type":"event","name":"selectionchange","text":"Fires when the selected node changes. At render time, this event will fire\nindicating that the configured {@link #selection} has been selected.\n","items":[{"$type":"param","name":"this","type":"Ext.BreadcrumbBar","src":{"name":"407,145,35","type":"407,145,16"}},{"$type":"param","name":"node","text":"The selected node.\n","type":"Ext.data.TreeModel","src":{"name":"407,146,36","text":"407,146,41,19","type":"407,146,16"}},{"$type":"param","name":"prevNode","text":"The previously selected node.\n","type":"Ext.data.TreeModel","src":{"name":"407,147,36","text":"407,147,45,30","type":"407,147,16"}}],"src":{"name":"407,142,15","text":"407,143,8,144"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getMenuItems","text":"Returns button menu items\n","items":[{"$type":"param","name":"nodeId","type":"String","src":{"name":"407,529,28","type":"407,529,20"}}],"src":{"access":"407,528,12","name":"407,531,0","text":"407,527,12,26"}},{"$type":"method","name":"getSelection","text":"Returns the currently selected {@link Ext.data.TreeModel node}.\n","items":[{"$type":"return","text":"node The selected node (or null if there is no\nselection).\n","type":"Ext.data.TreeModel","src":{"text":"407,215,37,47:407,216,8,12","type":"407,215,17"}}],"src":{"name":"407,213,16","text":"407,214,8,64"}},{"$type":"method","name":"handleMenu","text":"Update button menu\nIf menu is null or false or there are no child nodes\nthen no need to display menu\n","items":[{"$type":"param","name":"buttons","text":"Internal cache of buttons\n","type":"Ext.SplitButton[]","src":{"name":"407,377,35","text":"407,377,43,26","type":"407,377,16"}},{"$type":"param","name":"refreshMenuItems","text":"`true` to reset menu items\n","type":"Boolean","src":{"name":"407,378,25","text":"407,378,42,27","type":"407,378,16"}},{"$type":"param","name":"forceCreate","text":"`true` to recreate menu on button\n","type":"Boolean","src":{"name":"407,379,25","text":"407,379,37,34","type":"407,379,16"}}],"src":{"name":"407,381,0","text":"407,374,8,101"}},{"$type":"method","access":"private","name":"onButtonTap","text":"Handles a click on a breadcrumb button\n","items":[{"$type":"param","name":"button","type":"Ext.SplitButton","src":{"name":"407,485,37","type":"407,485,20"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"407,486,37","type":"407,486,20"}}],"src":{"access":"407,484,12","name":"407,488,0","text":"407,483,12,39"}},{"$type":"method","access":"private","name":"onMenuClick","text":"Handles a click on a button menu\n","items":[{"$type":"param","name":"menu","type":"Ext.menu.Menu","src":{"name":"407,506,35","type":"407,506,20"}},{"$type":"param","name":"item","type":"Ext.menu.Item","src":{"name":"407,507,35","type":"407,507,20"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"407,508,37","type":"407,508,20"}}],"src":{"access":"407,505,12","name":"407,510,0","text":"407,504,12,33"}},{"$type":"method","access":"private","name":"onStoreClear","text":"Handler store `{@link #method!removeAll removeAll}` method\n","src":{"access":"407,481,-1","name":"407,651,0","text":"407,649,12,33"}},{"$type":"method","access":"private","name":"onStoreDataChange","text":"Handle store `update` events\n","src":{"access":"407,481,-1","name":"407,643,0","text":"407,641,12,29"}},{"$type":"method","access":"private","name":"removeAllBreadcrumbButtons","text":"Remove all breadcrumb buttons\n","src":{"access":"407,481,-1","name":"407,582,0","text":"407,580,12,30"}},{"$type":"method","name":"setSelection","text":"Selects the passed {@link Ext.data.TreeModel node} in the breadcrumb component.\n","items":[{"$type":"param","name":"node","text":"The node in the breadcrumb {@link #store} to\nselect as the active node.\n","type":"Ext.data.TreeModel","src":{"name":"407,222,36","text":"407,222,41,45:407,223,8,27","type":"407,222,16"}},{"$type":"return","text":"this The breadcrumb component\n","type":"Ext.BreadcrumbBar","src":{"text":"407,224,36,30","type":"407,224,17"}}],"src":{"name":"407,220,16","text":"407,221,8,80"}},{"$type":"method","access":"private","name":"updateButtonOnDataChange","text":"Handle breadcrumb store data update\nsuch as (`add`, `remove`, `update`, `refresh`).\nChecks with button text and update button arrow\n","src":{"access":"407,481,-1","name":"407,601,0","text":"407,597,12,132"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"buttons","text":"Internal cache of buttons that are re-used as the items of this container\nas navigation occurs.\n","type":"Ext.SplitButton[]/Ext.Button[]","value":"[]","src":{"access":"407,165,12","name":"407,164,55","text":"407,162,12,96","type":"407,164,23","value":"407,167,0"}},{"$type":"property","name":"isBreadcrumb","readonly":true,"text":"The value `true` to identify an object as an instance of this or derived class.\n","type":"Boolean","value":"true","src":{"name":"407,118,28","readonly":"407,120,8","text":"407,119,8,80","type":"407,118,19","value":"407,122,0"}}]}],"src":{"alias":"407,14,0","extends":"407,13,0","name":"407,12,0","requires":"407,17,0:407,18,0:407,19,0","text":"407,2,4,548"},"group":"Other Components","displayName":"Breadcrumbbar"},{"$type":"class","alias":"widget.button","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.FileButton,Ext.SplitButton,Ext.tab.Tab","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Button","text":"This class provides a push button with several presentation options. There are various\ndifferent styles of Button you can create by using the {@link #icon}, {@link #iconCls},\n{@link #iconAlign}, {@link #ui}, and {@link #text} configurations.\n\n## Simple Button\n\nHere is a Button in it's simplest form:\n\n```javascript\n@example({ framework: 'extjs' })\nvar button = Ext.create('Ext.Button', {\n    text: 'Button'\n});\nExt.Viewport.add({ xtype: 'container', padding: 10, items: [button] });\n```\n\n## Icons\n\nYou can also create a Button with just an icon using the {@link #iconCls} configuration:\n\n```javascript\n@example({ framework: 'extjs' })\nvar button = Ext.create('Ext.Button', {\n    iconCls: 'x-fa fa-home'\n});\nExt.Viewport.add({ xtype: 'container', padding: 10, items: [button] });\n```\n\nSencha provides the \"Font\" and \"PNG\" icons packs from http://wwww.pictos.cc.\nUse icons with the {@link Global_CSS#icon icon} mixin in your Sass.\n\n## Badges\n\nButtons can also have a badge on them, by using the {@link #badgeText} configuration:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    padding: 10,\n    items: {\n        xtype: 'button',\n        text: 'My Button',\n        badgeText: '2'\n    }\n});\n```\n\n## Menus\n\nYou can assign a menu to a button by using the {@link #cfg!menu} config. This config can be\neither a reference to a {@link Ext.menu.Menu menu} instance or a {@link Ext.menu.Menu menu}\nconfig object.\n\nWhen assigning a menu to a button, an arrow is automatically added to the button. You can\nchange the alignment of the arrow using the {@link #cfg!arrowAlign} config.\n\nExample usage:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Button', {\n    text: 'Menu button',\n    renderTo: Ext.getBody(),\n    arrowAlign: 'bottom',\n    menu: [\n        { text: 'Item 1' },\n        { text: 'Item 2' },\n        { text: 'Item 3' },\n        { text: 'Item 4' }\n    ]\n});\n```\n\n## UI\n\nButtons also come with a range of different default UIs. Here are the included UIs\navailable (if {@link #$include-button-uis $include-button-uis} is set to `true`):\n\n- **normal** - a basic gray button\n- **back** - a back button\n- **forward** - a forward button\n- **round** - a round button\n- **action** - shaded using the {@link Global_CSS#$active-color $active-color}\n- **decline** - shaded using the {@link Global_CSS#$alert-color $alert-color}\n- **confirm** - shaded using the {@link Global_CSS#$confirm-color $confirm-color}\n\nYou can also append ` round` to each of the last three UI's to give it a round shape:\n\n- **action round**\n- **decline round**\n- **confirm round**\n\nAnd setting them is very simple:\n\n    var uiButton = Ext.create('Ext.Button', {\n        text: 'My Button',\n        ui: 'action'\n    });\n\nAnd how they look:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    padding: 4,\n    defaults: {\n        xtype: 'button',\n        margin: 5\n    },\n    layout: {\n        type: 'vbox',\n        align: 'center'\n    },\n    items: [\n        { ui: 'normal', text: 'normal' },\n        { ui: 'round', text: 'round' },\n        { ui: 'action', text: 'action' },\n        { ui: 'decline', text: 'decline round' },\n        { ui: 'confirm', text: 'confirm' }\n    ]\n});\n```\n\nNote that the default {@link #ui} is **normal**.\n\nYou can also use the {@link #sencha-button-ui sencha-button-ui} CSS Mixin to create your own UIs.\n\n## Example\n\nThis example shows a bunch of icons on the screen in two toolbars. When you click on the center\nbutton, it switches the {@link #iconCls} on every button on the page.\n\n```javascript\n@example({ framework: 'extjs' })\nExt.createWidget('container', {\n    fullscreen: true,\n    layout: {\n        type: 'vbox',\n        pack:'center',\n        align: 'center'\n    },\n    items: [\n        {\n            xtype: 'button',\n            text: 'Change iconCls',\n            handler: function() {\n                // classes for all the icons to loop through.\n                var availableIconCls = [\n                    'action', 'add', 'arrow_down', 'arrow_left',\n                    'arrow_right', 'arrow_up', 'compose', 'delete',\n                    'organize', 'refresh', 'reply', 'search',\n                    'settings', 'star', 'trash', 'maps', 'locate',\n                    'home'\n                ];\n                // get the text of this button,\n                // so we know which button we don't want to change\n                var text = this.getText();\n\n                // use ComponentQuery to find all buttons on the page\n                // and loop through all of them\n                Ext.Array.forEach(Ext.ComponentQuery.query('button'), function(button) {\n                    // if the button is the change iconCls button, continue\n                    if (button.getText() === text) {\n                        return;\n                    }\n\n                    // get the index of the new available iconCls\n                    var index = availableIconCls.indexOf(button.getIconCls()) + 1;\n\n                    // update the iconCls of the button with the next iconCls, if one exists.\n                    // if not, use the first one\n                    button.setIconCls(availableIconCls[(index === availableIconCls.length)\n                    ? 0\n                    : index]);\n                });\n            }\n        },\n        {\n            xtype: 'toolbar',\n            docked: 'top',\n            items: [\n                { xtype: 'spacer' },\n                { iconCls: 'action' },\n                { iconCls: 'add' },\n                { iconCls: 'arrow_down' },\n                { iconCls: 'arrow_left' },\n                { iconCls: 'arrow_up' },\n                { iconCls: 'compose' },\n                { iconCls: 'delete' },\n                { iconCls: 'organize' },\n                { iconCls: 'refresh' },\n                { xtype: 'spacer' }\n            ]\n        },\n        {\n            xtype: 'toolbar',\n            docked: 'bottom',\n            ui: 'light',\n            items: [\n                { xtype: 'spacer' },\n                { iconCls: 'reply' },\n                { iconCls: 'search' },\n                { iconCls: 'settings' },\n                { iconCls: 'star' },\n                { iconCls: 'trash' },\n                { iconCls: 'maps' },\n                { iconCls: 'locate' },\n                { iconCls: 'home' },\n                { xtype: 'spacer' }\n            ]\n        }\n    ]\n});\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container padding=\"10\">\n    <ext-button\n        text=\"Say Hello\"\n        handler=\"button.sayHello\"\n        ui=\"action raised\">\n    </ext-button>\n    <ext-button\n        text=\"Say Goodbye\"\n        handler=\"button.sayGoodbye\"\n        ui=\"action raised\">\n    </ext-button>\n    <ext-container onready=\"button.resultContainerReady\"></ext-container>\n</ext-container>\n```\n\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-button.component';\nimport '@sencha/ext-web-components/dist/ext-container.component';\n\nexport default class ButtonComponent {\n    resultContainerReady(event) {\n        this.resultContainer = event.detail.cmp;\n    }\n\n    sayHello = () => {\n        this.resultContainer.setHtml('Hello world!');\n    }\n\n    sayGoodbye = () => {\n        this.resultContainer.setHtml('Goodbye cruel world.');\n    }\n}\n\nwindow.button = new ButtonComponent();\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtButton } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n\n    state = { message: null }\n\n    render() {\n        return (\n                <ExtContainer padding=\"10\">\n                    <ExtButton\n                        text=\"Say Hello\"\n                        handler={this.sayHello}\n                        ui=\"action raised\"\n                    />\n                    <ExtButton\n                        text=\"Say Goodbye\"\n                        handler={this.sayGoodbye}\n                    />\n                    { this.state.message }\n                </ExtContainer>\n        )\n    }\n\n    sayHello = () => {\n        this.setState({ message: 'Hello world!' });\n    }\n\n    sayGoodbye = () => {\n        this.setState({ message: 'Goodbye cruel world.' });\n    }\n\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [`\n            `],\n    template: `\n        <ExtContainer padding=\"10\">\n            <ExtButton\n                text=\"Say Hello\"\n                [handler]=\"this.sayHello\"\n                ui=\"action raised\"\n            ></ExtButton>\n            <ExtButton\n                text=\"Say Goodbye\"\n                [handler]=\"this.sayGoodbye\"\n            ></ExtButton>\n            <div>\n            {{ this.message }}\n            </div>\n        </ExtContainer>\n            `\n})\nexport class AppComponent {\n    message: string;\n\n    sayHello = () => {\n        this.message = 'Hello world!';\n    }\n\n    sayGoodbye = () => {\n        this.message = 'Goodbye cruel world.';\n    }\n\n}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"allowDepress","since":"6.0.2","text":"`true` to allow user interaction to set {@link #pressed} to `false` when\nthe button is in the {@link #pressed} state. Only valid when {@link #pressed}\nis configured.\n","type":"Boolean","value":"true","src":{"accessor":"408,445,0","name":"408,438,27","since":"408,443,19","text":"408,439,12,167","type":"408,438,18","value":"408,445,0"}},{"$type":"property","accessor":true,"name":"arrow","optional":true,"text":"By default, if the button has a {@link #cfg!menu}, an arrow icon is shown to indicate\nthis.\n\nConfigure `arrow: false` to hide the menu arrow.\n","type":"Boolean","value":"true","src":{"accessor":"408,502,0","name":"408,496,28","text":"408,497,12,142","type":"408,496,18","value":"408,496,34"}},{"$type":"property","accessor":true,"name":"arrowAlign","text":"The side of the Button box to render the arrow if the button has an associated\n{@link #cfg!menu}.\n","type":"\"right\"/\"bottom\"","value":"'right'","src":{"accessor":"408,509,0","name":"408,505,36","text":"408,506,12,98","type":"408,505,18","value":"408,509,0"}},{"$type":"property","accessor":true,"name":"autoEvent","text":"Optional event name that will be fired instead of `{@link #event!tap tap}` when the Button is tapped on.\n","type":"String","value":"null","src":{"accessor":"408,541,12","name":"408,539,26","text":"408,540,12,86","type":"408,539,18","value":"408,543,0"}},{"$type":"property","accessor":true,"name":"badgeText","text":"Optional badge text.  Badges appear as small numbers, letters, or icons that sit on top\nof your button.  For instance, a small red number indicating how many updates are\navailable.\n","type":"String","value":"null","src":{"accessor":"408,452,12","name":"408,448,26","text":"408,449,12,181","type":"408,448,18","value":"408,454,0"}},{"$type":"property","accessor":true,"name":"buttonType","since":"6.5.0","text":"By default, all buttons have `type=\"button\"`. If a button is intended to be invoked as\nthe default action button inside an {@link Ext.form.Panel}, then setting this to\n`'submit'` will cause the button to be clicked whenever the `ENTER` key is pressed.\n","type":"String","value":"'button'","src":{"accessor":"408,366,0","name":"408,359,26","since":"408,364,19","text":"408,360,12,253","type":"408,359,18","value":"408,366,0"}},{"$type":"property","accessor":true,"name":"destroyMenu","text":"Whether or not to destroy any associated menu when this button is destroyed.\nIn addition, a value of `true` for this config will destroy the currently bound menu\nwhen a new menu is set in {@link #setMenu} unless overridden by that method's destroyMenu\nfunction argument.\n","type":"Boolean","value":"true","src":{"accessor":"408,424,0","name":"408,418,27","text":"408,419,12,271","type":"408,418,18","value":"408,424,0"}},{"$type":"property","accessor":true,"name":"enableToggle","since":"6.0.2","text":"Allows this button to have the pressed state toggled via user\ninteraction.\n","type":"Boolean","value":"false","src":{"accessor":"408,581,0","name":"408,575,27","since":"408,579,19","text":"408,576,12,76","type":"408,575,18","value":"408,581,0"}},{"$type":"property","accessor":true,"name":"handler","type":"Function","value":"null","items":[{"$type":"property","name":"button","text":"This Button.\n","type":"Ext.Button","src":{"name":"408,513,38","text":"408,513,45,13","type":"408,513,18"}},{"$type":"property","name":"e","text":"The triggering event.\nThe handler function to run when the Button is tapped on.\n","type":"Ext.event.Event","src":{"name":"408,514,43","text":"408,514,45,22:408,515,12,58","type":"408,514,18"}}],"src":{"accessor":"408,516,12","name":"408,512,28","type":"408,512,18","value":"408,518,0"}},{"$type":"property","accessor":true,"name":"html","text":"The HTML to put in this button.\n\nIf you want to just add text, please use the {@link #text} configuration.\n","type":"String","src":{"accessor":"410,480,12","name":"408,569,26","text":"408,569,31,32:408,570,12,75","type":"408,569,18"}},{"$type":"property","accessor":true,"name":"icon","text":"Url to the icon image to use if you want an icon to appear on your button.\n","type":"String","value":"false","src":{"accessor":"408,466,12","name":"408,464,26","text":"408,465,12,75","type":"408,464,18","value":"408,468,0"}},{"$type":"property","accessor":true,"name":"iconAlign","text":"The position of the icon relative to the button text\n","type":"'top'/'right'/'bottom'/'left'","value":"'left'","src":{"accessor":"408,474,0","name":"408,471,49","text":"408,472,12,53","type":"408,471,18","value":"408,474,0"}},{"$type":"property","accessor":true,"name":"iconCls","text":"One or more space separated CSS classes to be applied to the icon element.\nThe CSS rule(s) applied should specify a background image to be used as the\nicon.\n\nAn example of specifying a custom icon class would be something like:\n\n    // specify the property in the config for the class:\n    iconCls: 'my-home-icon'\n\n    // css rule specifying the background image to be used as the icon image:\n    .my-home-icon {\n        background-image: url(../images/my-home-icon.gif) !important;\n    }\n\nIn addition to specifying your own classes, you can use the font icons\nprovided in the SDK using the following syntax:\n\n    // using Font Awesome\n    iconCls: 'x-fa fa-home'\n\n    // using Pictos\n    iconCls: 'pictos pictos-home'\n\nDepending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:\n\n - [Font Awesome icons](http://fontawesome.io/cheatsheet/)\n - [Pictos icons](../guides/core_concepts/font_ext.html)\n - [Theming Guide](../guides/core_concepts/theming.html)\n","type":"String","value":"null","src":{"accessor":"408,400,12","name":"408,369,26","text":"408,370,12,1069","type":"408,369,18","value":"408,402,0"}},{"$type":"property","accessor":true,"name":"menu","text":"A menu or menu configuration. This can be a reference to a menu instance, a menu\nconfig object or the `{@link #cfg!xtype xtype}` alias of a {@link Ext.menu.Menu menu}-derived class.\n","type":"Ext.menu.Menu/String/Object","value":"null","src":{"accessor":"408,490,0","name":"408,486,47","text":"408,487,12,163","type":"408,486,18","value":"408,492,0"}},{"$type":"property","accessor":true,"name":"menuAlign","text":"The position to align the menu to (see {@link Ext.util.Positionable#alignTo} for more\ndetails).\n","type":"String","value":"'tl-bl?'","src":{"accessor":"408,415,0","name":"408,411,26","text":"408,412,12,96","type":"408,411,18","value":"408,415,0"}},{"$type":"property","accessor":true,"evented":true,"name":"pressed","since":"6.0.2","text":"Sets the pressed state of the button.\n","type":"Boolean","value":"false","src":{"accessor":"408,598,0","evented":"408,598,0","name":"408,593,27","since":"408,596,19","text":"408,594,12,39","type":"408,593,18","value":"408,598,0"}},{"$type":"property","accessor":true,"name":"pressedDelay","text":"The amount of delay between the `mousedown` or `touchstart` and the moment the\nbutton receives \"pressed\" styling.\nSettings this to `true` defaults to 100ms.\n","type":"Number/Boolean","value":"0","src":{"accessor":"408,482,0","name":"408,477,34","text":"408,478,12,157","type":"408,477,18","value":"408,482,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"[\n    'pressed'\n]","src":{"accessor":"275,185,0","inheritdoc":"408,631,8","name":"408,630,13","text":"275,104,12,2499","type":"275,103,18","value":"408,633,0"}},{"$type":"property","accessor":true,"name":"scope","text":"The scope (`this` reference) in which the configured {@link #handler} will be executed,\nunless the scope is a ViewController method nmame.\n","type":"Object","value":"null","src":{"accessor":"408,534,12","name":"408,531,26","text":"408,532,12,139","type":"408,531,18","value":"408,536,0"}},{"$type":"property","accessor":true,"name":"stretchMenu","since":"6.5.1","text":"Configure as `true` if the cfg of this button's. {@link #cfg!menu} should\nat least match the width of this button. An {@link #minWidth} explicit `{@link #cfg!minWidth minWidth}` on\nthe menu will override this.\n","type":"Boolean","value":"false","src":{"accessor":"408,433,0","name":"408,427,27","since":"408,431,19","text":"408,428,12,188","type":"408,427,18","value":"408,433,0"}},{"$type":"property","accessor":true,"name":"text","text":"The Button text.\n","type":"String","value":"null","src":{"accessor":"408,459,12","name":"408,457,26","text":"408,458,12,17","type":"408,457,18","value":"408,461,0"}},{"$type":"property","accessor":true,"name":"textAlign","optional":true,"since":"6.0.1","type":"\"left\"/\"right\"/\"center\"","value":"\"center\"","src":{"accessor":"408,408,0","name":"408,405,44","since":"408,406,19","type":"408,405,18","value":"408,405,54"}},{"$type":"property","accessor":true,"name":"toggleHandler","type":"Function","value":"null","items":[{"$type":"property","name":"button","text":"This Button.\n","type":"Ext.Button","src":{"name":"408,522,44","text":"408,522,51,13","type":"408,522,18"}},{"$type":"property","name":"pressed","text":"This Button's new pressed state.\nThe handler function to run when the Button is toggled. Supplying this\nconfiguration implies `{@link #cfg!enableToggle}` is `true`.\n","type":"Boolean","src":{"name":"408,523,41","text":"408,523,49,33:408,524,12,132","type":"408,523,18"}}],"src":{"accessor":"408,526,12","name":"408,521,28","type":"408,521,18","value":"408,528,0"}},{"$type":"property","accessor":true,"name":"ui","text":"The ui style to render this button with. The valid default options are:\n\n- `null` - a basic gray button (default).\n- `'back'` - a back button.\n- `'forward'` - a forward button.\n- `'round'` - a round button.\n- `'plain'`\n- `'action'` - shaded using the {@link Global_CSS#$active-color $active-color}\n- `'decline'` - shaded using the {@link Global_CSS#$alert-color $alert-color}\n- `'confirm'` - shaded using the {@link Global_CSS#$confirm-color $confirm-color}\n\nYou can also append `-round` to each of the last three UI's to give it a round shape:\n\n- **action round**\n- **decline round**\n- **confirm round**\n","type":"String","value":"null","src":{"accessor":"408,564,12","name":"408,546,26","text":"408,547,12,606","type":"408,546,18","value":"408,566,0"}},{"$type":"property","accessor":true,"name":"value","text":"The value of this button.  Only applicable when used as an item of a\n{@link Ext.SegmentedButton Segmented Button}.\n","type":"String/Number","value":"null","src":{"accessor":"408,588,0","name":"408,584,33","text":"408,585,12,115","type":"408,584,18","value":"408,588,0"}}]},{"$type":"events","items":[{"$type":"event","name":"release","preventable":true,"text":"Fires whenever the button is released.\n","items":[{"$type":"param","name":"this","text":"The item added to the Container.\n","type":"Ext.Button","src":{"name":"408,353,28","text":"408,353,33,33","type":"408,353,16"}},{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.EventObject","src":{"name":"408,354,33","text":"408,354,35,18","type":"408,354,16"}}],"src":{"name":"408,350,15","preventable":"408,351,8","text":"408,352,8,39"}},{"$type":"event","name":"tap","preventable":true,"text":"Fires whenever a button is tapped.\n","items":[{"$type":"param","name":"this","text":"The item added to the Container.\n","type":"Ext.Button","src":{"name":"408,345,28","text":"408,345,33,33","type":"408,345,16"}},{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.EventObject","src":{"name":"408,346,33","text":"408,346,35,18","type":"408,346,16"}}],"src":{"name":"408,342,15","preventable":"408,343,8","text":"408,344,8,35"}},{"$type":"event","name":"beforepressedchange","text":"This event fires when `{@link #cfg!pressed pressed}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Button"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!pressed pressed}`.","type":"Boolean","src":{"type":"408,593,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!pressed pressed}`.","type":"Boolean","src":{"type":"408,593,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"pressedchange","text":"This event fires when `{@link #cfg!pressed pressed}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Button"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!pressed pressed}`.","type":"Boolean","src":{"type":"408,593,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!pressed pressed}`.","type":"Boolean","src":{"type":"408,593,18"}}]}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"doRelease","items":[{"$type":"param","name":"me","src":{"name":"408,1034,0"}},{"$type":"param","name":"e","src":{"name":"408,1034,0"}}],"src":{"access":"408,1032,8","name":"408,1034,0"}},{"$type":"method","access":"private","name":"doTap","items":[{"$type":"param","name":"me","src":{"name":"408,1068,0"}},{"$type":"param","name":"e","src":{"name":"408,1068,0"}}],"src":{"access":"408,1066,8","name":"408,1068,0"}},{"$type":"method","access":"private","name":"findEventTarget","src":{"access":"408,988,8","name":"408,990,0"}},{"$type":"method","access":"private","name":"getButtonTemplate","text":"Returns a for an absolutely positioned transparent button element that overlays the\nentire component and captures tabs and clicks for accessibility purposes.\n\nOverridden by {@link Ext.field.FileButton} to replace the `<button>` element with\nan `<input type=\"file\">` element.\n","src":{"access":"408,718,8","name":"408,725,0","text":"408,719,8,275"}},{"$type":"method","name":"isPressed","since":"6.0.2","text":"`true` if this button is currently in a pressed state. See {@link #pressed}.\n","items":[{"$type":"return","text":"The pressed state.\n","type":"Boolean","src":{"text":"408,764,26,19","type":"408,764,17"}}],"src":{"name":"408,768,0","since":"408,766,15","text":"408,763,8,77"}},{"$type":"method","access":"private","name":"onPress","items":[{"$type":"param","name":"e","src":{"name":"408,997,0"}}],"src":{"access":"408,995,8","name":"408,997,0"}},{"$type":"method","access":"private","name":"onRelease","text":"Called by {@link Ext.GlobalEvents#setPressedComponent} when the global\nmouseup event fires and there's a registered pressed component.\n","items":[{"$type":"param","name":"e","src":{"name":"408,1027,0"}}],"src":{"access":"408,1025,8","name":"408,1027,0","text":"408,1023,8,135"}},{"$type":"method","access":"private","name":"onTap","items":[{"$type":"param","name":"e","src":{"name":"408,1057,0"}},{"$type":"return","type":"Boolean","src":{"type":"408,1059,0"}}],"src":{"access":"408,1055,8","name":"408,1057,0"}},{"$type":"method","access":"private","name":"shouldRipple","text":"Intercept ripple config to return unbound ripples for icon only buttons\n","src":{"access":"408,738,8","name":"408,741,0","text":"408,739,8,72"}},{"$type":"method","name":"toggle","since":"6.0.2","text":"Toggles the {@link #pressed} state.\n","src":{"name":"408,777,0","since":"408,775,15","text":"408,773,8,37"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"ariaEl","text":"The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element.\nThis property will be replaced with the actual Element reference after rendering.\n\nMost of the simple Components will have their main element as ariaEl.\n","type":"String","value":"'buttonElement'","src":{"inheritdoc":"408,660,8","name":"408,659,18","text":"274,68,41,46:274,69,8,227","type":"274,68,19","value":"408,662,0"}},{"$type":"property","inheritdoc":true,"name":"baseCls","text":"The base CSS class to apply to this widget's element.\nUsed as the prefix for {@link #ui}-specific class names.\nDefaults to the value of {@link #classCls} or (`x-` + the {@link #xtype}) of the widget\nif {@link #classCls} is `null`\n","value":"Ext.baseCSSPrefix + 'button'","src":{"inheritdoc":"408,610,8","name":"408,609,18","text":"18,519,8,230","value":"408,612,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'text'","src":{"inheritdoc":"408,625,8","name":"408,624,18","text":"275,272,8,373","type":"275,271,19","value":"408,627,0"}},{"$type":"property","inheritdoc":true,"name":"element","text":"A configuration object for Ext.Element.create() that is used to create the Element\ntemplate.  Subclasses should avoid overriding this property and instead add elements\nusing {@link #template}.\n\nSupports all the standard options of a Ext.Element.create() config and adds 3\nadditional options:\n\n1. `{@link #cfg!reference reference}` - this option specifies a name for Element references.  These\nreferences names become properties of the Widget instance and refer to Ext.Element\ninstances that were created using the template:\n\n         element: {\n             reference: 'element',\n             children: [{\n                 reference: 'innerElement'\n             }]\n         }\n\nAfter construction of a widget the reference elements are accessible as follows:\n\n    var foo = new FooWidget(),\n        innerEl = foo.innerElement; // an Ext.Element that wraps the innerElement\n\nThe reference attribute is optional, but all Widgets must have a `'element'`\nreference on some element within the template (usually the outermost one).\n\n2. `{@link #cfg!listeners listeners}` - a standard listeners object as specified by {@link Ext.mixin.Observable}.\n\n         element: {\n             reference: 'element',\n             listeners: {\n                 click: 'onClick'\n             },\n             children: [{\n                 reference: 'innerElement',\n                 listeners: {\n                     click: 'onInnerClick'\n                 }\n             }]\n         }\n\nSince listeners cannot be attached without an Ext.Element reference the `{@link #cfg!reference reference}`\nproperty MUST be specified in order to use `{@link #cfg!listeners listeners}`.\n\nThe Widget instance is used as the scope for all listeners specified in this way,\nso it is invalid to use the `{@link #cfg!scope scope}` option in the `{@link #cfg!listeners listeners}` config since it will\nalways be overwritten using `this`.\n\n3. `uiCls` - a suffix to be appended to the ui-specific CSS class for each `{@link #ui}`\nfor this widget.  These ui classes are constructed by appending the `{@link #cfg!ui ui}` to each\n`{@link #classCls}` or `{@link #baseCls}` for the widget.  As such, `uiCls` should\nnever be used on the main `{@link #property!element element}` reference, as its `uiCls` is computed automatically.\n\nFor example, assume a widget is defined with a `{@link #cfg!ui ui}` of `'alt action'` and a\n`uiCls` of `'inner-el'` on its `innerElement` reference element:\n\n         Ext.define('Doodad', {\n             extend: 'Ext.Widget',\n             xtype: 'doodad',\n\n             classCls: 'x-doodad',\n\n             ui: 'alt action',\n\n             element: {\n                 reference: 'element',\n\n                 children: [{\n                     reference: 'innerElement',\n                     cls: 'x-inner-el',\n                     uiCls: 'inner-el'\n                 }]\n             }\n         });\n\nThis would result in the following markup when rendered:\n\n    <div class=\"x-doodad x-doodad-alt x-doodad-action\">\n        <div class=\"x-inner-el x-doodad-inner-el x-doodad-alt-inner-el x-doodad-action-inner-el\"></div>\n    </div>\n\nThese additional classes can be used to style the reference element for a particular\nui; however, use of `uiCls` is not typically necessary or recommended.  Reference\nelements should usually be styled using simple descendant selectors:\n\n    .x-doodad-alt .x-inner-el {\n        color: red;\n    }\n\nWhen there is a possibility that widgets can be nested it is best to use direct\nchild selectors to avoid the possibility of selecting all descendants instead\nof just the reference element for the intended widget:\n\n    .x-doodad-alt > .x-inner-el {\n        color: red;\n    }\n\nOnly use `uiCls` when there is a possibility of nesting, AND there may be a variable\nnumber of elements between the main `{@link #property!element element}` and the reference element in question.\nFor example, Ext.Container with docked items has a different number of elements\nin between its `{@link #property!element element}` and its `bodyElement` than a Container without docked items\nbecause of the wrapping elements that are dynamically added to support docking.\nTo ensure it does not style all descendants it must use a `uiCls` to style its\n`bodyElement`:\n\n    .x-container-alt-body-el {\n        background: #fff;\n    }\n\nNote that when `uiCls` is specified it also adds a class name that does not contain\nthe `{@link #cfg!ui ui}` using just the `{@link #property!classCls classCls}` and/or `{@link #property!baseCls baseCls}` as the prefix.  This class name\ncan be used for base-level styling that does not relate to any particular UI:\n\n    .x-container-body-el {\n        position: relative;\n    }\n","type":"Object","value":"{\n    reference: 'element',\n    listeners: {\n        click: 'onClick'\n    }\n}","src":{"inheritdoc":"408,637,8","name":"408,636,18","text":"18,87,8,4364","type":"18,86,19","value":"408,639,0"}},{"$type":"property","inheritdoc":true,"name":"focusable","text":"\n`true` for keyboard interactive Components or Widgets, `false` otherwise.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See {@link #isFocusable}.\n\n**Note:** It is not enough to set this property to `true` to make\na component keyboard interactive. You also need to make sure that\nthe component's {@link #focusEl} is reachable via Tab key (tabbable).\nSee also {@link #tabIndex}.\n","type":"Boolean","value":"true","src":{"inheritdoc":"408,648,8","name":"408,647,18","text":"283,14,8,430","type":"283,12,19","value":"408,650,0"}},{"$type":"property","inheritdoc":true,"name":"focusClsEl","text":"The element that will have the\n{@link #focusCls} applied when component's {@link #focusEl} is focused.\n","type":"Ext.dom.Element","value":"'el'","src":{"inheritdoc":"408,667,8","name":"408,666,18","text":"283,77,47,31:283,78,8,72","type":"283,77,19","value":"408,669,0"}},{"$type":"property","inheritdoc":true,"name":"focusEl","text":"The element that will be focused\nwhen {@link #method!focus} method is called on this component. Usually this is\nthe same element that receives focus via mouse clicks, taps, and pressing\nTab key.\n","type":"Ext.dom.Element","value":"'buttonElement'","src":{"inheritdoc":"408,654,8","name":"408,653,18","text":"283,69,44,33:283,70,8,162","type":"283,69,19","value":"408,656,0"}},{"$type":"property","access":"private","name":"preventDefaultAction","value":"true","src":{"access":"408,602,8","name":"408,604,0","value":"408,604,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","access":"private","name":"button-alt-invert-ui","text":"alt uis + decline/confirm have some magic to swap foreground and background colors.\nthis creates a \"alt decline\" and \"alt confirm\".\n","items":[{"$type":"param","name":"$ui","src":{"name":"1153,1591,29"}},{"$type":"param","name":"$background-color","optional":true,"value":"map_get($ui","src":{"name":"1153,1592,5"}}],"src":{"access":"1153,1589,4","name":"1153,1591,7","text":"1153,1587,4,132"}},{"$type":"method","name":"button-ui","text":"Creates a visual theme for a Button.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1153,706,20","text":"1153,707,4,109","type":"1153,706,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"button","src":{"access":"1153,710,37","name":"1153,710,21","text":"1153,710,48,35:1153,711,4,61","type":"1153,710,12","value":"1153,710,28"}},{"$type":"param","name":"$background-color","text":"Button background-color\n","type":"color","src":{"name":"1153,713,19","text":"1153,714,4,25","type":"1153,713,12"}},{"$type":"param","name":"$hovered-background-color","text":"Button background-color when hovered\n","type":"color","src":{"name":"1153,716,19","text":"1153,717,4,38","type":"1153,716,12"}},{"$type":"param","name":"$pressed-background-color","text":"Button background-color when pressed\n","type":"color","src":{"name":"1153,719,19","text":"1153,720,4,38","type":"1153,719,12"}},{"$type":"param","name":"$pressed-hovered-background-color","text":"Button background-color when pressed and hovered\n","type":"color","src":{"name":"1153,722,19","text":"1153,723,4,50","type":"1153,722,12"}},{"$type":"param","name":"$focused-background-color","text":"Button background-color when focused\n","type":"color","src":{"name":"1153,725,19","text":"1153,726,4,38","type":"1153,725,12"}},{"$type":"param","name":"$focused-hovered-background-color","text":"Button background-color when focused and hovered\n","type":"color","src":{"name":"1153,728,19","text":"1153,729,4,50","type":"1153,728,12"}},{"$type":"param","name":"$disabled-background-color","text":"Button background-color when disabled\n","type":"color","src":{"name":"1153,731,19","text":"1153,732,4,39","type":"1153,731,12"}},{"$type":"param","name":"$box-shadow","text":"Button box-shadow\n","type":"list","src":{"name":"1153,734,18","text":"1153,735,4,19","type":"1153,734,12"}},{"$type":"param","name":"$hovered-box-shadow","text":"Button box-shadow when hovered\n","type":"list","src":{"name":"1153,737,18","text":"1153,738,4,32","type":"1153,737,12"}},{"$type":"param","name":"$pressed-box-shadow","text":"Button box-shadow when pressed\n","type":"list","src":{"name":"1153,740,18","text":"1153,741,4,32","type":"1153,740,12"}},{"$type":"param","name":"$focused-box-shadow","text":"Button box-shadow when focused\n","type":"list","src":{"name":"1153,743,18","text":"1153,744,4,32","type":"1153,743,12"}},{"$type":"param","name":"$disabled-box-shadow","text":"Button box-shadow when disabled\n","type":"list","src":{"name":"1153,746,18","text":"1153,747,4,33","type":"1153,746,12"}},{"$type":"param","name":"$box-shadow-transition","text":"The transition for the Button's box-shadow\n","type":"list","src":{"name":"1153,749,18","text":"1153,750,4,44","type":"1153,749,12"}},{"$type":"param","name":"$background-gradient","text":"Button background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,752,25","text":"1153,753,4,143","type":"1153,752,12"}},{"$type":"param","name":"$hovered-background-gradient","text":"Button background-gradient when hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,756,25","text":"1153,757,4,156","type":"1153,756,12"}},{"$type":"param","name":"$pressed-background-gradient","text":"Button background-gradient when pressed.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,760,25","text":"1153,761,4,156","type":"1153,760,12"}},{"$type":"param","name":"$pressed-hovered-background-gradient","text":"Button background-gradient when pressed and hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,764,25","text":"1153,765,4,168","type":"1153,764,12"}},{"$type":"param","name":"$focused-background-gradient","text":"Button background-gradient when focused.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,768,25","text":"1153,769,4,156","type":"1153,768,12"}},{"$type":"param","name":"$focused-hovered-background-gradient","text":"Button background-gradient when focused and govered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,772,25","text":"1153,773,4,168","type":"1153,772,12"}},{"$type":"param","name":"$disabled-background-gradient","text":"Button background-gradient when disabled.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,776,25","text":"1153,777,4,157","type":"1153,776,12"}},{"$type":"param","name":"$color","text":"Button text color\n","type":"color","src":{"name":"1153,780,19","text":"1153,781,4,19","type":"1153,780,12"}},{"$type":"param","name":"$hovered-color","text":"Button text color when hovered\n","type":"color","src":{"name":"1153,783,19","text":"1153,784,4,32","type":"1153,783,12"}},{"$type":"param","name":"$pressed-color","text":"Button text color when pressed\n","type":"color","src":{"name":"1153,786,19","text":"1153,787,4,32","type":"1153,786,12"}},{"$type":"param","name":"$focused-color","text":"Button text color when focused\n","type":"color","src":{"name":"1153,789,19","text":"1153,790,4,32","type":"1153,789,12"}},{"$type":"param","name":"$disabled-color","text":"Button color when disabled\n","type":"color","src":{"name":"1153,792,19","text":"1153,793,4,28","type":"1153,792,12"}},{"$type":"param","name":"$border-color","text":"Button border-color\n","type":"color/list","src":{"name":"1153,795,24","text":"1153,796,4,21","type":"1153,795,12"}},{"$type":"param","name":"$hovered-border-color","text":"Button border-color when hovered\n","type":"color/list","src":{"name":"1153,798,24","text":"1153,799,4,34","type":"1153,798,12"}},{"$type":"param","name":"$pressed-border-color","text":"Button border-color when pressed\n","type":"color/list","src":{"name":"1153,801,24","text":"1153,802,4,34","type":"1153,801,12"}},{"$type":"param","name":"$focused-border-color","text":"Button border-color when focused\n","type":"color/list","src":{"name":"1153,804,24","text":"1153,805,4,34","type":"1153,804,12"}},{"$type":"param","name":"$disabled-border-color","text":"Button border-color when disabled\n","type":"color/list","src":{"name":"1153,807,24","text":"1153,808,4,35","type":"1153,807,12"}},{"$type":"param","name":"$focused-outline-color","text":"Button focus outline color\n","type":"color","src":{"name":"1153,810,19","text":"1153,811,4,28","type":"1153,810,12"}},{"$type":"param","name":"$focused-outline-style","text":"Button focus outline style\n","type":"string","src":{"name":"1153,813,20","text":"1153,814,4,28","type":"1153,813,12"}},{"$type":"param","name":"$focused-outline-width","text":"Button focus outline width\n","type":"number","src":{"name":"1153,816,20","text":"1153,817,4,28","type":"1153,816,12"}},{"$type":"param","name":"$focused-outline-offset","text":"Button focus outline offset\n","type":"number","src":{"name":"1153,819,20","text":"1153,820,4,29","type":"1153,819,12"}},{"$type":"param","name":"$border-width","text":"Button border-width\n","type":"number/list","src":{"name":"1153,822,25","text":"1153,823,4,21","type":"1153,822,12"}},{"$type":"param","name":"$border-style","text":"Button border-style\n","type":"string/list","src":{"name":"1153,825,25","text":"1153,826,4,21","type":"1153,825,12"}},{"$type":"param","name":"$border-radius","text":"Button border-radius\n","type":"number","src":{"name":"1153,828,20","text":"1153,829,4,22","type":"1153,828,12"}},{"$type":"param","name":"$border-radius-big","text":"Button border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,831,20","text":"1153,832,4,78","type":"1153,831,12"}},{"$type":"param","name":"$font-weight","text":"Button font-weight\n","type":"string/number","src":{"name":"1153,834,27","text":"1153,835,4,20","type":"1153,834,12"}},{"$type":"param","name":"$font-size","text":"Button font-size\n","type":"number","src":{"name":"1153,837,20","text":"1153,838,4,18","type":"1153,837,12"}},{"$type":"param","name":"$font-size-big","text":"Button font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,840,20","text":"1153,841,4,74","type":"1153,840,12"}},{"$type":"param","name":"$line-height","text":"Button line-height\n","type":"number","src":{"name":"1153,843,20","text":"1153,844,4,20","type":"1153,843,12"}},{"$type":"param","name":"$line-height-big","text":"Button line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,846,20","text":"1153,847,4,76","type":"1153,846,12"}},{"$type":"param","name":"$font-family","text":"Button font-family\n","type":"string","src":{"name":"1153,849,20","text":"1153,850,4,20","type":"1153,849,12"}},{"$type":"param","name":"$text-transform","text":"Button text-transform\n","type":"string","src":{"name":"1153,852,20","text":"1153,853,4,23","type":"1153,852,12"}},{"$type":"param","name":"$text-transform-big","text":"Button text-transform in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"string","src":{"name":"1153,855,20","text":"1153,856,4,79","type":"1153,855,12"}},{"$type":"param","name":"$padding","text":"Button padding\n","type":"number/list","src":{"name":"1153,858,25","text":"1153,859,4,16","type":"1153,858,12"}},{"$type":"param","name":"$padding-big","text":"Button padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1153,861,25","text":"1153,862,4,72","type":"1153,861,12"}},{"$type":"param","name":"$icon-only-padding","text":"Button padding when an icon is present without text\n","type":"number/list","src":{"name":"1153,864,25","text":"1153,865,4,53","type":"1153,864,12"}},{"$type":"param","name":"$icon-only-padding-big","text":"Button padding when an icon is present without text in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1153,867,25","text":"1153,868,4,109","type":"1153,867,12"}},{"$type":"param","name":"$icon-color","text":"Button icon color.\n","type":"color","src":{"name":"1153,870,19","text":"1153,871,4,20","type":"1153,870,12"}},{"$type":"param","name":"$hovered-icon-color","text":"Button icon color when hovered.\n","type":"color","src":{"name":"1153,873,19","text":"1153,874,4,33","type":"1153,873,12"}},{"$type":"param","name":"$pressed-icon-color","text":"Button icon color when pressed.\n","type":"color","src":{"name":"1153,876,19","text":"1153,877,4,33","type":"1153,876,12"}},{"$type":"param","name":"$focused-icon-color","text":"Button icon color when focused\n","type":"color","src":{"name":"1153,879,19","text":"1153,880,4,32","type":"1153,879,12"}},{"$type":"param","name":"$disabled-icon-color","text":"Button icon color when disabled\n","type":"color","src":{"name":"1153,882,19","text":"1153,883,4,33","type":"1153,882,12"}},{"$type":"param","name":"$icon-size","text":"Button icon size.\n","type":"number","src":{"name":"1153,885,20","text":"1153,886,4,19","type":"1153,885,12"}},{"$type":"param","name":"$icon-size-big","text":"Button icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,888,20","text":"1153,889,4,74","type":"1153,888,12"}},{"$type":"param","name":"$icon-font-size","text":"Button icon font-size\n","type":"number","src":{"name":"1153,891,20","text":"1153,892,4,23","type":"1153,891,12"}},{"$type":"param","name":"$icon-font-size-big","text":"Button icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,894,20","text":"1153,895,4,79","type":"1153,894,12"}},{"$type":"param","name":"$icon-horizontal-spacing","text":"The space between the button icon and text when the icon is horizontally aligned\n","type":"number","src":{"name":"1153,897,20","text":"1153,898,4,82","type":"1153,897,12"}},{"$type":"param","name":"$icon-horizontal-spacing-big","text":"The space between the button icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,900,20","text":"1153,901,4,138","type":"1153,900,12"}},{"$type":"param","name":"$icon-vertical-spacing","text":"The space between the button icon and text when the icon is vertically aligned\n","type":"number","src":{"name":"1153,904,20","text":"1153,905,4,80","type":"1153,904,12"}},{"$type":"param","name":"$icon-vertical-spacing-big","text":"The space between the button icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,907,20","text":"1153,908,4,136","type":"1153,907,12"}},{"$type":"param","name":"$disabled-opacity","text":"Button opacity when disabled\n","type":"number","src":{"name":"1153,911,20","text":"1153,912,4,30","type":"1153,911,12"}},{"$type":"param","name":"$arrow-icon","text":"Button arrow icon\n","type":"string","src":{"name":"1153,914,20","text":"1153,915,4,19","type":"1153,914,12"}},{"$type":"param","name":"$arrow-icon-color","text":"Button arrow icon color\n","type":"color","src":{"name":"1153,917,19","text":"1153,918,4,25","type":"1153,917,12"}},{"$type":"param","name":"$hovered-arrow-icon-color","text":"Button arrow icon color when hovered\n","type":"color","src":{"name":"1153,920,19","text":"1153,921,4,38","type":"1153,920,12"}},{"$type":"param","name":"$pressed-arrow-icon-color","text":"Button arrow icon color when pressed\n","type":"color","src":{"name":"1153,923,19","text":"1153,924,4,38","type":"1153,923,12"}},{"$type":"param","name":"$focused-arrow-icon-color","text":"Button arrow icon color when focused\n","type":"color","src":{"name":"1153,926,19","text":"1153,927,4,38","type":"1153,926,12"}},{"$type":"param","name":"$disabled-arrow-icon-color","text":"Button arrow icon color when disabled\n","type":"color","src":{"name":"1153,929,19","text":"1153,930,4,39","type":"1153,929,12"}},{"$type":"param","name":"$arrow-icon-size","text":"Button arrow icon size\n","type":"number","src":{"name":"1153,932,20","text":"1153,933,4,24","type":"1153,932,12"}},{"$type":"param","name":"$arrow-icon-size-big","text":"Button arrow icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,935,20","text":"1153,936,4,80","type":"1153,935,12"}},{"$type":"param","name":"$arrow-icon-font-size","text":"Button arrow icon font-size\n","type":"number","src":{"name":"1153,938,20","text":"1153,939,4,29","type":"1153,938,12"}},{"$type":"param","name":"$arrow-icon-font-size-big","text":"Button arrow icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,941,20","text":"1153,942,4,85","type":"1153,941,12"}},{"$type":"param","name":"$arrow-horizontal-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\n","type":"number","src":{"name":"1153,944,20","text":"1153,945,4,83","type":"1153,944,12"}},{"$type":"param","name":"$arrow-horizontal-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,947,20","text":"1153,948,4,139","type":"1153,947,12"}},{"$type":"param","name":"$arrow-vertical-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\n","type":"number","src":{"name":"1153,951,20","text":"1153,952,4,84","type":"1153,951,12"}},{"$type":"param","name":"$arrow-vertical-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,954,20","text":"1153,955,4,140","type":"1153,954,12"}},{"$type":"param","name":"$badge-background-color","text":"The background-color of the button's {@link #badgeText badge}\n","type":"color","src":{"name":"1153,958,19","text":"1153,959,4,63","type":"1153,958,12"}},{"$type":"param","name":"$badge-background-gradient","text":"The background-gradient of the button's {@link #badgeText badge} Can be either the name\nof a gradient defined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1153,961,25","text":"1153,962,4,179","type":"1153,961,12"}},{"$type":"param","name":"$badge-color","text":"The text color of the button's {@link #badgeText badge}\n","type":"color","src":{"name":"1153,965,19","text":"1153,966,4,57","type":"1153,965,12"}},{"$type":"param","name":"$badge-border-color","text":"The border-color of the button's {@link #badgeText badge}\n","type":"color","src":{"name":"1153,968,19","text":"1153,969,4,59","type":"1153,968,12"}},{"$type":"param","name":"$badge-border-radius","text":"The border-radius of the button's {@link #badgeText badge}\n","type":"number/list","src":{"name":"1153,971,25","text":"1153,972,4,60","type":"1153,971,12"}},{"$type":"param","name":"$badge-min-width","text":"The min-width of the button's {@link #badgeText badge}\n","type":"number","src":{"name":"1153,974,20","text":"1153,975,4,56","type":"1153,974,12"}},{"$type":"param","name":"$badge-max-width","text":"The max-width of the button's {@link #badgeText badge}\n","type":"number","src":{"name":"1153,977,20","text":"1153,978,4,56","type":"1153,977,12"}},{"$type":"param","name":"$badge-font-weight","text":"The font-weight of the button's {@link #badgeText badge}\n","type":"string/number","src":{"name":"1153,980,27","text":"1153,981,4,58","type":"1153,980,12"}},{"$type":"param","name":"$badge-font-size","text":"The font-size of the button's {@link #badgeText badge}\n","type":"number","src":{"name":"1153,983,20","text":"1153,984,4,56","type":"1153,983,12"}},{"$type":"param","name":"$badge-font-size-big","text":"The font-size of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,986,20","text":"1153,987,4,112","type":"1153,986,12"}},{"$type":"param","name":"$badge-font-family","text":"The font-family of the button's {@link #badgeText badge}\n","type":"string","src":{"name":"1153,989,20","text":"1153,990,4,58","type":"1153,989,12"}},{"$type":"param","name":"$badge-line-height","text":"The line-height of the button's {@link #badgeText badge}\n","type":"number","src":{"name":"1153,992,20","text":"1153,993,4,58","type":"1153,992,12"}},{"$type":"param","name":"$badge-line-height-big","text":"The line-height of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,995,20","text":"1153,996,4,114","type":"1153,995,12"}},{"$type":"param","name":"$badge-top","text":"Offset of the {@link #badgeText badge} from the top of the button\n","type":"number","src":{"name":"1153,998,20","text":"1153,999,4,67","type":"1153,998,12"}},{"$type":"param","name":"$badge-right","text":"Offset of the {@link #badgeText badge} from the right of the button\n","type":"number","src":{"name":"1153,1001,20","text":"1153,1002,4,69","type":"1153,1001,12"}},{"$type":"param","name":"$badge-bottom","text":"Offset of the {@link #badgeText badge} from the bottom of the button\n","type":"number","src":{"name":"1153,1004,20","text":"1153,1005,4,70","type":"1153,1004,12"}},{"$type":"param","name":"$badge-left","text":"Offset of the {@link #badgeText badge} from the left of the button\n","type":"number","src":{"name":"1153,1007,20","text":"1153,1008,4,68","type":"1153,1007,12"}},{"$type":"param","name":"$badge-padding","text":"The padding of the button's {@link #badgeText badge}\n","type":"number","src":{"name":"1153,1010,20","text":"1153,1011,4,54","type":"1153,1010,12"}},{"$type":"param","name":"$badge-padding-big","text":"The padding of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1153,1013,20","text":"1153,1014,4,110","type":"1153,1013,12"}},{"$type":"param","name":"$derive-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1016,22","text":"1153,1017,4,9","type":"1153,1016,12","value":"1153,1016,37"}},{"$type":"param","name":"$derive-border-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1019,22","text":"1153,1020,4,9","type":"1153,1019,12","value":"1153,1019,44"}},{"$type":"param","name":"$derive-outline-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1022,22","text":"1153,1023,4,9","type":"1153,1022,12","value":"1153,1022,45"}},{"$type":"param","name":"$derive-background-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1025,22","text":"1153,1026,4,9","type":"1153,1025,12","value":"1153,1025,48"}},{"$type":"param","name":"$derive-background-gradients","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1028,22","text":"1153,1029,4,9","type":"1153,1028,12","value":"1153,1028,51"}},{"$type":"param","name":"$derive-icon-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1031,22","text":"1153,1032,4,9","type":"1153,1031,12","value":"1153,1031,42"}},{"$type":"param","name":"$derive-arrow-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1153,1034,22","text":"1153,1035,4,8","type":"1153,1034,12","value":"1153,1034,43"}}],"src":{"name":"1153,1037,7","text":"1153,704,4,38"}},{"$type":"method","deprecatedMessage":"Use {@link #button-ui} instead\n","deprecatedVersion":"6.0","name":"sencha-button-ui","text":"Creates a theme UI for buttons.\nAlso automatically generates UIs for {ui-label}-round and {ui-label}-small.\n\n    // SCSS\n    @include sencha-button-ui('secondary', #99A4AE, 'glossy');\n\n    // JS\n    var cancelBtn = new Ext.Button({text: 'Cancel', ui: 'secondary'});\n","items":[{"$type":"param","name":"$ui-label","text":"The name of the UI being created.\n  Can not included spaces or special punctuation (used in class names)\n","type":"string","src":{"name":"1153,1566,20","text":"1153,1566,30,34:1153,1567,4,71","type":"1153,1566,12"}},{"$type":"param","name":"$color","text":"Base color for the UI.\n","type":"color","src":{"name":"1153,1568,19","text":"1153,1568,26,23","type":"1153,1568,12"}},{"$type":"param","name":"$gradient","text":"Default gradient for the UI.\n","type":"string","src":{"name":"1153,1569,20","text":"1153,1569,30,29","type":"1153,1569,12"}}],"src":{"deprecatedMessage":"1153,1572,4","deprecatedVersion":"1153,1572,4","name":"1153,1574,7","text":"1153,1557,4,267"}},{"$type":"method","deprecatedMessage":"Use {@link #toolbar-ui} instead\n","deprecatedVersion":"6.0","name":"sencha-toolbar-ui","text":"Creates a theme UI for toolbars.\n\n    // SCSS\n    @include sencha-toolbar-ui('sub', #58710D, 'glossy');\n\n    // JS\n    var myTb = new Ext.Toolbar({title: 'My Green Glossy Toolbar', ui: 'sub'})\n","items":[{"$type":"param","name":"$ui-label","text":"The name of the UI being created.\n  Can not included spaces or special punctuation (used in class names)\n","type":"string","src":{"name":"1165,416,20","text":"1165,416,30,34:1165,417,4,71","type":"1165,416,12"}},{"$type":"param","name":"$color","text":"Base color for the UI.\n","type":"color","src":{"name":"1165,418,19","text":"1165,418,26,23","type":"1165,418,12"}},{"$type":"param","name":"$gradient","optional":true,"text":"Background gradient style for the UI.\n","type":"string","value":"$toolbar-background-gradient","src":{"name":"1165,419,21","text":"1165,419,61,38","type":"1165,419,12","value":"1165,419,31"}}],"src":{"deprecatedMessage":"1165,422,4","deprecatedVersion":"1165,422,4","name":"1165,424,7","text":"1165,408,4,194"}}]},{"$type":"vars","items":[{"$type":"property","name":"$button-action-ui","text":"Parameters for the \"action\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,613,1","text":"1153,610,4,94","type":"1153,609,10"}},{"$type":"property","name":"$button-alt-ui","text":"Parameters for the \"alt\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,622,1","text":"1153,619,4,91","type":"1153,618,10"}},{"$type":"property","dynamic":true,"name":"$button-arrow-horizontal-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\n","type":"number","value":"5px","src":{"dynamic":"1153,471,35","name":"1153,471,1","text":"1153,469,4,82","type":"1153,468,10","value":"1153,471,43"}},{"$type":"property","dynamic":true,"name":"$button-arrow-horizontal-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1153,478,39","name":"1153,478,1","text":"1153,475,4,138","type":"1153,474,10","value":"1153,478,47"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon","text":"Button arrow icon\n","type":"string","value":"$fa-var-caret-down","src":{"dynamic":"1153,411,21","name":"1153,411,1","text":"1153,409,4,18","type":"1153,408,10","value":"1153,411,29"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon-color","text":"Button arrow icon color\n","type":"color","value":"$button-color","src":{"dynamic":"1153,417,27","name":"1153,417,1","text":"1153,415,4,24","type":"1153,414,10","value":"1153,417,35"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon-font-size","text":"Button arrow icon font-size\n","type":"number","value":"null","src":{"dynamic":"1153,459,31","name":"1153,459,1","text":"1153,457,4,28","type":"1153,456,10","value":"1153,459,39"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon-font-size-big","text":"Button arrow icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1153,465,35","name":"1153,465,1","text":"1153,463,4,84","type":"1153,462,10","value":"1153,465,43"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon-size","text":"Button arrow icon size\n","type":"number","value":"$button-line-height","src":{"dynamic":"1153,447,26","name":"1153,447,1","text":"1153,445,4,23","type":"1153,444,10","value":"1153,447,34"}},{"$type":"property","dynamic":true,"name":"$button-arrow-icon-size-big","text":"Button arrow icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$button-line-height-big","src":{"dynamic":"1153,453,30","name":"1153,453,1","text":"1153,451,4,79","type":"1153,450,10","value":"1153,453,38"}},{"$type":"property","dynamic":true,"name":"$button-arrow-vertical-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\n","type":"number","value":"null","src":{"dynamic":"1153,484,33","name":"1153,484,1","text":"1153,482,4,83","type":"1153,481,10","value":"1153,484,41"}},{"$type":"property","dynamic":true,"name":"$button-arrow-vertical-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1153,491,37","name":"1153,491,1","text":"1153,488,4,139","type":"1153,487,10","value":"1153,491,45"}},{"$type":"property","dynamic":true,"name":"$button-background-color","text":"Button background-color\n","type":"color","value":"$neutral-light-color","src":{"dynamic":"1153,16,27","name":"1153,16,1","text":"1153,14,4,24","type":"1153,13,10","value":"1153,16,35"}},{"$type":"property","dynamic":true,"name":"$button-background-gradient","text":"Button background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-background-gradient($button-background-color)","src":{"dynamic":"1153,97,30","name":"1153,97,1","text":"1153,94,4,142","type":"1153,93,10","value":"1153,97,38"}},{"$type":"property","dynamic":true,"name":"$button-badge-background-color","text":"The background-color of the button's {@link #badgeText badge}\n","type":"color","value":"darken($alert-color, 10%)","src":{"dynamic":"1153,497,33","name":"1153,497,1","text":"1153,495,4,62","type":"1153,494,10","value":"1153,497,41"}},{"$type":"property","dynamic":true,"name":"$button-badge-background-gradient","text":"The background-gradient of the button's {@link #badgeText badge} Can be either the name\nof a gradient defined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"$base-background-gradient","src":{"dynamic":"1153,504,36","name":"1153,504,1","text":"1153,501,4,178","type":"1153,500,10","value":"1153,504,44"}},{"$type":"property","dynamic":true,"name":"$button-badge-border-color","text":"The border-color of the button's {@link #badgeText badge}\n","type":"color","value":"darken($button-badge-background-color, 10%)","src":{"dynamic":"1153,516,29","name":"1153,516,1","text":"1153,514,4,58","type":"1153,513,10","value":"1153,516,37"}},{"$type":"property","dynamic":true,"name":"$button-badge-border-radius","text":"The border-radius of the button's {@link #badgeText badge}\n","type":"number/list","value":"3px","src":{"dynamic":"1153,522,30","name":"1153,522,1","text":"1153,520,4,59","type":"1153,519,10","value":"1153,522,38"}},{"$type":"property","dynamic":true,"name":"$button-badge-bottom","text":"Offset of the {@link #badgeText badge} from the bottom of the button\n","type":"number","value":"null","src":{"dynamic":"1153,588,23","name":"1153,588,1","text":"1153,586,4,69","type":"1153,585,10","value":"1153,588,31"}},{"$type":"property","dynamic":true,"name":"$button-badge-color","text":"The text color of the button's {@link #badgeText badge}\n","type":"color","value":"color-by-background($button-badge-background-color)","src":{"dynamic":"1153,510,22","name":"1153,510,1","text":"1153,508,4,56","type":"1153,507,10","value":"1153,510,30"}},{"$type":"property","dynamic":true,"name":"$button-badge-font-family","text":"The font-family of the button's {@link #badgeText badge}\n","type":"string","value":"$button-font-family","src":{"dynamic":"1153,558,28","name":"1153,558,1","text":"1153,556,4,57","type":"1153,555,10","value":"1153,558,36"}},{"$type":"property","dynamic":true,"name":"$button-badge-font-size","text":"The font-size of the button's {@link #badgeText badge}\n","type":"number","value":"12px","src":{"dynamic":"1153,546,26","name":"1153,546,1","text":"1153,544,4,55","type":"1153,543,10","value":"1153,546,34"}},{"$type":"property","dynamic":true,"name":"$button-badge-font-size-big","text":"The font-size of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"13px","src":{"dynamic":"1153,552,30","name":"1153,552,1","text":"1153,550,4,111","type":"1153,549,10","value":"1153,552,38"}},{"$type":"property","dynamic":true,"name":"$button-badge-font-weight","text":"The font-weight of the button's {@link #badgeText badge}\n","type":"string/number","value":"null","src":{"dynamic":"1153,540,28","name":"1153,540,1","text":"1153,538,4,57","type":"1153,537,10","value":"1153,540,36"}},{"$type":"property","dynamic":true,"name":"$button-badge-left","text":"Offset of the {@link #badgeText badge} from the left of the button\n","type":"number","value":"null","src":{"dynamic":"1153,594,21","name":"1153,594,1","text":"1153,592,4,67","type":"1153,591,10","value":"1153,594,29"}},{"$type":"property","dynamic":true,"name":"$button-badge-line-height","text":"The line-height of the button's {@link #badgeText badge}\n","type":"number","value":"14px","src":{"dynamic":"1153,564,28","name":"1153,564,1","text":"1153,562,4,57","type":"1153,561,10","value":"1153,564,36"}},{"$type":"property","dynamic":true,"name":"$button-badge-line-height-big","text":"The line-height of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"16px","src":{"dynamic":"1153,570,32","name":"1153,570,1","text":"1153,568,4,113","type":"1153,567,10","value":"1153,570,40"}},{"$type":"property","dynamic":true,"name":"$button-badge-max-width","text":"The max-width of the button's {@link #badgeText badge}\n","type":"number","value":"95%","src":{"dynamic":"1153,534,26","name":"1153,534,1","text":"1153,532,4,55","type":"1153,531,10","value":"1153,534,34"}},{"$type":"property","dynamic":true,"name":"$button-badge-min-width","text":"The min-width of the button's {@link #badgeText badge}\n","type":"number","value":"null","src":{"dynamic":"1153,528,26","name":"1153,528,1","text":"1153,526,4,55","type":"1153,525,10","value":"1153,528,34"}},{"$type":"property","dynamic":true,"name":"$button-badge-padding","text":"The padding of the button's {@link #badgeText badge}\n","type":"number","value":"1px 4px","src":{"dynamic":"1153,600,24","name":"1153,600,1","text":"1153,598,4,53","type":"1153,597,10","value":"1153,600,32"}},{"$type":"property","dynamic":true,"name":"$button-badge-padding-big","text":"The padding of the button's {@link #badgeText badge} in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$button-badge-padding","src":{"dynamic":"1153,606,28","name":"1153,606,1","text":"1153,604,4,109","type":"1153,603,10","value":"1153,606,36"}},{"$type":"property","dynamic":true,"name":"$button-badge-right","text":"Offset of the {@link #badgeText badge} from the right of the button\n","type":"number","value":"0","src":{"dynamic":"1153,582,22","name":"1153,582,1","text":"1153,580,4,68","type":"1153,579,10","value":"1153,582,30"}},{"$type":"property","dynamic":true,"name":"$button-badge-top","text":"Offset of the {@link #badgeText badge} from the top of the button\n","type":"number","value":"-3px","src":{"dynamic":"1153,576,20","name":"1153,576,1","text":"1153,574,4,66","type":"1153,573,10","value":"1153,576,28"}},{"$type":"property","dynamic":true,"name":"$button-border-color","text":"Button border-color\n","type":"color/list","value":"button-border-color($button-background-color)","src":{"dynamic":"1153,175,23","name":"1153,175,1","text":"1153,173,4,20","type":"1153,172,10","value":"1153,175,31"}},{"$type":"property","dynamic":true,"name":"$button-border-radius","text":"Button border-radius\n","type":"number","value":"3px","src":{"dynamic":"1153,241,24","name":"1153,241,1","text":"1153,239,4,21","type":"1153,238,10","value":"1153,241,32"}},{"$type":"property","dynamic":true,"name":"$button-border-radius-big","text":"Button border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"3px","src":{"dynamic":"1153,247,28","name":"1153,247,1","text":"1153,245,4,77","type":"1153,244,10","value":"1153,247,36"}},{"$type":"property","dynamic":true,"name":"$button-border-style","text":"Button border-style\n","type":"string/list","value":"solid","src":{"dynamic":"1153,235,23","name":"1153,235,1","text":"1153,233,4,20","type":"1153,232,10","value":"1153,235,31"}},{"$type":"property","dynamic":true,"name":"$button-border-width","text":"Button border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1153,229,23","name":"1153,229,1","text":"1153,227,4,20","type":"1153,226,10","value":"1153,229,31"}},{"$type":"property","dynamic":true,"name":"$button-box-shadow","text":"Button box-shadow\n","type":"list","value":"null","src":{"dynamic":"1153,59,21","name":"1153,59,1","text":"1153,57,4,18","type":"1153,56,10","value":"1153,59,29"}},{"$type":"property","dynamic":true,"name":"$button-box-shadow-transition","text":"Transition for the Button's box-shadow\n","type":"list","value":"null","src":{"dynamic":"1153,90,32","name":"1153,90,1","text":"1153,88,4,39","type":"1153,87,10","value":"1153,90,40"}},{"$type":"property","dynamic":true,"name":"$button-color","text":"Button text color\n","type":"color","value":"button-color($button-background-color)","src":{"dynamic":"1153,145,16","name":"1153,145,1","text":"1153,143,4,18","type":"1153,142,10","value":"1153,145,24"}},{"$type":"property","name":"$button-confirm-ui","text":"Parameters for the \"confirm\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,634,1","text":"1153,631,4,95","type":"1153,630,10"}},{"$type":"property","name":"$button-decline-ui","text":"Parameters for the \"decline\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,643,1","text":"1153,640,4,95","type":"1153,639,10"}},{"$type":"property","dynamic":true,"name":"$button-disabled-arrow-icon-color","text":"Button arrow icon color when disabled\n","type":"color","value":"$button-disabled-icon-color","src":{"dynamic":"1153,441,36","name":"1153,441,1","text":"1153,439,4,38","type":"1153,438,10","value":"1153,441,44"}},{"$type":"property","dynamic":true,"name":"$button-disabled-background-color","text":"Button background-color when disabled\n","type":"color","value":"button-disabled-background-color($button-background-color)","src":{"dynamic":"1153,52,36","name":"1153,52,1","text":"1153,50,4,38","type":"1153,49,10","value":"1153,52,44"}},{"$type":"property","dynamic":true,"name":"$button-disabled-background-gradient","text":"Button background-gradient when disabled.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-disabled-background-gradient($button-disabled-background-color)","src":{"dynamic":"1153,139,39","name":"1153,139,1","text":"1153,136,4,156","type":"1153,135,10","value":"1153,139,47"}},{"$type":"property","dynamic":true,"name":"$button-disabled-border-color","text":"Button border-color when disabled\n","type":"color/list","value":"button-disabled-border-color($button-disabled-background-color)","src":{"dynamic":"1153,199,32","name":"1153,199,1","text":"1153,197,4,34","type":"1153,196,10","value":"1153,199,40"}},{"$type":"property","dynamic":true,"name":"$button-disabled-box-shadow","text":"Button box-shadow when disabled\n","type":"list","value":"null","src":{"dynamic":"1153,84,30","name":"1153,84,1","text":"1153,82,4,32","type":"1153,81,10","value":"1153,84,38"}},{"$type":"property","dynamic":true,"name":"$button-disabled-color","text":"Button color when disabled\n","type":"color","value":"button-disabled-color($button-disabled-background-color)","src":{"dynamic":"1153,169,25","name":"1153,169,1","text":"1153,167,4,27","type":"1153,166,10","value":"1153,169,33"}},{"$type":"property","dynamic":true,"name":"$button-disabled-icon-color","text":"Button icon color when disabled\n","type":"color","value":"$button-disabled-color","src":{"dynamic":"1153,349,30","name":"1153,349,1","text":"1153,347,4,32","type":"1153,346,10","value":"1153,349,38"}},{"$type":"property","dynamic":true,"name":"$button-disabled-opacity","text":"Button opacity when disabled\n","type":"number","value":".5","src":{"dynamic":"1153,405,27","name":"1153,405,1","text":"1153,403,4,29","type":"1153,402,10","value":"1153,405,35"}},{"$type":"property","name":"$button-flat-ui","text":"Parameters for the \"flat\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,672,1","text":"1153,669,4,92","type":"1153,668,10"}},{"$type":"property","dynamic":true,"name":"$button-focused-arrow-icon-color","text":"Button arrow icon color when focused\n","type":"color","value":"$button-focused-icon-color","src":{"dynamic":"1153,435,35","name":"1153,435,1","text":"1153,433,4,37","type":"1153,432,10","value":"1153,435,43"}},{"$type":"property","dynamic":true,"name":"$button-focused-background-color","text":"Button background-color when focused\n","type":"color","value":"button-focused-background-color($button-background-color)","src":{"dynamic":"1153,40,35","name":"1153,40,1","text":"1153,38,4,37","type":"1153,37,10","value":"1153,40,43"}},{"$type":"property","dynamic":true,"name":"$button-focused-background-gradient","text":"Button background-gradient when focused.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-focused-background-gradient($button-focused-background-color)","src":{"dynamic":"1153,125,38","name":"1153,125,1","text":"1153,122,4,155","type":"1153,121,10","value":"1153,125,46"}},{"$type":"property","dynamic":true,"name":"$button-focused-border-color","text":"Button border-color when focused\n","type":"color/list","value":"button-focused-border-color($button-focused-background-color)","src":{"dynamic":"1153,193,31","name":"1153,193,1","text":"1153,191,4,33","type":"1153,190,10","value":"1153,193,39"}},{"$type":"property","dynamic":true,"name":"$button-focused-box-shadow","text":"Button box-shadow when focused\n","type":"list","value":"null","src":{"dynamic":"1153,78,29","name":"1153,78,1","text":"1153,76,4,31","type":"1153,75,10","value":"1153,78,37"}},{"$type":"property","dynamic":true,"name":"$button-focused-color","text":"Button text color when focused\n","type":"color","value":"button-focused-color($button-focused-background-color, $button-color)","src":{"dynamic":"1153,163,24","name":"1153,163,1","text":"1153,161,4,31","type":"1153,160,10","value":"1153,163,32"}},{"$type":"property","dynamic":true,"name":"$button-focused-hovered-background-color","text":"Button background-color when focused and hovered\n","type":"color","value":"null","src":{"dynamic":"1153,46,43","name":"1153,46,1","text":"1153,44,4,49","type":"1153,43,10","value":"1153,46,51"}},{"$type":"property","dynamic":true,"name":"$button-focused-hovered-background-gradient","text":"Button background-gradient when focused and hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1153,132,46","name":"1153,132,1","text":"1153,129,4,167","type":"1153,128,10","value":"1153,132,54"}},{"$type":"property","dynamic":true,"name":"$button-focused-icon-color","text":"Button icon color when focused\n","type":"color","value":"$button-focused-color","src":{"dynamic":"1153,343,29","name":"1153,343,1","text":"1153,341,4,31","type":"1153,340,10","value":"1153,343,37"}},{"$type":"property","dynamic":true,"name":"$button-focused-outline-color","text":"Button focus outline color\n","type":"color","value":"button-focused-outline-color($button-background-color, $button-focused-color)","src":{"dynamic":"1153,205,32","name":"1153,205,1","text":"1153,203,4,27","type":"1153,202,10","value":"1153,205,40"}},{"$type":"property","dynamic":true,"name":"$button-focused-outline-offset","text":"Button focus outline offset\n","type":"number","value":"-2px","src":{"dynamic":"1153,223,33","name":"1153,223,1","text":"1153,221,4,28","type":"1153,220,10","value":"1153,223,41"}},{"$type":"property","dynamic":true,"name":"$button-focused-outline-style","text":"Button focus outline style\n","type":"string","value":"solid","src":{"dynamic":"1153,211,32","name":"1153,211,1","text":"1153,209,4,27","type":"1153,208,10","value":"1153,211,40"}},{"$type":"property","dynamic":true,"name":"$button-focused-outline-width","text":"Button focus outline width\n","type":"number","value":"1px","src":{"dynamic":"1153,217,32","name":"1153,217,1","text":"1153,215,4,27","type":"1153,214,10","value":"1153,217,40"}},{"$type":"property","dynamic":true,"name":"$button-font-family","text":"Button font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1153,283,22","name":"1153,283,1","text":"1153,281,4,19","type":"1153,280,10","value":"1153,283,30"}},{"$type":"property","dynamic":true,"name":"$button-font-size","text":"Button font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1153,259,20","name":"1153,259,1","text":"1153,257,4,17","type":"1153,256,10","value":"1153,259,28"}},{"$type":"property","dynamic":true,"name":"$button-font-size-big","text":"Button font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1153,265,24","name":"1153,265,1","text":"1153,263,4,73","type":"1153,262,10","value":"1153,265,32"}},{"$type":"property","dynamic":true,"name":"$button-font-weight","text":"Button font-weight\n","type":"string/number","value":"$font-weight-bold","src":{"dynamic":"1153,253,22","name":"1153,253,1","text":"1153,251,4,19","type":"1153,250,10","value":"1153,253,30"}},{"$type":"property","dynamic":true,"name":"$button-hovered-arrow-icon-color","text":"Button arrow icon color when hovered\n","type":"color","value":"$button-hovered-icon-color","src":{"dynamic":"1153,423,35","name":"1153,423,1","text":"1153,421,4,37","type":"1153,420,10","value":"1153,423,43"}},{"$type":"property","dynamic":true,"name":"$button-hovered-background-color","text":"Button background-color when hovered\n","type":"color","value":"button-hovered-background-color($button-background-color)","src":{"dynamic":"1153,22,35","name":"1153,22,1","text":"1153,20,4,37","type":"1153,19,10","value":"1153,22,43"}},{"$type":"property","dynamic":true,"name":"$button-hovered-background-gradient","text":"Button background-gradient when hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-hovered-background-gradient($button-hovered-background-color)","src":{"dynamic":"1153,104,38","name":"1153,104,1","text":"1153,101,4,155","type":"1153,100,10","value":"1153,104,46"}},{"$type":"property","dynamic":true,"name":"$button-hovered-border-color","text":"Button border-color when hovered\n","type":"color/list","value":"button-hovered-border-color($button-hovered-background-color)","src":{"dynamic":"1153,181,31","name":"1153,181,1","text":"1153,179,4,33","type":"1153,178,10","value":"1153,181,39"}},{"$type":"property","dynamic":true,"name":"$button-hovered-box-shadow","text":"Button box-shadow when hovered\n","type":"list","value":"null","src":{"dynamic":"1153,65,29","name":"1153,65,1","text":"1153,63,4,31","type":"1153,62,10","value":"1153,65,37"}},{"$type":"property","dynamic":true,"name":"$button-hovered-color","text":"Button text color when hovered\n","type":"color","value":"button-hovered-color($button-hovered-background-color, $button-color)","src":{"dynamic":"1153,151,24","name":"1153,151,1","text":"1153,149,4,31","type":"1153,148,10","value":"1153,151,32"}},{"$type":"property","dynamic":true,"name":"$button-hovered-icon-color","text":"Button icon color when hovered.\n","type":"color","value":"$button-hovered-color","src":{"dynamic":"1153,331,29","name":"1153,331,1","text":"1153,329,4,32","type":"1153,328,10","value":"1153,331,37"}},{"$type":"property","dynamic":true,"name":"$button-icon-color","text":"Button icon color.\n","type":"color","value":"$button-color","src":{"dynamic":"1153,325,21","name":"1153,325,1","text":"1153,323,4,19","type":"1153,322,10","value":"1153,325,29"}},{"$type":"property","dynamic":true,"name":"$button-icon-font-size","text":"Button icon font-size\n","type":"number","value":"null","src":{"dynamic":"1153,367,25","name":"1153,367,1","text":"1153,365,4,22","type":"1153,364,10","value":"1153,367,33"}},{"$type":"property","dynamic":true,"name":"$button-icon-font-size-big","text":"Button icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1153,373,29","name":"1153,373,1","text":"1153,371,4,78","type":"1153,370,10","value":"1153,373,37"}},{"$type":"property","dynamic":true,"name":"$button-icon-horizontal-spacing","text":"The space between the button icon and text when the icon is horizontally aligned\n","type":"number","value":"5px","src":{"dynamic":"1153,379,34","name":"1153,379,1","text":"1153,377,4,81","type":"1153,376,10","value":"1153,379,42"}},{"$type":"property","dynamic":true,"name":"$button-icon-horizontal-spacing-big","text":"The space between the button icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1153,386,38","name":"1153,386,1","text":"1153,383,4,137","type":"1153,382,10","value":"1153,386,46"}},{"$type":"property","dynamic":true,"name":"$button-icon-only-padding","text":"Button padding when an icon is present without text\n","type":"number/list","value":"nth($button-padding, 1)","src":{"dynamic":"1153,313,28","name":"1153,313,1","text":"1153,311,4,52","type":"1153,310,10","value":"1153,313,36"}},{"$type":"property","dynamic":true,"name":"$button-icon-only-padding-big","text":"Button padding when an icon is present without text in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"nth($button-padding-big, 1)","src":{"dynamic":"1153,319,32","name":"1153,319,1","text":"1153,317,4,108","type":"1153,316,10","value":"1153,319,40"}},{"$type":"property","dynamic":true,"name":"$button-icon-size","text":"Button icon size.\n","type":"number","value":"$button-line-height","src":{"dynamic":"1153,355,20","name":"1153,355,1","text":"1153,353,4,18","type":"1153,352,10","value":"1153,355,28"}},{"$type":"property","dynamic":true,"name":"$button-icon-size-big","text":"Button icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$button-line-height-big","src":{"dynamic":"1153,361,24","name":"1153,361,1","text":"1153,359,4,73","type":"1153,358,10","value":"1153,361,32"}},{"$type":"property","dynamic":true,"name":"$button-icon-vertical-spacing","text":"The space between the button icon and text when the icon is vertically aligned\n","type":"number","value":"2px","src":{"dynamic":"1153,392,32","name":"1153,392,1","text":"1153,390,4,79","type":"1153,389,10","value":"1153,392,40"}},{"$type":"property","dynamic":true,"name":"$button-icon-vertical-spacing-big","text":"The space between the button icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"3px","src":{"dynamic":"1153,399,36","name":"1153,399,1","text":"1153,396,4,135","type":"1153,395,10","value":"1153,399,44"}},{"$type":"property","dynamic":true,"name":"$button-line-height","text":"Button line-height\n","type":"number","value":"16px","src":{"dynamic":"1153,271,22","name":"1153,271,1","text":"1153,269,4,19","type":"1153,268,10","value":"1153,271,30"}},{"$type":"property","dynamic":true,"name":"$button-line-height-big","text":"Button line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"20px","src":{"dynamic":"1153,277,26","name":"1153,277,1","text":"1153,275,4,75","type":"1153,274,10","value":"1153,277,34"}},{"$type":"property","dynamic":true,"name":"$button-padding","text":"Button padding\n","type":"number/list","value":"3px 8px","src":{"dynamic":"1153,301,18","name":"1153,301,1","text":"1153,299,4,15","type":"1153,298,10","value":"1153,301,26"}},{"$type":"property","dynamic":true,"name":"$button-padding-big","text":"Button padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"5px 10px","src":{"dynamic":"1153,307,22","name":"1153,307,1","text":"1153,305,4,71","type":"1153,304,10","value":"1153,307,30"}},{"$type":"property","name":"$button-plain-ui","text":"Parameters for the \"plain\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,682,1","text":"1153,679,4,93","type":"1153,678,10"}},{"$type":"property","dynamic":true,"name":"$button-pressed-arrow-icon-color","text":"Button arrow icon color when pressed\n","type":"color","value":"$button-pressed-icon-color","src":{"dynamic":"1153,429,35","name":"1153,429,1","text":"1153,427,4,37","type":"1153,426,10","value":"1153,429,43"}},{"$type":"property","dynamic":true,"name":"$button-pressed-background-color","text":"Button background-color when pressed\n","type":"color","value":"button-pressed-background-color($button-background-color)","src":{"dynamic":"1153,28,35","name":"1153,28,1","text":"1153,26,4,37","type":"1153,25,10","value":"1153,28,43"}},{"$type":"property","dynamic":true,"name":"$button-pressed-background-gradient","text":"Button background-gradient when pressed.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-pressed-background-gradient($button-pressed-background-color)","src":{"dynamic":"1153,111,38","name":"1153,111,1","text":"1153,108,4,155","type":"1153,107,10","value":"1153,111,46"}},{"$type":"property","dynamic":true,"name":"$button-pressed-border-color","text":"Button border-color when pressed\n","type":"color/list","value":"button-pressed-border-color($button-pressed-background-color)","src":{"dynamic":"1153,187,31","name":"1153,187,1","text":"1153,185,4,33","type":"1153,184,10","value":"1153,187,39"}},{"$type":"property","dynamic":true,"name":"$button-pressed-box-shadow","text":"Button box-shadow when pressed\n","type":"list","value":"null","src":{"dynamic":"1153,72,29","name":"1153,72,1","text":"1153,70,4,31","type":"1153,69,10","value":"1153,72,37"}},{"$type":"property","dynamic":true,"name":"$button-pressed-color","text":"Button text color when pressed\n","type":"color","value":"button-pressed-color($button-pressed-background-color, $button-color)","src":{"dynamic":"1153,157,24","name":"1153,157,1","text":"1153,155,4,31","type":"1153,154,10","value":"1153,157,32"}},{"$type":"property","dynamic":true,"name":"$button-pressed-hovered-background-color","text":"Button background-color when pressed and hovered\n","type":"color","value":"null","src":{"dynamic":"1153,34,43","name":"1153,34,1","text":"1153,32,4,49","type":"1153,31,10","value":"1153,34,51"}},{"$type":"property","dynamic":true,"name":"$button-pressed-hovered-background-gradient","text":"Button background-gradient when pressed and hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1153,118,46","name":"1153,118,1","text":"1153,115,4,167","type":"1153,114,10","value":"1153,118,54"}},{"$type":"property","dynamic":true,"name":"$button-pressed-icon-color","text":"Button icon color when pressed.\n","type":"color","value":"$button-pressed-color","src":{"dynamic":"1153,337,29","name":"1153,337,1","text":"1153,335,4,32","type":"1153,334,10","value":"1153,337,37"}},{"$type":"property","name":"$button-raised-ui","text":"Parameters for the \"raised\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,699,1","text":"1153,696,4,94","type":"1153,695,10"}},{"$type":"property","name":"$button-round-ui","text":"Parameters for the \"round\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,652,1","text":"1153,649,4,93","type":"1153,648,10"}},{"$type":"property","dynamic":true,"name":"$button-segmented-ui","text":"Parameters for the \"segmented\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","value":"null","src":{"dynamic":"1153,692,23","name":"1153,692,1","text":"1153,689,4,97","type":"1153,688,10","value":"1153,692,31"}},{"$type":"property","name":"$button-square-ui","text":"Parameters for the \"square\" button UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1153,662,1","text":"1153,659,4,94","type":"1153,658,10"}},{"$type":"property","dynamic":true,"name":"$button-text-transform","text":"Button text-transform\n","type":"string","value":"null","src":{"dynamic":"1153,289,25","name":"1153,289,1","text":"1153,287,4,22","type":"1153,286,10","value":"1153,289,33"}},{"$type":"property","dynamic":true,"name":"$button-text-transform-big","text":"Button text-transform in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"string","value":"$button-text-transform","src":{"dynamic":"1153,295,29","name":"1153,295,1","text":"1153,293,4,78","type":"1153,292,10","value":"1153,295,37"}},{"$type":"property","dynamic":true,"name":"$enable-inverted-alt-button","text":"Determines if styles are added to invert text and background colors for\nconfirm & decline buttons UIs when combined with the 'alt' UI\n","type":"boolean","value":"false","src":{"dynamic":"1153,10,30","name":"1153,10,1","text":"1153,7,4,134","type":"1153,6,10","value":"1153,10,38"}}]}],"src":{"alias":"408,337,0","extends":"408,336,0","name":"1153,2,11","text":"408,2,4,9291"},"group":"Form Fields","displayName":"Button"},{"$type":"class","alias":"widget.carousel","alternateClassNames":"Ext.Carousel","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.carousel.Infinite","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.carousel.Carousel","requires":"Ext.fx.easing.EaseOut,Ext.carousel.Item,Ext.Indicator,Ext.util.TranslatableGroup","text":"Carousels, like tabs, are a great way to allow the user to swipe\nthrough multiple full-screen pages.\nA Carousel shows only one of its pages at a time but allows you\nto swipe through with your finger.\n\nCarousels can be oriented either horizontally or vertically and are\neasy to configure - they just work like any other.\nContainer. Here's how to set up a simple horizontal Carousel:\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Carousel', {\n    fullscreen: true,\n\n    items: [{\n        html : 'Item 1',\n        style: 'background-color: #5E99CC'\n    }, {\n         html : 'Item 2',\n         style: 'background-color: #759E60'\n    }, {\n          html : 'Item 3'\n    }]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtCarousel, ExtContainer } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n   render() {\n       return (\n           <ExtContainer layout=\"fit\">\n               <ExtCarousel>\n                   <ExtContainer>\n                       <div>Slide 1!</div>\n                   </ExtContainer>\n                   <ExtContainer>\n                       <div>Slide 2!</div>\n                   </ExtContainer>\n                   <ExtContainer>\n                       <div>Slide 3!</div>\n                   </ExtContainer>\n               </ExtCarousel>\n           </ExtContainer>\n       )\n   }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer [layout]=\"'fit'\">\n            <ExtCarousel [width]=\"'800'\" [height]=\"'600'\">\n                <ExtContainer [html]=\"'Slide 1!'\"></ExtContainer>\n                <ExtContainer [html]=\"'Slide 2!'\"></ExtContainer>\n                <ExtContainer [html]=\"'Slide 3!'\"></ExtContainer>\n           </ExtCarousel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n\n```HTML\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"fit\">\n   <ext-carousel>\n       <ext-container html=\"<div>Slide 1!</div>\">\n       </ext-container>\n       <ext-container html=\"<div>Slide 2!</div>\">\n       </ext-container>\n       <ext-container html=\"<div>Slide 3!</div>\">\n       </ext-container>\n   </ext-carousel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-carousel.component';\nimport '@sencha/ext-web-components/dist/ext-spinnerfield.component';\n\nexport default class CarouselComponent {}\n```\nWe can also make Carousels orient themselves vertically:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Carousel', {\n    fullscreen: true,\n    direction: 'vertical',\n\n    items: [\n        {\n            html : 'Item 1',\n            style: 'background-color: #759E60'\n        },\n        {\n            html : 'Item 2',\n            style: 'background-color: #5E99CC'\n        }\n    ]\n});\n```\n\n### Common Configurations\n* {@link #ui} defines the style of the carousel\n* {@link #direction} defines the direction of the carousel\n* {@link #indicator} defines if the indicator show be shown\n\n### Useful Methods\n* {@link #next} moves to the next card\n* {@link #previous} moves to the previous card\n* {@link #setActiveItem} moves to the passed card\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"direction","text":"The direction of the Carousel, either 'horizontal' or 'vertical'.\n","type":"String","value":"'horizontal'","src":{"accessor":"437,149,12","name":"437,147,26","text":"437,148,12,66","type":"437,147,18","value":"437,151,0"}},{"$type":"property","accessor":true,"hide":true,"name":"draggable","src":{"accessor":"410,490,0","hide":"437,162,12","name":"437,161,17"}},{"$type":"property","accessor":true,"name":"indicator","text":"Provides an indicator while toggling between child items to let the user\nknow where they are in the card stack.\n","type":"Boolean/Ext.carousel.Indicator","value":"true","src":{"accessor":"437,169,12","name":"437,166,50","text":"437,167,12,112","type":"437,166,18","value":"437,171,0"}},{"$type":"property","access":"private","accessor":true,"name":"layout","text":"Hide layout config in Carousel. It only causes confusion.\n","src":{"access":"437,143,12","accessor":"437,142,12","name":"437,140,17","text":"437,141,12,58"}},{"$type":"property","accessor":true,"name":"ui","text":"Style options for Carousel. Default is 'dark'. 'light' is also available.\n","type":"String","value":"'dark'","src":{"accessor":"437,176,12","name":"437,174,26","text":"437,175,12,74","type":"437,174,18","value":"437,178,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyActiveItem","items":[{"$type":"return","type":"Object","src":{"type":"437,691,17"}},{"$type":"param","name":"activeItem","src":{"name":"437,693,0"}},{"$type":"param","name":"oldActiveItem","src":{"name":"437,693,0"}}],"src":{"access":"437,690,8","name":"437,693,0"}},{"$type":"method","access":"private","name":"applyIndicator","items":[{"$type":"param","name":"indicator","src":{"name":"437,842,0"}},{"$type":"param","name":"currentIndicator","src":{"name":"437,842,0"}}],"src":{"access":"437,840,8","name":"437,842,0"}},{"$type":"method","name":"getActiveIndex","text":"Returns the index of the currently active card.\n","items":[{"$type":"return","text":"The index of the currently active card.\n","type":"Number","src":{"text":"437,631,25,40","type":"437,631,17"}}],"src":{"name":"437,633,0","text":"437,630,8,48"}},{"$type":"method","access":"private","name":"getInnerItemAt","items":[{"$type":"return","type":"Object","src":{"type":"437,683,17"}},{"$type":"param","name":"index","src":{"name":"437,685,0"}}],"src":{"access":"437,682,8","name":"437,685,0"}},{"$type":"method","access":"private","name":"getInnerItemIndex","items":[{"$type":"return","type":"Number","src":{"type":"437,675,17"}},{"$type":"param","name":"item","src":{"name":"437,677,0"}}],"src":{"access":"437,674,8","name":"437,677,0"}},{"$type":"method","access":"private","name":"getMaxItemIndex","items":[{"$type":"return","type":"Number","src":{"type":"437,667,17"}}],"src":{"access":"437,666,8","name":"437,669,0"}},{"$type":"method","chainable":true,"name":"next","text":"Switches to the next card.\n","items":[{"$type":"return","text":"this\n","type":"Ext.carousel.Carousel","src":{"text":"437,805,40,5","type":"437,805,17"}}],"src":{"chainable":"437,806,8","name":"437,808,0","text":"437,804,8,27"}},{"$type":"method","chainable":true,"name":"previous","text":"Switches to the previous card.\n","items":[{"$type":"return","text":"this\n","type":"Ext.carousel.Carousel","src":{"text":"437,823,40,5","type":"437,823,17"}}],"src":{"chainable":"437,824,8","name":"437,826,0","text":"437,822,8,31"}},{"$type":"method","access":"private","chainable":true,"name":"setOffset","items":[{"$type":"param","name":"offset","src":{"name":"437,523,0"}},{"$type":"return","name":"this","src":{"name":"437,530,0"}}],"src":{"access":"437,520,8","chainable":"437,521,8","name":"437,523,0"}},{"$type":"method","access":"private","chainable":true,"name":"setOffsetAnimated","items":[{"$type":"return","text":"this\n","type":"Ext.carousel.Carousel","src":{"text":"437,535,40,5","type":"437,535,17"}},{"$type":"param","name":"offset","src":{"name":"437,538,0"}}],"src":{"access":"437,534,8","chainable":"437,536,8","name":"437,538,0"}},{"$type":"method","access":"private","name":"updateIndicator","items":[{"$type":"param","name":"indicator","src":{"name":"437,849,0"}}],"src":{"access":"437,847,8","name":"437,849,0"}}]}],"src":{"alias":"437,129,0","alternateClassNames":"437,127,0","extends":"437,125,0","name":"437,124,0","requires":"437,132,0:437,133,0:437,134,0:437,135,0","text":"437,2,4,3543"},"group":"Container","displayName":"Carousel"},{"$type":"class","alias":"widget.component","alternateClassNames":"Ext.lib.Component,Ext.Gadget","disable":"DuplicateAlternateClassName","extended":"Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.Container,Ext.Media,Ext.Button,Ext.Gadget,Ext.field.Field,Ext.Decorator,Ext.Chip,Ext.d3.ComponentBase,Ext.dataview.EmptyText,Ext.dataview.IndexBar,Ext.dataview.ItemHeader,Ext.dataview.SimpleListItem,Ext.dataview.pullrefresh.Item,Ext.froala.Editor,Ext.menu.Item,Ext.grid.plugin.ColumnResizing,Ext.grid.Row,Ext.grid.RowBody,Ext.grid.rowedit.Cell,Ext.grid.rowedit.Gap,Ext.Img,Ext.Indicator,Ext.Label,Ext.Mask,Ext.menu.Separator,Ext.panel.Title,Ext.slider.Slider,Ext.slider.Thumb,Ext.Spacer,Ext.Title,Ext.Tool,Ext.ux.colorpick.Button,Ext.ux.colorpick.ColorPreview","extends":"Ext.Widget","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.state.Stateful","name":"Ext.Component","requires":"Ext.ComponentManager,Ext.ComponentQuery,Ext.XTemplate,Ext.util.translatable.CssPosition,Ext.util.translatable.CssTransform,Ext.scroll.Scroller","text":"Most of the visual classes you interact with are Components. Every Component is a\nsubclass of Ext.Component, which means they can all:\n\n* Render themselves onto the page using a template\n* Show and hide themselves at any time\n* Center themselves within their parent container\n* Enable and disable themselves\n\nThey can also do a few more advanced things:\n\n* Float above other components (windows, message boxes and overlays)\n* Change size and position on the screen with animation\n* Dock other Components inside themselves (useful for toolbars)\n* Align to other components\n* Allow themselves to be dragged around\n* Make their content scrollable & more\n\n## Available Components\n\nThere are many components.  They are separated into 4 main groups:\n\n### Navigation components\n* {@link Ext.Toolbar}\n* {@link Ext.Button}\n* {@link Ext.TitleBar}\n* {@link Ext.SegmentedButton}\n* {@link Ext.Title}\n* {@link Ext.Spacer}\n\n### Store-bound components\n* {@link Ext.dataview.DataView}\n* {@link Ext.Carousel}\n* {@link Ext.List}\n* {@link Ext.NestedList}\n\n### Form components\n* {@link Ext.form.Panel}\n* {@link Ext.form.FieldSet}\n* {@link Ext.field.Checkbox}\n* {@link Ext.field.Hidden}\n* {@link Ext.field.Slider}\n* {@link Ext.field.Text}\n* {@link Ext.picker.Picker}\n* {@link Ext.picker.Date}\n\n### General components\n* {@link Ext.Panel}\n* {@link Ext.tab.Panel}\n* {@link Ext.Viewport Ext.Viewport}\n* {@link Ext.Img}\n* {@link Ext.Audio}\n* {@link Ext.Video}\n* {@link Ext.Sheet}\n* {@link Ext.ActionSheet}\n* {@link Ext.MessageBox}\n\n\n## Instantiating Components\n\nComponents are created the same way as all other classes - using Ext.create. Here's how we can\ncreate a Text field:\n\n    var panel = Ext.create('Ext.Panel', {\n        html: 'This is my panel'\n    });\n\nThis will create a {@link Ext.Panel Panel} instance, configured with some basic HTML content. A\nPanel is just a simple Component that can render HTML and also contain other items. In this case\nwe've created a Panel instance but it won't show up on the screen yet because items are not\nrendered immediately after being instantiated. This allows us to create some components and move\nthem around before rendering and laying them out, which is a good deal faster than moving them\nafter rendering.\n\nTo show this panel on the screen now we can simply add it to the global Viewport:\n\n    Ext.Viewport.add(panel);\n\nPanels are also Containers, which means they can contain other Components, arranged by a layout.\nLet's revisit the above example now, this time creating a panel with two child Components and a\nhbox layout:\n\n```javascript\n@example({ framework: 'extjs' })\nvar panel = Ext.create('Ext.Panel', {\n    layout: 'hbox',\n\n    items: [\n        {\n            xtype: 'panel',\n            flex: 1,\n            html: 'Left Panel, 1/3rd of total size',\n             style: 'background-color: #5E99CC;'\n        },\n        {\n            xtype: 'panel',\n            flex: 2,\n            html: 'Right Panel, 2/3rds of total size',\n            style: 'background-color: #759E60;'\n        }\n    ]\n});\n\nExt.Viewport.add(panel);\n```\n\nThis time we created 3 Panels - the first one is created just as before but the inner two are\ndeclared inline using an xtype. Xtype is a convenient way of creating Components without having\nto go through the process of using Ext.create and specifying the full class name, instead you\ncan just provide the xtype for the class inside an object and the framework will create the\ncomponents for you.\n\nWe also specified a layout for the top level panel - in this case hbox, which splits the\nhorizontal width of the parent panel based on the 'flex' of each child. For example, if the\nparent Panel above is 300px wide then the first child will be flexed to 100px wide and the\nsecond to 200px because the first one was given `flex: 1` and the second `flex: 2`.\n\n## Using xtype\n\nxtype is an easy way to create Components without using the full class name. This is especially\nuseful when creating a {@link Ext.Container Container} that contains child Components. An xtype\nis simply a shorthand way of specifying a Component - for example you can use `xtype: 'panel'`\ninstead of typing out Ext.Panel.\n\nSample usage:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    layout: 'fit',\n\n    items: [\n        {\n            xtype: 'panel',\n            html: 'This panel is created by xtype'\n        },\n        {\n            xtype: 'toolbar',\n            title: 'So is the toolbar',\n            docked: 'top'\n        }\n    ]\n});\n```\n\n\n### Common xtypes\n\n<pre>\nxtype                   Class\n-----------------       ---------------------\nactionsheet             Ext.ActionSheet\naudio                   Ext.Audio\nbutton                  Ext.Button\nimage                   Ext.Img\nlabel                   Ext.Label\nloadmask                Ext.LoadMask\npanel                   Ext.Panel\nsegmentedbutton         Ext.SegmentedButton\nsheet                   Ext.Sheet\nspacer                  Ext.Spacer\ntitlebar                Ext.TitleBar\ntoolbar                 Ext.Toolbar\nvideo                   Ext.Video\ncarousel                Ext.carousel.Carousel\nnavigationview          Ext.navigation.View\ndatepicker              Ext.picker.Date\npicker                  Ext.picker.Picker\nslider                  Ext.slider.Slider\nthumb                   Ext.slider.Thumb\ntabpanel                Ext.tab.Panel\nviewport                Ext.viewport.Default\n\nDataView Components\n---------------------------------------------\ndataview                Ext.dataview.DataView\nlist                    Ext.dataview.List\nnestedlist              Ext.dataview.NestedList\n\nForm Components\n---------------------------------------------\ncheckboxfield           Ext.field.Checkbox\ndatepickerfield         Ext.field.DatePicker\nemailfield              Ext.field.Email\nhiddenfield             Ext.field.Hidden\nnumberfield             Ext.field.Number\npasswordfield           Ext.field.Password\nradiofield              Ext.field.Radio\nsearchfield             Ext.field.Search\nselectfield             Ext.field.Select\nsliderfield             Ext.field.Slider\nspinnerfield            Ext.field.Spinner\ntextfield               Ext.field.Text\ntextareafield           Ext.field.TextArea\ntogglefield             Ext.field.Toggle\nurlfield                Ext.field.Url\nfieldset                Ext.form.FieldSet\nformpanel               Ext.form.Panel\n</pre>\n\n## Configuring Components\n\nWhenever you create a new Component you can pass in configuration options. All of the\nconfigurations for a given Component are listed in the \"Config options\" section of its class\ndocs page. You can pass in any number of configuration options when you instantiate the\nComponent, and modify any of them at any point later. For example, we can easily modify the\n{@link Ext.Panel#html html content} of a Panel after creating it:\n\n```javascript\n@example({ framework: 'extjs' })\n // we can configure the HTML when we instantiate the Component\n var panel = Ext.create('Ext.Panel', {\n     fullscreen: true,\n     html: 'This is a Panel'\n });\n\n // we can update the HTML later using the setHtml method:\n panel.setHtml('Some new HTML');\n\n // we can retrieve the current HTML using the getHtml method:\n Ext.Msg.alert(panel.getHtml()); // displays \"Some new HTML\"\n```\n\nEvery config has a getter method and a setter method - these are automatically generated and\nalways follow the same pattern. For example, a config called `{@link #cfg!html html}` will receive `getHtml` and\n`setHtml` methods, a config called `defaultType` will receive `getDefaultType` and\n`setDefaultType` methods, and so on.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"axisLock","text":"If `true`, then, when {@link #showBy} or {@link #alignTo} fallback on\nconstraint violation only takes place along the major align axis.\n\nThat is, if alignment `\"l-r\"` is being used, and `axisLock: true` is used,\nthen if constraints fail, only fallback to `\"r-l\"` is considered.\n","type":"Boolean","value":"null","src":{"accessor":"410,624,0","name":"410,617,27","text":"410,618,12,278","type":"410,617,18","value":"410,624,0"}},{"$type":"property","accessor":true,"evented":true,"name":"bottom","text":"The absolute bottom position of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. Explicitly setting this value will make this Component\nbecome 'positioned', which means it will no longer participate in the layout of the\nContainer that it resides in.\n","type":"Number/String","value":"null","src":{"accessor":"410,357,12","evented":"410,358,12","name":"410,352,33","text":"410,353,12,284","type":"410,352,18","value":"410,360,0"}},{"$type":"property","accessor":true,"evented":true,"name":"centered","optional":true,"text":"Configure this as `true` to have this Component centered within its Container.\nSetting this value to `true` will make this Component become 'positioned', which means\nit will no longer participate in the layout of the Container that it resides in.\n","type":"Boolean","value":"false","src":{"accessor":"410,457,12","evented":"410,458,12","name":"410,453,28","text":"410,454,12,247","type":"410,453,18","value":"410,453,37"}},{"$type":"property","accessor":true,"name":"contentEl","text":"The configured element will automatically be added as the content of this\ncomponent. When you pass a string, we expect it to be an element id. If the\ncontent element is hidden, we will automatically show it.\n","type":"Ext.Element/HTMLElement/String","value":"null","src":{"accessor":"410,583,12","name":"410,579,50","text":"410,580,12,208","type":"410,579,18","value":"410,585,0"}},{"$type":"property","accessor":true,"name":"data","text":"The initial set of data to apply to the `{@link #tpl}` to\nupdate the content area of the Component.\n\n**Note:** Data will be appended to any existing data.\n","type":"Object","value":"null","src":{"accessor":"410,574,12","name":"410,568,26","text":"410,569,12,156","type":"410,568,18","value":"410,576,0"}},{"$type":"property","accessor":true,"name":"displayed","since":"6.5.0","text":"Set to `true` to call `show` and `false` to call `hide`. Unlike the `{@link #cfg!hidden hidden}`\nconfig, changing this config will potentially involve animations to show or\nhide the component.\n","type":"Boolean","value":"null","src":{"accessor":"410,474,0","name":"410,468,27","since":"410,472,19","text":"410,469,12,173","type":"410,468,18","value":"410,474,0"}},{"$type":"property","accessor":true,"evented":true,"name":"docked","text":"The dock position of this component in its container. Can be `{@link #cfg!left left}`, `{@link #cfg!top top}`, `{@link #cfg!right right}` or\n`{@link #cfg!bottom bottom}`.\n\n__Notes__\n\nYou must use a HTML5 doctype for {@link #docked} `{@link #cfg!bottom bottom}` to work. To do this, simply\nadd the following code to the HTML file:\n\n    <!doctype html>\n\nSo your index.html file should look a little like this:\n\n    <!doctype html>\n    <html>\n        <head>\n            <title>MY application title</title>\n            ...\n","type":"String","value":"null","src":{"accessor":"410,447,12","evented":"410,448,12","name":"410,428,26","text":"410,429,12,426","type":"410,428,18","value":"410,450,0"}},{"$type":"property","accessor":true,"name":"draggable","text":"Set to `true` to allow this component to be dragged. This can also be the config\nobject for the `{@link Ext.drag.Source}` that will manage the drag.\n","type":"Boolean/Object/Ext.drag.Source","value":"null","src":{"accessor":"410,490,0","name":"410,486,50","text":"410,487,12,141","type":"410,486,18","value":"410,490,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Please use {@link #showAnimation} instead.\n","deprecatedVersion":"2.0.0","name":"enterAnimation","text":"Animation effect to apply when the Component is being shown.  Typically you want to use\nan inbound animation type such as 'fadeIn' or 'slideIn'.\n","type":"String/Mixed","value":"null","src":{"accessor":"410,520,12","deprecatedMessage":"410,519,12","deprecatedVersion":"410,519,12","name":"410,516,32","text":"410,517,12,145","type":"410,516,18","value":"410,522,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Please use {@link #hideAnimation} instead.  Typically you want to use\nan outbound animation type such as 'fadeOut' or 'slideOut'.\n","deprecatedVersion":"2.0.0","name":"exitAnimation","text":"Animation effect to apply when the Component is being hidden.\n","type":"String/Mixed","value":"null","src":{"accessor":"410,529,12","deprecatedMessage":"410,527,12","deprecatedVersion":"410,527,12","name":"410,525,32","text":"410,526,12,62","type":"410,525,18","value":"410,531,0"}},{"$type":"property","name":"fullscreen","text":"Force the component to take up 100% width and height available, by adding it\nto {@link Ext.Viewport}.\n","type":"Boolean","src":{"name":"410,1070,27","text":"410,1068,12,102","type":"410,1070,18"}},{"$type":"property","accessor":true,"name":"hideAnimation","text":"Animation effect to apply when the Component is being hidden.  Typically you want to use\nan outbound animation type such as 'fadeOut' or 'slideOut'. For more animations, check\nthe {@link Ext.fx.Animation#type} config.\n","type":"String/Mixed","value":"null","src":{"accessor":"410,547,12","name":"410,543,32","text":"410,544,12,218","type":"410,543,18","value":"410,549,0"}},{"$type":"property","accessor":true,"name":"hideOnMaskTap","text":"When using a {@link #cfg!modal} Component, setting this to `true` will hide\nthe modal mask and the Container when the mask is tapped on.\n","type":"Boolean","value":"null","src":{"accessor":"410,643,12","name":"410,640,27","text":"410,641,12,137","type":"410,640,18","value":"410,645,0"}},{"$type":"property","accessor":true,"name":"html","text":"Optional HTML content to render inside this Component, or a reference to an\nexisting element on the page.\n","type":"String/Ext.Element/HTMLElement","value":"null","src":{"accessor":"410,480,12","name":"410,477,50","text":"410,478,12,106","type":"410,477,18","value":"410,482,0"}},{"$type":"property","accessor":true,"evented":true,"name":"left","text":"The absolute left position of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. Explicitly setting this value will make this Component\nbecome 'positioned', which means it will no longer participate in the layout of the\nContainer that it resides in.\n","type":"Number/String","value":"null","src":{"accessor":"410,324,12","evented":"410,325,12","name":"410,319,33","text":"410,320,12,282","type":"410,319,18","value":"410,327,0"}},{"$type":"property","accessor":true,"evented":true,"name":"maxHeight","text":"The maximum height of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size. Note that this config will not apply if the\nComponent is 'positioned' (absolutely positioned or centered)\n","type":"Number/String","value":"null","src":{"accessor":"410,399,12","evented":"410,400,12","name":"410,394,33","text":"410,395,12,304","type":"410,394,18","value":"410,402,0"}},{"$type":"property","accessor":true,"evented":true,"name":"maxWidth","text":"The maximum width of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size. Note that this config will not apply if the\nComponent is 'positioned' (absolutely positioned or centered)\n","type":"Number/String","value":"null","src":{"accessor":"410,388,12","evented":"410,389,12","name":"410,383,33","text":"410,384,12,303","type":"410,383,18","value":"410,391,0"}},{"$type":"property","accessor":true,"evented":true,"name":"minHeight","text":"The minimum height of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size.\n","type":"Number/String","value":"null","src":{"accessor":"410,377,12","evented":"410,378,12","name":"410,373,33","text":"410,374,12,198","type":"410,373,18","value":"410,380,0"}},{"$type":"property","accessor":true,"evented":true,"name":"minWidth","text":"The minimum width of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size.\n","type":"Number/String","value":"null","src":{"accessor":"410,367,12","evented":"410,368,12","name":"410,363,33","text":"410,364,12,197","type":"410,363,18","value":"410,370,0"}},{"$type":"property","accessor":true,"name":"modal","text":"`true` to make this Component modal. This will create a mask underneath the\nComponent that covers its parent and does not allow the user to interact with\nany other Components until this Component is dismissed.\n","type":"Boolean","value":"null","src":{"accessor":"410,632,12","name":"410,628,27","text":"410,629,12,210","type":"410,628,18","value":"410,636,0"}},{"$type":"property","name":"modelValidation","since":"6.5.0","text":"This config enables binding to your `{@link Ext.data.Model#validators}`. This\nis only processed by form fields (e.g., `Ext.field.*`) at present, however, this\nsetting is inherited and so can be set on a parent container.\n\nWhen set to `true` by a component (or by an ancestor container), the `validators`\nof for any {@Ext.data.Model record} fields will be used wherever the `value` is\nbound to such data fields.\n\nWhile this config can be set arbitrarily high in the component hierarchy, doing\nso can create a lot overhead if most of your form fields do not actually rely on\n`validators` in your data model.\n\nUsing this setting for a form that is bound to an `{@link Ext.data.Model}` might look\nlike this:\n\n     {\n         xtype: 'panel',\n         modelValidation: true,\n         items: [{\n             xtype: 'textfield',\n             bind: '{theUser.firstName}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.lastName}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.phoneNumber}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.email}'\n         }]\n     }\n","type":"Boolean","value":"null","src":{"name":"410,685,23","since":"410,718,15","text":"410,686,8,1131","type":"410,685,14","value":"410,720,0"}},{"$type":"property","accessor":true,"name":"padding","text":"The padding to use on this Component. Can be specified as a number (in which\ncase all edges get the same padding) or a CSS string like '5 10 10 10'\n","type":"Number/String","value":"null","src":{"accessor":"410,305,12","name":"410,302,33","text":"410,303,12,148","type":"410,302,18","value":"410,307,0"}},{"$type":"property","accessor":true,"name":"record","text":"A model instance which updates the Component's html based on it's tpl. Similar\nto the data configuration, but tied to to a record to make allow dynamic\nupdates.  This must be a model instance and not a configuration of one.\n","type":"Ext.data.Model","value":"null","src":{"accessor":"410,592,12","name":"410,588,34","text":"410,589,12,224","type":"410,588,18","value":"410,594,0"}},{"$type":"property","accessor":true,"evented":true,"name":"right","text":"The absolute right position of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. Explicitly setting this value will make this Component\nbecome 'positioned', which means it will no longer participate in the layout of the\nContainer that it resides in.\n","type":"Number/String","value":"null","src":{"accessor":"410,346,12","evented":"410,347,12","name":"410,341,33","text":"410,342,12,283","type":"410,341,18","value":"410,349,0"}},{"$type":"property","accessor":true,"evented":true,"name":"scrollable","text":"Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or `null`) to disable scrolling - this is the default.\n- `{@link #cfg!x x}` or `horizontal` to enable horizontal scrolling only\n- `{@link #cfg!y y}` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a `{@link Ext.scroll.Scroller}` if\nif advanced configuration is needed.\n\nThe getter for this config returns the {@link Ext.scroll.Scroller Scroller}\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n","type":"Boolean/String/Object","value":"null","src":{"accessor":"410,422,12","evented":"410,423,12","name":"410,405,41","text":"410,406,12,685","type":"410,405,18","value":"410,425,0"}},{"$type":"property","accessor":true,"name":"showAnimation","text":"Animation effect to apply when the Component is being shown.  Typically you want to use\nan inbound animation type such as 'fadeIn' or 'slideIn'. For more animations, check the\n{@link Ext.fx.Animation#type} config.\n","type":"String/Mixed","value":"null","src":{"accessor":"410,538,12","name":"410,534,32","text":"410,535,12,214","type":"410,534,18","value":"410,540,0"}},{"$type":"property","accessor":true,"name":"tabIndex","text":"DOM tabIndex attribute for this component's\n{@link #focusEl}.\n","type":"Number","value":"null","src":{"accessor":"410,314,0","name":"410,310,26","text":"410,311,12,62","type":"410,310,18","value":"410,314,0"}},{"$type":"property","accessor":true,"name":"tooltip","text":"The tooltip for this component - can be a string to be used as innerHTML\n(html tags are accepted) or {@link Ext.tip.ToolTip} config object.\n\nThe default behavior is to use a shared tip instance. The tooltip configuration is\nregistered with the {@link Ext.tip.Manager}. To enable this, your application can set\nthe {@link Ext.app.Application#quickTips} config, or an instance of the\n{@link Ext.tip.Manager} may be created manually.\n\nTo force a unique tooltip instance to be created, specify `autoCreate: true` on this\nconfiguration.\n\nConfiguring this with `autoHide: false` implies `autoCreate: true` so that the desired\npersistent behavior can be obtained with other targets still showing the singleton\ninstance.\n","type":"String/Object","value":"null","src":{"accessor":"410,614,0","name":"410,598,33","text":"410,599,12,713","type":"410,598,18","value":"410,614,0"}},{"$type":"property","accessor":true,"evented":true,"name":"top","text":"The absolute top position of this Component; must be a valid CSS length value,\ne.g: `300`, `100px`, `30%`, etc. Explicitly setting this value will make this Component\nbecome 'positioned', which means it will no longer participate in the layout of the\nContainer that it resides in.\n","type":"Number/String","value":"null","src":{"accessor":"410,335,12","evented":"410,336,12","name":"410,330,33","text":"410,331,12,281","type":"410,330,18","value":"410,338,0"}},{"$type":"property","accessor":true,"name":"tpl","text":"A {@link String}, {@link Ext.Template}, {@link Ext.XTemplate} or an {@link Array} of\nstrings to form an {@link Ext.XTemplate}. Used in conjunction with the {@link #data}\nand {@link #tplWriteMode} configurations.\n\n__Note__\nThe {@link #data} configuration _must_ be set for any content to be shown in the\ncomponent when using this configuration.\n","type":"String/String[]/Ext.Template/Ext.XTemplate[]","value":"null","src":{"accessor":"410,511,12","name":"410,503,64","text":"410,504,12,344","type":"410,503,18","value":"410,513,0"}},{"$type":"property","accessor":true,"name":"tplWriteMode","text":"The Ext.(X)Template method to use when updating the content area of the\nComponent.\n\nValid modes are:\n\n- append\n- insertAfter\n- insertBefore\n- insertFirst\n- overwrite\n","type":"String","value":"'overwrite'","src":{"accessor":"410,563,12","name":"410,552,26","text":"410,553,12,166","type":"410,552,18","value":"410,565,0"}},{"$type":"property","accessor":true,"name":"userSelectable","optional":true,"since":"6.5.1","text":"\nSet to true to allow users to select text within this component.\n\nCan also be any valid value for the CSS3\n[user-select](https://developer.mozilla.org/en-US/docs/Web/CSS/user-select) property.\n\nA value of true implies `auto`, while false implies `none`.\n\nMay also be an object keyed by child element name.\n\nBy default, the user cannot click+drag+select text/elements of the UI.  Applications may\nwant to enable user selection for specific DOM elements, such as the bodyElement of\na component used as a tab panel.  The tab and tab text would not be user selectable in\nthis example, but the content area when the tab is selected would.\n\n     userSelectable: {\n         element: true,       // allow the element to be user selectable\n         bodyElement: true    // allow the component's body element to be user selectable\n     }\n","type":"Boolean/String/Object","value":"false","src":{"accessor":"410,681,0","name":"410,658,42","since":"410,679,19","text":"410,659,12,830","type":"410,658,18","value":"410,658,57"}},{"$type":"property","accessor":true,"name":"weight","optional":true,"text":"This value controls this item's order in a {@link Ext.Container#cfg!weighted weighted}\n{@link Ext.Container container} (see {@link #cfg!parent}).\n\nLower values gravitate towards the start of the container - the top in vertical layouts,\nthe locale start side in horizontal layouts.\n","type":"Number","value":"0","src":{"accessor":"410,655,0","name":"410,648,27","text":"410,649,12,281","type":"410,648,18","value":"410,648,34"}},{"$type":"property","name":"xtype","text":"The `{@link #cfg!xtype xtype}` configuration option can be used to optimize Component creation and rendering.\nIt serves as a shortcut to the full component name. For example, the component\n`Ext.button.Button` has an xtype of `button`.\n\nYou can define your own xtype on a custom {@link Ext.Component component} like so:\n\n    Ext.define('PressMeButton', {\n        extend: 'Ext.button.Button',\n        xtype: 'pressmebutton',\n        text: 'Press Me'\n    });\n\nAny Component can be created implicitly as an object config with an xtype specified,\nallowing it to be declared and passed into the rendering pipeline without actually being\ninstantiated as an object. Not only is rendering deferred, but the actual creation of the\nobject itself is also deferred, saving memory and resources until they are actually needed.\nIn complex, nested layouts containing many Components, this can make a noticeable\nimprovement in performance.\n\n    // Explicit creation of contained Components:\n    var panel = new Ext.Panel({\n       // ...\n       items: [\n          Ext.create('Ext.button.Button', {\n             text: 'OK'\n          })\n       ]\n    });\n\n    // Implicit creation using xtype:\n    var panel = new Ext.Panel({\n       // ...\n       items: [{\n          xtype: 'button',\n          text: 'OK'\n       }]\n    });\n\nIn the first example, the button will always be created immediately during the panel's\ninitialization. With many added Components, this approach could potentially slow the\nrendering of the page. In the second example, the button will not be created or rendered\nuntil the panel is actually displayed in the browser. If the panel is never displayed\n(for example, if it is a tab that remains hidden) then the button will never be created and\nwill never consume any resources whatsoever.\n","type":"String","src":{"name":"410,252,22","text":"410,253,8,1768","type":"410,252,14"}},{"$type":"property","accessor":true,"name":"zIndex","text":"The z-index to give this Component when it is rendered.\n\nNot valid for {@link #cfg-floated} Components. The Z ordering of {@link #cfg-floated}\nComponents is managed by ordering of the DOM elements.\n","type":"Number","value":"null","src":{"accessor":"410,498,12","name":"410,493,26","text":"410,494,12,198","type":"410,493,18","value":"410,500,0"}}]},{"$type":"events","items":[{"$type":"event","name":"added","text":"Fires after a Component had been added to a Container.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,819,31","text":"410,819,38,33","type":"410,819,16"}},{"$type":"param","name":"container","text":"Parent Container\n","type":"Ext.Container","src":{"name":"410,820,31","text":"410,820,41,17","type":"410,820,16"}},{"$type":"param","name":"index","text":"The index of the item within the Container.\n","type":"Number","src":{"name":"410,821,24","text":"410,821,30,44","type":"410,821,16"}}],"src":{"name":"410,817,15","text":"410,818,8,55"}},{"$type":"event","name":"beforehide","text":"Fires before the Component is hidden. Hide may be vetoed by returning `false` from a handler.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,737,31","text":"410,737,38,33","type":"410,737,16"}}],"src":{"name":"410,735,15","text":"410,736,8,94"}},{"$type":"event","name":"beforeorientationchange","removedMessage":"This event is now only available `onBefore` the Viewport's\n{@link Ext.Viewport#orientationchange}\n","removedVersion":"2.0.0","text":"Fires before orientation changes.\n","src":{"name":"410,776,15","removedMessage":"410,778,8","removedVersion":"410,778,8","text":"410,777,8,34"}},{"$type":"event","name":"beforeshow","text":"Fires before the Component is shown. Show may be vetoed by returning `false` from a handler.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,725,31","text":"410,725,38,33","type":"410,725,16"}}],"src":{"name":"410,723,15","text":"410,724,8,93"}},{"$type":"event","name":"destroy","text":"Fires when the component is destroyed\n","src":{"name":"410,771,15","text":"410,772,8,38"}},{"$type":"event","name":"erased","text":"Fires when the component is no longer displayed in the DOM.  Listening to this event will\ndegrade performance not recommend for general use.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,806,31","text":"410,806,38,33","type":"410,806,16"}}],"src":{"name":"410,803,15","text":"410,804,8,141"}},{"$type":"event","deprecatedMessage":"Use {@link #positionedchange} instead\n","deprecatedVersion":"6.2.0","name":"floatingchange","text":"Fires whenever there is a change in the positioned status of a component\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,755,31","text":"410,755,38,33","type":"410,755,16"}},{"$type":"param","name":"positioned","text":"The component's new positioned state. This becomes\n`true` is a component is positioned using the {@link #cfg-top}, {@link #cfg-right},\n{@link #cfg-bottom} or {@link #cfg-left} configs.\n","type":"Boolean","src":{"name":"410,756,25","text":"410,756,36,51:410,757,8,134","type":"410,756,16"}}],"src":{"deprecatedMessage":"410,759,8","deprecatedVersion":"410,759,8","name":"410,753,15","text":"410,754,8,73"}},{"$type":"event","name":"fullscreen","text":"Fires whenever a Component with the fullscreen config is instantiated\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,749,31","text":"410,749,38,33","type":"410,749,16"}}],"src":{"name":"410,747,15","text":"410,748,8,70"}},{"$type":"event","name":"hide","text":"Fires whenever the Component is hidden\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,743,31","text":"410,743,38,33","type":"410,743,16"}}],"src":{"name":"410,741,15","text":"410,742,8,39"}},{"$type":"event","name":"initialize","text":"Fires when the component has been initialized\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,792,31","text":"410,792,38,33","type":"410,792,16"}}],"src":{"name":"410,790,15","text":"410,791,8,46"}},{"$type":"event","name":"moved","text":"Fires when a component si moved within its Container.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,835,31","text":"410,835,38,33","type":"410,835,16"}},{"$type":"param","name":"container","text":"Container which holds the component\n","type":"Ext.Container","src":{"name":"410,836,31","text":"410,836,41,36","type":"410,836,16"}},{"$type":"param","name":"toIndex","text":"The new index of the item.\n","type":"Number","src":{"name":"410,837,24","text":"410,837,32,27","type":"410,837,16"}},{"$type":"param","name":"fromIndex","text":"The old index of the item.\n","type":"Number","src":{"name":"410,838,24","text":"410,838,34,27","type":"410,838,16"}}],"src":{"name":"410,833,15","text":"410,834,8,54"}},{"$type":"event","name":"orientationchange","removedMessage":"This event is now only available on the Viewport's\n{@link Ext.Viewport#orientationchange}\n","removedVersion":"2.0.0","text":"Fires when orientation changes.\n","src":{"name":"410,783,15","removedMessage":"410,785,8","removedVersion":"410,785,8","text":"410,784,8,32"}},{"$type":"event","inheritdoc":"Ext.dom.Element#painted","name":"painted","text":"Fires whenever this Element actually becomes visible (painted) on the screen. This is\nuseful when you need to perform 'read' operations on the DOM element, i.e: calculating\nnatural sizes and positioning.\n\n__Note:__ This event is not available to be used with event delegation. Instead `{@link #event!painted painted}`\nonly fires if you explicitly add at least one listener to it, for performance reasons.\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,798,31","text":"410,798,38,33","type":"410,798,16"}},{"$type":"param","name":"element","text":"The component's outer element (this.element)\n","type":"Ext.Element","src":{"name":"410,799,29","text":"410,799,37,45","type":"410,799,16"}}],"src":{"inheritdoc":"410,797,8","name":"410,796,15","text":"194,463,12,383"}},{"$type":"event","name":"positionedchange","text":"Fires whenever there is a change in the positioned status of a component\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,764,31","text":"410,764,38,33","type":"410,764,16"}},{"$type":"param","name":"positioned","text":"The component's new positioned state. This becomes\n`true` is a component is positioned using the {@link #cfg-top}, {@link #cfg-right},\n{@link #cfg-bottom} or {@link #cfg-left} configs.\n","type":"Boolean","src":{"name":"410,765,25","text":"410,765,36,51:410,766,8,134","type":"410,765,16"}}],"src":{"name":"410,762,15","text":"410,763,8,73"}},{"$type":"event","name":"removed","text":"Fires when a component is removed from a Container\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,827,31","text":"410,827,38,33","type":"410,827,16"}},{"$type":"param","name":"container","text":"Container which holds the component\n","type":"Ext.Container","src":{"name":"410,828,31","text":"410,828,41,36","type":"410,828,16"}},{"$type":"param","name":"index","text":"The index of the item that was removed.\n","type":"Number","src":{"name":"410,829,24","text":"410,829,30,40","type":"410,829,16"}}],"src":{"name":"410,825,15","text":"410,826,8,51"}},{"$type":"event","inheritdoc":"Ext.dom.Element#resize","name":"resize","text":"Important note: For the best performance on mobile devices, use this only when you\nabsolutely need to monitor a Element's size.\n\n__Note:__ This event is not available to be used with event delegation. Instead `{@link #event!resize resize}`\nonly fires if you explicitly add at least one listener to it, for performance reasons.\n","items":[{"$type":"param","name":"element","text":"The component's outer element (this.element).\n","type":"Ext.Element","src":{"name":"410,812,29","text":"410,812,37,46","type":"410,812,16"}},{"$type":"param","name":"info","text":"The component's new size parameters.\n","type":"Object","src":{"name":"410,813,24","text":"410,813,29,37","type":"410,813,16"}}],"src":{"inheritdoc":"410,811,8","name":"410,810,15","text":"194,474,12,306"}},{"$type":"event","name":"show","text":"Fires whenever the Component is shown\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,731,31","text":"410,731,38,33","type":"410,731,16"}}],"src":{"name":"410,729,15","text":"410,730,8,38"}},{"$type":"event","name":"updatedata","text":"Fires whenever the data of the component is updated\n","items":[{"$type":"param","name":"sender","text":"The component firing this event.\n","type":"Ext.Component","src":{"name":"410,2411,39","text":"410,2411,46,33","type":"410,2411,24"}},{"$type":"param","name":"newData","text":"The new data\n","type":"Object","src":{"name":"410,2412,32","text":"410,2412,40,13","type":"410,2412,24"}}],"src":{"name":"410,2409,23","text":"410,2410,16,52"}},{"$type":"event","name":"beforebottomchange","text":"This event fires when `{@link #cfg!bottom bottom}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!bottom bottom}`.","type":"Number/String","src":{"type":"410,352,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!bottom bottom}`.","type":"Number/String","src":{"type":"410,352,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"bottomchange","text":"This event fires when `{@link #cfg!bottom bottom}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!bottom bottom}`.","type":"Number/String","src":{"type":"410,352,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!bottom bottom}`.","type":"Number/String","src":{"type":"410,352,18"}}]},{"$type":"event","name":"beforecenteredchange","text":"This event fires when `{@link #cfg!centered centered}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!centered centered}`.","type":"Boolean","src":{"type":"410,453,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!centered centered}`.","type":"Boolean","src":{"type":"410,453,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"centeredchange","text":"This event fires when `{@link #cfg!centered centered}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!centered centered}`.","type":"Boolean","src":{"type":"410,453,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!centered centered}`.","type":"Boolean","src":{"type":"410,453,18"}}]},{"$type":"event","name":"beforedockedchange","text":"This event fires when `{@link #cfg!docked docked}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!docked docked}`.","type":"String","src":{"type":"410,428,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!docked docked}`.","type":"String","src":{"type":"410,428,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"dockedchange","text":"This event fires when `{@link #cfg!docked docked}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!docked docked}`.","type":"String","src":{"type":"410,428,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!docked docked}`.","type":"String","src":{"type":"410,428,18"}}]},{"$type":"event","name":"beforeleftchange","text":"This event fires when `{@link #cfg!left left}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!left left}`.","type":"Number/String","src":{"type":"410,319,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!left left}`.","type":"Number/String","src":{"type":"410,319,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"leftchange","text":"This event fires when `{@link #cfg!left left}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!left left}`.","type":"Number/String","src":{"type":"410,319,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!left left}`.","type":"Number/String","src":{"type":"410,319,18"}}]},{"$type":"event","name":"beforemaxHeightchange","text":"This event fires when `{@link #cfg!maxHeight maxHeight}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!maxHeight maxHeight}`.","type":"Number/String","src":{"type":"410,394,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!maxHeight maxHeight}`.","type":"Number/String","src":{"type":"410,394,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"maxHeightchange","text":"This event fires when `{@link #cfg!maxHeight maxHeight}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!maxHeight maxHeight}`.","type":"Number/String","src":{"type":"410,394,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!maxHeight maxHeight}`.","type":"Number/String","src":{"type":"410,394,18"}}]},{"$type":"event","name":"beforemaxWidthchange","text":"This event fires when `{@link #cfg!maxWidth maxWidth}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!maxWidth maxWidth}`.","type":"Number/String","src":{"type":"410,383,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!maxWidth maxWidth}`.","type":"Number/String","src":{"type":"410,383,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"maxWidthchange","text":"This event fires when `{@link #cfg!maxWidth maxWidth}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!maxWidth maxWidth}`.","type":"Number/String","src":{"type":"410,383,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!maxWidth maxWidth}`.","type":"Number/String","src":{"type":"410,383,18"}}]},{"$type":"event","name":"beforeminHeightchange","text":"This event fires when `{@link #cfg!minHeight minHeight}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!minHeight minHeight}`.","type":"Number/String","src":{"type":"410,373,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!minHeight minHeight}`.","type":"Number/String","src":{"type":"410,373,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"minHeightchange","text":"This event fires when `{@link #cfg!minHeight minHeight}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!minHeight minHeight}`.","type":"Number/String","src":{"type":"410,373,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!minHeight minHeight}`.","type":"Number/String","src":{"type":"410,373,18"}}]},{"$type":"event","name":"beforeminWidthchange","text":"This event fires when `{@link #cfg!minWidth minWidth}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!minWidth minWidth}`.","type":"Number/String","src":{"type":"410,363,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!minWidth minWidth}`.","type":"Number/String","src":{"type":"410,363,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"minWidthchange","text":"This event fires when `{@link #cfg!minWidth minWidth}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!minWidth minWidth}`.","type":"Number/String","src":{"type":"410,363,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!minWidth minWidth}`.","type":"Number/String","src":{"type":"410,363,18"}}]},{"$type":"event","name":"beforerightchange","text":"This event fires when `{@link #cfg!right right}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!right right}`.","type":"Number/String","src":{"type":"410,341,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!right right}`.","type":"Number/String","src":{"type":"410,341,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"rightchange","text":"This event fires when `{@link #cfg!right right}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!right right}`.","type":"Number/String","src":{"type":"410,341,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!right right}`.","type":"Number/String","src":{"type":"410,341,18"}}]},{"$type":"event","name":"beforescrollablechange","text":"This event fires when `{@link #cfg!scrollable scrollable}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!scrollable scrollable}`.","type":"Boolean/String/Object","src":{"type":"410,405,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!scrollable scrollable}`.","type":"Boolean/String/Object","src":{"type":"410,405,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"scrollablechange","text":"This event fires when `{@link #cfg!scrollable scrollable}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!scrollable scrollable}`.","type":"Boolean/String/Object","src":{"type":"410,405,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!scrollable scrollable}`.","type":"Boolean/String/Object","src":{"type":"410,405,18"}}]},{"$type":"event","name":"beforetopchange","text":"This event fires when `{@link #cfg!top top}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!top top}`.","type":"Number/String","src":{"type":"410,330,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!top top}`.","type":"Number/String","src":{"type":"410,330,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"topchange","text":"This event fires when `{@link #cfg!top top}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Component"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!top top}`.","type":"Number/String","src":{"type":"410,330,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!top top}`.","type":"Number/String","src":{"type":"410,330,18"}}]}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"afterEdit","text":"Used to handle joining of a record to a tpl\n","src":{"access":"410,2445,8","name":"410,2448,0","text":"410,2446,8,44"}},{"$type":"method","access":"private","name":"afterErase","text":"Used to handle joining of a record to a tpl\n","src":{"access":"410,2453,8","name":"410,2456,0","text":"410,2454,8,44"}},{"$type":"method","access":"private","name":"alignTo","items":[{"$type":"param","name":"component","src":{"name":"410,2563,0"}},{"$type":"param","name":"alignment","src":{"name":"410,2563,0"}},{"$type":"param","name":"options","src":{"name":"410,2563,0"}}],"src":{"access":"410,2561,8","name":"410,2563,0"}},{"$type":"method","access":"private","name":"applyCentered","items":[{"$type":"param","name":"centered","type":"Boolean","src":{"name":"410,1537,25","type":"410,1537,16"}},{"$type":"return","type":"Boolean","src":{"type":"410,1538,17"}}],"src":{"access":"410,1536,8","name":"410,1540,0"}},{"$type":"method","access":"private","name":"applyTpl","items":[{"$type":"param","name":"tpl","src":{"name":"410,2373,0"}}],"src":{"access":"410,2371,8","name":"410,2373,0"}},{"$type":"method","access":"private","name":"beforeInitialize","src":{"access":"410,1089,8","name":"410,1091,0"}},{"$type":"method","chainable":true,"name":"center","text":"Center this {@link #cfg-floated} or {@link #isPositioned positioned} Component in its parent.\n","items":[{"$type":"return","text":"this\n","type":"Ext.Component","src":{"text":"410,1103,32,5","type":"410,1103,17"}}],"src":{"chainable":"410,1144,0","name":"410,1105,0","text":"410,1102,8,94"}},{"$type":"method","fires":"initialize","name":"constructor","text":"Creates new Component.\n","items":[{"$type":"param","name":"config","text":"The standard configuration object.\n","type":"Object","src":{"name":"410,989,24","text":"410,989,31,35","type":"410,989,16"}}],"src":{"fires":"410,1076,0","name":"410,991,0","text":"410,988,8,23"}},{"$type":"method","fires":"destroy","name":"doDestroy","since":"6.2.0","text":"Perform the actual destruction sequence. This is the method to override in your\nsubclasses to add steps specific to the destruction of custom Component.\n\nIf the Component is currently added to a Container it will first be removed\nfrom that Container. All {@link Ext.Element} references are also deleted and\nthe Component is de-registered from {@link Ext.ComponentManager}.\n\nAs a rule of thumb, subclasses should destroy their child Components, Elements,\nand/or other objects before calling parent method. Any object references will be\nnulled after this method has finished, to prevent the possibility of memory leaks.\n","src":{"fires":"410,2874,0","name":"410,2850,0","since":"410,2848,15","text":"410,2837,8,619"}},{"$type":"method","access":"private","name":"getModalSibling","text":"Returns the topmost modal floated component (other then this one).\n","src":{"access":"410,1156,8","name":"410,1158,0","text":"410,1155,8,67"}},{"$type":"method","access":"private","name":"getRenderTarget","since":"6.5.0","text":"Returns the element into which the html content and items should be rendered.\nThis defaults to the `bodyElement` but derived classes can override this method\nto use a different element.\n\nFor containers his only applies to `inner` items, not `{@link #cfg!docked docked}` items. The\n`{@link #property!positioned positioned}` items are rendered to the element returned by the\n{@link Ext.Container#getPositionedItemTarget method.\n","items":[{"$type":"return","type":"Ext.dom.Element","src":{"type":"410,3007,21"}}],"src":{"access":"410,3008,12","name":"410,3011,0","since":"410,3009,19","text":"410,3000,12,377"}},{"$type":"method","access":"private","name":"getScrollableClientRegion","text":"This method is required by the Scroller to return the scrollable client region\n","items":[{"$type":"return","text":"The scrolling viewport region.\n","type":"Ext.util.Region","src":{"text":"410,1354,34,31","type":"410,1354,17"}}],"src":{"access":"410,1355,8","name":"410,1357,0","text":"410,1353,8,79"}},{"$type":"method","name":"getXTypes","text":"Returns this Component's xtype hierarchy as a slash-delimited string. For a list of all\navailable xtypes, see the {@link Ext.Component} header.\n\n__Note:__ If using your own subclasses, be aware that a Component must register its own xtype\nto participate in determination of inherited xtypes.\n\nExample usage:\n\n    var t = new Ext.field.Text();\n    alert(t.getXTypes());  // alerts 'component/field/textfield'\n","items":[{"$type":"return","text":"The xtype hierarchy string.\n","type":"String","src":{"text":"410,2472,25,28","type":"410,2472,17"}}],"src":{"name":"410,2474,0","text":"410,2461,8,409"}},{"$type":"method","chainable":true,"fires":"beforehide","name":"hide","text":"Hides this Component optionally using an animation.\n","items":[{"$type":"param","name":"animation","optional":true,"text":"You can specify an animation here or a bool to use the\n{@link #hideAnimation} config.\n","type":"Object/Boolean","src":{"name":"410,1902,33","text":"410,1902,44,55:410,1903,8,31","type":"410,1902,16"}},{"$type":"return","type":"Ext.Component","src":{"type":"410,1904,17"}}],"src":{"chainable":"410,1905,8","fires":"410,1914,0","name":"410,1907,0","text":"410,1901,8,52"}},{"$type":"method","name":"initDragConstraints","since":"6.5.0","template":true,"text":"This method is called when a drag is initializing. This method should adjust the\ndrag constraints to ensure all drag movements are properly restricted. See\n{@link Ext.drag.Source#constrain}.\n","items":[{"$type":"param","name":"draggable","type":"Ext.drag.Source","src":{"name":"410,2483,33","type":"410,2483,16"}}],"src":{"name":"410,2479,16","since":"410,2485,15","template":"410,2484,8","text":"410,2480,8,191"}},{"$type":"method","access":"protected","name":"initialize","template":true,"text":"Allows addition of behavior to the rendering phase.\n","src":{"access":"410,1096,8","name":"410,1099,0","template":"410,1097,8","text":"410,1095,8,52"}},{"$type":"method","access":"protected","name":"initInheritedState","text":"Called by `{@link #method!getInherited getInherited}` to initialize the inheritedState the first time it is requested.\n","items":[{"$type":"param","name":"inheritedState","src":{"name":"410,1302,0"}}],"src":{"access":"410,1300,8","name":"410,1302,0","text":"410,1299,8,90"}},{"$type":"method","access":"private","name":"isCentered","items":[{"$type":"return","type":"boolean","src":{"type":"410,1419,17"}}],"src":{"access":"410,1418,8","name":"410,1421,0"}},{"$type":"method","access":"private","name":"isPainted","src":{"access":"410,2364,8","name":"410,2366,0"}},{"$type":"method","access":"private","name":"isRendered","src":{"access":"410,2357,8","name":"410,2359,0"}},{"$type":"method","access":"private","name":"onInitialized","items":[{"$type":"param","name":"fn","src":{"name":"410,1252,0"}},{"$type":"param","name":"scope","src":{"name":"410,1252,0"}},{"$type":"param","name":"args","src":{"name":"410,1252,0"}}],"src":{"access":"410,1250,8","name":"410,1252,0"}},{"$type":"method","access":"protected","name":"onResize","template":true,"text":"Optional template method. If implemented, this is called *asynchronously* after a browser\nlayout caused by a component resize. This may be triggered for any or several of the\nfollowing reasons:\n   - Programmatic changes to {@link #cfg-width} or {@link #cfg-height} configs.\n   - Setting the {@link #cfg-flex} config when the owning layout is {@link Ext.layout.Box}.\n   - Setting {@link #cfg-minHeight}, {@link #cfg-maxHeight}, {@link #cfg-minWidth}\n     or {@link #cfg-maxWidth}.\n   - Changing device orientation.\n   - Changing the browser viewport size.\n   - Any resize caused by browser layout recalculation which may be caused by content\n     size changes or application of default browser layout rules.\n","items":[{"$type":"param","name":"width","text":"The new width.\n","type":"Number","src":{"name":"410,1510,24","text":"410,1510,30,15","type":"410,1510,16"}},{"$type":"param","name":"height","text":"The new height.\n","type":"Number","src":{"name":"410,1511,24","text":"410,1511,31,16","type":"410,1511,16"}},{"$type":"param","name":"oldWidth","text":"The previous width.\n","type":"Number","src":{"name":"410,1512,24","text":"410,1512,33,20","type":"410,1512,16"}},{"$type":"param","name":"oldHeight","text":"The previous height.\n","type":"Number","src":{"name":"410,1513,24","text":"410,1513,34,21","type":"410,1513,16"}}],"src":{"access":"410,1514,8","name":"410,1517,0","template":"410,1515,8","text":"410,1499,8,707"}},{"$type":"method","access":"protected","name":"onScrollEnd","template":true,"text":"Invoked when a scroll operation is completed via this component's\n{@link #scrollable scroller}.\n","items":[{"$type":"param","name":"x","text":"The current x position\n","type":"Number","src":{"name":"410,1212,24","text":"410,1212,26,23","type":"410,1212,16"}},{"$type":"param","name":"y","text":"The current y position\n","type":"Number","src":{"name":"410,1213,24","text":"410,1213,26,23","type":"410,1213,16"}}],"src":{"access":"410,1215,8","name":"410,1211,16","template":"410,1214,8","text":"410,1209,8,96"}},{"$type":"method","access":"protected","name":"onScrollMove","template":true,"text":"Invoked when this component is scrolled via its {@link #scrollable scroller}.\n","items":[{"$type":"param","name":"x","text":"The current x position\n","type":"Number","src":{"name":"410,1202,24","text":"410,1202,26,23","type":"410,1202,16"}},{"$type":"param","name":"y","text":"The current y position\n","type":"Number","src":{"name":"410,1203,24","text":"410,1203,26,23","type":"410,1203,16"}}],"src":{"access":"410,1205,8","name":"410,1201,16","template":"410,1204,8","text":"410,1200,8,78"}},{"$type":"method","access":"protected","name":"onScrollStart","template":true,"text":"Invoked when a scroll is initiated on this component via its {@link #scrollable scroller}.\n","items":[{"$type":"param","name":"x","text":"The current x position\n","type":"Number","src":{"name":"410,1193,24","text":"410,1193,26,23","type":"410,1193,16"}},{"$type":"param","name":"y","text":"The current y position\n","type":"Number","src":{"name":"410,1194,24","text":"410,1194,26,23","type":"410,1194,16"}}],"src":{"access":"410,1196,8","name":"410,1192,16","template":"410,1195,8","text":"410,1191,8,91"}},{"$type":"method","access":"private","name":"preprocessShow","text":"This is the private method to ensure everything is set up for showing.\nThis is called by both show and showBy to set a component up.\nthe user-facing method is beforeShow, this setup must have\nhappened by the time that is called.\n","items":[{"$type":"param","name":"component","src":{"name":"410,1980,0"}},{"$type":"param","name":"alignment","src":{"name":"410,1980,0"}},{"$type":"param","name":"options","src":{"name":"410,1980,0"}}],"src":{"access":"410,1974,8","name":"410,1980,0","text":"410,1975,8,229"}},{"$type":"method","deprecatedMessage":"Use {@link #resetPositioned} instead.\n","deprecatedVersion":"6.2","inheritdoc":"Ext.Component#resetPositioned","name":"resetFloating","text":"Resets {@link #top}, {@link #right}, {@link #bottom} and {@link #left} configurations to\n`null`, which will cause this component to stop being 'positioned' and to take its place in\nits owning container's layout.\n","src":{"deprecatedMessage":"410,3228,20","deprecatedVersion":"410,3228,20","inheritdoc":"410,3227,20","name":"410,3226,28","text":"410,1710,8,212"}},{"$type":"method","name":"resetPositioned","text":"Resets {@link #top}, {@link #right}, {@link #bottom} and {@link #left} configurations to\n`null`, which will cause this component to stop being 'positioned' and to take its place in\nits owning container's layout.\n","src":{"name":"410,1714,0","text":"410,1710,8,212"}},{"$type":"method","access":"private","name":"setVisibility","items":[{"$type":"param","name":"isVisible","src":{"name":"410,2352,0"}}],"src":{"access":"410,2350,8","name":"410,2352,0"}},{"$type":"method","access":"private","name":"setXY","since":"6.5.0","text":"This method has the same arguments as {@link Ext.dom.Element#setXY element's setXY}\nmethod, but is used to maintain the `{@link #cfg!x x}` and `{@link #cfg!y y}` configs (for `{@link #cfg!floated floated}` components)\nor the `{@link #cfg!left left}` and `{@link #cfg!top top}` config for positioned components.\n","items":[{"$type":"param","name":"x","src":{"name":"410,3162,19"}},{"$type":"param","name":"y","src":{"name":"410,3163,19"}},{"$type":"param","name":"animation","src":{"name":"410,3164,19"}}],"src":{"access":"410,3165,12","name":"410,3168,0","since":"410,3166,19","text":"410,3159,12,225"}},{"$type":"method","chainable":true,"fires":"beforeshow","name":"show","text":"Shows this component optionally using an animation.\n","items":[{"$type":"param","name":"animation","optional":true,"text":"You can specify an animation here or a bool to\n                         use the {@link #showAnimation} config.\n","type":"Object/Boolean","src":{"name":"410,2167,33","text":"410,2167,44,47:410,2168,8,64","type":"410,2167,16"}},{"$type":"param","access":"private","name":"options","optional":true,"type":"Object","items":[{"$type":"property","name":"animation","optional":true,"text":"You can specify an animation here or a\n                         bool to use the {@link #showAnimation} config.\n","type":"Object/Boolean","src":{"name":"410,2170,41","text":"410,2170,52,39:410,2171,8,72","type":"410,2170,16"}},{"$type":"property","name":"alignment","optional":true,"text":"An object containing alignment details.\n","type":"Object","items":[{"$type":"property","name":"component","optional":true,"text":"The target component to show this component by.\n","type":"Object","src":{"name":"410,2173,43","text":"410,2173,54,48","type":"410,2173,16"}},{"$type":"property","name":"alignment","optional":true,"text":"The alignment string, eg: `'tl-bl'`.\n","type":"Object","src":{"name":"410,2174,43","text":"410,2174,54,37","type":"410,2174,16"}},{"$type":"property","name":"options","optional":true,"text":"An object containing options for the\n{@link Ext.util.Region#alignTo} method.\n","type":"Object","src":{"name":"410,2175,43","text":"410,2175,52,37:410,2176,8,40","type":"410,2175,16"}}],"src":{"name":"410,2172,33","text":"410,2172,44,40","type":"410,2172,16"}}],"src":{"access":"410,2169,35","name":"410,2169,25","type":"410,2169,16"}},{"$type":"return","type":"Ext.Component","src":{"type":"410,2177,17"}}],"src":{"chainable":"410,2178,8","fires":"410,2200,0","name":"410,2180,0","text":"410,2166,8,52"}},{"$type":"method","chainable":true,"disable":"2125","name":"showAt","text":"Displays component at specific xy position.\nA floating component (like a menu) is positioned relative to its ownerCt if any.\nUseful for popping up a context menu:\n\n    listeners: {\n        itemcontextmenu: function(view, record, item, index, event, options) {\n            Ext.create('Ext.menu.Menu', {\n                width: 100,\n                height: 100,\n                margin: '0 0 10 0',\n                items: [{\n                    text: 'regular item 1'\n                },{\n                    text: 'regular item 2'\n                },{\n                    text: 'regular item 3'\n                }]\n            }).showAt(event.getXY());\n        }\n    }\n","items":[{"$type":"param","name":"x","text":"The new x position or array of `[x,y]`, or an\nobject `{x:10, y:10}`.\n","type":"Number/Number[]/Object","src":{"name":"410,2611,40","text":"410,2611,42,46:410,2612,8,23","type":"410,2611,16"}},{"$type":"param","name":"y","optional":true,"text":"The new y position.\n","type":"Number","src":{"name":"410,2613,25","text":"410,2613,28,20","type":"410,2613,16"}},{"$type":"return","text":"this\n","type":"Ext.Component","src":{"text":"410,2614,32,5","type":"410,2614,17"}}],"src":{"chainable":"410,2643,0","disable":"410,2620,0","name":"410,2616,0","text":"410,2590,8,664"}},{"$type":"method","name":"showBy","text":"Shows this component by another component. If you specify no alignment, it will automatically\nposition this component relative to the reference component depending upon the `alignment`\nparameter.\n\nThe `alignment` parameter describes the edge-to-edge alignment of *this* component\nwith the target. It can be specified thus:\n\n- **Blank**: Defaults to positioning where the component will fit trying `'l-r?'`,\n`'r-l?'`, `'b-t?'` then `'t-b?'` in that order.\n- **Two anchors**: If two values from the table below are passed separated by a dash,\n  the first value is used as the element's anchor point, and the second value is\n  used as the target's anchor point.\n- **Two edge/offset descriptors:** An edge/offset descriptor is an edge initial\n  (`t`/`r`/`b`/`l`) followed by a percentage along that side. This describes a\n  point to align with a similar point in the target. So `'t0-b0'` would be\n  the same as `'tl-bl'`, `'l0-r50'` would place the top left corner of this item\n  halfway down the right edge of the target item. This allows more flexibility\n  and also describes which two edges are considered adjacent when positioning a tip pointer.\n\nFollowing are all of the supported predefined anchor positions:\n\n     Value  Description\n     -----  -----------------------------\n     tl     The top left corner\n     t      The center of the top edge\n     tr     The top right corner\n     l      The center of the left edge\n     c      The center\n     r      The center of the right edge\n     bl     The bottom left corner\n     b      The center of the bottom edge\n     br     The bottom right corner\n\nYou can put a '?' at the end of the alignment string to constrain the positioned element to\nthe {@link Ext.Viewport Viewport}. The element will attempt to align as specified, but the\nposition will be adjusted to constrain to the viewport if necessary. Note that the element\nbeing aligned might be swapped to align to a different position than that specified in order\nto enforce the viewport constraints.\n\nExample Usage:\n\n    // show `panel` by `button` using the default positioning (auto fit)\n    panel.showBy(button);\n\n    // align the top left corner of `panel` with the top right corner of `button`\n    // (constrained to viewport)\n    panel.showBy(button, \"tl-tr?\");\n\n    // align the bottom right corner of `panel` with the center left edge of `button`\n    // (not constrained by viewport)\n    panel.showBy(button, \"br-cl\");\n\n    // align the center of panel with the bottom left corner of button and\n    // adjust the x position by -6 pixels (and the y position by 0)\n    panel.showBy(button, \"c-bl\", [-6, 0]);\n\n    // align the 25% point on the bottom edge of this panel\n    // with the 75% point on the top edge of button.\n    panel.showBy(button, 'b25-t75');\n","items":[{"$type":"param","name":"component","text":"The target component to show this component by.\n","type":"Ext.Component","src":{"name":"410,2113,31","text":"410,2113,41,48","type":"410,2113,16"}},{"$type":"param","name":"alignment","optional":true,"text":"The alignment string, eg: `'tl-bl'`.\n","type":"String","src":{"name":"410,2114,25","text":"410,2114,36,37","type":"410,2114,16"}},{"$type":"param","name":"options","optional":true,"text":"An object containing options for the\n{@link Ext.util.Region#alignTo} method, if an Array is used, it will be assumed to be the\noffset.\n","type":"Object/Array","src":{"name":"410,2115,31","text":"410,2115,40,37:410,2116,8,98","type":"410,2115,16"}}],"src":{"name":"410,2119,0","text":"410,2053,8,2770"}},{"$type":"method","access":"private","name":"triggerInitialized","src":{"access":"410,1219,8","name":"410,1221,0"}},{"$type":"method","access":"private","fires":"updatedata","name":"updateData","items":[{"$type":"param","name":"newData","src":{"name":"410,2402,0"}}],"src":{"access":"410,2400,8","fires":"410,2415,0","name":"410,2402,0"}},{"$type":"method","access":"private","name":"whenVisible","text":"Queue a function to run when the component is visible & painted. If those conditions\nare met, the function will execute  immediately, otherwise it will wait until it is\nvisible and painted.\n","items":[{"$type":"param","name":"fn","text":"The function to execute on this component.\n","type":"String","src":{"name":"410,3111,28","text":"410,3111,31,43","type":"410,3111,20"}},{"$type":"param","name":"args","optional":true,"text":"The arguments to pass.\n","type":"Object[]","src":{"name":"410,3112,31","text":"410,3112,37,23","type":"410,3112,20"}},{"$type":"return","text":"`true` if the function was executed immediately.\n","type":"Boolean","src":{"text":"410,3113,30,49","type":"410,3113,21"}}],"src":{"access":"410,3115,12","name":"410,3117,0","text":"410,3107,12,191"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"activeAnimation","value":"null","src":{"access":"410,872,8","name":"410,874,0","value":"410,874,0"}},{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'component'","src":{"inheritdoc":"410,891,8","name":"410,890,18","text":"18,529,8,532","value":"410,893,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'html'","src":{"inheritdoc":"410,852,8","name":"410,851,18","text":"275,272,8,373","type":"275,271,19","value":"410,854,0"}},{"$type":"property","access":"private","name":"dockPositions","readonly":true,"value":"{\n    top: true,\n    right: true,\n    bottom: true,\n    left: true\n}","src":{"access":"410,878,8","name":"410,880,0","readonly":"410,877,8","value":"410,880,0"}},{"$type":"property","inheritdoc":true,"name":"floatingCls","text":"The CSS class to add to this component when it\nis floated at the viewport level.\n","type":"String","value":"Ext.baseCSSPrefix + 'floating'","src":{"inheritdoc":"410,897,8","name":"410,896,18","text":"689,270,53,47:689,271,8,34","type":"689,270,19","value":"410,899,0"}},{"$type":"property","access":"private","name":"isComponent","value":"true","src":{"access":"410,857,8","name":"410,859,0","value":"410,859,0"}},{"$type":"property","access":"private","name":"positioned","value":"false","src":{"access":"410,862,8","name":"410,864,0","value":"410,864,0"}},{"$type":"property","name":"rendered","readonly":true,"text":"The rendered flag is set when a widget is inserted into the document for the first time.\n\nNote that this is a one-way operation. The first time a widget is inserted into the\ndocument, this flag is set, and it is never unset.\n","type":"Boolean","src":{"name":"410,842,28","readonly":"410,843,8","text":"410,844,8,225","type":"410,842,19"}},{"$type":"property","access":"private","name":"rendered","value":"false","src":{"access":"410,867,8","name":"410,869,0","value":"410,869,0"}},{"$type":"property","access":"private","name":"userSelectableClsMap","value":"{\n    \"true\": Ext.baseCSSPrefix + 'user-selectable-auto',\n    \"false\": Ext.baseCSSPrefix + 'user-selectable-none',\n    all: Ext.baseCSSPrefix + 'user-selectable-all',\n    auto: Ext.baseCSSPrefix + 'user-selectable-auto',\n    text: Ext.baseCSSPrefix + 'user-selectable-text',\n    none: Ext.baseCSSPrefix + 'user-selectable-none'\n}","src":{"access":"410,976,8","name":"410,978,0","value":"410,978,0"}}]},{"$type":"static-methods","items":[{"$type":"method","name":"from","since":"6.5.0","static":true,"text":"Find the Widget or Component to which the given event/element belongs.\n","items":[{"$type":"param","name":"el","text":"The element or event\nfrom which to start to find an owning Component.\n","type":"Ext.event.Event/Ext.dom.Element/HTMLElement","src":{"name":"410,937,65","text":"410,937,68,21:410,938,12,49","type":"410,937,20"}},{"$type":"param","name":"limit","optional":true,"text":"The element at which to stop upward\nsearching for an owning Component, or the number of Components to traverse\nbefore giving up. Defaults to the document's HTML element.\n","type":"Ext.dom.Element/HTMLElement","src":{"name":"410,939,50","text":"410,939,57,36:410,940,12,134","type":"410,939,20"}},{"$type":"param","name":"selector","optional":true,"text":"An optional {@link Ext.ComponentQuery} selector to\nfilter the target.\n","type":"String","src":{"name":"410,942,29","text":"410,942,39,51:410,943,12,19","type":"410,942,20"}},{"$type":"return","text":"Component, or null\n","type":"Ext.Component","src":{"text":"410,944,36,19","type":"410,944,21"}}],"src":{"name":"410,948,0","since":"410,946,19","static":"410,933,-1","text":"410,935,12,72"}},{"$type":"method","deprecatedMessage":"Use {@link Ext.Component#method!from} instead.\n","deprecatedVersion":"6.5.0","name":"fromElement","since":"6.0.1","static":true,"text":"Find the Widget or Component to which the given Element belongs.\n","items":[{"$type":"param","name":"el","text":"The element from which to start to find an\nowning Component.\n","type":"Ext.dom.Element/HTMLElement","src":{"name":"410,955,49","text":"410,955,52,43:410,956,12,18","type":"410,955,20"}},{"$type":"param","name":"limit","optional":true,"text":"The element at which to stop upward\nsearching for an owning Component, or the number of Components to traverse before giving\nup. Defaults to the document's HTML element.\n","type":"Ext.dom.Element/HTMLElement","src":{"name":"410,957,50","text":"410,957,57,36:410,958,12,134","type":"410,957,20"}},{"$type":"param","name":"selector","optional":true,"text":"An optional {@link Ext.ComponentQuery} selector to filter the\ntarget.\n","type":"String","src":{"name":"410,960,29","text":"410,960,39,62:410,961,12,8","type":"410,960,20"}},{"$type":"return","text":"Component, or null\n","type":"Ext.Component/null","src":{"text":"410,962,41,19","type":"410,962,21"}}],"src":{"deprecatedMessage":"410,964,12","deprecatedVersion":"410,964,12","name":"410,967,0","since":"410,965,19","static":"410,933,-1","text":"410,953,12,66"}}]}],"src":{"alias":"410,298,0","alternateClassNames":"410,240,0:410,240,0","disable":"410,230,4","extends":"410,233,0","mixins":"410,236,0","name":"410,232,0","requires":"410,243,0:410,244,0:410,245,0:410,246,0:410,247,0:410,248,0","text":"410,2,4,4550:410,151,2,1846:410,200,4,1200"},"displayName":"Component"},{"$type":"class","alias":"widget.container","alternateClassNames":"Ext.lib.Container,Ext.container.Container","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.Panel,Ext.Toolbar,Ext.dataview.Abstract,Ext.calendar.view.Multi,Ext.carousel.Carousel,Ext.draw.ContainerBase,Ext.chart.navigator.ContainerBase,Ext.dataview.DataItem,Ext.dataview.listswiper.Item,Ext.dataview.NestedList,Ext.Editor,Ext.form.FieldSet,Ext.grid.HeaderContainer,Ext.TitleBar,Ext.navigation.View,Ext.panel.Header,Ext.SegmentedButton,Ext.tab.Panel,Ext.ux.colorpick.ColorMap,Ext.ux.colorpick.Slider,Ext.ux.google.Map,Ext.viewport.Default","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","mixins":"Ext.mixin.Queryable,Ext.mixin.Container,Ext.mixin.FocusableContainer","name":"Ext.Container","requires":"Ext.util.ItemCollection","text":"A Container has all of the abilities of {@link Ext.Component Component}, but lets you nest other\nComponents inside it. Applications are made up of lots of components, usually nested inside one\nanother. Containers allow you to render and arrange child Components inside them. Most apps have\na single top-level Container called a Viewport, which takes up the entire screen. Inside of this\nare child components, for example in a mail app the Viewport Container's two children might be a\nmessage List and an email preview pane.\n\nContainers give the following extra functionality:\n\n- Adding child Components at instantiation and run time\n- Removing child Components\n- Specifying a Layout\n\nLayouts determine how the child Components should be laid out on the screen. In our mail app\nexample we'd use an HBox layout so that we can pin the email list to the left hand edge of the\nscreen and allow the preview pane to occupy the rest. There are several layouts, each of which\nhelp you achieve your desired application structure.\n\n## Adding Components to Containers\n\nAs we mentioned above, Containers are special Components that can have child Components arranged\nby a Layout. One of the code samples above showed how to create a Panel with 2 child Panels\nalready defined inside it but it's easy to do this at run time too:\n\n    @example\n    var mainPanel = Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        layout: 'hbox',\n        defaults: {\n            flex: 1\n        },\n        items: [{\n            html: 'First Panel',\n            style: 'background-color: #5E99CC'\n        }]\n    });\n\n    mainPanel.add({\n        xtype: 'panel',\n        html: 'About this App'\n    });\n\nHere we created three Panels in total. First we create mainPanel, which\nalready contains another Panel in its {@link Ext.Container#cfg-items items}\nconfiguration, with some dummy text (\"First Panel\"). Finally, we add the third\npanel to the second by calling the {@link Ext.Container#method-add add} method on `mainPanel`.\n\nIn this case we gave our mainPanel another hbox layout, but we also introduced some\n{@link Ext.Container#defaults defaults}. These are applied to every item in the Panel, so in\nthis case every child inside `mainPanel` will be given a `flex: 1` configuration. The effect of\nthis is that when we first render the screen only a single child is present inside `mainPanel`,\nso that child takes up the full width available to it. Once the `mainPanel.add` line is called\nthough, the `aboutPanel` is rendered inside of it and also given a `{@link #cfg!flex flex}` of 1, which will\ncause it and the first panel to both receive half the full width of the `mainPanel`.\n\nLikewise, it's easy to remove items from a Container:\n\n    mainPanel.remove(aboutPanel);\n\nAfter this line is run everything is back to how it was, with the first child panel once again\ntaking up the full width inside `mainPanel`.\n","uses":"Ext.layout.Auto","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"evented":true,"name":"activeItem","text":"The item from the {@link #cfg-items}\ncollection that will be active first. This is usually only meaningful in a\n{@link Ext.layout.Card card layout}, where only one item can be active at a time. If\npassed a string, it will be assumed to be a {@link Ext.ComponentQuery} selector. A number\nwill reference an index or a {@link Ext.Component Component} instance may be passed as\nwell. An object config will be created as a new component.\n","type":"Ext.Component/Object/String/Number","value":"0","src":{"accessor":"411,149,12","evented":"411,150,12","name":"411,143,54","text":"411,143,65,37:411,144,12,396","type":"411,143,18","value":"411,152,0"}},{"$type":"property","accessor":true,"name":"autoDestroy","text":"If `true`, child items will be destroyed as soon as they are\n{@link #method-remove removed} from this container.\n","type":"Boolean","value":"true","src":{"accessor":"411,357,12","name":"411,354,27","text":"411,355,12,113","type":"411,354,18","value":"411,359,0"}},{"$type":"property","accessor":true,"name":"autoSize","optional":true,"text":"May be set to `false` for improved layout performance if auto-sizing is not required.\n\nSome versions of Safari, both desktop and mobile, have very slow performance\nif the application has deeply nested containers due to the following WebKit\nbug: https://bugs.webkit.org/show_bug.cgi?id=150445\n\nApplications that experience performance issues in the affected versions of\nSafari may need to turn off autoSizing globally for all `{@link Ext.Container}` instances\nby placing the following override in the application's \"overrides\" directory:\n\n    Ext.define('MyApp.overrides.Container', {\n        override: 'Ext.Container',\n        config: {\n            autoSize: false\n        }\n    });\n\nOnce auto-sizing support has turned off by default, it can be selectively\nturned back on only on those container instances that explicitly need auto-sizing\nbehavior by setting `{@link #cfg!autoSize autoSize}` to `true`.\n\nThis option can also be used to allow items to be sized in percentage\nunits as a workaround for the following browser bug:\nhttps://bugs.webkit.org/show_bug.cgi?id=137730\n\nTo illustrate, the following example should render a 200px by 200px green box\n(the container) with a yellow box inside of it (the child item).  The child\nitem's height and width are both set to `'50%'` so the child should render\nexactly 100px by 100px in size.\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        renderTo: Ext.getBody(),\n        height: 200,\n        width: 200,\n        style: 'background: green',\n        items: [{\n            xtype: 'component',\n            style: 'background: yellow',\n            height: '50%',\n            width: '50%'\n        }]\n    });\n\nAll browsers except for Safari render the previous example correctly, but\nSafari does not assign a height to the component.  To make percentage-sized\nitems work in Safari, simply set `{@link #cfg!autoSize autoSize}` to `false` on the container.\n\nSince the underlying implementation works by absolutely positioning the container's\nbody element, this option can only be used when the container is not\n\"shrink wrapping\" the content in either direction.  When `{@link #cfg!autoSize autoSize}` is\nset to `false`, shrink wrapped dimension(s) will collapse to 0.\n","type":"Boolean","value":"true","src":{"accessor":"411,214,0","name":"411,159,28","text":"411,160,12,2151","type":"411,159,18","value":"411,159,37"}},{"$type":"property","accessor":true,"name":"bodyCls","since":"7.0","text":"The CSS class to add to this container's body element.\n","type":"String/String[]","value":"null","src":{"accessor":"411,221,0","name":"411,217,35","since":"411,219,19","text":"411,218,12,55","type":"411,217,18","value":"411,221,0"}},{"$type":"property","name":"cardSwitchAnimation","removedMessage":"Please use {@link Ext.layout.Card#animation} instead\n","removedVersion":"2.0.0","text":"Animation to be used during transitions of cards.\n","type":"String/Object/Boolean","src":{"name":"411,224,41","removedMessage":"411,226,12","removedVersion":"411,226,12","text":"411,225,12,50","type":"411,224,18"}},{"$type":"property","accessor":true,"name":"control","text":"Enables you to easily control Components inside this Container by\nlistening to their events and taking some action. For example, if we had a container with\na nested Disable button, and we wanted to hide the Container when the Disable button is\ntapped, we could do this:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        control: {\n           'button[text=Disable]': {\n               tap: 'hideMe'\n           }\n        },\n\n        hideMe: function() {\n            this.hide();\n        }\n    });\n\nWe used a {@link Ext.ComponentQuery} selector to listen to the {@link Ext.Button#tap tap}\nevent on any {@link Ext.Button button} anywhere inside the Container that has the\n{@link Ext.Button#text text} 'Disable'. Whenever a Component matching that selector\nfires the `tap` event our `hideMe` function is called. `hideMe` is called with scope:\n`this` (e.g. `this` is the Container instance).\n","type":"Object","value":"null","src":{"accessor":"411,288,0","name":"411,262,26","text":"411,262,34,66:411,263,12,837","type":"411,262,18","value":"411,288,0"}},{"$type":"property","accessor":true,"name":"defaultFocus","text":"\nSpecifies a child Component to receive focus when this Container's {@link #method-focus}\nmethod is called. Should be a valid {@link Ext.ComponentQuery query} selector.\n","type":"String","value":"null","src":{"accessor":"411,376,0","name":"411,371,26","text":"411,372,12,169","type":"411,371,18","value":"411,377,0"}},{"$type":"property","accessor":true,"name":"defaults","text":"A set of default configurations to apply to all child Components\nin this Container. It's often useful to specify defaults when creating more than one\nitems with similar configurations. For example here we can specify that each child is a\npanel and avoid repeating the xtype declaration for each one:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        defaults: {\n            xtype: 'panel'\n        },\n        items: [\n            {\n                html: 'Panel 1'\n            },\n            {\n                html: 'Panel 2'\n            }\n        ]\n    });\n","type":"Object","value":"null","src":{"accessor":"411,312,12","name":"411,291,26","text":"411,291,35,65:411,292,12,509","type":"411,291,18","value":"411,314,0"}},{"$type":"property","accessor":true,"name":"defaultType","optional":true,"text":"The default {@link Ext.Component xtype} of child Components to create in this Container\nwhen a child item is specified as a raw configuration object, rather than as an\ninstantiated Component.\n","type":"String","value":"container","src":{"accessor":"411,366,12","name":"411,362,27","text":"411,363,12,192","type":"411,362,18","value":"411,362,39"}},{"$type":"property","accessor":true,"name":"innerCls","since":"6.5.0","text":"A string to add to the immediate parent element of the inner items of this\ncontainer. That is, items that are not `{@link #cfg!docked docked}`, `{@link #property!positioned positioned}` or `{@link #cfg!floated floated}`. In\nsome containers, `{@link #property!positioned positioned}` items may be in this same element.\n","type":"String","value":"null","src":{"accessor":"411,388,0","name":"411,382,26","since":"411,386,19","text":"411,383,12,219","type":"411,382,18","value":"411,388,0"}},{"$type":"property","accessor":true,"name":"items","text":"The child items to add to this Container. This is usually an\narray of Component configurations or instances, for example:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        items: [{\n            xtype: 'panel',\n            html: 'This is an item'\n        }]\n    });\n\nThis may also be specified as an object, the property names of which are `{@link #cfg!itemId itemId}`s, and\nthe property values are child Component config objects, for example:\n\n    @example\n    Ext.create({\n        xtype: 'tabpanel',\n        items: {\n            panel1: {\n                xtype: 'panel',\n                title: 'First panel'\n            },\n            panel2: {\n                xtype: 'panel',\n                title: 'Second panel'\n            }\n        }\n    });\n","type":"Array/Object","value":"null","src":{"accessor":"411,349,12","name":"411,319,32","text":"411,319,38,61:411,320,12,685","type":"411,319,18","value":"411,351,0"}},{"$type":"property","accessor":true,"name":"layout","text":"Configuration for this Container's layout. Example:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        layout: {\n            type: 'hbox',\n            align: 'middle'\n        },\n        items: [{\n            xtype: 'panel',\n            flex: 1,\n            bodyStyle: {\n                background: \"#000\",\n                color:\"#fff\"\n            }\n        }, {\n           xtype: 'panel',\n           flex: 2,\n           bodyStyle: {\n               background: \"#f00\",\n               color:\"#fff\"\n           }\n        }]\n    });\n","type":"Object/String","value":"'auto'","src":{"accessor":"411,257,12","name":"411,231,33","text":"411,231,40,52:411,232,12,493","type":"411,231,18","value":"411,259,0"}},{"$type":"property","access":"protected","name":"manageBorders","text":"`true` to enable border management of docked items.  When enabled, borders of docked\nitems will collapse where they meet to avoid duplicated borders.\n","type":"Boolean","value":"false","src":{"access":"411,449,8","name":"411,453,0","text":"411,450,8,150","type":"411,448,14","value":"411,453,0"}},{"$type":"property","accessor":true,"name":"masked","text":"A configuration to allow you to mask this container.\n\nIf the value is a string, it will be used as the message config for an\n{@link Ext.LoadMask}.\n\nFor more precise control over the mask, you can optionally pass an object block with\nand xtype of `loadmask`, and an optional `message` value to display a loading mask.\nPlease refer to the {@link Ext.LoadMask} component to see other configurations.\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        fullscreen: true,\n        html: 'Hello World',\n        masked: {\n            xtype: 'loadmask',\n            message: 'My Message'\n        }\n    });\n\nAlternatively, you can just call the setter at any time with `true`/`false` to show/hide\nthe mask:\n\n    setMasked(true); //show the mask\n    setMasked(false); //hides the mask\n\nThere are also two convenient methods, {@link #method-mask} and {@link #unmask}, to allow\nyou to mask and unmask this container at any time.\n\nRemember, the {@link Ext.Viewport} is always a container, so if you want to mask your\nwhole application at anytime, can call:\n\n    Ext.Viewport.setMasked({\n        xtype: 'loadmask',\n        message: 'Hello'\n    });\n","type":"Boolean/String/Object/Ext.Mask/Ext.LoadMask","value":"null","src":{"accessor":"411,430,12","name":"411,392,63","text":"411,393,12,1149","type":"411,392,18","value":"411,432,0"}},{"$type":"property","name":"weighted","optional":true,"text":"If set to `true`, then child {@link #cfg!items} may be specified as a object,\nwith each property name specifying an {@link #cfg!itemId}, and the property\nvalue being the child item configuration object.\n\nWhen using this scheme, each child item may contain a {@link #cfg!weight}\nconfiguration value which affects its order in this container. Lower weights\nare towards the start, higher weights towards the end.\n","type":"Boolean","value":"false","src":{"name":"411,436,24","text":"411,437,8,410","type":"411,436,14","value":"411,436,33"}}]},{"$type":"events","items":[{"$type":"event","name":"activate","text":"Fires whenever item within the Container is activated.\n","items":[{"$type":"param","name":"newActiveItem","text":"The new active item within the container.\n","type":"Object","src":{"name":"411,128,24","text":"411,128,38,42","type":"411,128,16"}},{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,129,31","text":"411,129,36,24","type":"411,129,16"}},{"$type":"param","name":"oldActiveItem","text":"The old active item within the container.\n","type":"Object","src":{"name":"411,130,24","text":"411,130,38,42","type":"411,130,16"}}],"src":{"name":"411,126,15","text":"411,127,8,55"}},{"$type":"event","name":"add","text":"Fires whenever item added to the Container.\n","items":[{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,93,31","text":"411,93,36,24","type":"411,93,16"}},{"$type":"param","name":"item","text":"The item added to the Container.\n","type":"Object","src":{"name":"411,94,24","text":"411,94,29,33","type":"411,94,16"}},{"$type":"param","name":"index","text":"The index of the item within the Container.\n","type":"Number","src":{"name":"411,95,24","text":"411,95,30,44","type":"411,95,16"}}],"src":{"name":"411,91,15","text":"411,92,8,44"}},{"$type":"event","name":"deactivate","text":"Fires whenever item within the Container is deactivated.\n","items":[{"$type":"param","name":"oldActiveItem","text":"The old active item within the container.\n","type":"Object","src":{"name":"411,136,24","text":"411,136,38,42","type":"411,136,16"}},{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,137,31","text":"411,137,36,24","type":"411,137,16"}},{"$type":"param","name":"newActiveItem","text":"The new active item within the container.\n","type":"Object","src":{"name":"411,138,24","text":"411,138,38,42","type":"411,138,16"}}],"src":{"name":"411,134,15","text":"411,135,8,57"}},{"$type":"event","name":"move","text":"Fires whenever item moved within the Container.\n","items":[{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,109,31","text":"411,109,36,24","type":"411,109,16"}},{"$type":"param","name":"item","text":"The item moved within the Container.\n","type":"Object","src":{"name":"411,110,24","text":"411,110,29,37","type":"411,110,16"}},{"$type":"param","name":"toIndex","text":"The new index of the item.\n","type":"Number","src":{"name":"411,111,24","text":"411,111,32,27","type":"411,111,16"}},{"$type":"param","name":"fromIndex","text":"The old index of the item.\n","type":"Number","src":{"name":"411,112,24","text":"411,112,34,27","type":"411,112,16"}}],"src":{"name":"411,107,15","text":"411,108,8,48"}},{"$type":"event","name":"remove","text":"Fires whenever item removed from the Container.\n","items":[{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,101,31","text":"411,101,36,24","type":"411,101,16"}},{"$type":"param","name":"item","text":"The item removed from the Container.\n","type":"Object","src":{"name":"411,102,24","text":"411,102,29,37","type":"411,102,16"}},{"$type":"param","name":"index","text":"The index of the item that was removed.\n","type":"Number","src":{"name":"411,103,24","text":"411,103,30,40","type":"411,103,16"}}],"src":{"name":"411,99,15","text":"411,100,8,48"}},{"$type":"event","access":"private","name":"renderedchange","text":"Fires whenever an item is rendered into a container or derendered\nfrom a Container.\n","items":[{"$type":"param","name":"this","text":"The Container instance.\n","type":"Ext.Container","src":{"name":"411,120,31","text":"411,120,36,24","type":"411,120,16"}},{"$type":"param","name":"item","text":"The item in the Container.\n","type":"Object","src":{"name":"411,121,24","text":"411,121,29,27","type":"411,121,16"}},{"$type":"param","name":"rendered","text":"The current rendered status of the item.\n","type":"Boolean","src":{"name":"411,122,25","text":"411,122,34,41","type":"411,122,16"}}],"src":{"access":"411,116,8","name":"411,117,15","text":"411,118,8,84"}},{"$type":"event","name":"beforeactiveItemchange","text":"This event fires when `{@link #cfg!activeItem activeItem}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Container"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!activeItem activeItem}`.","type":"Ext.Component/Object/String/Number","src":{"type":"411,143,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!activeItem activeItem}`.","type":"Ext.Component/Object/String/Number","src":{"type":"411,143,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"activeItemchange","text":"This event fires when `{@link #cfg!activeItem activeItem}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Container"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!activeItem activeItem}`.","type":"Ext.Component/Object/String/Number","src":{"type":"411,143,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!activeItem activeItem}`.","type":"Ext.Component/Object/String/Number","src":{"type":"411,143,18"}}]}]},{"$type":"methods","items":[{"$type":"method","name":"add","text":"Adds one or more Components to this Container. Example:\n\n    var myPanel = Ext.create({\n        xtype: 'panel',\n        html : 'This will be added to a Container'\n    });\n\n    var items = myContainer.add([myPanel]); // Array returned\n    var item  = myContainer.add(myPanel);   // One item is returned\n","items":[{"$type":"param","name":"newItems","text":"The new item(s) to add\nto the Container. Note that if an array of items to add was passed in, an array of added\nitems will be returned as well even if there was only one item.\n","type":"Object/Object[]/Ext.Component/Ext.Component[]","src":{"name":"411,799,63","text":"411,799,72,23:411,800,8,154","type":"411,799,16"}},{"$type":"return","text":"The Component(s) that were added.\n","type":"Ext.Component/Ext.Component[]","src":{"text":"411,803,48,34","type":"411,803,17"}}],"src":{"name":"411,805,0","text":"411,789,8,303"}},{"$type":"method","name":"animateActiveItem","text":"Animates to the supplied `{@link #cfg!activeItem activeItem}` with a specified animation. Currently this only works\nwith a Card layout.  This passed animation will override any default animations on the\ncontainer, for a single card switch. The animation will be destroyed when complete.\n","items":[{"$type":"param","name":"activeItem","text":"The item or item index to make active.\n","type":"Object/Number","src":{"name":"411,1570,31","text":"411,1570,42,39","type":"411,1570,16"}},{"$type":"param","name":"animation","text":"Card animation configuration or\ninstance.\n","type":"Object/Ext.layout.card.fx.Abstract","src":{"name":"411,1571,52","text":"411,1571,62,32:411,1572,8,10","type":"411,1571,16"}}],"src":{"name":"411,1574,0","text":"411,1567,8,263"}},{"$type":"method","access":"private","name":"applyActiveItem","items":[{"$type":"param","name":"activeItem","src":{"name":"411,1502,0"}},{"$type":"param","name":"currentActiveItem","src":{"name":"411,1502,0"}},{"$type":"return","type":"Number","src":{"type":"411,1518,0"}}],"src":{"access":"411,1500,8","name":"411,1502,0"}},{"$type":"method","access":"private","name":"applyControl","items":[{"$type":"param","name":"selectors","src":{"name":"411,631,0"}}],"src":{"access":"411,629,8","name":"411,631,0"}},{"$type":"method","access":"private","name":"applyItemDefaults","text":"Applies the container's {@link #defaults} onto a child item. The item\ncan be a config object or an instance but has to be an inner item.\n","items":[{"$type":"param","name":"item","text":"The item to apply the defaults to.\n","type":"Object/Ext.Component","src":{"name":"411,1871,42","text":"411,1871,47,35","type":"411,1871,20"}},{"$type":"return","text":"The item that was passed in\n","type":"Object/Ext.Component","src":{"text":"411,1872,43,28","type":"411,1872,21"}}],"src":{"access":"411,1841,-1","name":"411,1874,0","text":"411,1869,12,137"}},{"$type":"method","name":"applyMasked","text":"Changes the {@link #masked} configuration when its setter is called, which will convert the\nvalue into a proper object/instance of {@link Ext.Mask}/{@link Ext.LoadMask}. If a mask\nalready exists, it will use that instead.\n","items":[{"$type":"param","name":"masked","type":"Boolean/Object/String/Ext.Mask/Ext.LoadMask","src":{"name":"411,499,61","type":"411,499,16"}},{"$type":"return","type":"Object","src":{"type":"411,500,17"}}],"src":{"name":"411,502,0","text":"411,496,8,222"}},{"$type":"method","access":"private","name":"doAdd","items":[{"$type":"param","name":"item","type":"Ext.Component","src":{"name":"411,893,31","type":"411,893,16"}},{"$type":"param","name":"instanced","text":"when received.\n","type":"Boolean","src":{"name":"411,894,25","text":"411,895,8,15","type":"411,894,16"}}],"src":{"access":"411,892,8","name":"411,897,0"}},{"$type":"method","access":"private","name":"doInsert","items":[{"$type":"param","name":"index","type":"Number","src":{"name":"411,1258,24","type":"411,1258,16"}},{"$type":"param","name":"item","type":"Ext.Component","src":{"name":"411,1259,31","type":"411,1259,16"}},{"$type":"param","name":"instanced","type":"Boolean","src":{"name":"411,1260,25","type":"411,1260,16"}}],"src":{"access":"411,1257,8","name":"411,1262,0"}},{"$type":"method","access":"protected","name":"factoryItem","text":"Called when an item is added to this container either during initialization of the\n{@link #cfg-items} config, or when new items are {@link #method-add added), or\n{@link #method-insert inserted}.\n\nIf the passed object is *not* an instanced component, it converts the passed object into an\ninstanced child component.\n\nIt applies {@link #cfg-defaults} applied for contained child items - that is items\nwhich are not positiond using {@link Ext.Component#cfg-left left},\n{@link Ext.Component#cfg-top top}, {@link Ext.Component#cfg-bottom bottom},\n{@link Ext.Component#cfg-right right}, {@link Ext.Component#cfg-centered centered} or\n{@link Ext.Component#cfg-docked docked}.\n\nDerived classes can override this method to process context appropriate short-hands\nsuch as {@link Ext.Toolbar} and \"->\" to insert a spacer.\n","items":[{"$type":"param","name":"item","text":"The item being added. May be a raw config object or an instanced\nComponent or some other short-hand understood by the container.\n","type":"Mixed","src":{"name":"411,756,23","text":"411,756,28,65:411,757,8,64","type":"411,756,16"}},{"$type":"return","text":"The component to be added.\n","type":"Ext.Component","src":{"text":"411,758,32,27","type":"411,758,17"}}],"src":{"access":"411,759,8","name":"411,761,0","text":"411,740,8,812"}},{"$type":"method","name":"findDefaultFocus","text":"Finds the configured default focus item. See {@link #cfg!defaultFocus}.\n","src":{"name":"411,1762,0","text":"411,1760,8,72"}},{"$type":"method","name":"getAt","text":"Returns the Component for a given index in the Container's {@link #property-items}.\n","items":[{"$type":"param","name":"index","text":"The index of the Component to return.\n","type":"Number","src":{"name":"411,1088,24","text":"411,1088,30,38","type":"411,1088,16"}},{"$type":"return","text":"The item at the specified `index`, if found.\n","type":"Ext.Component","src":{"text":"411,1089,32,45","type":"411,1089,17"}}],"src":{"name":"411,1091,0","text":"411,1087,8,84"}},{"$type":"method","name":"getComponent","text":"Examines this container's `{@link #property-items}` property\nand gets a direct child component of this container.\n","items":[{"$type":"param","name":"component","text":"This parameter may be any of the following:\n\n- {String} : representing the `{@link #cfg!itemId itemId}`\nor `{@link Ext.Component#getId id}` of the child component.\n- {Number} : representing the position of the child component\nwithin the `{@link #property-items}` property.\n\nFor additional information see {@link Ext.util.MixedCollection#get}.\n","type":"String/Number","src":{"name":"411,1661,31","text":"411,1661,41,44:411,1662,8,279","type":"411,1661,16"}},{"$type":"return","text":"The component (if found).\n","type":"Ext.Component","src":{"text":"411,1669,32,26","type":"411,1669,17"}}],"src":{"name":"411,1671,0","text":"411,1659,8,114"}},{"$type":"method","name":"getDockedComponent","text":"Finds a docked item of this container using a reference, `id `or an `index` of its location\nin {@link #getDockedItems}.\n","items":[{"$type":"param","name":"component","text":"The `{@link #cfg!id id}` or `index` of the component to find.\n","type":"String/Number","src":{"name":"411,1686,31","text":"411,1686,41,46","type":"411,1686,16"}},{"$type":"return","text":"The docked component, if found.\n","type":"Ext.Component/Boolean","src":{"text":"411,1687,40,32","type":"411,1687,17"}}],"src":{"name":"411,1689,0","text":"411,1684,8,120"}},{"$type":"method","name":"getDockedItems","text":"Returns all the {@link Ext.Component#docked} items in this container.\n","items":[{"$type":"return","text":"The docked items of this container.\n","type":"Array","src":{"text":"411,1480,24,36","type":"411,1480,17"}}],"src":{"name":"411,1482,0","text":"411,1479,8,70"}},{"$type":"method","access":"private","disable":"2125","name":"getFirstReferences","text":"This method is in place on the instance during construction to ensure that any\n{@link #lookup} or {@link #getReferences} calls have the {@links} initialized\nprior to the lookup.\n","src":{"access":"411,1846,12","disable":"411,1854,0","name":"411,1848,0","text":"411,1843,12,178"}},{"$type":"method","access":"protected","name":"getFocusEl","text":"Returns the focus holder element associated with this Container.\nBy default, this is the Container's {@link #focusEl} element;\nhowever if {@link #cfg!defaultFocus} is defined, the child component\nreferenced by that property will be found and returned instead.\n","items":[{"$type":"return","text":"the focus holding element.\n","type":"Ext.dom.Element","src":{"text":"411,1743,34,27","type":"411,1743,17"}}],"src":{"access":"411,1737,8","name":"411,1745,0","text":"411,1738,8,261"}},{"$type":"method","name":"getInnerItems","text":"Returns all inner {@link #property-items} of this container. `inner` means that the item is\nnot `{@link #cfg!docked docked}` or `{@link #property!positioned positioned}`.\n","items":[{"$type":"return","text":"The inner items of this container.\n","type":"Array","src":{"text":"411,1472,24,35","type":"411,1472,17"}}],"src":{"name":"411,1474,0","text":"411,1470,8,122"}},{"$type":"method","access":"private","name":"getMaxHeightElement","text":"In IE11 vertically flexed elements (such as container body-el or panel body-wrap-el)\nare not flexed properly when the container has a max-height, but no height.\nWe can workaround the issue by wrapping the vertical box in a horizontal box.\nSee EXTJS-24498\n","src":{"access":"411,1927,12","name":"411,1933,0","text":"411,1928,12,255"}},{"$type":"method","access":"private","name":"getPositionedItemTarget","since":"6.5.0","text":"Similar to `{@link #method!getRenderTarget getRenderTarget}` but for `{@link #property!positioned positioned}` items.\n","items":[{"$type":"param","name":"item","text":"The positioned item being added.\n","type":"Ext.Component","src":{"name":"411,1859,35","text":"411,1859,40,33","type":"411,1859,20"}},{"$type":"return","type":"Ext.dom.Element","src":{"type":"411,1860,21"}}],"src":{"access":"411,1861,12","name":"411,1864,0","since":"411,1862,19","text":"411,1858,12,57"}},{"$type":"method","access":"private","name":"getRefItems","text":"Used by ComponentQuery to retrieve all of the items\nwhich can potentially be considered a child of this Container.\nThis should be overridden by components which have child items\nthat are not contained in items. For example `dockedItems`, `menu`, etc\n","items":[{"$type":"param","name":"deep","src":{"name":"411,1629,0"}}],"src":{"access":"411,1627,8","name":"411,1629,0","text":"411,1623,8,250"}},{"$type":"method","access":"private","name":"has","items":[{"$type":"param","name":"item","src":{"name":"411,1142,0"}}],"src":{"access":"411,1140,8","name":"411,1142,0"}},{"$type":"method","access":"private","name":"hasInnerItem","items":[{"$type":"param","name":"item","src":{"name":"411,1149,0"}}],"src":{"access":"411,1147,8","name":"411,1149,0"}},{"$type":"method","access":"private","name":"indexOf","items":[{"$type":"param","name":"item","src":{"name":"411,1156,0"}}],"src":{"access":"411,1154,8","name":"411,1156,0"}},{"$type":"method","chainable":true,"name":"insert","text":"Adds a child Component at the given index. For example, here's how we can add a new item,\nmaking it the first child Component of this Container:\n\n    myContainer.insert(0, {xtype: 'panel', html: 'new item'});\n","items":[{"$type":"param","name":"index","text":"The index to insert the Component at.\n","type":"Number","src":{"name":"411,1221,24","text":"411,1221,30,38","type":"411,1221,16"}},{"$type":"param","name":"item","text":"The Component to insert.\n","type":"Object","src":{"name":"411,1222,24","text":"411,1222,29,25","type":"411,1222,16"}},{"$type":"return","name":"this","src":{"name":"411,1240,0"}}],"src":{"chainable":"411,1240,0","name":"411,1224,0","text":"411,1216,8,210"}},{"$type":"method","access":"private","chainable":true,"name":"insertAfter","items":[{"$type":"param","name":"item","src":{"name":"411,1350,0"}},{"$type":"param","name":"relativeToItem","src":{"name":"411,1350,0"}},{"$type":"return","name":"this","src":{"name":"411,1358,0"}}],"src":{"access":"411,1348,8","chainable":"411,1358,0","name":"411,1350,0"}},{"$type":"method","access":"private","name":"insertBefore","items":[{"$type":"param","name":"item","src":{"name":"411,1319,0"}},{"$type":"param","name":"relativeToItem","src":{"name":"411,1319,0"}}],"src":{"access":"411,1317,8","name":"411,1319,0"}},{"$type":"method","access":"private","name":"insertFirst","items":[{"$type":"param","name":"item","src":{"name":"411,1305,0"}}],"src":{"access":"411,1303,8","name":"411,1305,0"}},{"$type":"method","access":"private","chainable":true,"name":"insertInner","items":[{"$type":"param","name":"item","type":"Ext.Component","src":{"name":"411,1166,31","type":"411,1166,16"}},{"$type":"param","name":"index","type":"Number","src":{"name":"411,1167,24","type":"411,1167,16"}},{"$type":"return","name":"this","src":{"name":"411,1200,0"}}],"src":{"access":"411,1165,8","chainable":"411,1200,0","name":"411,1169,0"}},{"$type":"method","access":"private","name":"insertLast","items":[{"$type":"param","name":"item","src":{"name":"411,1312,0"}}],"src":{"access":"411,1310,8","name":"411,1312,0"}},{"$type":"method","name":"mask","text":"Convenience method which calls {@link #setMasked} with a value of `true` (to show the mask).\nFor additional functionality, call the {@link #setMasked} function direction (See the\n{@link #masked} configuration documentation for more information).\n","items":[{"$type":"param","name":"mask","src":{"name":"411,542,0"}}],"src":{"name":"411,542,0","text":"411,538,8,246"}},{"$type":"method","access":"private","disable":"2125","name":"onFirstItemAdd","text":"Initialize layout and event listeners the very first time an item is added\n","items":[{"$type":"param","name":"item","src":{"name":"411,680,0"}}],"src":{"access":"411,678,8","disable":"411,690,0","name":"411,680,0","text":"411,677,8,75"}},{"$type":"method","access":"private","fires":"add","name":"onItemAdd","items":[{"$type":"param","name":"item","src":{"name":"411,1364,0"}},{"$type":"param","name":"index","src":{"name":"411,1364,0"}}],"src":{"access":"411,1362,8","fires":"411,1375,0","name":"411,1364,0"}},{"$type":"method","access":"private","fires":"move","name":"onItemMove","items":[{"$type":"param","name":"item","src":{"name":"411,1432,0"}},{"$type":"param","name":"toIndex","src":{"name":"411,1432,0"}},{"$type":"param","name":"fromIndex","src":{"name":"411,1432,0"}}],"src":{"access":"411,1430,8","fires":"411,1442,0","name":"411,1432,0"}},{"$type":"method","access":"private","fires":"remove","name":"onItemRemove","items":[{"$type":"param","name":"item","src":{"name":"411,1398,0"}},{"$type":"param","name":"index","src":{"name":"411,1398,0"}},{"$type":"param","name":"destroying","src":{"name":"411,1398,0"}}],"src":{"access":"411,1396,8","fires":"411,1408,0","name":"411,1398,0"}},{"$type":"method","name":"remove","text":"Removes an item from this Container, optionally destroying it.\n","items":[{"$type":"param","name":"which","text":"The component instance, id or\nindex to remove or an array of these.\n","type":"Ext.Component/String/Number/Array","src":{"name":"411,922,51","text":"411,922,57,30:411,923,8,38","type":"411,922,16"}},{"$type":"param","name":"destroy","optional":true,"text":"`true` to automatically call Component's\n{@link Ext.Component#method-destroy destroy} method.\n","type":"Boolean","src":{"name":"411,924,26","text":"411,924,35,41:411,925,8,54","type":"411,924,16"}},{"$type":"return","text":"The Component that was removed.\n","type":"Ext.Component","src":{"text":"411,927,32,32","type":"411,927,17"}}],"src":{"name":"411,929,0","text":"411,921,8,63"}},{"$type":"method","name":"removeAll","text":"Removes all items currently in the Container, optionally destroying them all.\n","items":[{"$type":"param","name":"destroy","optional":true,"text":"Pass `true` to {@link Ext.Component#method!destroy destroy}\neach removed Component. Defaults to `{@link #cfg!autoDestroy autoDestroy}`.\n","type":"Boolean","src":{"name":"411,1035,26","text":"411,1035,35,60:411,1036,8,51","type":"411,1035,16"}},{"$type":"param","name":"everything","optional":true,"text":"Pass `true` to completely remove all items including\ndocked, floated and positioned items.\n","type":"Boolean","src":{"name":"411,1037,26","text":"411,1037,38,53:411,1038,8,39","type":"411,1037,16"}},{"$type":"return","text":"The removed components\n","type":"Ext.Component[]","src":{"text":"411,1040,34,23","type":"411,1040,17"}}],"src":{"name":"411,1042,0","text":"411,1033,8,79"}},{"$type":"method","name":"removeAt","text":"Removes the Component at the specified index:\n\n    myContainer.removeAt(0); // removes the first item\n","items":[{"$type":"param","name":"index","text":"The index of the Component to remove.\n","type":"Number","src":{"name":"411,1104,24","text":"411,1104,30,38","type":"411,1104,16"}},{"$type":"param","name":"destroy","optional":true,"text":"`true` to automatically call Component's\n{@link Ext.Component#method-destroy destroy} method.\n","type":"Boolean","src":{"name":"411,1106,26","text":"411,1106,35,41:411,1107,8,54","type":"411,1106,16"}},{"$type":"return","text":"The removed Component\n","type":"Ext.Component","src":{"text":"411,1109,32,22","type":"411,1109,17"}}],"src":{"name":"411,1111,0","text":"411,1100,8,103"}},{"$type":"method","access":"private","chainable":true,"name":"removeInner","items":[{"$type":"param","name":"item","type":"Ext.Component","src":{"name":"411,1207,31","type":"411,1207,16"}},{"$type":"return","name":"this","src":{"name":"411,1212,0"}}],"src":{"access":"411,1206,8","chainable":"411,1212,0","name":"411,1209,0"}},{"$type":"method","name":"removeInnerAt","text":"Removes an inner Component at the specified index:\n\n    myContainer.removeInnerAt(0); // removes the first item of the innerItems property\n","items":[{"$type":"param","name":"index","text":"The index of the Component to remove.\n","type":"Number","src":{"name":"411,1126,24","text":"411,1126,30,38","type":"411,1126,16"}},{"$type":"return","text":"The removed Component\n","type":"Ext.Component","src":{"text":"411,1127,32,22","type":"411,1127,17"}}],"src":{"name":"411,1129,0","text":"411,1122,8,140"}},{"$type":"method","name":"unmask","text":"Convenience method which calls {@link #setMasked} with a value of false (to hide the mask).\nFor additional functionality, call the {@link #setMasked} function direction (See the\n{@link #masked} configuration documentation for more information).\n","src":{"name":"411,551,0","text":"411,547,8,245"}}]}],"src":{"alias":"411,74,0","alternateClassNames":"411,68,0:411,68,0","extends":"411,66,0","mixins":"411,78,0:411,79,0:411,80,0","name":"411,65,0","requires":"411,71,0","text":"411,2,4,2882","uses":"411,87,0"},"group":"Container","displayName":"Container"},{"$type":"class","access":"private","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.dataview.DataView,Ext.dataview.Component","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.ItemRippler,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","mixins":"Ext.mixin.ConfigProxy,Ext.mixin.ItemRippler","name":"Ext.dataview.Abstract","requires":"Ext.LoadMask,Ext.XTemplate,Ext.data.StoreManager,Ext.dataview.NavigationModel,Ext.dataview.selection.Model,Ext.dataview.EmptyText","since":"6.5.0","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"associatedData","optional":true,"since":"6.5.0","text":"Set this config to `false` to limit rendering data to just the record's data\nor to an object to describe the desired associated data. This data is used to\nsatisfy the `{@link #cfg!itemTpl itemTpl}`. The default of `true` will gather all associated data\nthat is currently loaded. This can be expensive. If only a small amount of the\navailable data is needed, this config can speed up the rendering process.\n\nFor example, if an `OrderItem` needs the `Item` data but not its parent `Order`,\nthis config can be set like so:\n\n     associatedData: {\n         item: true\n     }\n\nGiven the above, only the `item` association (to the `Item` record) will be\ngathered into the render data.\n\nFor more details, see {@link Ext.data.Model#getData getData}.\n","type":"Boolean/Object","value":"true","src":{"accessor":"440,249,0","name":"440,229,35","since":"440,247,19","text":"440,230,12,721","type":"440,229,18","value":"440,229,50"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"autoSize","text":"May be set to `false` for improved layout performance if auto-sizing is not required.\n\nSome versions of Safari, both desktop and mobile, have very slow performance\nif the application has deeply nested containers due to the following WebKit\nbug: https://bugs.webkit.org/show_bug.cgi?id=150445\n\nApplications that experience performance issues in the affected versions of\nSafari may need to turn off autoSizing globally for all `{@link Ext.Container}` instances\nby placing the following override in the application's \"overrides\" directory:\n\n    Ext.define('MyApp.overrides.Container', {\n        override: 'Ext.Container',\n        config: {\n            autoSize: false\n        }\n    });\n\nOnce auto-sizing support has turned off by default, it can be selectively\nturned back on only on those container instances that explicitly need auto-sizing\nbehavior by setting `{@link #cfg!autoSize autoSize}` to `true`.\n\nThis option can also be used to allow items to be sized in percentage\nunits as a workaround for the following browser bug:\nhttps://bugs.webkit.org/show_bug.cgi?id=137730\n\nTo illustrate, the following example should render a 200px by 200px green box\n(the container) with a yellow box inside of it (the child item).  The child\nitem's height and width are both set to `'50%'` so the child should render\nexactly 100px by 100px in size.\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        renderTo: Ext.getBody(),\n        height: 200,\n        width: 200,\n        style: 'background: green',\n        items: [{\n            xtype: 'component',\n            style: 'background: yellow',\n            height: '50%',\n            width: '50%'\n        }]\n    });\n\nAll browsers except for Safari render the previous example correctly, but\nSafari does not assign a height to the component.  To make percentage-sized\nitems work in Safari, simply set `{@link #cfg!autoSize autoSize}` to `false` on the container.\n\nSince the underlying implementation works by absolutely positioning the container's\nbody element, this option can only be used when the container is not\n\"shrink wrapping\" the content in either direction.  When `{@link #cfg!autoSize autoSize}` is\nset to `false`, shrink wrapped dimension(s) will collapse to 0.\n","type":"Boolean","value":"null","src":{"accessor":"411,214,0","inheritdoc":"440,486,8","name":"440,485,13","text":"411,160,12,2151","type":"411,159,18","value":"440,488,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"data","text":"The initial set of data to apply to the `{@link #tpl}` to\nupdate the content area of the Component.\n\n**Note:** Data will be appended to any existing data.\n","type":"Object","value":"null","src":{"accessor":"440,398,0","inheritdoc":"440,396,12","name":"440,395,17","text":"410,569,12,156","type":"410,568,18","value":"440,398,0"}},{"$type":"property","accessor":true,"name":"deferEmptyText","text":"Set to `false` to not defer `{@link #cfg!emptyText emptyText}` being applied until the store's first\nload.\n","type":"Boolean","value":"true","src":{"accessor":"440,256,0","name":"440,252,27","text":"440,253,12,84","type":"440,252,18","value":"440,256,0"}},{"$type":"property","accessor":true,"name":"deselectOnContainerClick","text":"When set to true, tapping on the DataView's background (i.e. not on\nan item in the DataView) will deselect any currently selected items.\n","type":"Boolean","value":"true","src":{"accessor":"440,263,0","name":"440,259,27","text":"440,260,12,137","type":"440,259,18","value":"440,263,0"}},{"$type":"property","accessor":true,"name":"disableSelection","text":"Set to `true` to disable selection styling. This only affects the presentation\nof the selection not the internal selection state.\n","type":"Boolean","value":"false","src":{"accessor":"440,270,0","name":"440,266,27","text":"440,267,12,130","type":"440,266,18","value":"440,270,0"}},{"$type":"property","accessor":true,"name":"emptyItemText","text":"The text to render when the rendering of the item via `{@link #cfg!itemTpl itemTpl}` produces no\ntext.\n","type":"String","value":"'\\xa0'","src":{"accessor":"440,286,0","name":"440,286,0","text":"440,283,12,82","type":"440,282,18","value":"440,286,0"}},{"$type":"property","access":"private","accessor":true,"name":"emptyState","type":"Boolean","value":"null","src":{"access":"440,402,12","accessor":"440,404,0","name":"440,401,27","type":"440,401,18","value":"440,404,0"}},{"$type":"property","accessor":true,"name":"emptyText","text":"The text to display in the view when there is no data to display.\nSet this to `true` to display the default message.\n","type":"String/Boolean","value":"null","src":{"accessor":"440,411,0","name":"440,407,34","text":"440,408,12,117","type":"440,407,18","value":"440,411,0"}},{"$type":"property","accessor":true,"name":"emptyTextDefaults","since":"6.5.0","text":"This component config object is used to create the `{@link #cfg!emptyText emptyText}` component.\n","type":"Object/Ext.Component","value":"{\n    xtype: 'emptytext'\n}","src":{"accessor":"440,277,0","name":"440,273,40","since":"440,275,19","text":"440,274,12,74","type":"440,273,18","value":"440,277,0"}},{"$type":"property","name":"emptyTextProperty","since":"6.5.0","text":"The config to set on the `{@link #cfg!emptyText emptyText}` component to contain the desired text.\n","type":"String","value":"'html'","src":{"name":"440,571,22","since":"440,573,15","text":"440,572,8,76","type":"440,571,14","value":"440,575,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Use {@link Ext.Component#userSelectable} instead.\n","deprecatedVersion":"6.5.1","name":"enableTextSelection","text":"True to enable text selection inside this view.\n","type":"Boolean","value":"null","src":{"accessor":"440,419,0","deprecatedMessage":"440,417,12","deprecatedVersion":"440,417,12","name":"440,414,27","text":"440,415,12,49","type":"440,414,18","value":"440,419,0"}},{"$type":"property","accessor":true,"name":"inline","text":"When set to `true` the items within the DataView will have their display set to\ninline-block and be arranged horizontally. By default the items will wrap to\nthe width of the DataView. Passing an object with `{ wrap: false }` will turn\noff this wrapping behavior and overflowed items will need to be scrolled to\nhorizontally.\n","type":"Boolean/Object","value":"null","src":{"accessor":"440,429,0","name":"440,422,34","text":"440,423,12,325","type":"440,422,18","value":"440,429,0"}},{"$type":"property","accessor":true,"name":"itemButtonMode","text":"True to cause items to act like buttons for interaction styling.\nin ButtonMode items will maintain pressed state whenever pressed down.\nthey will not remove this state for tap distance cancellation or mouse out.\n","type":"boolean","value":"false","src":{"accessor":"440,392,0","name":"440,387,27","text":"440,388,12,212","type":"440,387,18","value":"440,392,0"}},{"$type":"property","accessor":true,"name":"itemCls","text":"An additional CSS class to apply to items within the DataView.\n","type":"String","value":"null","src":{"accessor":"440,435,0","name":"440,432,26","text":"440,433,12,63","type":"440,432,18","value":"440,435,0"}},{"$type":"property","access":"private","accessor":true,"name":"itemsFocusable","text":"For use by subclasses, not applications.\n\nBy default the dataview items are focusable, and navigable using an\n{@link Ext.dataview.NavigationModel}.\n\n{@link Ext.grid.Grid grids} set this to false to make rows non-focusable in\nfavour of cells.\n","type":"Boolean","value":"true","src":{"access":"440,297,12","accessor":"440,299,0","name":"440,289,27","text":"440,290,12,242","type":"440,289,18","value":"440,299,0"}},{"$type":"property","accessor":true,"name":"itemTpl","text":"The `{@link #cfg!tpl tpl}` to use for each of the items displayed in this DataView. This template\nproduces HTML and can use the follow CSS class names to influence the response\nto tapping/clicking child elements:\n\n - `x-no-ripple` - Disables `{@link #cfg!itemRipple itemRipple}` (primarily for theme-material)\n - `x-item-no-select` - Disables item selection\n - `x-item-no-tap` - Disables all click or tap processing\n\nFor example:\n\n     itemTpl: '<div>' +\n                  '...' +\n                  '<div class=\"x-item-no-select x-fa fa-gear\"></div>' +\n                  '...' +\n              '</div>'\n\nBecause this template produces HTML from record data it can expose applications\nto security issues if user-provided data is not properly encoded. For example,\nin previous releases this template was:\n\n     itemTpl: '<div>{text}</div>'\n\nIf the 'text' field contained HTML scripts, these would be evaluated into\nthe application. The `{@link #cfg!itemTpl itemTpl}` in version 6.5 is now:\n\n     itemTpl: '<div>{text:htmlEncode}</div>'\n","type":"String/String[]/Ext.XTemplate","value":"'<div>{text:htmlEncode}</div>'","src":{"accessor":"440,330,0","name":"440,302,49","text":"440,303,12,971","type":"440,302,18","value":"440,330,0"}},{"$type":"property","accessor":true,"name":"loadingHeight","text":"If specified, gives an explicit height for a {@link #cfg!floated} data view\nwhen it is showing the {@link #loadingText}, if that is specified. This is\nuseful to prevent the view's height from collapsing to zero when the loading\nmask is applied and there are no other contents in the data view.\n","type":"Number","value":"null","src":{"accessor":"440,444,0","name":"440,438,26","text":"440,439,12,294","type":"440,438,18","value":"440,444,0"}},{"$type":"property","accessor":true,"locale":true,"name":"loadingText","text":"A string to display during data load operations. This text will be displayed\nin a loading div and the view's contents will be cleared while loading,\notherwise the view's contents will continue to display normally until the new\ndata is loaded and the contents are replaced.\n\n**Note**: For virtual stores, the load mask will be shown frequently as the user\nscrolls. To inhibit that, set loadingText to the empty string.\n","type":"String/Boolean","value":"'Loading...'","src":{"accessor":"440,343,0","locale":"440,341,12","name":"440,333,34","text":"440,334,12,418","type":"440,333,18","value":"440,343,0"}},{"$type":"property","accessor":true,"name":"markDirty","optional":true,"since":"6.5.1","text":"`true` to mark items as dirty when the underlying record has been modified.\n\nBy default there is no special styling for dirty items in data views and\n{@link Ext.dataview.List Lists}.  When this config is set to `true` each item's\nelement will have a CSS class name of `x-mark-dirty` added to it.  When the\nunderlying record for an item has been modified the item will have the `x-dirty`\nCSS class.\n\n{@link Ext.grid.Grid Grids} style \"dirty\" cells using a red triangle icon in\nthe corner of the cell.  See\n{@link Ext.grid.cell.Base#$gridcell-dirty-icon $gridcell-dirty-icon}\n","type":"Boolean","value":"false","src":{"accessor":"440,462,0","name":"440,447,28","since":"440,460,19","text":"440,448,12,575","type":"440,447,18","value":"440,447,38"}},{"$type":"property","accessor":true,"name":"pressedDelay","text":"The amount of delay between the `tapstart` and adding the `pressedCls`.\n","type":"Number","value":"100","src":{"accessor":"440,349,0","name":"440,346,26","text":"440,347,12,72","type":"440,346,18","value":"440,349,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"440,492,8","name":"440,491,13","text":"275,104,12,2499","type":"275,103,18","value":"440,494,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"scrollable","text":"Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or `null`) to disable scrolling - this is the default.\n- `{@link #cfg!x x}` or `horizontal` to enable horizontal scrolling only\n- `{@link #cfg!y y}` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a `{@link Ext.scroll.Scroller}` if\nif advanced configuration is needed.\n\nThe getter for this config returns the {@link Ext.scroll.Scroller Scroller}\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n","type":"Boolean/String/Object","value":"true","src":{"accessor":"410,422,12","inheritdoc":"440,619,8","name":"440,618,13","text":"410,406,12,685","type":"410,405,18","value":"440,621,0"}},{"$type":"property","name":"scrollDock","text":"This property is placed on the _child items_ added to this container. The value\nplaced on the child items determines the position of that item with respect to\nthe data items.\n\n     Ext.Viewport.add({\n         xtype: 'dataview',\n         itemTpl: '{firstName}',\n         data: [\n             { firstName: 'Peter'},\n             { firstName: 'Raymond'},\n             { firstName: 'Egon'},\n             { firstName: 'Winston'}\n         ],\n         items: [{\n              xtype: 'component',\n              html: 'Always At End!',\n              scrollDock: 'end'\n         }]\n     });\n\nNote, a value of `'top'` is equivalent to `'start'` while `'bottom'` is\nequivalent to `'end'`. The `'top'` and `'bottom'` values originated from the\n`{@link Ext.dataview.List}` class.\n","type":"'start'/'emd'","src":{"name":"440,518,29","text":"440,519,8,757","type":"440,518,14"}},{"$type":"property","accessor":true,"name":"scrollToTopOnRefresh","text":"Scroll the DataView to the top when the DataView is refreshed.\n","type":"Boolean","value":"true","src":{"accessor":"440,354,12","name":"440,352,27","text":"440,353,12,63","type":"440,352,18","value":"440,356,0"}},{"$type":"property","accessor":true,"name":"selectable","text":"A configuration object which allows passing of configuration options to create or\nreconfigure a {@link Ext.dataview.selection.Model selection model}.\n","type":"Object/Ext.dataview.selection.Model","value":"true","items":[{"$type":"property","name":"mode","text":"Simple and Multi are similar in that click toggle selection. Multi allows\nSHIFT+click and CTRL+click. Single simply  toggles an item between selected\nand unselected (unless `deselectable` is set to `false`).\n","type":"'single','simple','multi'","src":{"name":"440,473,56","text":"440,474,12,209","type":"440,473,18"}},{"$type":"property","name":"deselectable","text":"Set to `false` to disallow deselecting down to zero selections.\n","type":"Boolean","src":{"name":"440,478,38","text":"440,479,12,64","type":"440,478,18"}}],"src":{"accessor":"440,481,0","name":"440,469,55","text":"440,470,12,151","type":"440,469,18","value":"440,481,0"}},{"$type":"property","name":"selection","readonly":true,"text":"The selected record.\n","type":"Ext.data.Model","src":{"name":"440,545,30","readonly":"440,547,8","text":"440,546,8,21","type":"440,545,14"}},{"$type":"property","accessor":true,"evented":true,"name":"store","required":true,"text":"Can be either a Store instance or a configuration object that will be turned\ninto a Store. The Store is used to populate the set of items that will be\nrendered in the DataView. See the DataView intro documentation for more\ninformation about the relationship between Store and DataView.\n","type":"Ext.data.Store/Object","value":"undefined","src":{"accessor":"440,514,0","evented":"440,514,0","name":"440,508,41","required":"440,508,48","text":"440,509,12,286","type":"440,508,18","value":"440,514,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"tabIndex","text":"DOM tabIndex attribute for this component's\n{@link #focusEl}.\n","type":"Number","value":"0","src":{"accessor":"410,314,0","inheritdoc":"440,625,8","name":"440,624,13","text":"410,311,12,62","type":"410,310,18","value":"440,627,0"}},{"$type":"property","accessor":true,"name":"triggerCtEvent","text":"Determines what type of touch event is recognized as a touch on the container.\n","type":"'tap'/'singletap'","value":"'tap'","src":{"accessor":"440,381,0","name":"440,378,37","text":"440,379,12,79","type":"440,378,18","value":"440,381,0"}},{"$type":"property","accessor":true,"name":"triggerEvent","text":"Determines what type of touch event causes an item to be selected.\n","type":"'childtap'/'childsingletap'/'childdoubletap'/'childswipe'/'childtaphold'/'childlongpress'","value":"'childtap'","src":{"accessor":"440,374,0","name":"440,371,109","text":"440,372,12,67","type":"440,371,18","value":"440,374,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `value` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"440,500,8","name":"440,499,13","text":"275,231,12,406","type":"275,230,18","value":"440,502,0"}}]},{"$type":"events","items":[{"$type":"event","hide":true,"name":"add","src":{"hide":"440,213,8","name":"440,214,15"}},{"$type":"event","name":"deselect","text":"Fires whenever an item is deselected\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,188,39","type":"440,188,16"}},{"$type":"param","name":"records","text":"The records being deselected\n","type":"Ext.data.Model[]","src":{"name":"440,189,34","text":"440,189,42,29","type":"440,189,16"}}],"src":{"name":"440,186,15","text":"440,187,8,37"}},{"$type":"event","deprecatedMessage":"Use {@link #childdoubletap}\n","deprecatedVersion":"6.5.0","name":"itemdoubletap","text":"Fires whenever an item is doubletapped\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,129,39","type":"440,129,16"}},{"$type":"param","name":"index","text":"The index of the item doubletapped\n","type":"Number","src":{"name":"440,130,24","text":"440,130,30,35","type":"440,130,16"}},{"$type":"param","name":"target","text":"The element or DataItem doubletapped\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,131,51","text":"440,131,58,37","type":"440,131,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,132,32","text":"440,132,39,34","type":"440,132,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,133,33","text":"440,133,35,17","type":"440,133,16"}}],"src":{"deprecatedMessage":"440,135,8","deprecatedVersion":"440,135,8","name":"440,127,15","text":"440,128,8,39"}},{"$type":"event","deprecatedMessage":"Use {@link #childlongpress}\n","deprecatedVersion":"6.5.0","name":"itemlongpress","text":"Fires whenever an item's longpress event fires\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,93,39","type":"440,93,16"}},{"$type":"param","name":"index","text":"The index of the item touched\n","type":"Number","src":{"name":"440,94,24","text":"440,94,30,30","type":"440,94,16"}},{"$type":"param","name":"target","text":"The element or DataItem touched\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,95,51","text":"440,95,58,32","type":"440,95,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,96,32","text":"440,96,39,34","type":"440,96,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,97,33","text":"440,97,35,17","type":"440,97,16"}}],"src":{"deprecatedMessage":"440,99,8","deprecatedVersion":"440,99,8","name":"440,91,15","text":"440,92,8,47"}},{"$type":"event","deprecatedMessage":"Use {@link #childmouseenter}\n","deprecatedVersion":"6.5.0","name":"itemmouseenter","text":"Fires whenever the mouse pointer moves over an item\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,153,39","type":"440,153,16"}},{"$type":"param","name":"index","text":"The index of the item\n","type":"Number","src":{"name":"440,154,24","text":"440,154,30,22","type":"440,154,16"}},{"$type":"param","name":"target","text":"The element or DataItem\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,155,51","text":"440,155,58,24","type":"440,155,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,156,32","text":"440,156,39,34","type":"440,156,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,157,33","text":"440,157,35,17","type":"440,157,16"}}],"src":{"deprecatedMessage":"440,159,8","deprecatedVersion":"440,159,8","name":"440,151,15","text":"440,152,8,52"}},{"$type":"event","deprecatedMessage":"Use {@link #childmouseleave}\n","deprecatedVersion":"6.5.0","name":"itemmouseleave","text":"Fires whenever the mouse pointer leaves an item\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,165,39","type":"440,165,16"}},{"$type":"param","name":"index","text":"The index of the item\n","type":"Number","src":{"name":"440,166,24","text":"440,166,30,22","type":"440,166,16"}},{"$type":"param","name":"target","text":"The element or DataItem\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,167,51","text":"440,167,58,24","type":"440,167,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,168,32","text":"440,168,39,34","type":"440,168,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,169,33","text":"440,169,35,17","type":"440,169,16"}}],"src":{"deprecatedMessage":"440,171,8","deprecatedVersion":"440,171,8","name":"440,163,15","text":"440,164,8,48"}},{"$type":"event","deprecatedMessage":"Use {@link #childsingletap}\n","deprecatedVersion":"6.5.0","name":"itemsingletap","text":"Fires whenever an item is singletapped\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,117,39","type":"440,117,16"}},{"$type":"param","name":"index","text":"The index of the item singletapped\n","type":"Number","src":{"name":"440,118,24","text":"440,118,30,35","type":"440,118,16"}},{"$type":"param","name":"target","text":"The element or DataItem singletapped\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,119,51","text":"440,119,58,37","type":"440,119,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,120,32","text":"440,120,39,34","type":"440,120,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,121,33","text":"440,121,35,17","type":"440,121,16"}}],"src":{"deprecatedMessage":"440,123,8","deprecatedVersion":"440,123,8","name":"440,115,15","text":"440,116,8,39"}},{"$type":"event","deprecatedMessage":"Use {@link #childswipe}\n","deprecatedVersion":"6.5.0","name":"itemswipe","text":"Fires whenever an item is swiped\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,141,39","type":"440,141,16"}},{"$type":"param","name":"index","text":"The index of the item swiped\n","type":"Number","src":{"name":"440,142,24","text":"440,142,30,29","type":"440,142,16"}},{"$type":"param","name":"target","text":"The element or DataItem swiped\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,143,51","text":"440,143,58,31","type":"440,143,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,144,32","text":"440,144,39,34","type":"440,144,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,145,33","text":"440,145,35,17","type":"440,145,16"}}],"src":{"deprecatedMessage":"440,147,8","deprecatedVersion":"440,147,8","name":"440,139,15","text":"440,140,8,33"}},{"$type":"event","deprecatedMessage":"Use {@link #childtap}\n","deprecatedVersion":"6.5.0","name":"itemtap","text":"Fires whenever an item is tapped. Add `x-item-no-tap` CSS class to a child of list\nitem to suppress `{@link #event!itemtap itemtap}` events on that child. This can be useful when items\ncontain components such as Buttons.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,81,39","type":"440,81,16"}},{"$type":"param","name":"index","text":"The index of the item tapped\n","type":"Number","src":{"name":"440,82,24","text":"440,82,30,29","type":"440,82,16"}},{"$type":"param","name":"target","text":"The element or DataItem tapped\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,83,51","text":"440,83,58,31","type":"440,83,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,84,32","text":"440,84,39,34","type":"440,84,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,85,33","text":"440,85,35,17","type":"440,85,16"}}],"src":{"deprecatedMessage":"440,87,8","deprecatedVersion":"440,87,8","name":"440,77,15","text":"440,78,8,198"}},{"$type":"event","deprecatedMessage":"Use {@link #childtaphold}\n","deprecatedVersion":"6.5.0","name":"itemtaphold","text":"Fires whenever an item's taphold event fires\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,105,39","type":"440,105,16"}},{"$type":"param","name":"index","text":"The index of the item touched\n","type":"Number","src":{"name":"440,106,24","text":"440,106,30,30","type":"440,106,16"}},{"$type":"param","name":"target","text":"The element or DataItem touched\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,107,51","text":"440,107,58,32","type":"440,107,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,108,32","text":"440,108,39,34","type":"440,108,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,109,33","text":"440,109,35,17","type":"440,109,16"}}],"src":{"deprecatedMessage":"440,111,8","deprecatedVersion":"440,111,8","name":"440,103,15","text":"440,104,8,45"}},{"$type":"event","deprecatedMessage":"Use {@link #childtouchcancel}\n","deprecatedVersion":"6.5.0","name":"itemtouchcancel","text":"Fires whenever an item touch is cancelled\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,67,39","type":"440,67,16"}},{"$type":"param","name":"index","text":"The index of the item touched\n","type":"Number","src":{"name":"440,68,24","text":"440,68,30,30","type":"440,68,16"}},{"$type":"param","name":"target","text":"The element or DataItem touched\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,69,51","text":"440,69,58,32","type":"440,69,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,70,32","text":"440,70,39,34","type":"440,70,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,71,33","text":"440,71,35,17","type":"440,71,16"}}],"src":{"deprecatedMessage":"440,73,8","deprecatedVersion":"440,73,8","name":"440,65,15","text":"440,66,8,42"}},{"$type":"event","deprecatedMessage":"Use {@link #childtouchend}\n","deprecatedVersion":"6.5.0","name":"itemtouchend","text":"Fires whenever an item is touched\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,55,39","type":"440,55,16"}},{"$type":"param","name":"index","text":"The index of the item touched\n","type":"Number","src":{"name":"440,56,24","text":"440,56,30,30","type":"440,56,16"}},{"$type":"param","name":"target","text":"The element or DataItem touched\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,57,51","text":"440,57,58,32","type":"440,57,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,58,32","text":"440,58,39,34","type":"440,58,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,59,33","text":"440,59,35,17","type":"440,59,16"}}],"src":{"deprecatedMessage":"440,61,8","deprecatedVersion":"440,61,8","name":"440,53,15","text":"440,54,8,34"}},{"$type":"event","deprecatedMessage":"Use {@link #childtouchmove}\n","deprecatedVersion":"6.5.0","name":"itemtouchmove","text":"Fires whenever an item is moved\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,43,39","type":"440,43,16"}},{"$type":"param","name":"index","text":"The index of the item moved\n","type":"Number","src":{"name":"440,44,24","text":"440,44,30,28","type":"440,44,16"}},{"$type":"param","name":"target","text":"The element or DataItem moved\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,45,51","text":"440,45,58,30","type":"440,45,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,46,32","text":"440,46,39,34","type":"440,46,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,47,33","text":"440,47,35,17","type":"440,47,16"}}],"src":{"deprecatedMessage":"440,49,8","deprecatedVersion":"440,49,8","name":"440,41,15","text":"440,42,8,32"}},{"$type":"event","deprecatedMessage":"Use {@link #childtouchstart}\n","deprecatedVersion":"6.5.0","name":"itemtouchstart","text":"Fires whenever an item is touched\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,31,39","type":"440,31,16"}},{"$type":"param","name":"index","text":"The index of the item touched\n","type":"Number","src":{"name":"440,32,24","text":"440,32,30,30","type":"440,32,16"}},{"$type":"param","name":"target","text":"The element or DataItem touched\n","type":"Ext.Element/Ext.dataview.DataItem","src":{"name":"440,33,51","text":"440,33,58,32","type":"440,33,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"440,34,32","text":"440,34,39,34","type":"440,34,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"440,35,33","text":"440,35,35,17","type":"440,35,16"}}],"src":{"deprecatedMessage":"440,37,8","deprecatedVersion":"440,37,8","name":"440,29,15","text":"440,30,8,34"}},{"$type":"event","hide":true,"name":"move","src":{"hide":"440,223,8","name":"440,224,15"}},{"$type":"event","name":"navigate","text":"Fires whenever the user navigates to a new location.\n\nIn regular dataviews, a location encapsulates one view item, and its associated record.\n\nIn grids, a location encapsulates one cell, and its associated data field.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,207,39","type":"440,207,16"}},{"$type":"param","name":"to","text":"The location navigated to.\n","type":"Ext.dataview.Location","src":{"name":"440,208,39","text":"440,208,42,27","type":"440,208,16"}},{"$type":"param","name":"from","text":"The location where navigation came from.\n","type":"Ext.dataview.Location","src":{"name":"440,209,39","text":"440,209,44,41","type":"440,209,16"}}],"src":{"name":"440,200,15","text":"440,201,8,219"}},{"$type":"event","name":"refresh","preventable":true,"text":"Fires whenever the DataView is refreshed\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,196,39","type":"440,196,16"}}],"src":{"name":"440,193,15","preventable":"440,194,8","text":"440,195,8,41"}},{"$type":"event","hide":true,"name":"remove","src":{"hide":"440,218,8","name":"440,219,15"}},{"$type":"event","name":"select","text":"Fires whenever an item is selected\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.DataView","src":{"name":"440,177,39","type":"440,177,16"}},{"$type":"param","name":"selected","text":"The selected record(s). If {@link #selectable} {@link Ext.dataview.selection.Model#mode mode}\nis `single`, this will be a single {@link Ext.data.Model record}. If\n{@link Ext.dataview.selection.Model#mode mode} is `simple` or `multi`, this will be an array\nof {@link Ext.data.Model records}.\n","type":"Ext.data.Model/Ext.data.Model[]","src":{"name":"440,178,49","text":"440,179,8,291","type":"440,178,16"}}],"src":{"name":"440,175,15","text":"440,176,8,35"}},{"$type":"event","name":"beforestorechange","text":"This event fires when `{@link #cfg!store store}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.dataview.Abstract"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!store store}`.","type":"Ext.data.Store/Object","src":{"type":"440,508,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!store store}`.","type":"Ext.data.Store/Object","src":{"type":"440,508,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"storechange","text":"This event fires when `{@link #cfg!store store}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.dataview.Abstract"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!store store}`.","type":"Ext.data.Store/Object","src":{"type":"440,508,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!store store}`.","type":"Ext.data.Store/Object","src":{"type":"440,508,18"}}]}]},{"$type":"methods","items":[{"$type":"method","name":"ensureVisible","text":"Scrolls the specified record into view.\n","items":[{"$type":"param","name":"record","optional":true,"text":"The record or the 0-based position\nto which to scroll. If this parameter is not passed, the `options` argument must\nbe passed and contain either `{@link #cfg!record record}` or `recordIndex`.\n","type":"Number/Ext.data.Model","src":{"name":"440,746,40","text":"440,746,48,35:440,747,8,138","type":"440,746,16"}},{"$type":"param","name":"options","optional":true,"text":"An object containing options to modify the operation.\n","type":"Object","items":[{"$type":"property","name":"animation","optional":true,"text":"Pass `true` to animate the row into view.\n","type":"Boolean","src":{"name":"440,752,34","text":"440,752,45,42","type":"440,752,16"}},{"$type":"property","name":"focus","optional":true,"text":"Pass as `true` to focus the specified row.\n","type":"Boolean","src":{"name":"440,754,34","text":"440,754,41,43","type":"440,754,16"}},{"$type":"property","name":"highlight","optional":true,"text":"Pass `true` to highlight the row with a glow\nanimation when it is in view.\n","type":"Boolean","src":{"name":"440,756,34","text":"440,756,45,45:440,757,8,31","type":"440,756,16"}},{"$type":"property","name":"record","optional":true,"text":"The record to which to scroll.\n","type":"Ext.data.Model","src":{"name":"440,759,41","text":"440,759,49,31","type":"440,759,16"}},{"$type":"property","name":"recordIndex","optional":true,"text":"The 0-based position to which to scroll.\n","type":"Number","src":{"name":"440,761,33","text":"440,761,46,41","type":"440,761,16"}},{"$type":"property","name":"select","optional":true,"text":"Pass as `true` to select the specified row.\n","type":"Boolean","src":{"name":"440,763,34","text":"440,763,42,44","type":"440,763,16"}}],"src":{"name":"440,750,25","text":"440,750,34,54","type":"440,750,16"}}],"src":{"name":"440,765,0","text":"440,744,8,41"}},{"$type":"method","access":"private","name":"ensureVisiblePlan","text":"This method builds up a plan object with flags and a pop-off \"steps\" array of\nmethod names to be called in order to fullfil the passed options of an\nensureVisible call.\n","items":[{"$type":"param","name":"record","optional":true,"text":"The record or the 0-based position\nto which to scroll. If this parameter is not passed, the `options` argument must\nbe passed and contain either `{@link #cfg!record record}` or `recordIndex`.\n","type":"Number/Ext.data.Model","src":{"name":"440,2212,44","text":"440,2212,52,35:440,2213,12,138","type":"440,2212,20"}},{"$type":"param","name":"plan","optional":true,"text":"An object containing options to modify the operation.\n","type":"Object","items":[{"$type":"property","name":"animation","optional":true,"text":"Pass `true` to animate the row into view.\n","type":"Boolean","src":{"name":"440,2218,35","text":"440,2218,46,42","type":"440,2218,20"}},{"$type":"property","name":"focus","optional":true,"text":"Pass as `true` to focus the specified row.\n","type":"Boolean","src":{"name":"440,2220,35","text":"440,2220,42,43","type":"440,2220,20"}},{"$type":"property","name":"highlight","optional":true,"text":"Pass `true` to highlight the row with a glow\nanimation when it is in view.\n","type":"Boolean","src":{"name":"440,2222,35","text":"440,2222,46,45:440,2223,12,31","type":"440,2222,20"}},{"$type":"property","name":"record","optional":true,"text":"The record to which to scroll.\n","type":"Ext.data.Model","src":{"name":"440,2225,42","text":"440,2225,50,31","type":"440,2225,20"}},{"$type":"property","name":"recordIndex","optional":true,"text":"The 0-based position to which to scroll.\n","type":"Number","src":{"name":"440,2227,34","text":"440,2227,47,41","type":"440,2227,20"}},{"$type":"property","name":"select","optional":true,"text":"Pass as `true` to select the specified row.\n","type":"Boolean","src":{"name":"440,2229,35","text":"440,2229,43,44","type":"440,2229,20"}}],"src":{"name":"440,2216,29","text":"440,2216,35,54","type":"440,2216,20"}}],"src":{"access":"440,2230,12","name":"440,2232,0","text":"440,2208,12,170"}},{"$type":"method","name":"getItemAt","text":"Returns an item at the specified view `index`. This may return items that do not\ncorrespond to a {@link Ext.data.Model record} in the store if such items have been\nadded to this container.\n\nNegative numbers are treated as relative to the end such that `-1` is the last\nitem, `-2` is the next-to-last and so on.\n\nThe `{@link #method!mapToItem mapToItem}` method recommended over this method as it is more flexible and can\nalso handle a {@link Ext.data.Model record} as the parameter. To handle store\nindex values, use `{@link #method!mapToViewIndex mapToViewIndex}`:\n\n     item = view.mapToItem(view.mapToViewIndex(storeIndex));\n","items":[{"$type":"param","name":"index","text":"The index of the item in the view.\n","type":"Number","src":{"name":"440,819,24","text":"440,819,30,35","type":"440,819,16"}},{"$type":"return","type":"HTMLElement/Ext.Component","src":{"type":"440,820,17"}}],"src":{"name":"440,822,0","text":"440,806,8,572"}},{"$type":"method","access":"private","name":"getItemFromPagePoint","text":"Returns the item (an element or widget) at the given page coordinates.\n","items":[{"$type":"param","name":"x","type":"Number","src":{"name":"440,2510,28","type":"440,2510,20"}},{"$type":"param","name":"y","type":"Number","src":{"name":"440,2511,28","type":"440,2511,20"}},{"$type":"return","type":"Ext.dom.Element|Ext.Widget","src":{"type":"440,2512,21"}}],"src":{"access":"440,2513,12","name":"440,2515,0","text":"440,2509,12,71"}},{"$type":"method","access":"private","name":"getItemFromPoint","text":"Returns the item (an element or widget) at the given client coordinates.\n","items":[{"$type":"param","name":"x","type":"Number","src":{"name":"440,2490,28","type":"440,2490,20"}},{"$type":"param","name":"y","type":"Number","src":{"name":"440,2491,28","type":"440,2491,20"}},{"$type":"return","type":"Ext.dom.Element|Ext.Widget","src":{"type":"440,2492,21"}}],"src":{"access":"440,2493,12","name":"440,2495,0","text":"440,2489,12,73"}},{"$type":"method","deprecatedMessage":"Use `mapToViewIndex` or `mapToRecordIndex` instead.\n","deprecatedVersion":"6.5.0","name":"getItemIndex","text":"Returns the item's index in the store, or -1 if the item does not correspond to a\n{@link Ext.data.Model record}.\n\n**Deprecated** Historically this method has always returned the record's index in\nthe `{@link #cfg!store store}`. In most uses this was assumed to match the view index. But this is\nnot always the case, especially for the `{@link Ext.List}` subclass. To be clear about\nwhich index is being requested, new code should instead call `{@link #method!mapToViewIndex mapToViewIndex}` or\n`{@link #method!mapToRecordIndex mapToRecordIndex}`.\n","items":[{"$type":"param","name":"item","text":"The item to locate.\n","type":"HTMLElement/Ext.dom.Element/Ext.Component","src":{"name":"440,842,59","text":"440,842,64,20","type":"440,842,16"}},{"$type":"return","text":"Index for the specified item.\n","type":"Number","src":{"text":"440,843,25,30","type":"440,843,17"}}],"src":{"deprecatedMessage":"440,844,8","deprecatedVersion":"440,844,8","name":"440,846,0","text":"440,833,8,457"}},{"$type":"method","name":"getScrollDockedItems","text":"Returns all the items that are docked at the ends of the items.\n","items":[{"$type":"param","name":"which","text":"The set of desired `{@link #cfg!scrollDock scrollDock}` items.\n","type":"'start'/'end'","src":{"name":"440,879,31","text":"440,879,37,39","type":"440,879,16"}},{"$type":"return","text":"An array of the `{@link #cfg!scrollDock scrollDock}` items.\n","type":"Ext.Component[]","src":{"text":"440,880,34,36","type":"440,880,17"}}],"src":{"name":"440,882,0","text":"440,878,8,64"}},{"$type":"method","name":"getViewItems","text":"Returns an array of the current items in the DataView. Depends on the\n{@link #cfg-useComponents} configuration.\n","items":[{"$type":"return","text":"The items.\n","type":"HTMLElement[]/Ext.dataview.DataItem[]","src":{"text":"440,901,56,11","type":"440,901,17"}}],"src":{"name":"440,902,16","text":"440,899,8,112"}},{"$type":"method","access":"private","name":"indexModifiedFields","since":"6.5.1","template":true,"text":"This method is called to convert the modified field names array received from\nthe `{@link #cfg!store store}` when records are modified. Grids want to convert that array into an\nobject keyed by modified name for efficient decisions about which cells need to\nbe refreshed.\n","items":[{"$type":"param","name":"modified","type":"String[]","src":{"name":"440,2564,30","type":"440,2564,20"}},{"$type":"return","type":"String[]/Object","src":{"type":"440,2565,21"}}],"src":{"access":"440,2567,12","name":"440,2570,0","since":"440,2568,19","template":"440,2566,12","text":"440,2559,12,253"}},{"$type":"method","access":"private","name":"itemAs","items":[{"$type":"param","name":"item","text":"The item from which to navigate.\n","type":"Ext.dom.Element/Ext.Component","src":{"name":"440,2575,51","text":"440,2575,56,33","type":"440,2575,20"}},{"$type":"param","name":"as","text":"Pass `\"dom\"` to always return an `HTMLElement` for\nthe item. For component dataviews this is the component's main element. Pass `\"el\"`\nto return the `{@link Ext.dom.Element}` form of the item. For component dataviews this will\nbe the component's main element. For other dataviews the returned instance is\nproduced by {@link Ext#fly Ext.fly()} and should not be retained. Pass `\"cmp\"` to\nreturn the `{@link Ext.Component}` reference for the item (if one exists).\n","type":"\"cmp\"/\"dom\"/\"el\"","src":{"name":"440,2577,38","text":"440,2577,41,51:440,2578,12,396","type":"440,2577,20"}},{"$type":"return","type":"Number/HTMLElement/Ext.dom.Element/Ext.Component","src":{"type":"440,2584,21"}}],"src":{"access":"440,2585,12","name":"440,2587,0"}},{"$type":"method","name":"mapToItem","since":"6.5.0","text":"Converts the given `indexOrRecord` to an \"item\".\n\nAn \"item\" can be either an `{@link Ext.dom.Element}` or an `{@link Ext.Component}` depending on the\ntype of dataview. For convenience the `as` parameter can be used to convert the\nreturned item to a common type such as `{@link Ext.dom.Element}` or `HTMLElement`.\n\nBe aware that the `{@link Ext.List}` subclass can optionally render only some records, in\nwhich case not all records will have an associated item in the view and this method\nwill return `null`.\n\nAn index value is a view index. These will only match the record's index in the\n`{@link #cfg!store store}` when no extra items are added to this dataview (so called \"non-record\"\nitems). These are often unaligned in `{@link Ext.List}` due to group headers as well as\n`infinite` mode where not all records are rendered into the view at one time.\n\nNegative index values are treated as relative to the end such that `-1` is the last\nitem, `-2` is the next-to-last and so on.\n\nFor example:\n\n     // Add \"foo\" class to the last item in the view\n     view.mapToItem(-1, 'el').addCls('foo');\n\n     // Add \"foo\" class to the last data item in the view\n     view.mapToItem(view.getStore().last(), 'el').addCls('foo');\n\nTo handle a record's index in the `{@link #cfg!store store}`:\n\n     item = view.mapToItem(view.mapToViewIndex(storeIndex));\n","items":[{"$type":"param","name":"value","text":"The event, view index or\n{@link Ext.data.Model record}.\n","type":"Number/Ext.data.Model/Ext.event.Event","src":{"name":"440,958,55","text":"440,958,61,25:440,959,8,32","type":"440,958,16"}},{"$type":"param","name":"as","optional":true,"text":"Pass `\"dom\"` to always return an `HTMLElement` for the item.\nFor component dataviews this is the component's main element. Pass `\"el\"` to return\nthe `{@link Ext.dom.Element}` form of the item. For component dataviews this will be the\ncomponent's main element. For other dataviews the returned instance is produced by\n{@link Ext#fly Ext.fly()} and should not be retained.\n","type":"\"dom\"/\"el\"","src":{"name":"440,961,29","text":"440,961,33,61:440,962,8,303","type":"440,961,16"}},{"$type":"return","type":"HTMLElement/Ext.dom.Element/Ext.Component","src":{"type":"440,967,17"}}],"src":{"name":"440,970,0","since":"440,968,15","text":"440,928,8,1265"}},{"$type":"method","name":"mapToRecord","since":"6.5.0","text":"Converts the given parameter to a {@link Ext.data.Model record}. Not all items\nin a dataview correspond to records (such as group headers in `{@link Ext.List}`). In these\ncases `null` is returned.\n\nIf `item` is a {@link Ext.data.Model record}, it will be returned if it belongs to\nthis dataview's `{@link #cfg!store store}`. Otherwise, `null` will be returned.\n\nAn \"item\" can be simply an element or a component depending on the type of dataview.\n\nAn index value is a view index. These will only match the record's index in the\n`{@link #cfg!store store}` when no extra items are added to this dataview (so called \"non-record\"\nitems). These are often unaligned in `{@link Ext.List}` due to group headers as well as\n`infinite` mode where not all records are rendered into the view at one time.\n\nNegative index values are treated as relative to the end such that `-1` is the last\nitem, `-2` is the next-to-last and so on.\n","items":[{"$type":"param","name":"value","type":"Ext.event.Event/Number/HTMLElement/Ext.dom.Element/Ext.Component/Ext.data.Model","src":{"name":"440,1026,97","type":"440,1026,16"}},{"$type":"return","text":"The associated record or `null` if there is none.\n","type":"Ext.data.Model","src":{"text":"440,1027,33,50","type":"440,1027,17"}}],"src":{"name":"440,1030,0","since":"440,1028,15","text":"440,1009,8,866"}},{"$type":"method","name":"mapToRecordIndex","since":"6.5.0","text":"Converts the given parameter to the record's index in the `{@link #cfg!store store}`. Not all items\nin a dataview correspond to records (such as group headers in `{@link Ext.List}`). In these\ncases `-1` is returned.\n\nAn \"item\" can be simply an element or a component depending on the type of dataview.\n\nAn input index value is a view index. These will only match the record's index in\nthe `{@link #cfg!store store}` when no extra items are added to this dataview (so called \"non-record\"\nitems). These are often unaligned in `{@link Ext.List}` due to group headers as well as\n`infinite` mode where not all records are rendered into the view at one time.\n\nNegative index values are treated as relative to the end such that `-1` is the last\nitem, `-2` is the next-to-last and so on.\n","items":[{"$type":"param","name":"value","type":"Ext.event.Event/Number/HTMLElement/Ext.dom.Element/Ext.Component/Ext.data.Model","src":{"name":"440,1086,97","type":"440,1086,16"}},{"$type":"param","name":"uncollapsed","optional":true,"text":"Pass `true` to return the record index in the\nunderlying (uncollapsed) store, bypassing collapsed groups. This applies only to\n`list` and derived classes.\n","type":"Boolean","src":{"name":"440,1087,26","text":"440,1087,39,46:440,1088,8,109","type":"440,1087,16"}},{"$type":"return","text":"The record's index in the store or -1 if not found.\n","type":"Number","src":{"text":"440,1090,25,52","type":"440,1090,17"}}],"src":{"name":"440,1093,0","since":"440,1091,15","text":"440,1072,8,727"}},{"$type":"method","name":"mapToViewIndex","since":"6.5.0","text":"Converts the given parameter to the equivalent record index in the `{@link #cfg!store store}`.\n\nIn this method alone, the index parameter is a *store index* not a *view index*.\n\nBe aware that the `{@link Ext.List}` subclass can optionally render only some records, in\nwhich case not all records will have an associated item in the view and this method\nwill return `-1`.\n\nNegative index values are treated as relative to the end such that `-1` is the last\nrecord, `-2` is the next-to-last and so on.\n\nAn \"item\" can be simply an element or a component depending on the type of dataview.\n\nThe view index will only match the record's index in the `{@link #cfg!store store}` when no extra\nitems are added to this dataview (so called \"non-record\" items). These are often\nunaligned in `{@link Ext.List}` due to group headers as well as `infinite` mode where not\nall records are rendered into the view at one time.\n","items":[{"$type":"param","name":"value","type":"Ext.event.Event/Number/HTMLElement/Ext.dom.Element/Ext.Component/Ext.data.Model","src":{"name":"440,1131,97","type":"440,1131,16"}},{"$type":"param","access":"private","name":"indexOffset","optional":true,"text":"This is passed by an infinite list.\n","type":"Number","src":{"access":"440,1132,39","name":"440,1132,25","text":"440,1132,48,36","type":"440,1132,16"}},{"$type":"return","text":"The view index or -1 if not found.\n","type":"Number","src":{"text":"440,1133,25,35","type":"440,1133,17"}}],"src":{"name":"440,1136,0","since":"440,1134,15","text":"440,1113,8,854"}},{"$type":"method","name":"nextItem","text":"Returns the item following the passed `item` in the view. For `infinite` lists, this\ntraversal can encounter unrendered records. In this case, the record index of the\nunrendered record is returned.\n\nIf `as` is specified, the item is converted to the desired form, if possible. If\nthat conversion cannot be performed, `null` is returned.\n","items":[{"$type":"param","name":"item","text":"The item from which to navigate.\n","type":"Ext.dom.Element/Ext.Component","src":{"name":"440,1210,47","text":"440,1210,52,33","type":"440,1210,16"}},{"$type":"param","name":"as","optional":true,"text":"Pass `\"dom\"` to always return an `HTMLElement` for\nthe item. For component dataviews this is the component's main element. Pass `\"el\"`\nto return the `{@link Ext.dom.Element}` form of the item. For component dataviews this will\nbe the component's main element. For other dataviews the returned instance is\nproduced by {@link Ext#fly Ext.fly()} and should not be retained. Pass `\"cmp\"` to\nreturn the `{@link Ext.Component}` reference for the item (if one exists).\n","type":"\"cmp\"/\"dom\"/\"el\"","src":{"name":"440,1212,35","text":"440,1212,39,51:440,1213,8,396","type":"440,1212,16"}},{"$type":"return","type":"Number/HTMLElement/Ext.dom.Element/Ext.Component","src":{"type":"440,1219,17"}}],"src":{"name":"440,1221,0","text":"440,1203,8,338"}},{"$type":"method","access":"protected","name":"onNavigate","text":"This method is called by the {@link #cfg!navigationModel} when navigation events are\ndetected within this DataView.\n\nIt may be overridden to control the linkage of navigation events such as\ntaps, clicks or keystrokes detected by the {@link #cfg!navigationModel} to\nthe {@link #cfg!selectionModel}.\n\n`callParent` if you wish selection to proceed from the passed event.\n","items":[{"$type":"param","name":"e","text":"The UI event which caused the navigation.\n","type":"Ext.event.Event","src":{"name":"440,1681,33","text":"440,1681,35,42","type":"440,1681,16"}}],"src":{"access":"440,1683,8","name":"440,1685,0","text":"440,1673,8,368"}},{"$type":"method","access":"private","name":"onRelease","text":"Called by {@link Ext.GlobalEvents#setPressedComponent} when the global\nmouseup event fires and there's a registered pressed component.\n","src":{"access":"440,2195,12","name":"440,2197,0","text":"440,2193,12,135"}},{"$type":"method","name":"prepareData","text":"Function which can be overridden to provide custom formatting for each Record that is used\nby this DataView's {@link #tpl template} to render each node.\n","items":[{"$type":"param","name":"data","text":"The raw data object that was used to create the Record.\n","type":"Object/Object[]","src":{"name":"440,1255,33","text":"440,1255,38,56","type":"440,1255,16"}},{"$type":"param","name":"index","text":"the index number of the Record being prepared for rendering.\n","type":"Number","src":{"name":"440,1256,24","text":"440,1256,30,61","type":"440,1256,16"}},{"$type":"param","name":"record","text":"The Record being prepared for rendering.\n","type":"Ext.data.Model","src":{"name":"440,1257,32","text":"440,1257,39,41","type":"440,1257,16"}},{"$type":"return","text":"The formatted data in a format expected by the internal\n{@link #tpl template}'s `overwrite()` method.\n(either an array if your params are numeric (i.e. `{0}`) or an object (i.e. `{foo: 'bar'}`))\n","type":"Array/Object","src":{"text":"440,1258,31,56:440,1259,8,139","type":"440,1258,17"}}],"src":{"name":"440,1262,0","text":"440,1253,8,153"}},{"$type":"method","name":"previousItem","text":"Returns the item preceding the passed `item` in the view. For `infinite` lists, this\ntraversal can encounter unrendered records. In this case, the record index of the\nunrendered record is returned.\n\nIf `as` is specified, the item is converted to the desired form, if possible. If\nthat conversion cannot be performed, `null` is returned.\n","items":[{"$type":"param","name":"item","text":"The item from which to navigate.\n","type":"Ext.dom.Element/Ext.Component","src":{"name":"440,1235,47","text":"440,1235,52,33","type":"440,1235,16"}},{"$type":"param","name":"as","optional":true,"text":"Pass `\"dom\"` to always return an `HTMLElement` for\nthe item. For component dataviews this is the component's main element. Pass `\"el\"`\nto return the `{@link Ext.dom.Element}` form of the item. For component dataviews this will\nbe the component's main element. For other dataviews the returned instance is\nproduced by {@link Ext#fly Ext.fly()} and should not be retained. Pass `\"cmp\"` to\nreturn the `{@link Ext.Component}` reference for the item (if one exists).\n","type":"\"cmp\"/\"dom\"/\"el\"","src":{"name":"440,1237,35","text":"440,1237,39,51:440,1238,8,396","type":"440,1237,16"}},{"$type":"return","type":"Number/HTMLElement/Ext.dom.Element/Ext.Component","src":{"type":"440,1244,17"}}],"src":{"name":"440,1246,0","text":"440,1228,8,338"}},{"$type":"method","name":"refresh","text":"Refreshes the view by reloading the data from the store and re-rendering the template.\n","src":{"name":"440,1269,0","text":"440,1267,8,87"}},{"$type":"method","access":"private","name":"saveFocusState","text":"Called prior to an operation which mey remove focus from this view by some kind of\nDOM operation.\n\nIf this view contains focus, this method returns a function which, when called after\nthe disruptive DOM operation will restore focus to the same record, or, if the\nrecord has been removed to the same item index..\n","items":[{"$type":"return","text":"A function that will restore focus if focus was within this view,\nor a function which does nothing is focus is not in this view.\n","type":"Function","src":{"text":"440,2675,32,66:440,2676,12,63","type":"440,2675,22"}}],"src":{"access":"440,2667,12","name":"440,2678,0","text":"440,2668,12,313"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'dataview'","src":{"inheritdoc":"440,631,8","name":"440,630,18","text":"18,529,8,532","value":"440,633,0"}},{"$type":"property","access":"private","name":"dataItems","readonly":true,"text":"The array of data items. This array is maintained in store order. The type of\nobjects in this array depend on the type of this dataview. Further, infinite\nlists only put the actually rendered portion of the store in this array.\n\n**NOTE:** This is not the same thing as the items maintained by this `Container`\nsince there could be items in the container that are not associated to any\nrecord in the store.\n","type":"Ext.dom.Element[]/Ext.Component[]","value":"[]","src":{"access":"440,658,12","name":"440,650,58","readonly":"440,659,12","text":"440,651,12,406","type":"440,650,23","value":"440,661,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'store'","src":{"inheritdoc":"440,607,8","name":"440,606,18","text":"275,272,8,373","type":"275,271,19","value":"440,609,0"}},{"$type":"property","inheritdoc":true,"name":"focusable","text":"\n`true` for keyboard interactive Components or Widgets, `false` otherwise.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See {@link #isFocusable}.\n\n**Note:** It is not enough to set this property to `true` to make\na component keyboard interactive. You also need to make sure that\nthe component's {@link #focusEl} is reachable via Tab key (tabbable).\nSee also {@link #tabIndex}.\n","type":"Boolean","value":"true","src":{"inheritdoc":"440,613,8","name":"440,615,0","text":"283,14,8,430","type":"283,12,19","value":"440,615,0"}},{"$type":"property","name":"isDataView","text":"`true` in this class to identify an object this type, or subclass thereof.\n","type":"Boolean","value":"true","src":{"name":"440,14,28","text":"440,15,8,75","type":"440,14,19","value":"440,17,0"}},{"$type":"property","name":"refreshCounter","readonly":true,"text":"The number of refreshes this DataView has had.\n","type":"Number","value":"0","src":{"name":"440,592,27","readonly":"440,591,8","text":"440,593,8,47","type":"440,592,19","value":"440,595,0"}},{"$type":"property","name":"restoreFocus","text":"By default, using the TAB key to *re*enter a grid restores focus to the cell\nwhich was last focused.\n\nSetting this to `false` means that `TAB` from above focuses the first *rendered*\ncell and `TAB` from below focuses the last *rendered* cell.\n\nBe aware that due to buffered rendering, the last row of a 1,000,000 row grid may\nnot be available to receive immediate focus.\n","type":"Boolean","value":"true","src":{"name":"440,578,28","text":"440,579,8,371","type":"440,578,19","value":"440,588,0"}},{"$type":"property","access":"private","name":"selectionModel","readonly":true,"text":"The selection model type to create. Defaults to `'dataview'` for DataViews and Lists.\n","type":"String","value":"'dataview'","src":{"access":"440,599,8","name":"440,598,27","readonly":"440,600,8","text":"440,601,8,86","type":"440,598,19","value":"440,603,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"dataview-ui","text":"Creates a visual theme for a DataView.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1170,211,20","text":"1170,212,4,109","type":"1170,211,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"dataview","src":{"access":"1170,215,39","name":"1170,215,21","text":"1170,215,50,35:1170,216,4,61","type":"1170,215,12","value":"1170,215,28"}},{"$type":"param","name":"$background-color","text":"DataView background-color\n","type":"color","src":{"name":"1170,218,19","text":"1170,219,4,27","type":"1170,218,12"}},{"$type":"param","name":"$item-color","text":"DataView Item text color\n","type":"color","src":{"name":"1170,221,19","text":"1170,222,4,26","type":"1170,221,12"}},{"$type":"param","name":"$item-hovered-color","text":"DataView Item text color when hovered\n","type":"color","src":{"name":"1170,224,19","text":"1170,225,4,39","type":"1170,224,12"}},{"$type":"param","name":"$item-selected-color","text":"DataView Item text color when selected\n","type":"color","src":{"name":"1170,227,19","text":"1170,228,4,40","type":"1170,227,12"}},{"$type":"param","name":"$item-pressed-color","text":"DataView Item text color when pressed\n","type":"color","src":{"name":"1170,230,19","text":"1170,231,4,39","type":"1170,230,12"}},{"$type":"param","name":"$item-background-color","text":"DataView Item background-color\n","type":"color","src":{"name":"1170,233,19","text":"1170,234,4,32","type":"1170,233,12"}},{"$type":"param","name":"$item-alt-background-color","text":"background-color for `striped` DataView Items\n","type":"color","src":{"name":"1170,236,19","text":"1170,237,4,47","type":"1170,236,12"}},{"$type":"param","name":"$item-hovered-background-color","text":"DataView Item background-color when hovered\n","type":"color","src":{"name":"1170,239,19","text":"1170,240,4,45","type":"1170,239,12"}},{"$type":"param","name":"$item-selected-background-color","text":"DataView Item background-color when selected\n","type":"color","src":{"name":"1170,242,19","text":"1170,243,4,46","type":"1170,242,12"}},{"$type":"param","name":"$item-pressed-background-color","text":"DataView Item background-color when pressed\n","type":"color","src":{"name":"1170,245,19","text":"1170,246,4,45","type":"1170,245,12"}},{"$type":"param","name":"$item-border-width","text":"DataView Item border-width\n","type":"number","src":{"name":"1170,248,20","text":"1170,249,4,28","type":"1170,248,12"}},{"$type":"param","name":"$item-border-style","text":"DataView Item border-style\n","type":"string","src":{"name":"1170,251,20","text":"1170,252,4,28","type":"1170,251,12"}},{"$type":"param","name":"$item-border-color","text":"DataView Item border-color\n","type":"color","src":{"name":"1170,254,19","text":"1170,255,4,28","type":"1170,254,12"}},{"$type":"param","name":"$item-hovered-border-color","text":"DataView Item border-color when hovered\n","type":"color","src":{"name":"1170,257,19","text":"1170,258,4,41","type":"1170,257,12"}},{"$type":"param","name":"$item-selected-border-color","text":"DataView Item border-color when selected\n","type":"color","src":{"name":"1170,260,19","text":"1170,261,4,42","type":"1170,260,12"}},{"$type":"param","name":"$item-pressed-border-color","text":"DataView Item border-color when pressed\n","type":"color","src":{"name":"1170,263,19","text":"1170,264,4,41","type":"1170,263,12"}},{"$type":"param","name":"$item-focused-outline-width","text":"DataView outline-width when focused\n","type":"number","src":{"name":"1170,266,20","text":"1170,267,4,37","type":"1170,266,12"}},{"$type":"param","name":"$item-focused-outline-style","text":"DataView outline-style when focused\n","type":"string","src":{"name":"1170,269,20","text":"1170,270,4,37","type":"1170,269,12"}},{"$type":"param","name":"$item-focused-outline-color","text":"DataView outline-color when focused\n","type":"color","src":{"name":"1170,272,19","text":"1170,273,4,37","type":"1170,272,12"}},{"$type":"param","name":"$item-focused-outline-offset","text":"DataView outline-offset when focused\n","type":"number","src":{"name":"1170,275,20","text":"1170,276,4,38","type":"1170,275,12"}},{"$type":"param","name":"$item-font-weight","text":"DataView Item font-weight\n","type":"string/number","src":{"name":"1170,278,27","text":"1170,279,4,27","type":"1170,278,12"}},{"$type":"param","name":"$item-font-size","text":"DataView Item font-size\n","type":"number","src":{"name":"1170,281,20","text":"1170,282,4,25","type":"1170,281,12"}},{"$type":"param","name":"$item-font-size-big","text":"DataView Item font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1170,284,20","text":"1170,285,4,81","type":"1170,284,12"}},{"$type":"param","name":"$item-line-height","text":"DataView Item line-height\n","type":"number","src":{"name":"1170,287,20","text":"1170,288,4,27","type":"1170,287,12"}},{"$type":"param","name":"$item-line-height-big","text":"DataView Item line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1170,290,20","text":"1170,291,4,83","type":"1170,290,12"}},{"$type":"param","name":"$item-font-family","text":"DataView Item font-family\n","type":"string","src":{"name":"1170,293,20","text":"1170,294,4,27","type":"1170,293,12"}},{"$type":"param","name":"$item-padding","text":"DataView Item padding\n","type":"number/list","src":{"name":"1170,296,25","text":"1170,297,4,23","type":"1170,296,12"}},{"$type":"param","name":"$item-padding-big","text":"DataView Item padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1170,299,25","text":"1170,300,4,78","type":"1170,299,12"}}],"src":{"name":"1170,302,7","text":"1170,209,4,40"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$dataview-background-color","text":"DataView background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1170,9,29","name":"1170,9,1","text":"1170,7,4,26","type":"1170,6,10","value":"1170,9,37"}},{"$type":"property","name":"$dataview-default-ui","text":"Parameters for the \"default\" DataView UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1170,178,1","text":"1170,175,4,97","type":"1170,174,10"}},{"$type":"property","dynamic":true,"name":"$dataview-item-alt-background-color","text":"background-color for `striped` DataView Items\n","type":"color","value":"darken($dataitem-background-color, 2)","src":{"dynamic":"1170,45,38","name":"1170,45,1","text":"1170,43,4,46","type":"1170,42,10","value":"1170,45,46"}},{"$type":"property","dynamic":true,"name":"$dataview-item-background-color","text":"DataView Item background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1170,39,34","name":"1170,39,1","text":"1170,37,4,31","type":"1170,36,10","value":"1170,39,42"}},{"$type":"property","dynamic":true,"name":"$dataview-item-border-color","text":"DataView Item border-color\n","type":"color","value":"null","src":{"dynamic":"1170,81,30","name":"1170,81,1","text":"1170,79,4,27","type":"1170,78,10","value":"1170,81,38"}},{"$type":"property","dynamic":true,"name":"$dataview-item-border-style","text":"DataView Item border-style\n","type":"string","value":"null","src":{"dynamic":"1170,75,30","name":"1170,75,1","text":"1170,73,4,27","type":"1170,72,10","value":"1170,75,38"}},{"$type":"property","dynamic":true,"name":"$dataview-item-border-width","text":"DataView Item border-width\n","type":"number","value":"null","src":{"dynamic":"1170,69,30","name":"1170,69,1","text":"1170,67,4,27","type":"1170,66,10","value":"1170,69,38"}},{"$type":"property","dynamic":true,"name":"$dataview-item-color","text":"DataView Item text color\n","type":"color","value":"$color","src":{"dynamic":"1170,15,23","name":"1170,15,1","text":"1170,13,4,25","type":"1170,12,10","value":"1170,15,31"}},{"$type":"property","dynamic":true,"name":"$dataview-item-focused-outline-color","text":"DataView Item outline-color when focused\n","type":"color","value":"$base-color","src":{"dynamic":"1170,117,39","name":"1170,117,1","text":"1170,115,4,41","type":"1170,114,10","value":"1170,117,47"}},{"$type":"property","dynamic":true,"name":"$dataview-item-focused-outline-offset","text":"DataView Item outline-offset when focused\n","type":"number","value":"-$dataview-item-focused-outline-width","src":{"dynamic":"1170,123,40","name":"1170,123,1","text":"1170,121,4,42","type":"1170,120,10","value":"1170,123,48"}},{"$type":"property","dynamic":true,"name":"$dataview-item-focused-outline-style","text":"DataView Item outline-style when focused\n","type":"string","value":"solid","src":{"dynamic":"1170,111,39","name":"1170,111,1","text":"1170,109,4,41","type":"1170,108,10","value":"1170,111,47"}},{"$type":"property","dynamic":true,"name":"$dataview-item-focused-outline-width","text":"DataView Item outline-width when focused\n","type":"number","value":"1px","src":{"dynamic":"1170,105,39","name":"1170,105,1","text":"1170,103,4,41","type":"1170,102,10","value":"1170,105,47"}},{"$type":"property","dynamic":true,"name":"$dataview-item-font-family","text":"DataView Item font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1170,159,29","name":"1170,159,1","text":"1170,157,4,26","type":"1170,156,10","value":"1170,159,37"}},{"$type":"property","dynamic":true,"name":"$dataview-item-font-size","text":"DataView Item font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1170,135,27","name":"1170,135,1","text":"1170,133,4,24","type":"1170,132,10","value":"1170,135,35"}},{"$type":"property","dynamic":true,"name":"$dataview-item-font-size-big","text":"DataView Item font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1170,141,31","name":"1170,141,1","text":"1170,139,4,80","type":"1170,138,10","value":"1170,141,39"}},{"$type":"property","dynamic":true,"name":"$dataview-item-font-weight","text":"DataView Item font-weight\n","type":"string/number","value":"$font-weight-normal","src":{"dynamic":"1170,129,29","name":"1170,129,1","text":"1170,127,4,26","type":"1170,126,10","value":"1170,129,37"}},{"$type":"property","dynamic":true,"name":"$dataview-item-hovered-background-color","text":"DataView Item background-color when hovered\n","type":"color","value":"mix(#fff, $base-light-color, 65%)","src":{"dynamic":"1170,51,42","name":"1170,51,1","text":"1170,49,4,44","type":"1170,48,10","value":"1170,51,50"}},{"$type":"property","dynamic":true,"name":"$dataview-item-hovered-border-color","text":"DataView Item border-color when hovered\n","type":"color","value":"null","src":{"dynamic":"1170,87,38","name":"1170,87,1","text":"1170,85,4,40","type":"1170,84,10","value":"1170,87,46"}},{"$type":"property","dynamic":true,"name":"$dataview-item-hovered-color","text":"DataView Item text color when hovered\n","type":"color","value":"null","src":{"dynamic":"1170,21,31","name":"1170,21,1","text":"1170,19,4,38","type":"1170,18,10","value":"1170,21,39"}},{"$type":"property","dynamic":true,"name":"$dataview-item-line-height","text":"DataView Item line-height\n","type":"number","value":"16px","src":{"dynamic":"1170,147,29","name":"1170,147,1","text":"1170,145,4,26","type":"1170,144,10","value":"1170,147,37"}},{"$type":"property","dynamic":true,"name":"$dataview-item-line-height-big","text":"DataView Item line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"18px","src":{"dynamic":"1170,153,33","name":"1170,153,1","text":"1170,151,4,82","type":"1170,150,10","value":"1170,153,41"}},{"$type":"property","dynamic":true,"name":"$dataview-item-padding","text":"DataView Item padding\n","type":"number/list","value":"null","src":{"dynamic":"1170,165,25","name":"1170,165,1","text":"1170,163,4,22","type":"1170,162,10","value":"1170,165,33"}},{"$type":"property","dynamic":true,"name":"$dataview-item-padding-big","text":"DataView Item padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1170,171,29","name":"1170,171,1","text":"1170,169,4,78","type":"1170,168,10","value":"1170,171,37"}},{"$type":"property","dynamic":true,"name":"$dataview-item-pressed-background-color","text":"DataView Item background-color when pressed\n","type":"color","value":"null","src":{"dynamic":"1170,63,42","name":"1170,63,1","text":"1170,61,4,44","type":"1170,60,10","value":"1170,63,50"}},{"$type":"property","dynamic":true,"name":"$dataview-item-pressed-border-color","text":"DataView Item border-color when pressed\n","type":"color","value":"null","src":{"dynamic":"1170,99,38","name":"1170,99,1","text":"1170,97,4,40","type":"1170,96,10","value":"1170,99,46"}},{"$type":"property","dynamic":true,"name":"$dataview-item-pressed-color","text":"DataView Item text color when pressed\n","type":"color","value":"null","src":{"dynamic":"1170,33,31","name":"1170,33,1","text":"1170,31,4,38","type":"1170,30,10","value":"1170,33,39"}},{"$type":"property","dynamic":true,"name":"$dataview-item-selected-background-color","text":"DataView Item background-color when selected\n","type":"color","value":"mix(#fff, $base-light-color, 25%)","src":{"dynamic":"1170,57,43","name":"1170,57,1","text":"1170,55,4,45","type":"1170,54,10","value":"1170,57,51"}},{"$type":"property","dynamic":true,"name":"$dataview-item-selected-border-color","text":"DataView Item border-color when selected\n","type":"color","value":"null","src":{"dynamic":"1170,93,39","name":"1170,93,1","text":"1170,91,4,41","type":"1170,90,10","value":"1170,93,47"}},{"$type":"property","dynamic":true,"name":"$dataview-item-selected-color","text":"DataView Item text color when selected\n","type":"color","value":"null","src":{"dynamic":"1170,27,32","name":"1170,27,1","text":"1170,25,4,39","type":"1170,24,10","value":"1170,27,40"}}]}],"src":{"access":"440,2,4","extends":"440,6,0","mixins":"440,9,0:440,10,0","name":"1170,2,11","requires":"440,20,0:440,21,0:440,22,0:440,23,0:440,24,0:440,25,0","since":"440,3,11"},"displayName":"Dataview Abstract"},{"$type":"class","alias":"widget.componentdataview","extended":"Ext.dataview.Abstract,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.dataview.List","extends":"Ext.dataview.Abstract","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.ItemRippler,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.dataview.Component","requires":"Ext.dataview.DataItem","since":"6.5.0","text":"This class is similar to `{@link Ext.dataview.DataView}` except it renders components for each\nrecord instead of simple chunks of HTML. The `{@link #cfg!itemTpl itemTpl}` can still be used for components\nbut it is more typical to use the component's config properties\n\nThe type of component can be controlled using the `{@link #cfg!itemConfig itemConfig}` and record's fields can\nbe mapped to config properties using `{@link #cfg!itemDataMap itemDataMap}`.\n\n     Ext.create({\n         xtype: 'componentdataview',\n\n         store: [\n             { name: 'Peter',  age: 26 },\n             { name: 'Ray',   age: 21 },\n             { name: 'Egon', age: 24 },\n             { name: 'Winston', age: 24 }\n         ],\n\n         itemConfig: {\n             xtype: 'button',\n             cls: 'x-item-no-tap' // Prevent childtap events\n         },\n\n         itemDataMap: {\n             '#': {\n                 text: 'name'\n             }\n         }\n     });\n\nThe `{@link #cfg!itemDataMap itemDataMap}` is a simple and efficient means for mapping fields to configs, but\ncan only apply fields stored in the records' data to configs on the target component.\nWhile this can be dynamic by using {@link Ext.data.field.Field#cfg!calculate calculated}\nfields, more complex mappings should use {@link Ext.data.ViewModel ViewModels} and\n{@link Ext.Component#cfg!bind data binding}.\n\nFor example:\n\n     Ext.create({\n         xtype: 'componentdataview',\n\n         store: [\n             { name: 'Peter',  age: 26 },\n             { name: 'Ray',   age: 21 },\n             { name: 'Egon', age: 24 },\n             { name: 'Winston', age: 24 }\n         ],\n\n         itemConfig: {\n             xtype: 'button',\n\n             viewModel: true, // enable per-record binding\n\n             bind: 'Go {record.name}!'\n         }\n     });\n\n### Historical Note\n\nIn previous releases, the `useComponents` config allowed any `{@link Ext.dataview.DataView}` to\nswitch to using components instead of pure HTML for items. This feature was replaced by\nthis class in version 6.5 as part of the numerous {@link Ext.dataview.List List} and\n{@link Ext.grid.Grid Grid} additions.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"defaultType","text":"As a {@link Ext.Container container}, this config controls the default type of\nitems that are added.\n\nNon-data items can also be added to this container, and these will pick up this\ndefault. This config will only apply to data items if `{@link #cfg!itemConfig itemConfig}` does not contain\nan `{@link #cfg!xtype xtype}` property (which it does by default). This means that data items will\n*not* be affected by this config unless an `{@link #cfg!itemConfig itemConfig}` is set that nulls out the\n`{@link #cfg!xtype xtype}` (not recommended).\n","type":"Ext.enums.Widget","src":{"accessor":"411,366,12","name":"444,266,32","text":"444,267,8,455","type":"444,266,14"}},{"$type":"property","accessor":true,"name":"itemConfig","text":"The object is used to configure the data items created by this data view. The\n`{@link #cfg!xtype xtype}` property of this config overrides the container's `{@link #cfg!defaultType defaultType}`.\n","type":"Object/Ext.Component","value":"{\n    xtype: 'dataitem'\n}","src":{"accessor":"444,90,0","name":"444,86,40","text":"444,87,12,151","type":"444,86,18","value":"444,90,0"}},{"$type":"property","accessor":true,"name":"itemContentCls","since":"6.5.0","text":"A class to add to the element that immediate wraps the item content produced\nby the `{@link #cfg!itemTpl itemTpl}` (the \"inner-html\" element).\n","type":"String","value":"null","src":{"accessor":"444,100,0","name":"444,95,26","since":"444,98,19","text":"444,96,12,122","type":"444,95,18","value":"444,100,0"}},{"$type":"property","accessor":true,"name":"itemDataMap","since":"6.5.0","text":"This object allows you to map {@link Ext.data.Model record} fields to specific\nconfigs on component items.\n\nThe `{@link #cfg!itemDataMap itemDataMap}` object's keys describe the target objects to receive data\nfrom the associated {@link #cfg!record record}. These keys are either `'#'`\n(for the item itself) or a {@link Ext.Component#cfg!reference reference} to\na component contained in the item.\n\nFor each target listed in `{@link #cfg!itemDataMap itemDataMap}`, the value is another map describing\nthe config name (in the key) and the data field name (as the value).\n\nFor example:\n\n     itemDataMap: {\n         '#': {\n             title: 'fullName'\n         },\n         text: {\n             html: 'name'\n         }\n     }\n\nThe above is equivalent to:\n\n     item.setTitle(item.getRecord().get('fullName'));\n     item.lookup('text').setHtml(item.getRecord().get('name'));\n\nFor more complex mapping of data to item, you should use the data binding as\ndescribed in the class documentation.\n","type":"Object","value":"null","src":{"accessor":"444,136,0","name":"444,103,26","since":"444,134,19","text":"444,104,12,938","type":"444,103,18","value":"444,136,0"}},{"$type":"property","accessor":true,"name":"itemInnerCls","since":"6.5.0","text":"A class to add to the inner element of items.\n","type":"String","value":"null","src":{"accessor":"444,83,0","name":"444,83,0","since":"444,81,19","text":"444,80,12,46","type":"444,79,18","value":"444,83,0"}},{"$type":"property","accessor":true,"name":"maxItemCache","text":"The number of components to cache when no longer needed (as opposed to calling\n`destroy` on them).\n","type":"Number","value":"20","src":{"accessor":"444,143,0","name":"444,139,26","text":"444,140,12,99","type":"444,139,18","value":"444,143,0"}},{"$type":"property","accessor":true,"name":"striped","optional":true,"text":"Set this to `true` if you want the items in this DataView to be zebra striped.\nalternating their background color.\nOnly applicable if the stylesheet provides styling for alternate items.\n\nBy default the stylesheet does not provide styling for DataView items, but it\ncan be enabled by setting the `{@link #cfg!ui ui}` to `'basic'`.\n\nLists and Grids provide default styling for striped items\n","type":"Boolean","value":"false","src":{"accessor":"444,156,0","name":"444,146,28","text":"444,147,12,374","type":"444,146,18","value":"444,146,36"}}]},{"$type":"events","items":[{"$type":"event","name":"childdoubletap","since":"6.5.0","text":"Fires when a child is double tapped.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,241,40","text":"444,241,45,15","type":"444,241,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,242,39","text":"444,242,48,28","type":"444,242,16"}}],"src":{"name":"444,239,15","since":"444,244,15","text":"444,240,8,37"}},{"$type":"event","name":"childlongpress","since":"6.5.0","text":"Fires when a child is long-pressed.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,214,40","text":"444,214,45,15","type":"444,214,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,215,39","text":"444,215,48,28","type":"444,215,16"}}],"src":{"name":"444,212,15","since":"444,217,15","text":"444,213,8,36"}},{"$type":"event","name":"childmouseenter","since":"6.5.0","text":"Fires when the mouse pointer enters a child.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,250,40","text":"444,250,45,15","type":"444,250,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,251,39","text":"444,251,48,28","type":"444,251,16"}}],"src":{"name":"444,248,15","since":"444,253,15","text":"444,249,8,45"}},{"$type":"event","name":"childmouseleave","since":"6.5.0","text":"Fires when the mouse pointer leaves a child.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,259,40","text":"444,259,45,15","type":"444,259,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,260,39","text":"444,260,48,28","type":"444,260,16"}}],"src":{"name":"444,257,15","since":"444,262,15","text":"444,258,8,45"}},{"$type":"event","name":"childsingletap","since":"6.5.0","text":"Fires when a child is single tapped.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,232,40","text":"444,232,45,15","type":"444,232,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,233,39","text":"444,233,48,28","type":"444,233,16"}}],"src":{"name":"444,230,15","since":"444,235,15","text":"444,231,8,37"}},{"$type":"event","name":"childtap","since":"6.5.0","text":"Fires when a child is tapped. Add `x-item-no-tap` CSS class to a child\nof list item to suppress `{@link #event!childtap childtap}` events on that child. This can be\nuseful when items contain components such as Buttons.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,205,40","text":"444,205,45,15","type":"444,205,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,206,39","text":"444,206,48,28","type":"444,206,16"}}],"src":{"name":"444,201,15","since":"444,208,15","text":"444,202,8,195"}},{"$type":"event","name":"childtaphold","since":"6.5.0","text":"Fires when a child is tap-held.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,223,40","text":"444,223,45,15","type":"444,223,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,224,39","text":"444,224,48,28","type":"444,224,16"}}],"src":{"name":"444,221,15","since":"444,226,15","text":"444,222,8,32"}},{"$type":"event","name":"childtouchcancel","since":"6.5.0","text":"Fires when a touch is cancelled.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,194,40","text":"444,194,45,15","type":"444,194,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,195,39","text":"444,195,48,28","type":"444,195,16"}}],"src":{"name":"444,192,15","since":"444,197,15","text":"444,193,8,33"}},{"$type":"event","name":"childtouchend","since":"6.5.0","text":"Fires when a touch ends on a child.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,185,40","text":"444,185,45,15","type":"444,185,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,186,39","text":"444,186,48,28","type":"444,186,16"}}],"src":{"name":"444,183,15","since":"444,188,15","text":"444,184,8,36"}},{"$type":"event","name":"childtouchmove","since":"6.5.0","text":"Fires when a touch move occurs on a child.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,176,40","text":"444,176,45,15","type":"444,176,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,177,39","text":"444,177,48,28","type":"444,177,16"}}],"src":{"name":"444,174,15","since":"444,179,15","text":"444,175,8,43"}},{"$type":"event","name":"childtouchstart","since":"6.5.0","text":"Fires when a child is first touched.\n","items":[{"$type":"param","name":"this","text":"This dataview.\n","type":"Ext.dataview.Component","src":{"name":"444,167,40","text":"444,167,45,15","type":"444,167,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.dataview.Location","src":{"name":"444,168,39","text":"444,168,48,28","type":"444,168,16"}}],"src":{"name":"444,165,15","since":"444,170,15","text":"444,166,8,37"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"changeItem","text":"This method changes the record bound to the specified item.\n","items":[{"$type":"param","name":"itemIndex","text":"The index of the item in `{@link #property!dataItems dataItems}`. Negative\nnumbers are used to index backwards such that `-1` is the last item.\n","type":"Number","src":{"name":"444,549,28","text":"444,549,38,47:444,550,12,69","type":"444,549,20"}},{"$type":"param","name":"recordIndex","text":"The record's index in the store.\n","type":"Number","src":{"name":"444,551,28","text":"444,551,40,33","type":"444,551,20"}}],"src":{"access":"444,552,12","name":"444,554,0","text":"444,548,12,60"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"itemCache","text":"The array of component items previously created for this view but not in\ncurrent use. This array will contain no more then `{@link #cfg!maxItemCache maxItemCache}` items.\n","type":"Ext.Component[]","value":"{\n    max: 0,\n    unused: []\n}","src":{"access":"444,286,12","name":"444,283,40","text":"444,284,12,145","type":"444,283,23","value":"444,288,0"}}]}],"src":{"alias":"444,69,0","extends":"444,68,0","name":"444,67,0","requires":"444,72,0","since":"444,65,11","text":"444,2,4,2019"},"displayName":"Dataview Component"},{"$type":"class","alias":"widget.list","alternateClassNames":"Ext.List","extended":"Ext.dataview.Component,Ext.dataview.Abstract,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.dataview.BoundList,Ext.grid.Grid","extends":"Ext.dataview.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.Bufferable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.ItemRippler,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","mixins":"Ext.mixin.Bufferable","name":"Ext.dataview.List","requires":"Ext.dataview.GroupStore,Ext.dataview.ItemHeader,Ext.dataview.ListCollapser,Ext.dataview.ListGroup,Ext.dataview.SimpleListItem","text":"List is a vertical `DataView` which additionally supports {@link #grouped grouping},\n{@link #indexBar indexing} and {@link #onItemDisclosure disclosures}.\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create({\n    xtype: 'list',\n    fullscreen: true,\n    itemTpl: '{title}',\n    data: [\n        { title: 'Item 1' },\n        { title: 'Item 2' },\n        { title: 'Item 3' },\n        { title: 'Item 4' }\n    ]\n});\n```\n\nA more advanced example showing a list of people grouped by last name:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create({\n    xtype: 'list',\n    fullscreen: true,\n    itemTpl: '<div class=\"contact\">{firstName} <b>{lastName}</b></div>',\n\n    store: {\n        grouper: {\n            property: 'lastName',\n            groupFn: function(record) {\n                return record.get('lastName')[0];\n            }\n        },\n\n        data: [\n            { firstName: 'Peter',   lastName: 'Venkman'  },\n            { firstName: 'Raymond', lastName: 'Stantz'   },\n            { firstName: 'Egon',    lastName: 'Spengler' },\n            { firstName: 'Winston', lastName: 'Zeddemore'}\n        ]\n    }\n});\n```\n\n## Components\n\nTo use {@link Ext.Component components} to render records instead of `{@link #cfg!itemTpl itemTpl}`, use\n`{@link #cfg!itemConfig itemConfig}` and `{@link #cfg!itemDataMap itemDataMap}` (or `{@link #cfg!bind bind}`).\n\nSee the documentation for the {@link Ext.dataview.Component base class} for more\ndetails.\n\n## Scroll Docking\n\nIf you want to dock items to the bottom or top of a List, you can use the `{@link #cfg!scrollDock scrollDock}`\nconfiguration on child items in this List. The following example adds a button to the\nbottom of the List.\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create({\n    xtype: 'list',\n    fullscreen: true,\n\n    store: [\n        { firstName: 'Peter',   lastName: 'Venkman'  },\n        { firstName: 'Raymond', lastName: 'Stantz'   },\n        { firstName: 'Egon',    lastName: 'Spengler' },\n        { firstName: 'Winston', lastName: 'Zeddemore'}\n    ],\n\n    itemTpl: '<div class=\"contact\">{firstName} <b>{lastName}</b></div>',\n\n    items: [{\n        xtype: 'button',\n        scrollDock: 'end',\n        text: 'Load More...'\n    }]\n});\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-list\n     onready=\"basiclist.readylistView\"\n >\n </ext-list>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-list.component';\n\nexport default class BasicListComponent {\n    constructor() {\n        this.store = new Ext.data.Store({\n           data: [\n               {title: 'Item 1'},\n               {title: 'Item 2'},\n               {title: 'Item 3'},\n               {title: 'Item 4'}\n           ]\n       });\n    }\n    readylistView(event) {\n        this.listView = event.detail.cmp;\n        this.listView.setStore(this.store);\n        this.listView.setItemTpl(`{title}`);\n    }\n}\n\nwindow.basiclist = new BasicListComponent();\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-list\n    grouped=\"true\"\n    onready=\"groupedlist.readyGroupedListView\"\n>\n</ext-list>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-list.component';\n\nexport default class GroupedListComponent {\n    constructor() {\n        this.store = new Ext.data.Store({\n            data: [{\n               firstName: 'Peter',\n               lastName: 'Venkman'\n            }, {\n               firstName: 'Raymond',\n                lastName: 'Stantz'\n            }, {\n               firstName: 'Egon',\n               lastName: 'Spengler'\n            }, {\n               firstName: 'Winston',\n               lastName: 'Zeddemore'\n           }],\n\n           sorters: 'lastName',\n\n           grouper: {\n               groupFn: function(record) {\n                   return record.get('lastName')[0];\n               }\n           }\n       });\n   }\n\n   readyGroupedListView(event) {\n       this.groupedlistView = event.detail.cmp;\n       this.groupedlistView.setStore(this.store);\n       this.groupedlistView.setItemTpl(`{firstName} {lastName}`);\n   }\n}\n\nwindow.groupedlist = new GroupedListComponent();\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-list\n    onready=\"positionlistitem.readyPositionedListView\"\n>\n    <ext-button\n       scrollDock=\"bottom\"\n       docked=\"bottom\"\n       text=\"load more...\"\n    >\n    </ext-button>\n</ext-list>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-list.component';\nimport '@sencha/ext-web-components/dist/ext-button.component';\n\nexport default class PositionedListItemComponent {\n\n    constructor() {\n        this.store = new Ext.data.store({\n            data: [{\n                firstName: 'Peter',\n                lastName: 'Venkman'\n             },\n             {\n                firstName: 'Raymond',\n                lastName: 'Stantz'\n             },\n             {\n                firstName: 'Egon',\n                lastName: 'Spengler'\n             },\n             {\n                firstName: 'Winston',\n                lastName: 'Zeddemore'\n           }]\n       })\n\n   }\n\n   readyPositionedListView(event) {\n        this.positionedListView = event.detail.cmp;\n        this.positionedListView.setStore(this.store);\n        this.positionedListView.setItemTpl(`{firstName} {lastName}`);\n   }\n}\n\nwindow.positionlistitem = new PositionedListItemComponent();\n\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtList } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n\n    store = new Ext.data.Store({\n        data: [\n            {title: 'Item 1'},\n            {title: 'Item 2'},\n            {title: 'Item 3'},\n            {title: 'Item 4'}\n        ]\n    });\n\n    render() {\n        return (\n            <ExtList\n                itemTpl=\"{title}\"\n                store={this.store}\n            />\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtList, ExtButton } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n\n    store = new Ext.data.Store({\n        data: [{\n            firstName: 'Peter',\n            lastName: 'Venkman'\n        }, {\n            firstName: 'Raymond',\n            lastName: 'Stantz'\n        }, {\n            firstName: 'Egon',\n            lastName: 'Spengler'\n        }, {\n            firstName: 'Winston',\n            lastName: 'Zeddemore'\n        }],\n\n       sorters: 'lastName',\n\n       grouper: {\n           groupFn: function(record) {\n               return record.get('lastName')[0];\n           }\n        }\n    });\n\n    render() {\n        return (\n            <ExtList\n                itemTpl=\"{firstName} {lastName}\"\n                store={this.store}\n                grouped\n            />\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtList, ExtButton } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n\n    store = new Ext.data.Store({\n        data: [{\n            firstName: 'Peter',\n            lastName: 'Venkman'\n        },\n        {\n            firstName: 'Raymond',\n            lastName: 'Stantz'\n        },\n        {\n            firstName: 'Egon',\n            lastName: 'Spengler'\n        },\n        {\n            firstName: 'Winston',\n            lastName: 'Zeddemore'\n        }]\n    });\n\n    render() {\n        return (\n            <ExtList\n                itemTpl=\"{firstName} {lastName}\"\n                store={this.store}\n             >\n                 <ExtButton\n                     scrollDock=\"bottom\"\n                     docked=\"bottom\"\n                     text=\"load more...\"\n                 />\n            </ExtList>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [`\n            `],\n    template: `\n             <ExtList\n                [store]=\"this.store\"\n                [itemTpl]=\"this.itemTpl\"\n            ></ExtList>\n            `\n})\nexport class AppComponent {\n    store = new Ext.data.Store({\n        data: [\n            {title: 'Item 1'},\n            {title: 'Item 2'},\n            {title: 'Item 3'},\n            {title: 'Item 4'}\n        ]\n    });\n\n    itemTpl = \"{title}\";\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n              <ExtList\n                 [store]=\"this.store\"\n                 [itemTpl]=\"this.itemTpl\"\n                 grouped=\"true\"\n             ></ExtList>\n             `\n })\n export class AppComponent {\n     store = new Ext.data.Store({\n         data: [{\n             firstName: 'Peter',\n             lastName: 'Venkman'\n         }, {\n             firstName: 'Raymond',\n             lastName: 'Stantz'\n         }, {\n             firstName: 'Egon',\n             lastName: 'Spengler'\n         }, {\n             firstName: 'Winston',\n             lastName: 'Zeddemore'\n         }],\n\n         sorters: 'lastName',\n\n         grouper: {\n             groupFn: function(record) {\n                 return record.get('lastName')[0];\n             }\n         }\n    });\n\n    itemTpl = \"{firstName} {lastName}\";\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n             <ExtList\n                 [store]=\"this.store\"\n                 [itemTpl]=\"this.itemTpl\"\n             >\n             <ExtButton\n                   scrollDock=\"bottom\"\n                   docked=\"bottom\"\n                   text=\"load more...\"\n               ></ExtButton>\n             </ExtList>\n             `\n })\n export class AppComponent {\n     store = new Ext.data.Store({\n         data: [{\n             firstName: 'Peter',\n             lastName: 'Venkman'\n         },\n         {\n             firstName: 'Raymond',\n             lastName: 'Stantz'\n         },\n         {\n             firstName: 'Egon',\n             lastName: 'Spengler'\n         },\n         {\n             firstName: 'Winston',\n             lastName: 'Zeddemore'\n         }]\n     });\n\n     itemTpl = \"{firstName} {lastName}\";\n}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"bufferSize","text":"The number of items an `{@link #cfg!infinite infinite}` list will render beyond those immediately\nvisible.\n\nTo prevent the rendering of items while scrolling, these extra items are\nrendered out of view. When the scroller approaches within `minimumBufferSize`\nof the end of the rendered range, the extra items trailing the scroll will be\nrepositioned (and reconfigured) ahead of the scroll.\n","type":"Number","value":"20","src":{"accessor":"453,476,0","name":"453,467,26","text":"453,468,12,368","type":"453,467,18","value":"453,476,0"}},{"$type":"property","accessor":true,"name":"collapseDefaults","since":"7.0","text":"This config object supplies default for the `{@link #cfg!collapsible collapsible}` config. When that\nconfig is simply `true`, this is the complete config object for the group\ncollapser.\n\nNOTE: This config cannot be changed after instantiation. Instead, change the\n`{@link #cfg!collapsible collapsible}` config.\n","type":"Ext.dataview.ListCollapser/Object","value":"{\n    xclass: 'Ext.dataview.ListCollapser'\n}","src":{"accessor":"453,488,0","name":"453,479,53","since":"453,486,19","text":"453,480,12,261","type":"453,479,18","value":"453,490,0"}},{"$type":"property","accessor":true,"name":"collapsible","since":"7.0","text":"This object configures group collapse. It is only applicable when `{@link #cfg!grouped grouped}`.\nSet to `false` to disable group collapsibility. The default value of `true`\nuses the `{@link #cfg!collapseDefaults collapseDefaults}` config for the final collapser configuration\nobject. If this config is an object, it is merged with `{@link #cfg!collapseDefaults collapseDefaults}`\ngiving this object's properties priority over the defaults.\n","type":"Ext.dataview.ListCollapser/Object/Boolean","value":"true","src":{"accessor":"453,504,0","name":"453,496,61","since":"453,502,19","text":"453,497,12,360","type":"453,496,18","value":"453,506,0"}},{"$type":"property","accessor":true,"name":"disclosureProperty","text":"A property to check on each record to display the disclosure on a per record\nbasis. This property must be false to prevent the disclosure from being\ndisplayed on the item.\n","type":"String","value":"'disclosure'","src":{"accessor":"453,518,0","name":"453,513,26","text":"453,514,12,172","type":"453,513,18","value":"453,518,0"}},{"$type":"property","accessor":true,"name":"grouped","optional":true,"text":"Set to `false` turn off all grouping.\nThis setting is only meaningful if the underlying `{@link #cfg!store store}` has a `grouper`.\n","type":"Boolean","value":"true","src":{"accessor":"453,525,0","name":"453,521,28","text":"453,522,12,113","type":"453,521,18","value":"453,521,36"}},{"$type":"property","accessor":true,"name":"groupFooter","since":"6.5.0","text":"The counterpart to `{@link #cfg!groupHeader groupHeader}`, this config controls the footer that is\ndisplayed below each group in a {@link #grouped grouped} list.\n\nFooters are typically hidden when a group is `collapsed` but this can be\nchanged using the `footer` option:\n\n     {\n         xtype: 'list',\n         collapsible: {\n             footer: true  // show footers when collapsed\n         }\n     }\n","type":"Object/Ext.dataview.ItemHeader","value":"null","src":{"accessor":"453,544,0","name":"453,528,50","since":"453,542,19","text":"453,529,12,379","type":"453,528,18","value":"453,546,0"}},{"$type":"property","accessor":true,"name":"groupHeader","since":"6.5.0","text":"This config is used to configure a header to display above each group in a\n{@link #grouped grouped} list. One of the more common uses of this config\nis to set the {@link Ext.dataview.ItemHeader#cfg!tpl tpl}.\n\n     groupHeader: {\n         tpl: 'Group: {name}'\n     }\n","type":"Object/Ext.dataview.ItemHeader","value":"{\n    xtype: 'itemheader',\n    tpl: '{html} ({count})'\n}","src":{"accessor":"453,561,0","name":"453,550,50","since":"453,559,19","text":"453,551,12,267","type":"453,550,18","value":"453,563,0"}},{"$type":"property","access":"private","accessor":true,"name":"grouping","since":"7.0","value":"null","src":{"access":"453,737,12","accessor":"453,740,0","name":"453,740,0","since":"453,738,19","value":"453,740,0"}},{"$type":"property","access":"private","accessor":true,"name":"groupPlaceholder","since":"7.0","text":"This config provides defaults for the placeholder items rendered for collapsed\ngroups.\n","type":"Object/Ext.dataview.ListItemPlaceholder","value":"{\n    xtype: 'listitemplaceholder'\n}","src":{"access":"453,574,12","accessor":"453,576,0","name":"453,570,59","since":"453,573,19","text":"453,571,12,87","type":"453,570,18","value":"453,578,0"}},{"$type":"property","access":"private","accessor":true,"name":"horizontalOverflow","since":"6.5.0","value":"null","src":{"access":"453,743,12","accessor":"453,746,0","name":"453,746,0","since":"453,744,19","value":"453,748,0"}},{"$type":"property","accessor":true,"name":"indexBar","text":"Set to `true` to render an alphabet IndexBar docked on the right. This can also\nbe a config object for the {@link Ext.dataview.IndexBar IndexBar} component.\n","type":"Boolean/Object/Ext.dataview.IndexBar","value":"null","src":{"accessor":"453,588,0","name":"453,584,56","text":"453,585,12,157","type":"453,584,18","value":"453,588,0"}},{"$type":"property","accessor":true,"name":"infinite","optional":true,"text":"Set to `true` to if this list should anticipate too many rows to render to the\nDOM at one time. When set to `true`, only a fixed number of rows is rendered at\nonce, depending on the `{@link #cfg!height height}` or `{@link #cfg!maxHeight maxHeight}` of the list.\n\nWhen using this mode in an auto-height situation (where the `list` should be\nthe height of its items), a `{@link #cfg!maxHeight maxHeight}` setting is required. This is due to\nthe fact that the rendered items are absolutely positioned. As such they do not\ndirectly contribute to the list's height.\n\nWhen `{@link #cfg!maxHeight maxHeight}` is set, however, an infinite list uses that setting to decide\nhow many items to render **and** will set an appropriate height on its innermost\nelement, thereby allowing the list to achieve the proper height.\n\nNote that this configuration can not be dynamically changed after the list has\ninstantiated.\n","type":"Boolean","value":"false","src":{"accessor":"453,608,0","name":"453,591,28","text":"453,592,12,815","type":"453,591,18","value":"453,591,37"}},{"$type":"property","access":"private","accessor":true,"name":"innerCtHeight","since":"6.5.0","value":"null","src":{"access":"453,752,12","accessor":"453,755,0","name":"453,755,0","since":"453,753,19","value":"453,755,0"}},{"$type":"property","access":"private","accessor":true,"name":"innerWidth","since":"6.5.0","value":"null","src":{"access":"453,758,12","accessor":"453,761,0","name":"453,761,0","since":"453,759,19","value":"453,761,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"itemConfig","text":"The object is used to configure the data items created by this data view. The\n`{@link #cfg!xtype xtype}` property of this config overrides the container's `{@link #cfg!defaultType defaultType}`.\n","type":"Object/Ext.Component","value":"{\n    xtype: 'simplelistitem'\n}","src":{"accessor":"444,90,0","inheritdoc":"453,978,8","name":"453,977,13","text":"444,87,12,151","type":"444,86,18","value":"453,980,0"}},{"$type":"property","access":"private","name":"maintainChildNodes","since":"6.5.0","text":"Set to `true` to maintain the order of rendered items in the DOM `childNodes`. In\nan `{@link #cfg!infinite infinite}` list this is not normally done for performance reasons but this can\ncreate accessibility issues.\n","type":"Boolean","value":"false","src":{"access":"453,990,8","name":"453,985,23","since":"453,989,15","text":"453,986,8,193","type":"453,985,14","value":"453,992,0"}},{"$type":"property","accessor":true,"name":"minimumBufferDistance","text":"The minimum number of items beyond the visible area of an `{@link #cfg!infinite infinite}` list to\nallow before repositioning items on the opposite side to balance the visible\narea inside the rendered range.\n","type":"Number","value":"5","src":{"accessor":"453,616,0","name":"453,611,26","text":"453,612,12,186","type":"453,611,18","value":"453,616,0"}},{"$type":"property","accessor":true,"controllable":true,"name":"onItemDisclosure","text":"Set to `true` to display a disclosure icon on each list item. The list will\nthen fire the `{@link #event!disclose disclose}` event, and the event can be stopped before `{@link #event!childtap childtap}`.\nBy setting this config to a function, the function passed will be called when\nthe disclosure is tapped. This can be either a function object or the name of\na {@link Ext.app.ViewController controller} method.\n\nFinally you can specify an object with a `scope` and `handler` property defined.\nThis will also be bound to the tap event listener and is useful when you want\nto change the scope of the handler.\n","type":"Boolean/Function/String/Object","value":"null","src":{"accessor":"453,631,0","controllable":"453,629,12","name":"453,619,50","text":"453,620,12,560","type":"453,619,18","value":"453,632,0"}},{"$type":"property","accessor":true,"name":"pinFooters","since":"6.5.0","text":"Whether or not to pin {@link #pinnedFooter footers} on bottom of item groups\nwhile scrolling.\n","type":"Boolean","value":"false","src":{"accessor":"453,655,0","name":"453,650,27","since":"453,653,19","text":"453,651,12,94","type":"453,650,18","value":"453,655,0"}},{"$type":"property","accessor":true,"name":"pinHeaders","text":"Whether or not to pin {@link #pinnedHeader headers} on top of item groups\nwhile scrolling. Only applicable for `{@link #cfg!infinite infinite}` lists.\n","type":"Boolean","value":"true","src":{"accessor":"453,662,0","name":"453,658,27","text":"453,659,12,129","type":"453,658,18","value":"453,662,0"}},{"$type":"property","accessor":true,"name":"pinnedFooter","since":"6.5.0","text":"A config object for the pinned footer. Only applicable when {@link #pinFooters}\nand {@link #grouped} are `true`.\n","type":"Object","value":"null","src":{"accessor":"453,670,0","name":"453,665,26","since":"453,668,19","text":"453,666,12,113","type":"453,665,18","value":"453,672,0"}},{"$type":"property","access":"private","accessor":true,"name":"pinnedFooterHeight","since":"6.5.0","value":"null","src":{"access":"453,764,12","accessor":"453,767,0","name":"453,767,0","since":"453,765,19","value":"453,767,0"}},{"$type":"property","accessor":true,"name":"pinnedHeader","text":"A config object for the pinned header. Only applicable when {@link #pinHeaders}\nand {@link #grouped} are `true`.\n","type":"Object","value":"{\n    xtype: 'itemheader'\n}","src":{"accessor":"453,680,0","name":"453,676,26","text":"453,677,12,113","type":"453,676,18","value":"453,682,0"}},{"$type":"property","access":"private","accessor":true,"name":"pinnedHeaderHeight","since":"6.5.0","value":"null","src":{"access":"453,770,12","accessor":"453,773,0","name":"453,773,0","since":"453,771,19","value":"453,773,0"}},{"$type":"property","accessor":true,"name":"preventSelectionOnDisclose","text":"When `true` item selection is prevented when the user taps a disclose icon.\n","type":"Boolean","value":"true","src":{"accessor":"453,691,0","name":"453,688,27","text":"453,689,12,76","type":"453,688,18","value":"453,691,0"}},{"$type":"property","accessor":true,"name":"preventSelectionOnTool","since":"6.5.0","text":"When `true` item selection is prevented when the user taps on a `tool`. This\ncan be overridden on specific tools by placing the `preventSelection` property\non the tool:\n\n     tools: [{\n         type: 'gear',\n         preventSelection: false\n     }]\n","type":"Boolean","value":"true","src":{"accessor":"453,706,0","name":"453,694,27","since":"453,704,19","text":"453,695,12,250","type":"453,694,18","value":"453,706,0"}},{"$type":"property","accessor":true,"name":"rowLines","optional":true,"text":"Set this to `false` to suppress the borders in between the items in this list.\nBy default the presence of borders between items is determined by the stylesheet.\n","type":"Boolean","value":"true","src":{"accessor":"453,713,0","name":"453,709,28","text":"453,710,12,161","type":"453,709,18","value":"453,709,37"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"scrollable","text":"Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or `null`) to disable scrolling - this is the default.\n- `{@link #cfg!x x}` or `horizontal` to enable horizontal scrolling only\n- `{@link #cfg!y y}` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a `{@link Ext.scroll.Scroller}` if\nif advanced configuration is needed.\n\nThe getter for this config returns the {@link Ext.scroll.Scroller Scroller}\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n","type":"Boolean/String/Object","value":"{\n    x: false,\n    y: true\n}","src":{"accessor":"410,422,12","inheritdoc":"453,1006,8","name":"453,1005,13","text":"410,406,12,685","type":"410,405,18","value":"453,1008,0"}},{"$type":"property","access":"private","accessor":true,"name":"topRenderedIndex","since":"6.5.0","value":"null","src":{"access":"453,776,12","accessor":"453,779,0","name":"453,779,0","since":"453,777,19","value":"453,779,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Set the `xtype` of `itemConfig` instead.\n","deprecatedVersion":"6.5.0","name":"useSimpleItems","optional":true,"text":"Setting this to `false` changes the `{@link #cfg!xtype xtype}` of the `{@link #cfg!itemConfig itemConfig}` to the more\nflexible {@link Ext.dataview.ListItem listitem} instead of the more efficient\nsetting of {@link Ext.dataview.SimpleListItem simplelistitem}.\n","type":"Boolean","value":"true","src":{"accessor":"453,723,0","deprecatedMessage":"453,721,12","deprecatedVersion":"453,721,12","name":"453,716,28","text":"453,717,12,218","type":"453,716,18","value":"453,716,43"}},{"$type":"property","accessor":true,"name":"variableHeights","optional":true,"since":"6.5.0","text":"Set to `true` if the items in this list do not all have the same height. This\nis `false` by default to avoid measure each row to determine its height.\n","type":"Boolean","value":"false","src":{"accessor":"453,731,0","name":"453,726,28","since":"453,729,19","text":"453,727,12,151","type":"453,726,18","value":"453,726,44"}},{"$type":"property","access":"private","accessor":true,"name":"verticalOverflow","since":"6.5.0","text":"This config is set to `true` when an `{@link #cfg!infinite infinite}` list has vertical overflow.\n","type":"Boolean","value":"null","src":{"access":"453,784,12","accessor":"453,787,0","name":"453,782,27","since":"453,785,19","text":"453,783,12,76","type":"453,782,18","value":"453,787,0"}},{"$type":"property","access":"private","accessor":true,"name":"visibleHeight","since":"6.5.0","text":"The height of the container in pixels. This is a config to simplify processing\nchanges in container height.\n","type":"Number","value":"null","src":{"access":"453,793,12","accessor":"453,796,0","name":"453,790,26","since":"453,794,19","text":"453,791,12,108","type":"453,790,18","value":"453,796,0"}},{"$type":"property","access":"private","accessor":true,"name":"visibleLeft","since":"6.5.0","value":"null","src":{"access":"453,799,12","accessor":"453,802,0","name":"453,802,0","since":"453,800,19","value":"453,802,0"}},{"$type":"property","access":"private","accessor":true,"name":"visibleTop","since":"6.5.0","text":"The top-most visible pixel coordinate. This is the same as the `{@link #cfg!y y}` value of\nthe `Scroller` but is a config to simplify processing scrolling changes.\n","type":"Number","value":"null","src":{"access":"453,808,12","accessor":"453,811,0","name":"453,805,26","since":"453,809,19","text":"453,806,12,149","type":"453,805,18","value":"453,811,0"}},{"$type":"property","access":"private","accessor":true,"name":"visibleWidth","since":"6.5.0","value":"null","src":{"access":"453,814,12","accessor":"453,817,0","name":"453,817,0","since":"453,815,19","value":"453,817,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforegroupcollapse","since":"7.0","text":"Fires before a group collapse starts. Return `false` to cancel the collapse.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.List","src":{"name":"453,823,35","type":"453,823,16"}},{"$type":"param","name":"group","type":"Ext.dataview.ListGroup","src":{"name":"453,824,40","type":"453,824,16"}}],"src":{"name":"453,821,15","since":"453,826,15","text":"453,822,8,77"}},{"$type":"event","name":"beforegroupexpand","since":"7.0","text":"Fires before a group expand starts. Return `false` to cancel the expand.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.List","src":{"name":"453,832,35","type":"453,832,16"}},{"$type":"param","name":"group","type":"Ext.dataview.ListGroup","src":{"name":"453,833,40","type":"453,833,16"}}],"src":{"name":"453,830,15","since":"453,835,15","text":"453,831,8,73"}},{"$type":"event","name":"childdoubletap","since":"6.5.0","text":"Fires when a child is double tapped.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,931,35","text":"453,931,40,11","type":"453,931,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,932,35","text":"453,932,44,28","type":"453,932,16"}}],"src":{"name":"453,929,15","since":"453,934,15","text":"453,930,8,37"}},{"$type":"event","name":"childlongpress","since":"6.5.0","text":"Fires when a child is long-pressed.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,904,35","text":"453,904,40,11","type":"453,904,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,905,35","text":"453,905,44,28","type":"453,905,16"}}],"src":{"name":"453,902,15","since":"453,907,15","text":"453,903,8,36"}},{"$type":"event","name":"childmouseenter","since":"6.5.0","text":"Fires when the mouse pointer enters a child.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,940,35","text":"453,940,40,11","type":"453,940,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,941,35","text":"453,941,44,28","type":"453,941,16"}}],"src":{"name":"453,938,15","since":"453,943,15","text":"453,939,8,45"}},{"$type":"event","name":"childmouseleave","since":"6.5.0","text":"Fires when the mouse pointer leaves a child.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,949,35","text":"453,949,40,11","type":"453,949,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,950,35","text":"453,950,44,28","type":"453,950,16"}}],"src":{"name":"453,947,15","since":"453,952,15","text":"453,948,8,45"}},{"$type":"event","name":"childsingletap","since":"6.5.0","text":"Fires when a child is single tapped.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,922,35","text":"453,922,40,11","type":"453,922,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,923,35","text":"453,923,44,28","type":"453,923,16"}}],"src":{"name":"453,920,15","since":"453,925,15","text":"453,921,8,37"}},{"$type":"event","name":"childtap","since":"6.5.0","text":"Fires when a child is tapped.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,895,35","text":"453,895,40,11","type":"453,895,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,896,35","text":"453,896,44,28","type":"453,896,16"}}],"src":{"name":"453,893,15","since":"453,898,15","text":"453,894,8,30"}},{"$type":"event","name":"childtaphold","since":"6.5.0","text":"Fires when a child is tap-held.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,913,35","text":"453,913,40,11","type":"453,913,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,914,35","text":"453,914,44,28","type":"453,914,16"}}],"src":{"name":"453,911,15","since":"453,916,15","text":"453,912,8,32"}},{"$type":"event","name":"childtouchcancel","since":"6.5.0","text":"Fires when a touch is cancelled.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,886,35","text":"453,886,40,11","type":"453,886,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,887,35","text":"453,887,44,28","type":"453,887,16"}}],"src":{"name":"453,884,15","since":"453,889,15","text":"453,885,8,33"}},{"$type":"event","name":"childtouchend","since":"6.5.0","text":"Fires when a touch ends on a child.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,877,35","text":"453,877,40,11","type":"453,877,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,878,35","text":"453,878,44,28","type":"453,878,16"}}],"src":{"name":"453,875,15","since":"453,880,15","text":"453,876,8,36"}},{"$type":"event","name":"childtouchmove","since":"6.5.0","text":"Fires when a touch move occurs on a child.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,868,35","text":"453,868,40,11","type":"453,868,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,869,35","text":"453,869,44,28","type":"453,869,16"}}],"src":{"name":"453,866,15","since":"453,871,15","text":"453,867,8,43"}},{"$type":"event","name":"childtouchstart","since":"6.5.0","text":"Fires when a child is first touched.\n","items":[{"$type":"param","name":"this","text":"This list.\n","type":"Ext.dataview.List","src":{"name":"453,859,35","text":"453,859,40,11","type":"453,859,16"}},{"$type":"param","name":"location","text":"The location for the event.\n","type":"Ext.list.Location","src":{"name":"453,860,35","text":"453,860,44,28","type":"453,860,16"}}],"src":{"name":"453,857,15","since":"453,862,15","text":"453,858,8,37"}},{"$type":"event","name":"disclose","preventable":true,"text":"Fires whenever a disclosure is handled\n","items":[{"$type":"param","name":"list","text":"The List instance\n","type":"Ext.dataview.List","src":{"name":"453,959,35","text":"453,959,40,18","type":"453,959,16"}},{"$type":"param","name":"record","text":"The record associated to the item\n","type":"Ext.data.Model","src":{"name":"453,960,32","text":"453,960,39,34","type":"453,960,16"}},{"$type":"param","name":"target","text":"The element disclosed\n","type":"HTMLElement","src":{"name":"453,961,29","text":"453,961,36,22","type":"453,961,16"}},{"$type":"param","name":"index","text":"The index of the item disclosed\n","type":"Number","src":{"name":"453,962,24","text":"453,962,30,32","type":"453,962,16"}},{"$type":"param","name":"event","text":"The event object\n","type":"Ext.event.Event","src":{"name":"453,963,33","text":"453,963,39,17","type":"453,963,16"}}],"src":{"name":"453,956,15","preventable":"453,957,8","text":"453,958,8,39"}},{"$type":"event","name":"groupcollapse","since":"7.0","text":"Fires when a group collapse starts.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.List","src":{"name":"453,841,35","type":"453,841,16"}},{"$type":"param","name":"group","type":"Ext.dataview.ListGroup","src":{"name":"453,842,40","type":"453,842,16"}}],"src":{"name":"453,839,15","since":"453,844,15","text":"453,840,8,36"}},{"$type":"event","name":"groupexpand","since":"7.0","text":"Fires when a group expand starts.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.List","src":{"name":"453,850,35","type":"453,850,16"}},{"$type":"param","name":"group","type":"Ext.dataview.ListGroup","src":{"name":"453,851,40","type":"453,851,16"}}],"src":{"name":"453,848,15","since":"453,853,15","text":"453,849,8,34"}},{"$type":"event","name":"itemaction","text":"Fires whenever a swipe action has been triggered from a list item.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.List","src":{"name":"465,15,35","type":"465,15,16"}},{"$type":"param","name":"index","text":"The index of the swipped item.\n","type":"Number","src":{"name":"465,16,24","text":"465,16,30,31","type":"465,16,16"}},{"$type":"param","name":"record","text":"The record associated to the item.\n","type":"Ext.data.Model","src":{"name":"465,17,32","text":"465,17,39,35","type":"465,17,16"}},{"$type":"param","name":"action","text":"The triggered action key.\n","type":"String","src":{"name":"465,18,24","text":"465,18,31,26","type":"465,18,16"}}],"src":{"name":"465,13,15","text":"465,14,8,67"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getScrollableClientRegion","text":"This method is required by the Scroller to return the scrollable client region\n","items":[{"$type":"return","text":"The scrolling viewport region.\n","type":"Ext.util.Region","src":{"text":"453,2971,38,31","type":"453,2971,21"}}],"src":{"access":"453,2972,12","name":"453,2974,0","text":"453,2970,12,79"}},{"$type":"method","name":"groupFrom","text":"Returns the `ListGroup` instance for the given `key`.\n","items":[{"$type":"param","name":"key","text":"The group string, index,\n`Group` instance or a record in the group.\n","type":"String/Number/Ext.data.Model/Ext.data.Group","src":{"name":"453,1161,61","text":"453,1161,65,25:453,1162,8,43","type":"453,1161,16"}},{"$type":"return","type":"Ext.dataview.ListGroup","src":{"type":"453,1163,17"}}],"src":{"name":"453,1165,0","text":"453,1160,8,54"}},{"$type":"method","name":"isRecordRendered","text":"For infinite lists, not all records are represented in the DOM.\n\nThis method will return `true` if the passed record index or\n{@link Ext.data.Model record} is represented in the DOM.\n","items":[{"$type":"param","name":"recordOrIndex","text":"The {@link Ext.data.Model record} or\nrecord index to test.\n","type":"Number/Ext.data.Model","src":{"name":"453,1236,39","text":"453,1236,53,37:453,1237,8,22","type":"453,1236,16"}},{"$type":"return","text":"`true` if the record is rendered.\n","type":"Boolean","src":{"text":"453,1238,26,34","type":"453,1238,17"}}],"src":{"name":"453,1240,0","text":"453,1231,8,184"}},{"$type":"method","access":"private","name":"reorderItem","text":"Moves the given `item` to be before the `ref` item or index. For `{@link #cfg!infinite infinite}`\nlists this does not impact the DOM childNodes unless `{@link #cfg!maintainChildNodes maintainChildNodes}` is\nspecified. In this case the reordering only impacts this container's `{@link #cfg!items items}`\nand `innerItems` collections.\n\nMaintaining the order of `{@link #property!dataItems dataItems}` is a separate concern.\n","items":[{"$type":"param","name":"item","text":"The item to reorder.\n","type":"Ext.Component","src":{"name":"453,3605,35","text":"453,3605,40,21","type":"453,3605,20"}},{"$type":"param","name":"ref","text":"The item before which `item` will be placed\nor the index in `innerItems` where `item` will be inserted.\n","type":"Number/Ext.Component","src":{"name":"453,3606,42","text":"453,3606,46,44:453,3607,12,60","type":"453,3606,20"}},{"$type":"param","name":"offset","optional":true,"text":"An optional adjustment to add to `ref`. Pass `1` to\ninsert `item` after `ref`.\n","type":"Number","value":"0","src":{"name":"453,3608,29","text":"453,3608,39,52:453,3609,12,27","type":"453,3608,20","value":"453,3608,36"}}],"src":{"access":"453,3610,12","name":"453,3612,0","text":"453,3598,12,322"}},{"$type":"method","name":"scrollToRecord","text":"Scrolls the list so that the specified record is at the top.\n","items":[{"$type":"param","name":"record","text":"Record in the store to scroll to.\n","type":"Ext.data.Model","src":{"name":"453,1271,32","text":"453,1271,39,34","type":"453,1271,16"}},{"$type":"param","name":"animation","optional":true,"text":"Determines if scrolling is animated.\n","type":"Boolean","value":"false","src":{"name":"453,1272,26","text":"453,1272,43,37","type":"453,1272,16","value":"453,1272,36"}}],"src":{"name":"453,1274,0","text":"453,1269,8,62"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'list'","src":{"inheritdoc":"453,972,8","name":"453,971,18","text":"18,529,8,532","value":"453,974,0"}},{"$type":"property","access":"private","name":"renderInfo","text":"This object tracks coordinate and index information for the rendered\nrange of records for an `{@link #cfg!infinite infinite}` list.\n","type":"Object","value":"{\n    //\n    //  :      ...      :  indexTop ( = 100)\n    //  :               :\n    //  +---------------+ <-- top  (approx indexTop * rowHeight)\n    //  | item 100      | \\\n    //  +---------------+  \\\n    //  | item 101      |   > height\n    //  +---------------+  /\n    //  | item 102      | /\n    //  +---------------+ <-- bottom ( = top + height)\n    //  :               :\n    //  :      ...      : count - indexBottom ( = 103)\n    //\n    atBegin: false,\n    atEnd: false,\n    bottom: 0,\n    height: 0,\n    top: 0,\n    indexBottom: 0,\n    indexTop: 0\n}","items":[{"$type":"property","name":"atBegin","text":"Set to `true` if the rendered range\nis at the beginning of the store (`indexTop` is 0).\n","type":"Number","src":{"name":"453,1566,46","text":"453,1566,54,36:453,1567,16,53","type":"453,1566,27"}},{"$type":"property","name":"atEnd","text":"Set to `true` if the rendered range\nis at the end of the store (`indexBottom === store.getCount()`).\n","type":"Number","src":{"name":"453,1569,46","text":"453,1569,52,36:453,1570,16,66","type":"453,1569,27"}},{"$type":"property","name":"top","text":"The `{@link #cfg!y y}` coordinate of the top-most\nrow in the rendered range.\n","type":"Number","src":{"name":"453,1572,46","text":"453,1572,50,35:453,1573,16,28","type":"453,1572,27"}},{"$type":"property","name":"bottom","text":"The `{@link #cfg!y y}` coordinate just beyond\nthe bottom of the rendered range.\n","type":"Number","src":{"name":"453,1575,46","text":"453,1575,53,31:453,1576,16,35","type":"453,1575,27"}},{"$type":"property","name":"height","text":"The height of the rendered range.\n","type":"Number","src":{"name":"453,1578,46","text":"453,1578,53,34","type":"453,1578,27"}},{"$type":"property","name":"indexTop","text":"The store index of the top-most\nrecord in the rendered range.\n","type":"Number","src":{"name":"453,1580,46","text":"453,1580,55,32:453,1581,16,31","type":"453,1580,27"}},{"$type":"property","name":"indexBottom","text":"The store index one beyond\nthe last record in the rendered range. This ensures that subtracting\n`indexBottom - indexTop` is the number of records in the rendered range.\n","type":"Number","src":{"name":"453,1583,46","text":"453,1583,58,27:453,1584,16,142","type":"453,1583,27"}}],"src":{"access":"453,1586,16","name":"453,1562,35","text":"453,1563,16,111","type":"453,1562,27","value":"453,1588,0"}},{"$type":"property","access":"private","name":"rowHeight","text":"The height of rows in the list. If `{@link #cfg!variableHeights variableHeights}` is `true` this is the minimum\nrow height.\n","type":"Number","value":"0","src":{"access":"453,1000,8","name":"453,997,27","text":"453,998,8,95","type":"453,997,19","value":"453,1002,0"}},{"$type":"property","inheritdoc":true,"name":"template","text":"An array of child elements to use as the children of the main element in the {@link\n#element} template.  Only used if \"children\" are not specified explicitly in the\n{@link #element} template.\n","type":"Array","value":"[\n    {\n        reference: 'bodyElement',\n        cls: Ext.baseCSSPrefix + 'body-el',\n        uiCls: 'body-el',\n        children: [\n            {\n                // This el is width:100% and flex:1 (for full height)\n                reference: 'outerCt',\n                className: Ext.baseCSSPrefix + 'list-outer-ct',\n                children: [\n                    {\n                        // This el is just width:100% or explicitly sized of hscroll\n                        reference: 'innerCt',\n                        className: Ext.baseCSSPrefix + 'list-inner-ct'\n                    }\n                ]\n            }\n        ]\n    }\n]","src":{"inheritdoc":"453,1020,8","name":"453,1019,18","text":"18,511,8,192","type":"18,510,19","value":"453,1022,0"}}]}],"src":{"alias":"453,449,0","alternateClassNames":"453,447,0","extends":"453,446,0","mixins":"453,462,0","name":"453,445,0","requires":"453,454,0:453,455,0:453,456,0:453,457,0:453,458,0","text":"453,2,4,10794"},"group":"Grids, List & Trees","displayName":"Dataview List"},{"$type":"class","alias":"widget.nestedlist","alternateClassNames":"Ext.NestedList","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.dataview.NestedList","requires":"Ext.layout.Card,Ext.dataview.List,Ext.TitleBar,Ext.Button,Ext.XTemplate,Ext.data.StoreManager,Ext.data.TreeStore,Ext.data.NodeStore","text":"NestedList provides a miller column interface to navigate between nested sets\nand provide a clean interface with limited screen real-estate.\n\n```javascript\n@example({ framework: 'extjs' })\n var data = {\n     text: 'Groceries',\n     items: [{\n         text: 'Drinks',\n         items: [{\n             text: 'Water',\n             items: [{\n                 text: 'Sparkling',\n                 leaf: true\n             }, {\n                 text: 'Still',\n                 leaf: true\n             }]\n         }, {\n             text: 'Coffee',\n             leaf: true\n         }, {\n             text: 'Espresso',\n             leaf: true\n         }, {\n             text: 'Redbull',\n             leaf: true\n         }, {\n             text: 'Coke',\n             leaf: true\n         }, {\n             text: 'Diet Coke',\n             leaf: true\n         }]\n     }, {\n         text: 'Fruit',\n         items: [{\n             text: 'Bananas',\n             leaf: true\n         }, {\n             text: 'Lemon',\n             leaf: true\n         }]\n     }, {\n         text: 'Snacks',\n         items: [{\n             text: 'Nuts',\n             leaf: true\n         }, {\n             text: 'Pretzels',\n             leaf: true\n         }, {\n             text: 'Wasabi Peas',\n             leaf: true\n         }]\n     }]\n};\n\nExt.define('ListItem', {\n    extend: 'Ext.data.Model',\n    config: {\n        fields: [{\n            name: 'text',\n            type: 'string'\n        }]\n    }\n});\n\nvar store = Ext.create('Ext.data.TreeStore', {\n    model: 'ListItem',\n    defaultRootProperty: 'items',\n    root: data\n});\n\nvar nestedList = Ext.create('Ext.NestedList', {\n    fullscreen: true,\n    title: 'Groceries',\n    displayField: 'text',\n    store: store\n});\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"fit\">\n    <ext-nestedlist\n        displayField=\"text\"\n        height=\"600px\"\n        title=\"Groceries\"\n        onready=\"nestedlist.readyNestedList\"\n    >\n    </ext-nestedlist>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-nestedlist.component';\n\nexport default class NestedListComponent {\n    constructor() {\n        this.store = Ext.create('Ext.data.TreeStore', {\n            defaultRootProperty: 'items',\n            root: {\n                text: 'Groceries',\n                items: [{\n                    text: 'Drinks',\n                    items: [{\n                        text: 'Water',\n                        items: [{\n                            text: 'Sparkling',\n                            leaf: true\n                        }, {\n                            text: 'Still',\n                            leaf: true\n                        }]\n                    }]\n                },{\n                text: 'Snacks',\n                items: [{\n                    text: 'Nuts',\n                    leaf: true\n                 }, {\n                    text: 'Pretzels',\n                    leaf: true\n                 }, {\n                    text: 'Wasabi Peas',\n                    leaf: true\n                 }]\n               }]\n           }\n        });\n   }\n   readyNestedList(event) {\n       this.nestedListView = event.detail.cmp;\n       this.nestedListView.setStore(this.store);\n   }\n}\n\nwindow.nestedlist = new NestedListComponent();\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtNestedList } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n\n    store = Ext.create('Ext.data.TreeStore', {\n        defaultRootProperty: 'items',\n        root: {\n            text: 'Groceries',\n            items: [{\n                text: 'Drinks',\n                items: [{\n                    text: 'Water',\n                    items: [{\n                        text: 'Sparkling',\n                        leaf: true\n                    }, {\n                        text: 'Still',\n                        leaf: true\n                    }]\n                }]\n            },{\n                text: 'Snacks',\n                items: [{\n                    text: 'Nuts',\n                    leaf: true\n                }, {\n                    text: 'Pretzels',\n                    leaf: true\n                }, {\n                    text: 'Wasabi Peas',\n                    leaf: true\n                }]\n            }]\n        }\n    });\n\n    render() {\n        return (\n            <ExtNestedList\n                displayField=\"text\"\n                store={this.store}\n                title=\"Groceries\"\n            />\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [`\n            `],\n    template: `\n             <ExtNestedList\n                [displayField]=\"'text'\"\n                [height]=\"'600px'\"\n                [store]=\"this.store\"\n                title=\"Groceries\"\n            ></ExtNestedList>\n            `\n})\nexport class AppComponent {\n    store = Ext.create('Ext.data.TreeStore', {\n        defaultRootProperty: 'items',\n        root: {\n            text: 'Groceries',\n            items: [{\n                text: 'Drinks',\n                items: [{\n                    text: 'Water',\n                    items: [{\n                        text: 'Sparkling',\n                        leaf: true\n                    }, {\n                        text: 'Still',\n                        leaf: true\n                    }]\n                }]\n            },{\n                text: 'Snacks',\n                items: [{\n                    text: 'Nuts',\n                    leaf: true\n                }, {\n                    text: 'Pretzels',\n                    leaf: true\n                }, {\n                    text: 'Wasabi Peas',\n                    leaf: true\n                }]\n            }]\n        }\n    });\n\n}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"allowDeselect","text":"Set to `true` to allow the user to deselect leaf items via interaction.\n","type":"Boolean","value":"false","src":{"accessor":"460,322,12","name":"460,320,27","text":"460,321,12,72","type":"460,320,18","value":"460,324,0"}},{"$type":"property","accessor":true,"name":"backButton","text":"The configuration for the back button used in the nested list.\n","type":"Object","value":"{\n    hidden: true\n}","src":{"accessor":"460,417,0","name":"460,415,26","text":"460,415,37,63","type":"460,415,18","value":"460,417,0"}},{"$type":"property","accessor":true,"name":"backText","text":"The label to display for the back button.\n","type":"String","value":"'Back'","src":{"accessor":"460,271,12","name":"460,269,26","text":"460,270,12,42","type":"460,269,18","value":"460,273,0"}},{"$type":"property","name":"cardSwitchAnimation","removedMessage":"please use {@link Ext.layout.Card#animation}\n","removedVersion":"2.0.0","text":"Animation to be used during transitions of cards.\n","type":"String/Object/Boolean","src":{"name":"460,263,41","removedMessage":"460,265,12","removedVersion":"460,265,12","text":"460,264,12,50","type":"460,263,18"}},{"$type":"property","accessor":true,"name":"detailCard","text":"provides the information for a leaf\nin a Miller column list. In a Miller column, users follow a\nhierarchial tree structure to a leaf, which provides information\nabout the item in the list. The detailCard lists the information at\nthe leaf.\n\nSee http://en.wikipedia.org/wiki/Miller_columns\n","type":"Ext.Component","value":"null","src":{"accessor":"460,410,12","name":"460,402,33","text":"460,402,44,36:460,403,12,253","type":"460,402,18","value":"460,412,0"}},{"$type":"property","accessor":true,"name":"detailContainer","text":"The container of the `{@link #cfg!detailCard detailCard}`.\nA detailContainer is a reference to the container where a detail card\ndisplays.\n\nSee http://en.wikipedia.org/wiki/Miller_columns\n\nThe two possible values for a detailContainer are undefined (default),\nwhich indicates that a detailCard appear in the same container, or you\ncan specify a new container location. The default condition uses the\ncurrent List container.\n\nThe following example shows creating a location for a detailContainer:\n\nvar detailContainer = Ext.create('Ext.Container', {\n    layout: 'card'\n});\n\nvar nestedList = Ext.create('Ext.NestedList', {\n    store: treeStore,\n    detailCard: true,\n    detailContainer: detailContainer\n});\n\nThe default value is typically used for phone devices in portrait mode\nwhere the small screen size dictates that the detailCard replace the\ncurrent container.\n","type":"Ext.Container","value":"undefined","src":{"accessor":"460,397,12","name":"460,371,33","text":"460,371,49,35:460,372,12,807","type":"460,371,18","value":"460,399,0"}},{"$type":"property","accessor":true,"name":"displayField","text":"Display field to use when setting item text and title.\nThis configuration is ignored when overriding {@link #getItemTextTpl} or\n{@link #getTitleTextTpl} for the item text or title.\n","type":"String","value":"'text'","src":{"accessor":"460,294,12","name":"460,290,26","text":"460,291,12,181","type":"460,290,18","value":"460,296,0"}},{"$type":"property","accessor":true,"name":"emptyText","text":"Empty text to display when a subtree is empty.\n","type":"String","value":"'No items available.'","src":{"accessor":"460,308,12","name":"460,306,26","text":"460,307,12,47","type":"460,306,18","value":"460,310,0"}},{"$type":"property","access":"private","accessor":true,"name":"lastActiveList","value":"null","src":{"access":"460,440,12","accessor":"460,442,0","name":"460,442,0","value":"460,442,0"}},{"$type":"property","access":"private","accessor":true,"name":"lastNode","value":"null","src":{"access":"460,435,12","accessor":"460,437,0","name":"460,437,0","value":"460,437,0"}},{"$type":"property","accessor":true,"hide":true,"name":"layout","type":"String","value":"{\n    type: 'card',\n    animation: {\n        type: 'slide',\n        duration: 250,\n        direction: 'left'\n    }\n}","src":{"accessor":"460,354,12","hide":"460,353,12","name":"460,352,26","type":"460,352,18","value":"460,356,0"}},{"$type":"property","accessor":true,"name":"listConfig","text":"An optional config object which is merged with the default\nconfiguration used to create each nested list.\n","type":"Object","value":"null","src":{"accessor":"460,425,0","name":"460,422,26","text":"460,422,37,59:460,423,12,47","type":"460,422,18","value":"460,425,0"}},{"$type":"property","accessor":true,"name":"loadingText","text":"Loading text to display when a subtree is loading.\n","type":"String","value":"'Loading...'","src":{"accessor":"460,301,12","name":"460,299,26","text":"460,300,12,51","type":"460,299,18","value":"460,303,0"}},{"$type":"property","accessor":true,"name":"onItemDisclosure","text":"Maps to the {@link Ext.List#onItemDisclosure} configuration for individual lists.\n","type":"Boolean/Function","value":"false","src":{"accessor":"460,315,12","name":"460,313,36","text":"460,314,12,82","type":"460,313,18","value":"460,317,0"}},{"$type":"property","accessor":true,"name":"store","text":"The tree store to be used for this nested list.\n","type":"Ext.data.TreeStore/String","value":"null","src":{"accessor":"460,368,0","name":"460,366,45","text":"460,366,51,48","type":"460,366,18","value":"460,368,0"}},{"$type":"property","accessor":true,"name":"title","text":"The title of the toolbar\n","type":"String","value":"''","src":{"accessor":"460,347,12","name":"460,346,26","text":"460,346,32,25","type":"460,346,18","value":"460,349,0"}},{"$type":"property","accessor":true,"name":"toolbar","text":"The configuration to be used for the toolbar displayed in this nested list.\n","type":"Ext.Toolbar/Object/Boolean","value":"{\n    docked: 'top',\n    xtype: 'titlebar',\n    ui: 'light',\n    inline: true\n}","src":{"accessor":"460,336,12","name":"460,334,46","text":"460,335,12,76","type":"460,334,18","value":"460,338,0"}},{"$type":"property","accessor":true,"name":"updateTitleText","text":"Update the title text with the currently selected category.\n","type":"Boolean","value":"true","src":{"accessor":"460,285,12","name":"460,283,27","text":"460,284,12,60","type":"460,283,18","value":"460,287,0"}},{"$type":"property","accessor":true,"name":"useTitleAsBackText","text":"`true` to use title as a label for back button.\n","type":"Boolean","value":"true","src":{"accessor":"460,278,12","name":"460,276,27","text":"460,277,12,48","type":"460,276,18","value":"460,280,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Please set the {@link #toolbar} configuration to `false` instead\n","deprecatedVersion":"2.0.0","name":"useToolbar","text":"`true` to show the header toolbar.\n","type":"Boolean","value":"null","src":{"accessor":"460,329,12","deprecatedMessage":"460,327,12","deprecatedVersion":"460,327,12","name":"460,328,27","text":"460,328,38,35","type":"460,328,18","value":"460,331,0"}},{"$type":"property","accessor":true,"name":"variableHeights","text":"This configuration allows you optimize the picker by not having it read the DOM\nheights of list items.\n","type":"Boolean","value":"false","src":{"accessor":"460,432,0","name":"460,428,27","text":"460,429,12,103","type":"460,428,18","value":"460,432,0"}}]},{"$type":"events","items":[{"$type":"event","name":"back","preventable":true,"text":"Fires when the user taps Back.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,548,41","type":"460,548,16"}},{"$type":"param","name":"node","text":"The node to be selected.\n","type":"HTMLElement","src":{"name":"460,549,29","text":"460,549,34,25","type":"460,549,16"}},{"$type":"param","name":"lastActiveList","text":"The Ext.dataview.List that was last active.\n","type":"Ext.dataview.List","src":{"name":"460,550,35","text":"460,550,50,44","type":"460,550,16"}},{"$type":"param","name":"detailCardActive","text":"Flag set if the detail card is currently active.\n","type":"Boolean","src":{"name":"460,551,25","text":"460,551,42,49","type":"460,551,16"}}],"src":{"name":"460,545,15","preventable":"460,546,8","text":"460,547,8,31"}},{"$type":"event","name":"beforeload","text":"Fires before a request is made for a new data object.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,557,41","type":"460,557,16"}},{"$type":"param","name":"store","text":"The store instance.\n","type":"Ext.data.Store","src":{"name":"460,558,32","text":"460,558,38,20","type":"460,558,16"}},{"$type":"param","name":"operation","text":"The Ext.data.Operation object that will be passed\nto the Proxy to load the Store.\n","type":"Ext.data.Operation","src":{"name":"460,559,36","text":"460,559,46,50:460,560,8,32","type":"460,559,16"}}],"src":{"name":"460,555,15","text":"460,556,8,54"}},{"$type":"event","deprecatedMessage":"Please listen to the {@link #selectionchange} event with an order of\n`before` instead.\n","deprecatedVersion":"2.0.0","name":"beforeselectionchange","text":"Fires before a selection is made.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,518,41","type":"460,518,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,519,35","text":"460,519,40,48","type":"460,519,16"}},{"$type":"param","name":"node","text":"The node to be selected.\n","type":"HTMLElement","src":{"name":"460,520,29","text":"460,520,34,25","type":"460,520,16"}},{"$type":"param","name":"selections","text":"Array of currently selected nodes.\n","type":"Array","src":{"name":"460,521,23","text":"460,521,34,35","type":"460,521,16"}}],"src":{"deprecatedMessage":"460,522,8","deprecatedVersion":"460,522,8","name":"460,516,15","text":"460,517,8,34"}},{"$type":"event","name":"containertap","text":"Fires when a tap occurs and it is not on a template node.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,486,41","type":"460,486,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,487,35","text":"460,487,40,48","type":"460,487,16"}},{"$type":"param","name":"e","text":"The raw event object.\n","type":"Ext.event.Event","src":{"name":"460,488,33","text":"460,488,35,22","type":"460,488,16"}}],"src":{"name":"460,484,15","text":"460,485,8,58"}},{"$type":"event","name":"deselect","text":"Fires when nodes are deselected.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,502,41","type":"460,502,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,503,35","text":"460,503,40,48","type":"460,503,16"}},{"$type":"param","name":"selections","text":"Array of deselected nodes.\n","type":"Array","src":{"name":"460,504,23","text":"460,504,34,27","type":"460,504,16"}}],"src":{"name":"460,500,15","text":"460,501,8,33"}},{"$type":"event","name":"itemdoubletap","text":"Fires when a node is double tapped on.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,475,41","type":"460,475,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,476,35","text":"460,476,40,48","type":"460,476,16"}},{"$type":"param","name":"index","text":"The index of the item that was tapped.\n","type":"Number","src":{"name":"460,477,24","text":"460,477,30,39","type":"460,477,16"}},{"$type":"param","name":"target","text":"The element tapped.\n","type":"Ext.dom.Element","src":{"name":"460,478,33","text":"460,478,40,20","type":"460,478,16"}},{"$type":"param","name":"record","text":"The record tapped.\n","type":"Ext.data.Record","src":{"name":"460,479,33","text":"460,479,40,19","type":"460,479,16"}},{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"460,480,33","text":"460,480,35,18","type":"460,480,16"}}],"src":{"name":"460,473,15","text":"460,474,8,39"}},{"$type":"event","name":"itemtap","text":"Fires when a node is tapped on.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,464,41","type":"460,464,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,465,35","text":"460,465,40,48","type":"460,465,16"}},{"$type":"param","name":"index","text":"The index of the item tapped.\n","type":"Number","src":{"name":"460,466,24","text":"460,466,30,30","type":"460,466,16"}},{"$type":"param","name":"target","text":"The element tapped.\n","type":"Ext.dom.Element","src":{"name":"460,467,33","text":"460,467,40,20","type":"460,467,16"}},{"$type":"param","name":"record","text":"The record tapped.\n","type":"Ext.data.Record","src":{"name":"460,468,33","text":"460,468,40,19","type":"460,468,16"}},{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"460,469,33","text":"460,469,35,18","type":"460,469,16"}}],"src":{"name":"460,462,15","text":"460,463,8,32"}},{"$type":"event","name":"leafitemtap","text":"Fires when the user taps a leaf list item.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,536,41","type":"460,536,16"}},{"$type":"param","name":"list","text":"The subList the item is on.\n","type":"Ext.List","src":{"name":"460,537,26","text":"460,537,31,28","type":"460,537,16"}},{"$type":"param","name":"index","text":"The index of the item tapped.\n","type":"Number","src":{"name":"460,538,24","text":"460,538,30,30","type":"460,538,16"}},{"$type":"param","name":"target","text":"The element tapped.\n","type":"Ext.dom.Element","src":{"name":"460,539,33","text":"460,539,40,20","type":"460,539,16"}},{"$type":"param","name":"record","text":"The record tapped.\n","type":"Ext.data.Record","src":{"name":"460,540,33","text":"460,540,40,19","type":"460,540,16"}},{"$type":"param","name":"e","text":"The event.\n","type":"Ext.event.Event","src":{"name":"460,541,33","text":"460,541,35,11","type":"460,541,16"}}],"src":{"name":"460,534,15","text":"460,535,8,43"}},{"$type":"event","name":"listchange","text":"Fires when the user taps a list item.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,529,41","type":"460,529,16"}},{"$type":"param","name":"listitem","text":"The new active list.\n","type":"Object","src":{"name":"460,530,24","text":"460,530,33,21","type":"460,530,16"}}],"src":{"name":"460,527,15","text":"460,528,8,38"}},{"$type":"event","name":"load","text":"Fires whenever records have been loaded into the store.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,566,41","type":"460,566,16"}},{"$type":"param","name":"store","text":"The store instance.\n","type":"Ext.data.Store","src":{"name":"460,567,32","text":"460,567,38,20","type":"460,567,16"}},{"$type":"param","name":"records","text":"An array of records.\n","type":"Ext.util.Grouper[]","src":{"name":"460,568,36","text":"460,568,44,21","type":"460,568,16"}},{"$type":"param","name":"successful","text":"`true` if the operation was successful.\n","type":"Boolean","src":{"name":"460,569,25","text":"460,569,36,40","type":"460,569,16"}},{"$type":"param","name":"operation","text":"The associated operation.\n","type":"Ext.data.Operation","src":{"name":"460,570,36","text":"460,570,46,26","type":"460,570,16"}}],"src":{"name":"460,564,15","text":"460,565,8,56"}},{"$type":"event","name":"select","text":"Fires when nodes are selected.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,494,41","type":"460,494,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,495,35","text":"460,495,40,48","type":"460,495,16"}},{"$type":"param","name":"selections","text":"Array of selected nodes.\n","type":"Array","src":{"name":"460,496,23","text":"460,496,34,25","type":"460,496,16"}}],"src":{"name":"460,492,15","text":"460,493,8,31"}},{"$type":"event","name":"selectionchange","text":"Fires when the selected nodes change.\n","items":[{"$type":"param","name":"this","type":"Ext.dataview.NestedList","src":{"name":"460,510,41","type":"460,510,16"}},{"$type":"param","name":"list","text":"The Ext.dataview.List that is currently active.\n","type":"Ext.dataview.List","src":{"name":"460,511,35","text":"460,511,40,48","type":"460,511,16"}},{"$type":"param","name":"selections","text":"Array of nodes selected or deselected.\n","type":"Array","src":{"name":"460,512,23","text":"460,512,34,39","type":"460,512,16"}}],"src":{"name":"460,508,15","text":"460,509,8,38"}}]},{"$type":"methods","items":[{"$type":"method","name":"getItemTextTpl","text":"Override this method to provide custom template rendering of individual\nnodes. The template will receive all data within the Record and will also\nreceive whether or not it is a leaf node.\n","items":[{"$type":"param","name":"node","type":"Ext.data.Record","src":{"name":"460,966,33","type":"460,966,16"}},{"$type":"return","type":"String","src":{"type":"460,967,17"}}],"src":{"name":"460,969,0","text":"460,963,8,188"}},{"$type":"method","access":"private","name":"getList","text":"Returns the list config for a specified node.\n","items":[{"$type":"param","name":"node","text":"The node for the list config.\n","type":"HTMLElement","src":{"name":"460,1196,29","text":"460,1196,34,30","type":"460,1196,16"}}],"src":{"access":"460,1194,8","name":"460,1198,0","text":"460,1195,8,46"}},{"$type":"method","name":"getTitleTextTpl","text":"Override this method to provide custom template rendering of titles/back\nbuttons when {@link #useTitleAsBackText} is enabled.\n","items":[{"$type":"param","name":"node","type":"Ext.data.Record","src":{"name":"460,976,33","type":"460,976,16"}},{"$type":"return","type":"String","src":{"type":"460,977,17"}}],"src":{"name":"460,979,0","text":"460,974,8,126"}},{"$type":"method","name":"goToLeaf","text":"The leaf you want to navigate to. You should pass a node instance.\n","items":[{"$type":"param","name":"node","text":"The specified node to navigate to.\n","type":"Ext.data.NodeInterface","src":{"name":"460,1090,40","text":"460,1090,45,35","type":"460,1090,16"}}],"src":{"name":"460,1092,0","text":"460,1089,8,67"}},{"$type":"method","fires":"listchange","name":"goToNode","text":"Method to handle going to a specific node within this nested list. Node must be part of the\ninternal {@link #store}.\n","items":[{"$type":"param","name":"node","text":"The specified node to navigate to.\n","type":"Ext.data.NodeInterface","src":{"name":"460,1007,40","text":"460,1007,45,35","type":"460,1007,16"}}],"src":{"fires":"460,1081,0","name":"460,1009,0","text":"460,1005,8,117"}},{"$type":"method","access":"private","name":"goToNodeReverseAnimation","text":"Returns `true` if the passed node should have a reverse animation from the\nprevious current node.\n","items":[{"$type":"param","name":"node","type":"Ext.data.NodeInterface","src":{"name":"460,1181,40","type":"460,1181,16"}},{"$type":"return","type":"Boolean","src":{"type":"460,1187,0"}}],"src":{"access":"460,1178,8","name":"460,1183,0","text":"460,1179,8,98"}},{"$type":"method","name":"onBackTap","text":"Called when the backButton has been tapped.\n","src":{"name":"460,768,0","text":"460,766,8,44"}},{"$type":"method","access":"private","fires":"childtap,itemtap,leafchildtap,leafitemtap","name":"onChildTap","text":"Called when an list item has been tapped.\n","items":[{"$type":"param","name":"list","text":"The subList the item is on.\n","type":"Ext.List","src":{"name":"460,633,26","text":"460,633,31,28","type":"460,633,16"}},{"$type":"param","name":"location","text":"The id of the item tapped.\n","type":"Number","src":{"name":"460,634,24","text":"460,634,33,27","type":"460,634,16"}},{"$type":"return","type":"Boolean","src":{"type":"460,644,0"}}],"src":{"access":"460,636,8","fires":"460,649,0:460,653,0:460,666,0:460,670,0","name":"460,638,0","text":"460,632,8,42"}},{"$type":"method","access":"private","name":"renderTitleText","items":[{"$type":"param","name":"node","src":{"name":"460,986,0"}},{"$type":"param","name":"forBackButton","src":{"name":"460,986,0"}}],"src":{"access":"460,984,8","name":"460,986,0"}},{"$type":"method","access":"private","name":"setToolbarTitle","text":"This method will change the toolbar title without changing the List title.\n","items":[{"$type":"param","name":"newTitle","src":{"name":"460,1252,0"}}],"src":{"access":"460,1249,12","name":"460,1252,0","text":"460,1250,12,75"}},{"$type":"method","access":"private","name":"syncToolbar","text":"Method which updates the {@link #backButton} and {@link #toolbar} with\nthe latest information from the current node.\n","items":[{"$type":"param","name":"forceDetail","src":{"name":"460,1135,0"}}],"src":{"access":"460,1131,8","name":"460,1135,0","text":"460,1132,8,117"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"listMode","optional":true,"text":"This hold the current list mode, values could be: `{@link #cfg!title title}`, `node`, `deep`. `{@link #cfg!title title}` when the\nlist is at the top level, `node` for first level and `deep` for any level lower than that.\nThis will be used by the `updateTitle` method in order to change the appropriate component's\ntext value.\n","type":"String","value":"title","src":{"access":"460,452,8","name":"460,453,28","text":"460,454,8,288","type":"460,453,19","value":"460,453,37"}}]}],"src":{"alias":"460,249,0","alternateClassNames":"460,247,0","extends":"460,248,0","name":"460,246,0","requires":"460,251,0:460,252,0:460,253,0:460,254,0:460,255,0:460,256,0:460,257,0:460,258,0","text":"460,2,4,6134"},"group":"Grids, List & Trees","displayName":"Dataview Nestedlist"},{"$type":"class","alias":"widget.dialog,widget.window","alternateClassNames":"Ext.Window,Ext.window.Window","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.MessageBox","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","name":"Ext.Dialog","requires":"Ext.Deferred,Ext.drag.proxy.Original","since":"6.5.0","text":"This class provides a convenient way to display a \"popup\" component to interact with\nthe user that is resizable, draggable and closable (similar to a browser popup window,\nbut contained in the normal Ext JS component tree). This means dialogs are not subject\nto the restrictions of browser popup windows, but provide similar modal experiences.\n\n     var dialog = Ext.create({\n         xtype: 'dialog',\n         title: 'Dialog',\n\n         maximizable: true,\n         html: 'Content<br>goes<br>here',\n\n         buttons: {\n             ok: function () {  // standard button (see below)\n                 dialog.destroy();\n             }\n         }\n     });\n\n     dialog.show();\n\nThe above use of `{@link #cfg!buttons buttons}` is a {@link Ext.Container#cfg!weighted weighted} container.\nThis form allows the Ext JS config system to merge properties by aligning on `{@link #cfg!itemId itemId}`\nas the object keys (`'ok'` in this case). This merging capability enables the use of\n`{@link #cfg!standardButtons standardButtons}` but is also a powerful technique for leveraging class inheritance\nin your views.\n\n## Standard Buttons\n\nThe main advantage of using the `{@link #cfg!buttons buttons}` config is the availability of\n{@link Ext.Panel#cfg!standardButtons standardButtons}. The `{@link #cfg!standardButtons standardButtons}` config\ndescribes many common buttons (such as `ok` above) and provides their `text` as well\nas the proper, platform-specific ordering.\n\nCustom buttons can be mixed with standard buttons or can fully replace them:\n\n     buttons: {\n         ok: 'onOK',\n\n         verify: {\n             text: 'Verify',\n             handler: 'onVerify',\n             weight: 200\n         }\n     }\n\nWhen combined, custom buttons are presented first. In the above, the `{@link #cfg!weight weight}` config\nis used to order the Verify button after the OK button. The weights assigned to the\n{@link Ext.Panel#cfg!standardButtons standardButtons} vary by platform but `200` is\nbeyond their range.\n\n## Handling ESC and Close\n\nMany dialogs have a `Cancel` button (or equivalent) that closes the dialog without\ntaking action. In some cases this action is first confirmed to avoid data loss.\n\nA common problem when implementing dialogs is the presence of these other two means to\ndismiss the dialog since they often bypass the button handler that is expected to be\nused to achieve an orderly shutdown.\n\nWith `{@link Ext.Dialog}`, both the ESC key and `{@link #method!close close}` tool handler call the `{@link #method!close close}` method\nto dismiss the dialog. The `{@link #method!close close}` method (and its `{@link #cfg!closeAction closeAction}` config) are enhanced\nversions of the implementation in `{@link Ext.Panel}`.\n\nThe default dismiss sequence uses the `{@link #cfg!dismissAction dismissAction}` config to identify the candidate\n`{@link #cfg!buttons buttons}`.  The most common match here is the `Cancel` button. If there is a matching\nbutton then that button's `handler` is called just as if the user had clicked on it\ninstead.\n\nThe end result is that when using `{@link #cfg!standardButtons standardButtons}` such as `cancel` or `{@link #method!close close}`, you\nseldom need to worry about ESC or `{@link #method!close close}` tool inconsistency. The handler for your\nbutton will be called in all cases.\n\n### Custom Buttons and Options\n\nIf the dialog has custom buttons, the `{@link #cfg!dismissHandler dismissHandler}` config can be used to direct\n`{@link #method!close close}` to a suitable method. Ideally this would be the same method connected to the\ncorresponding button.\n\n     buttons: {\n         goAway: {\n             text: 'Go Away!',\n             handler: 'onGoAway'\n         }\n     },\n\n     dismissHandler: 'onGoAway'\n\nTo simply allow the `{@link #cfg!closeAction closeAction}` config to call `hide` or `destroy` methods for ESC\nand `{@link #method!close close}`, do the following:\n\n     dismissHandler: true\n\nThe {@link #method!close close method} will fire the {@link #event!beforeclose beforeclose}\nand {@link #event!close close} events in any case. Using the `{@link #cfg!closeAction closeAction}` approach\nexposes dialogs to this alternate shutdown sequence but can be enabled as above for\nsimple use cases.\n\n## Maximize / Restore\n\nThe ability to `maximize` (fill the viewport) with the dialog can be quite useful for\ncomplex popups. This can take two forms:\n\n - The `{@link #cfg!maximizable maximizable}` config to provide a {@link Ext.Tool tool} to `maximize` and also\n  to `restore` the dialog.\n - The `{@link #cfg!maximized maximized}` config to control the current state.\n\nThe `{@link #cfg!maximized maximized}` config can be used directly if the `{@link #cfg!maximizeTool maximizeTool}` is not desired. In\nother words, the ability to control the `{@link #cfg!maximized maximized}` config is not dependent on whether\n`{@link #cfg!maximizable maximizable}` is set or not.\n\n### Note\nThis class is analogous to the Ext JS Classic Toolkit's 'Ext.window.Window' class. This\nclass has those names (`{@link Ext.Window}` and `{@link Ext.window.Window}`) as alternate class names\nand the `window` xtype for compatibility sake.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"bodyBorder","text":"Controls the border style of the panel body using the following values:\n\n- `true` to enable the border around the panel body (as defined by the theme)\nNote that even when enabled, the bodyBorder is only visible when there are\ndocked items around the edges of the panel.  Where the bodyBorder touches the\npanel's outer border it is automatically collapsed into a single border.\n\n- `false` to disable the body border\n\n- `null` - use the value of {@link #cfg-border border} as the value for\n`{@link #cfg!bodyBorder bodyBorder}`\n","type":"Boolean","value":"false","src":{"accessor":"423,623,0","inheritdoc":"413,359,8","name":"413,358,13","text":"423,611,12,501","type":"423,610,18","value":"413,361,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"border","text":"Enables or disables bordering on this component.\nThe following values are accepted:\n\n- `null` or `true (default): Do nothing and allow the border to be specified\nby the theme.\n- `false`: suppress the default border provided by the theme.\n\nPlease note that enabling bordering via this config will not add a `border-color`\nor `border-style` CSS property to the component; you provide the `border-color`\nand `border-style` via CSS rule or {@link #style} configuration\n(if not already provide by the theme).\n\n## Using {@link #style}:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        style: 'border: 1px solid blue;'\n        // ...\n    });\n\n## Using CSS:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        cls: 'my-component'\n        // ...\n    });\n\nAnd your CSS file:\n\n    .my-component {\n        border: 1px solid red;\n    }\n","type":"Boolean","value":"true","src":{"accessor":"423,607,0","inheritdoc":"413,353,8","name":"413,352,13","text":"18,258,34,49:18,259,12,870","type":"18,258,18","value":"413,355,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"centered","text":"Configure this as `true` to have this Component centered within its Container.\nSetting this value to `true` will make this Component become 'positioned', which means\nit will no longer participate in the layout of the Container that it resides in.\n","type":"Boolean","value":"true","src":{"accessor":"410,457,12","inheritdoc":"413,365,8","name":"413,364,13","text":"410,454,12,247","type":"410,453,18","value":"413,367,0"}},{"$type":"property","accessor":true,"name":"constrainDrag","since":"6.5.0","text":"Set to `false` to not constrain the dialog to the viewport.\n","type":"Boolean/Ext.drag.Constraint","value":"true","src":{"accessor":"413,269,0","name":"413,264,47","since":"413,267,19","text":"413,265,12,61","type":"413,264,18","value":"413,269,0"}},{"$type":"property","accessor":true,"name":"dismissAction","since":"6.5.0","text":"This config lists one or more `{@link #cfg!itemId itemId}` values to look for in this dialog's\n`{@link #cfg!buttons buttons}`. The first button to be found from this list will be invoked in\nresponse to the ESC key or the `{@link #method!close close}` tool.\n\nThis config is ignored if a `{@link #cfg!dismissHandler dismissHandler}` is specified.\n","type":"String/String[]","value":"[\n    'cancel',\n    'abort',\n    'no',\n    'close'\n]","src":{"accessor":"413,190,0","name":"413,181,35","since":"413,188,19","text":"413,182,12,255","type":"413,181,18","value":"413,190,0"}},{"$type":"property","accessor":true,"controllable":true,"name":"dismissHandler","since":"6.5.0","text":"The function or controller method name to call on ESC key press or `{@link #method!close close}`\ntool click.\n\nIf this config is specified, `{@link #cfg!dismissAction dismissAction}` will be ignored.\n","type":"String/Function","value":"null","src":{"accessor":"413,281,0","controllable":"413,278,12","name":"413,272,35","since":"413,279,19","text":"413,273,12,151","type":"413,272,18","value":"413,281,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"draggable","text":"Set to `true` to allow this component to be dragged. This can also be the config\nobject for the `{@link Ext.drag.Source}` that will manage the drag.\n","type":"Boolean/Object/Ext.drag.Source","value":"{\n    handle: '.' + Ext.baseCSSPrefix + 'draggable',\n    listeners: {\n        beforedragstart: 'onBeforeDragDialog',\n        scope: 'this'\n    }\n}","src":{"accessor":"410,490,0","inheritdoc":"413,389,8","name":"413,388,13","text":"410,487,12,141","type":"410,486,18","value":"413,391,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"floated","text":"A Component may be floated above all other components in the application. This means that\nthe component is absolutely positioned, and will move to the front and occlude other\nsibling floated component if clicked.\n\nA Floated component may have floated descendants. It will bring these decendants to the\nfront with it when brought to the front of its sibling floated components.\n\nBy default, descendant floated components are all positioned using the viewport\ncoordinate system. To make a floating component a positioning parent for descendants,\nand have the ancestors positioned relatively, configure the parent floated component\nwith `{@link #cfg-relative}: true`.\n","type":"Boolean","value":"true","src":{"accessor":"689,145,0","inheritdoc":"413,371,8","name":"413,370,13","text":"689,131,12,666","type":"689,130,18","value":"413,373,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"hideAnimation","text":"Animation effect to apply when the Component is being hidden.  Typically you want to use\nan outbound animation type such as 'fadeOut' or 'slideOut'. For more animations, check\nthe {@link Ext.fx.Animation#type} config.\n","type":"String/Mixed","value":"{\n    type: 'popOut',\n    duration: 250,\n    easing: 'ease-out'\n}","src":{"accessor":"410,547,12","inheritdoc":"413,435,8","name":"413,434,13","text":"410,544,12,218","type":"410,543,18","value":"413,437,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"hideMode","text":"A String which specifies how this component's DOM element will be hidden. The\naccepted values are any of these:\n\n- `'clip'` : Hide using {@link Ext.dom.Element#CLIP clip}.\n- `'display'` : Hide using {@link Ext.dom.Element#DISPLAY display}.\n- `'offsets'` : Hide using positioning {@link Ext.dom.Element#OFFSETS offsets}.\n- `'opacity'` : Hide using {@link Ext.dom.Element#OPACITY opacity}.\n- `'visibility'` : Hide using {@link Ext.dom.Element#VISIBILITY visibility}.\n\nHiding using ``display`` results in having no dimensions as well as resetting\nscroll positions to 0.\n\nThe other modes overcome this but may have different trade-offs in certain\ncircumstances.\n","type":"'clip'/'display'/'offsets'/'opacity'/'visibility'","value":"'offsets'","src":{"accessor":"18,454,0","inheritdoc":"413,429,8","name":"413,428,13","text":"18,437,12,659","type":"18,436,18","value":"413,431,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"keyMap","text":"An object containing handlers for keyboard events. The property names of this\nobject are the key name and any modifiers. The values of the properties are the\ndescriptors of how to handle each event.\n\nThe handler descriptor can be simply the handler function(either the\nliteral function or the method name), or it can be an object with these\nproperties:\n\n - `handler`: The function or its name to call to handle the event.\n - `scope`: The this pointer context (can be \"this\" or \"controller\").\n - `event`: An optional override of the key event to which to listen.\n\n**Important:** Calls to `setKeyMap` do not replace the entire `{@link #cfg!keyMap keyMap}` but\ninstead update the provided mappings. That is, unless `null` is passed as the\nvalue of the `{@link #cfg!keyMap keyMap}` which will clear the `{@link #cfg!keyMap keyMap}` of all entries.\n","type":"Object","value":"{\n    ESC: 'onEscape',\n    scope: 'this'\n}","src":{"accessor":"289,111,0","inheritdoc":"413,401,8","name":"413,400,13","text":"289,90,12,785","type":"289,89,18","value":"413,403,0"}},{"$type":"property","accessor":true,"controllable":true,"name":"maskTapHandler","since":"6.5.0","text":"The function or method name to call when the modal mask is tapped. A common use\nfor this config is to cancel the dialog.\n\n     Ext.create({\n         xtype: 'dialog',\n\n         buttons: {\n             ok: 'onOK',\n             cancel: 'onCancel'\n         },\n\n         maskTapHandler: 'onCancel'\n     });\n","type":"String/Function","value":"null","src":{"accessor":"413,336,0","controllable":"413,333,12","name":"413,318,35","since":"413,334,19","text":"413,319,12,303","type":"413,318,18","value":"413,336,0"}},{"$type":"property","accessor":true,"name":"maximizable","optional":true,"since":"6.5.0","text":"Set to `true` to display the 'maximizeTool` to allow the user to maximize the\ndialog. Note that when a dialog is maximized, the `{@link #cfg!maximizeTool maximizeTool}` is replaced\nwith the `{@link #cfg!restoreTool restoreTool}` to give the user the ability to restore the dialog to\nits previous size.\n\nThis config only controls the presence of the `maximize` and `restore` tools.\nThe dialog can always be set to `{@link #cfg!maximized maximized}` by directly setting the config or\ncalling the `maximize` and `restore` methods.\n","type":"Boolean","value":"false","src":{"accessor":"413,296,0","name":"413,284,28","since":"413,294,19","text":"413,285,12,455","type":"413,284,18","value":"413,284,40"}},{"$type":"property","accessor":true,"name":"maximizeAnimation","since":"6.5.0","text":"The animation configuration to use when maximizing.\n","type":"Object","value":"{\n    easing: 'ease-in',\n    from: {\n        opacity: 0.6\n    },\n    to: {\n        opacity: 1\n    }\n}","src":{"accessor":"413,198,0","name":"413,193,26","since":"413,196,19","text":"413,194,12,53","type":"413,193,18","value":"413,198,0"}},{"$type":"property","accessor":true,"name":"maximized","optional":true,"since":"6.5.0","text":"Set to `true` to display the dialog in a maximized state. Changing this config\nafter construction will utilize the `{@link #cfg!maximizeAnimation maximizeAnimation}` or `{@link #cfg!restoreAnimation restoreAnimation}`.\n\nThese can be avoided by passing `null` to `maximize` or `restore` methods:\n\n     dialog.setMaximized(true);  // uses maximizeAnimation\n     // or:\n     dialog.maximize(null);      // no animation for this change\n\n     dialog.setMaximized(false); // uses restoreAnimation\n     // or:\n     dialog.restore(null);       // no animation for this change\n","type":"Boolean","value":"false","src":{"accessor":"413,315,0","name":"413,299,28","since":"413,313,19","text":"413,300,12,508","type":"413,299,18","value":"413,299,38"}},{"$type":"property","accessor":true,"name":"maximizeProxy","since":"6.5.0","text":"Configuration options for a proxy dialog to animate to/from maximized state.\nThe `{@link #cfg!title title}`, `{@link #cfg!iconCls iconCls}`, `{@link #cfg!ui ui}`, `{@link #cfg!cls cls}` and `{@link #cfg!userCls userCls}` will be copied to the proxy.\n","type":"Object/Ext.Dialog","value":"{\n    centered: false,\n    draggable: false,\n    modal: false,\n    showAnimation: null,\n    hideAnimation: null\n}","src":{"accessor":"413,215,0","name":"413,209,37","since":"413,213,19","text":"413,210,12,157","type":"413,209,18","value":"413,215,0"}},{"$type":"property","accessor":true,"name":"maximizeTool","since":"6.5.0","text":"Configuration options for the `maximize` tool.\n","type":"Object/Ext.Tool","value":"{\n    itemId: 'maximize',\n    // this will also set \"type\"\n    tooltip: 'Maximize to fullscreen'\n}","src":{"accessor":"413,229,0","name":"413,224,35","since":"413,227,19","text":"413,225,12,48","type":"413,224,18","value":"413,229,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"modal","text":"`true` to make this Component modal. This will create a mask underneath the\nComponent that covers its parent and does not allow the user to interact with\nany other Components until this Component is dismissed.\n","type":"Boolean","value":"true","src":{"accessor":"410,632,12","inheritdoc":"413,410,8","name":"413,409,13","text":"410,629,12,210","type":"410,628,18","value":"413,412,0"}},{"$type":"property","access":"private","accessor":true,"name":"restorable","since":"6.5.0","text":"This config is used when the dialog is `{@link #cfg!maximized maximized}` to show the `{@link #cfg!restoreTool restoreTool}`.\n","type":"Boolean","value":"null","src":{"access":"413,343,12","accessor":"413,345,0","name":"413,339,27","since":"413,342,19","text":"413,340,12,79","type":"413,339,18","value":"413,345,0"}},{"$type":"property","accessor":true,"name":"restoreAnimation","since":"6.5.0","text":"The animation configuration to use when restoring to normal size.\n","type":"Object","value":"{\n    easing: 'ease-in',\n    from: {\n        opacity: 1\n    },\n    to: {\n        opacity: 0.6\n    }\n}","src":{"accessor":"413,240,0","name":"413,235,26","since":"413,238,19","text":"413,236,12,67","type":"413,235,18","value":"413,240,0"}},{"$type":"property","accessor":true,"name":"restoreTool","since":"6.5.0","text":"Configuration options for the `restore` tool.\n","type":"Object/Ext.Tool","value":"{\n    itemId: 'restore',\n    // this will also set \"type\"\n    tooltip: 'Restore to original size'\n}","src":{"accessor":"413,256,0","name":"413,251,35","since":"413,254,19","text":"413,252,12,47","type":"413,251,18","value":"413,256,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"shadow","text":"Configure as `true` for the component to have a drop shadow. 'false' will suppress any\ndefault shadow. By default the theme will determine the presence of a shadow.\n","type":"Boolean","value":"true","src":{"accessor":"689,186,0","inheritdoc":"413,416,8","name":"413,415,13","text":"689,181,12,166","type":"689,180,18","value":"413,418,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"showAnimation","text":"Animation effect to apply when the Component is being shown.  Typically you want to use\nan inbound animation type such as 'fadeIn' or 'slideIn'. For more animations, check the\n{@link Ext.fx.Animation#type} config.\n","type":"String/Mixed","value":"{\n    type: 'popIn',\n    duration: 150,\n    easing: 'ease-out'\n}","src":{"accessor":"410,538,12","inheritdoc":"413,445,8","name":"413,444,13","text":"410,535,12,214","type":"410,534,18","value":"413,447,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"tabIndex","text":"DOM tabIndex attribute for this component's\n{@link #focusEl}.\n","type":"Number","value":"-1","src":{"accessor":"410,314,0","inheritdoc":"413,383,8","name":"413,382,13","text":"410,311,12,62","type":"410,310,18","value":"413,385,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforemaximize","text":"Fires before maximizing the dialog. Returning `false` from this event will cancel\nthe maximization.\n","items":[{"$type":"param","name":"dialog","type":"Ext.Dialog","src":{"name":"413,155,28","type":"413,155,16"}}],"src":{"name":"413,152,15","text":"413,153,8,100"}},{"$type":"event","name":"beforerestore","text":"Fires before restoring the dialog. Returning `false` from this event will cancel\nthe restoration.\n","items":[{"$type":"param","name":"dialog","type":"Ext.Dialog","src":{"name":"413,162,28","type":"413,162,16"}}],"src":{"name":"413,159,15","text":"413,160,8,98"}},{"$type":"event","name":"maximize","text":"Fires after the dialog has been maximized. If there is a `{@link #cfg!maximizeAnimation maximizeAnimation}` this\nevent will fire after the animation is complete.\n","items":[{"$type":"param","name":"dialog","type":"Ext.Dialog","src":{"name":"413,169,28","type":"413,169,16"}}],"src":{"name":"413,166,15","text":"413,167,8,131"}},{"$type":"event","name":"restore","text":"Fires after the dialog has been restored to its original size. If there is a\n`{@link #cfg!restoreAnimation restoreAnimation}` this event will fire after the animation is complete.\n","items":[{"$type":"param","name":"dialog","type":"Ext.Dialog","src":{"name":"413,176,28","type":"413,176,16"}}],"src":{"name":"413,173,15","text":"413,174,8,150"}}]},{"$type":"methods","items":[{"$type":"method","name":"maximize","since":"6.5.0","text":"Maximizes this dialog by setting the `{@link #cfg!maximized maximized}` config to `true`. This method\nallows the `{@link #cfg!maximizeAnimation maximizeAnimation}` to be skipped or altered using the `animation`\nparameter. This parameter applies only to this maximize transition.\n","items":[{"$type":"param","name":"animation","text":"A one-time replacement for `{@link #cfg!maximizeAnimation maximizeAnimation}`.\n","type":"Object","src":{"name":"413,548,24","text":"413,548,34,48","type":"413,548,16"}},{"$type":"return","text":"A promise that resolves when the animation is complete.\n","type":"Promise","src":{"text":"413,549,26,56","type":"413,549,17"}}],"src":{"name":"413,552,0","since":"413,550,15","text":"413,544,8,226"}},{"$type":"method","name":"restore","since":"6.5.0","text":"Restores this dialog by clearing the `{@link #cfg!maximized maximized}` config to `false`. This method\nallows the `{@link #cfg!restoreAnimation restoreAnimation}` to be skipped or altered using the `animation`\nparameter. This parameter applies only to this restore transition.\n","items":[{"$type":"param","name":"animation","text":"A one-time replacement for `{@link #cfg!restoreAnimation restoreAnimation}`.\n","type":"Object","src":{"name":"413,573,24","text":"413,573,34,47","type":"413,573,16"}},{"$type":"return","text":"A promise that resolves when the animation is complete.\n","type":"Promise","src":{"text":"413,574,26,56","type":"413,574,17"}}],"src":{"name":"413,577,0","since":"413,575,15","text":"413,569,8,225"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"ariaRole","text":"ARIA role for this Component, defaults to no role.\nWith no role, no other ARIA attributes are set.\n","type":"String","value":"'dialog'","src":{"inheritdoc":"413,141,8","name":"413,140,18","text":"274,53,38,51:274,54,8,49","type":"274,53,19","value":"413,143,0"}},{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'dialog'","src":{"inheritdoc":"413,147,8","name":"413,146,18","text":"18,529,8,532","value":"413,149,0"}},{"$type":"property","inheritdoc":true,"name":"focusable","text":"\n`true` for keyboard interactive Components or Widgets, `false` otherwise.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See {@link #isFocusable}.\n\n**Note:** It is not enough to set this property to `true` to make\na component keyboard interactive. You also need to make sure that\nthe component's {@link #focusEl} is reachable via Tab key (tabbable).\nSee also {@link #tabIndex}.\n","type":"Boolean","value":"false","src":{"inheritdoc":"413,377,8","name":"413,376,18","text":"283,14,8,430","type":"283,12,19","value":"413,379,0"}},{"$type":"property","name":"isDialog","text":"`true` in this class to identify an object this type, or subclass thereof.\n","type":"Boolean","value":"true","src":{"name":"413,133,28","text":"413,134,8,75","type":"413,133,19","value":"413,136,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"dialog-ui","text":"Creates a visual theme for a Dialog.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1156,516,20","text":"1156,517,4,109","type":"1156,516,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"dialog","src":{"access":"1156,520,37","name":"1156,520,21","text":"1156,520,48,35:1156,521,4,61","type":"1156,520,12","value":"1156,520,28"}},{"$type":"param","access":"protected","name":"$header-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the header component.  For use by UI mixins of derived classes.\n","type":"String","value":"dialogheader","src":{"access":"1156,523,50","name":"1156,523,21","text":"1156,523,61,35:1156,524,4,86","type":"1156,523,12","value":"1156,523,35"}},{"$type":"param","access":"protected","name":"$title-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the title component.  For use by UI mixins of derived classes.\n","type":"String","value":"dialogtitle","src":{"access":"1156,526,48","name":"1156,526,21","text":"1156,526,59,35:1156,527,4,85","type":"1156,526,12","value":"1156,526,34"}},{"$type":"param","access":"protected","name":"$tool-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for tools.  For use by UI mixins of derived classes.\n","type":"String","value":"dialogtool","src":{"access":"1156,529,46","name":"1156,529,21","text":"1156,529,57,35:1156,530,4,71","type":"1156,529,12","value":"1156,529,33"}},{"$type":"param","name":"$background-color","text":"Dialog background-color\n","type":"color","src":{"name":"1156,532,19","text":"1156,533,4,25","type":"1156,532,12"}},{"$type":"param","name":"$border-color","text":"Dialog border-color\n","type":"color/list","src":{"name":"1156,535,24","text":"1156,536,4,21","type":"1156,535,12"}},{"$type":"param","name":"$border-width","text":"Dialog border-width\n","type":"number/list","src":{"name":"1156,538,25","text":"1156,539,4,21","type":"1156,538,12"}},{"$type":"param","name":"$border-style","text":"Dialog border-style\n","type":"string/list","src":{"name":"1156,541,25","text":"1156,542,4,21","type":"1156,541,12"}},{"$type":"param","name":"$border-radius","text":"Dialog border-radius\n","type":"number/list","src":{"name":"1156,544,25","text":"1156,545,4,22","type":"1156,544,12"}},{"$type":"param","name":"$border-radius-big","text":"Dialog border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1156,547,25","text":"1156,548,4,78","type":"1156,547,12"}},{"$type":"param","name":"$body-background-color","text":"Dialog body background-color\n","type":"color","src":{"name":"1156,550,19","text":"1156,551,4,30","type":"1156,550,12"}},{"$type":"param","name":"$body-color","text":"Dialog body text color\n","type":"color","src":{"name":"1156,553,19","text":"1156,554,4,24","type":"1156,553,12"}},{"$type":"param","name":"$body-border-color","text":"Dialog body border-color\n","type":"color","src":{"name":"1156,556,19","text":"1156,557,4,26","type":"1156,556,12"}},{"$type":"param","name":"$body-border-width","text":"Dialog body border-width\n","type":"number/list","src":{"name":"1156,559,25","text":"1156,560,4,26","type":"1156,559,12"}},{"$type":"param","name":"$body-border-style","text":"Dialog body border-style\n","type":"number/list","src":{"name":"1156,562,25","text":"1156,563,4,26","type":"1156,562,12"}},{"$type":"param","name":"$body-font-weight","text":"Dialog body font-weight\n","type":"string/number","src":{"name":"1156,565,27","text":"1156,566,4,25","type":"1156,565,12"}},{"$type":"param","name":"$body-font-size","text":"Dialog body font-size\n","type":"number","src":{"name":"1156,568,20","text":"1156,569,4,23","type":"1156,568,12"}},{"$type":"param","name":"$body-font-size-big","text":"Dialog body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,571,20","text":"1156,572,4,79","type":"1156,571,12"}},{"$type":"param","name":"$body-line-height","text":"Dialog body line-height\n","type":"number","src":{"name":"1156,574,20","text":"1156,575,4,25","type":"1156,574,12"}},{"$type":"param","name":"$body-line-height-big","text":"Dialog body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,577,20","text":"1156,578,4,81","type":"1156,577,12"}},{"$type":"param","name":"$body-font-family","text":"Dialog body font-family\n","type":"string","src":{"name":"1156,580,20","text":"1156,581,4,25","type":"1156,580,12"}},{"$type":"param","name":"$body-padding","text":"Dialog body padding\n","type":"number/list","src":{"name":"1156,583,25","text":"1156,584,4,21","type":"1156,583,12"}},{"$type":"param","name":"$body-padding-big","text":"Dialog body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1156,586,25","text":"1156,587,4,77","type":"1156,586,12"}},{"$type":"param","name":"$header-background-color","text":"Dialog Header background-color\n","type":"color","src":{"name":"1156,589,19","text":"1156,590,4,32","type":"1156,589,12"}},{"$type":"param","name":"$header-background-gradient","text":"Dialog Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1156,592,25","text":"1156,593,4,150","type":"1156,592,12"}},{"$type":"param","name":"$header-color","text":"Dialog Header text color\n","type":"color","src":{"name":"1156,596,19","text":"1156,597,4,26","type":"1156,596,12"}},{"$type":"param","name":"$header-border-color","text":"Dialog Header border-color\n","type":"color/list","src":{"name":"1156,599,24","text":"1156,600,4,28","type":"1156,599,12"}},{"$type":"param","name":"$header-border-width","text":"Dialog Header border-width\n","type":"number/list","src":{"name":"1156,602,25","text":"1156,603,4,28","type":"1156,602,12"}},{"$type":"param","name":"$header-border-style","text":"Dialog Header border-style\n","type":"string/list","src":{"name":"1156,605,25","text":"1156,606,4,28","type":"1156,605,12"}},{"$type":"param","name":"$header-font-weight","text":"Dialog Header font-weight\n","type":"string/number","src":{"name":"1156,608,27","text":"1156,609,4,27","type":"1156,608,12"}},{"$type":"param","name":"$header-font-size","text":"Dialog Header font-size\n","type":"number","src":{"name":"1156,611,20","text":"1156,612,4,25","type":"1156,611,12"}},{"$type":"param","name":"$header-font-size-big","text":"Dialog Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,614,20","text":"1156,615,4,81","type":"1156,614,12"}},{"$type":"param","name":"$header-line-height","text":"Dialog Header line-height\n","type":"number","src":{"name":"1156,617,20","text":"1156,618,4,27","type":"1156,617,12"}},{"$type":"param","name":"$header-line-height-big","text":"Dialog Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,620,20","text":"1156,621,4,83","type":"1156,620,12"}},{"$type":"param","name":"$header-font-family","text":"Dialog Header font-family\n","type":"string","src":{"name":"1156,623,20","text":"1156,624,4,27","type":"1156,623,12"}},{"$type":"param","name":"$header-padding","text":"Dialog Header padding\n","type":"number/list","src":{"name":"1156,626,25","text":"1156,627,4,23","type":"1156,626,12"}},{"$type":"param","name":"$header-padding-big","text":"Dialog Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1156,629,25","text":"1156,630,4,79","type":"1156,629,12"}},{"$type":"param","name":"$header-title-padding","text":"Dialog Header Title padding\n","type":"number/list","src":{"name":"1156,632,25","text":"1156,633,4,29","type":"1156,632,12"}},{"$type":"param","name":"$header-title-padding-big","text":"Dialog Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1156,635,25","text":"1156,636,4,85","type":"1156,635,12"}},{"$type":"param","name":"$header-title-opacity","text":"Dialog Header Title opacity\n","type":"number/list","src":{"name":"1156,638,25","text":"1156,639,4,29","type":"1156,638,12"}},{"$type":"param","name":"$header-shadow","text":"Dialog Header Shadow\n","type":"shadow","src":{"name":"1156,641,20","text":"1156,642,4,22","type":"1156,641,12"}},{"$type":"param","name":"$header-z-index","text":"Z-Index for the Dialog Header, should be used with shadows to raise header above content\n","type":"number","src":{"name":"1156,644,20","text":"1156,645,4,90","type":"1156,644,12"}},{"$type":"param","name":"$header-min-height","text":"Dialog Header min-height\n","type":"number","src":{"name":"1156,647,20","text":"1156,648,4,26","type":"1156,647,12"}},{"$type":"param","name":"$header-min-height-big","text":"Dialog Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,650,20","text":"1156,651,4,82","type":"1156,650,12"}},{"$type":"param","name":"$header-icon-color","text":"Dialog Header icon color.\n","type":"color","src":{"name":"1156,653,19","text":"1156,654,4,27","type":"1156,653,12"}},{"$type":"param","name":"$header-icon-size","text":"Dialog Header icon size\n","type":"number","src":{"name":"1156,656,20","text":"1156,657,4,25","type":"1156,656,12"}},{"$type":"param","name":"$header-icon-size-big","text":"Dialog Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,659,20","text":"1156,660,4,81","type":"1156,659,12"}},{"$type":"param","name":"$header-icon-font-size","text":"Dialog Header icon font-size.  Used for configuring the size of font icons\n","type":"number","src":{"name":"1156,662,20","text":"1156,663,4,76","type":"1156,662,12"}},{"$type":"param","name":"$header-icon-font-size-big","text":"Dialog Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,665,20","text":"1156,666,4,86","type":"1156,665,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing","text":"The space between the Dialog Header icon and text when the icon is horizontally aligned\n","type":"number","src":{"name":"1156,668,20","text":"1156,669,4,89","type":"1156,668,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing-big","text":"The space between the Dialog Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,671,20","text":"1156,672,4,145","type":"1156,671,12"}},{"$type":"param","name":"$header-icon-vertical-spacing","text":"The space between the Dialog Header icon and text when the icon is vertically aligned\n","type":"number","src":{"name":"1156,675,20","text":"1156,676,4,87","type":"1156,675,12"}},{"$type":"param","name":"$header-icon-vertical-spacing-big","text":"The space between the Dialog Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,678,20","text":"1156,679,4,143","type":"1156,678,12"}},{"$type":"param","name":"$header-icon-opacity","text":"Dialog Header icon opacity\n","type":"number","src":{"name":"1156,682,20","text":"1156,683,4,28","type":"1156,682,12"}},{"$type":"param","name":"$tool-color","text":"Dialog Tool color\n","type":"color","src":{"name":"1156,685,19","text":"1156,686,4,19","type":"1156,685,12"}},{"$type":"param","name":"$tool-hovered-color","text":"Dialog Tool color when hovered\n","type":"number","src":{"name":"1156,688,20","text":"1156,689,4,32","type":"1156,688,12"}},{"$type":"param","name":"$tool-pressed-color","text":"Dialog Tool color when pressed\n","type":"number","src":{"name":"1156,691,20","text":"1156,692,4,32","type":"1156,691,12"}},{"$type":"param","name":"$tool-disabled-color","text":"Dialog Tool color when disabled\n","type":"number","src":{"name":"1156,694,20","text":"1156,695,4,33","type":"1156,694,12"}},{"$type":"param","name":"$tool-background-color","text":"Dialog Tool background-color\n","type":"color","src":{"name":"1156,697,19","text":"1156,698,4,30","type":"1156,697,12"}},{"$type":"param","name":"$tool-hovered-background-color","text":"Dialog Tool background-color when hovered\n","type":"number","src":{"name":"1156,700,20","text":"1156,701,4,43","type":"1156,700,12"}},{"$type":"param","name":"$tool-pressed-background-color","text":"Dialog Tool background-color when pressed\n","type":"number","src":{"name":"1156,703,20","text":"1156,704,4,43","type":"1156,703,12"}},{"$type":"param","name":"$tool-disabled-background-color","text":"Dialog Tool background-color when disabled\n","type":"number","src":{"name":"1156,706,20","text":"1156,707,4,44","type":"1156,706,12"}},{"$type":"param","name":"$tool-opacity","text":"Dialog Tool opacity\n","type":"number","src":{"name":"1156,709,20","text":"1156,710,4,21","type":"1156,709,12"}},{"$type":"param","name":"$tool-hovered-opacity","text":"Dialog Tool opacity when hovered\n","type":"number","src":{"name":"1156,712,20","text":"1156,713,4,34","type":"1156,712,12"}},{"$type":"param","name":"$tool-pressed-opacity","text":"Dialog Tool opacity when pressed\n","type":"number","src":{"name":"1156,715,20","text":"1156,716,4,34","type":"1156,715,12"}},{"$type":"param","name":"$tool-disabled-opacity","text":"Dialog Tool opacity when disabled\n","type":"number","src":{"name":"1156,718,20","text":"1156,719,4,35","type":"1156,718,12"}},{"$type":"param","name":"$tool-border-radius","text":"Dialog Tool border radius\n","type":"number","src":{"name":"1156,721,20","text":"1156,722,4,27","type":"1156,721,12"}},{"$type":"param","name":"$tool-border-radius-big","text":"Dialog Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,724,20","text":"1156,725,4,83","type":"1156,724,12"}},{"$type":"param","name":"$tool-size","text":"Dialog Tool size\n","type":"number","src":{"name":"1156,727,20","text":"1156,728,4,18","type":"1156,727,12"}},{"$type":"param","name":"$tool-size-big","text":"Dialog Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,730,20","text":"1156,731,4,74","type":"1156,730,12"}},{"$type":"param","name":"$tool-font-size","text":"Dialog Tool font-size\n","type":"number","src":{"name":"1156,733,20","text":"1156,734,4,23","type":"1156,733,12"}},{"$type":"param","name":"$tool-font-size-big","text":"Dialog Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,736,20","text":"1156,737,4,79","type":"1156,736,12"}},{"$type":"param","name":"$tool-spacing","text":"The space between Dialog Tools\n","type":"number","src":{"name":"1156,739,20","text":"1156,740,4,32","type":"1156,739,12"}},{"$type":"param","name":"$tool-spacing-big","text":"The space between Dialog Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,742,20","text":"1156,743,4,88","type":"1156,742,12"}},{"$type":"param","name":"$tool-cursor","text":"Dialog Tool cursor\n","type":"string","src":{"name":"1156,745,20","text":"1156,746,4,20","type":"1156,745,12"}},{"$type":"param","name":"$tool-disabled-cursor","text":"Dialog Tool cursor when disabled\n","type":"string","src":{"name":"1156,748,20","text":"1156,749,4,34","type":"1156,748,12"}},{"$type":"param","name":"$tool-focused-outline-width","text":"Dialog Tool outline width when focused\n","type":"number","src":{"name":"1156,751,20","text":"1156,752,4,40","type":"1156,751,12"}},{"$type":"param","name":"$tool-focused-outline-style","text":"Dialog Tool outline style when focused\n","type":"string","src":{"name":"1156,754,20","text":"1156,755,4,40","type":"1156,754,12"}},{"$type":"param","name":"$tool-focused-outline-color","text":"Dialog Tool outline color when focused\n","type":"color","src":{"name":"1156,757,19","text":"1156,758,4,40","type":"1156,757,12"}},{"$type":"param","name":"$tool-focused-outline-offset","text":"Dialog Tool outline offset when focused\n","type":"number","src":{"name":"1156,760,20","text":"1156,761,4,41","type":"1156,760,12"}},{"$type":"param","name":"$anchor-border-color","text":"Dialog anchor border-color\n","type":"color","src":{"name":"1156,763,19","text":"1156,764,4,28","type":"1156,763,12"}},{"$type":"param","name":"$anchor-background-color","text":"Dialog anchor background-color\n","type":"color","src":{"name":"1156,766,19","text":"1156,767,4,32","type":"1156,766,12"}},{"$type":"param","name":"$anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","src":{"name":"1156,769,20","text":"1156,770,4,54","type":"1156,769,12"}},{"$type":"param","name":"$anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","src":{"name":"1156,772,20","text":"1156,773,4,54","type":"1156,772,12"}},{"$type":"param","name":"$anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","src":{"name":"1156,775,20","text":"1156,776,4,98","type":"1156,775,12"}},{"$type":"param","name":"$manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","src":{"name":"1156,779,20","text":"1156,780,4,66","type":"1156,779,12"}},{"$type":"param","name":"$min-width","text":"Dialog min-width\n","type":"number","src":{"name":"1156,782,20","text":"1156,783,4,18","type":"1156,782,12"}},{"$type":"param","name":"$min-width-big","text":"Dialog min-width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1156,785,20","text":"1156,786,4,73","type":"1156,785,12"}}],"src":{"name":"1156,788,7","text":"1156,514,4,38"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$dialog-anchor-background-color","text":"Dialog anchor background-color\n","type":"color","value":"null","src":{"dynamic":"1156,474,34","name":"1156,474,1","text":"1156,472,4,31","type":"1156,471,10","value":"1156,474,42"}},{"$type":"property","dynamic":true,"name":"$dialog-anchor-border-color","text":"Dialog anchor border-color\n","type":"color","value":"null","src":{"dynamic":"1156,468,30","name":"1156,468,1","text":"1156,466,4,27","type":"1156,465,10","value":"1156,468,38"}},{"$type":"property","dynamic":true,"name":"$dialog-anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","value":"null","src":{"dynamic":"1156,480,24","name":"1156,480,1","text":"1156,478,4,53","type":"1156,477,10","value":"1156,480,32"}},{"$type":"property","dynamic":true,"name":"$dialog-anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","value":"null","src":{"dynamic":"1156,493,24","name":"1156,493,1","text":"1156,490,4,97","type":"1156,489,10","value":"1156,493,32"}},{"$type":"property","dynamic":true,"name":"$dialog-anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","value":"null","src":{"dynamic":"1156,486,23","name":"1156,486,1","text":"1156,484,4,53","type":"1156,483,10","value":"1156,486,31"}},{"$type":"property","dynamic":true,"name":"$dialog-background-color","text":"Dialog background-color\n","type":"color/list","value":"null","src":{"dynamic":"1156,9,27","name":"1156,9,1","text":"1156,7,4,24","type":"1156,6,10","value":"1156,9,35"}},{"$type":"property","dynamic":true,"name":"$dialog-body-background-color","text":"Dialog body background-color\n","type":"color","value":"$dialog-background-color","src":{"dynamic":"1156,45,32","name":"1156,45,1","text":"1156,43,4,29","type":"1156,42,10","value":"1156,45,40"}},{"$type":"property","dynamic":true,"name":"$dialog-body-border-color","text":"Dialog body border-color\n","type":"color","value":"null","src":{"dynamic":"1156,57,28","name":"1156,57,1","text":"1156,55,4,25","type":"1156,54,10","value":"1156,57,36"}},{"$type":"property","dynamic":true,"name":"$dialog-body-border-style","text":"Dialog body border-style\n","type":"number/list","value":"null","src":{"dynamic":"1156,69,28","name":"1156,69,1","text":"1156,67,4,25","type":"1156,66,10","value":"1156,69,36"}},{"$type":"property","dynamic":true,"name":"$dialog-body-border-width","text":"Dialog body border-width\n","type":"number/list","value":"null","src":{"dynamic":"1156,63,28","name":"1156,63,1","text":"1156,61,4,25","type":"1156,60,10","value":"1156,63,36"}},{"$type":"property","dynamic":true,"name":"$dialog-body-color","text":"Dialog body text color\n","type":"color","value":"null","src":{"dynamic":"1156,51,21","name":"1156,51,1","text":"1156,49,4,23","type":"1156,48,10","value":"1156,51,29"}},{"$type":"property","dynamic":true,"name":"$dialog-body-font-family","text":"Dialog body font-family\n","type":"string","value":"null","src":{"dynamic":"1156,105,27","name":"1156,105,1","text":"1156,103,4,24","type":"1156,102,10","value":"1156,105,35"}},{"$type":"property","dynamic":true,"name":"$dialog-body-font-size","text":"Dialog body font-size\n","type":"number","value":"null","src":{"dynamic":"1156,81,25","name":"1156,81,1","text":"1156,79,4,22","type":"1156,78,10","value":"1156,81,33"}},{"$type":"property","dynamic":true,"name":"$dialog-body-font-size-big","text":"Dialog body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,87,29","name":"1156,87,1","text":"1156,85,4,78","type":"1156,84,10","value":"1156,87,37"}},{"$type":"property","dynamic":true,"name":"$dialog-body-font-weight","text":"Dialog body font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1156,75,27","name":"1156,75,1","text":"1156,73,4,24","type":"1156,72,10","value":"1156,75,35"}},{"$type":"property","dynamic":true,"name":"$dialog-body-line-height","text":"Dialog body line-height\n","type":"number","value":"null","src":{"dynamic":"1156,93,27","name":"1156,93,1","text":"1156,91,4,24","type":"1156,90,10","value":"1156,93,35"}},{"$type":"property","dynamic":true,"name":"$dialog-body-line-height-big","text":"Dialog body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,99,31","name":"1156,99,1","text":"1156,97,4,80","type":"1156,96,10","value":"1156,99,39"}},{"$type":"property","dynamic":true,"name":"$dialog-body-padding","text":"Dialog body padding\n","type":"number/list","value":"null","src":{"dynamic":"1156,111,23","name":"1156,111,1","text":"1156,109,4,20","type":"1156,108,10","value":"1156,111,31"}},{"$type":"property","dynamic":true,"name":"$dialog-body-padding-big","text":"Dialog body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1156,117,27","name":"1156,117,1","text":"1156,115,4,76","type":"1156,114,10","value":"1156,117,35"}},{"$type":"property","dynamic":true,"name":"$dialog-border-color","text":"Dialog border-color\n","type":"color/list","value":"$base-highlight-color","src":{"dynamic":"1156,15,23","name":"1156,15,1","text":"1156,13,4,20","type":"1156,12,10","value":"1156,15,31"}},{"$type":"property","dynamic":true,"name":"$dialog-border-radius","text":"Dialog border-radius\n","type":"number/list","value":"4px","src":{"dynamic":"1156,33,24","name":"1156,33,1","text":"1156,31,4,21","type":"1156,30,10","value":"1156,33,32"}},{"$type":"property","dynamic":true,"name":"$dialog-border-radius-big","text":"Dialog border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"5px","src":{"dynamic":"1156,39,28","name":"1156,39,1","text":"1156,37,4,77","type":"1156,36,10","value":"1156,39,36"}},{"$type":"property","dynamic":true,"name":"$dialog-border-style","text":"Dialog border-style\n","type":"string/list","value":"null","src":{"dynamic":"1156,27,23","name":"1156,27,1","text":"1156,25,4,20","type":"1156,24,10","value":"1156,27,31"}},{"$type":"property","dynamic":true,"name":"$dialog-border-width","text":"Dialog border-width\n","type":"number/list","value":"5px","src":{"dynamic":"1156,21,23","name":"1156,21,1","text":"1156,19,4,20","type":"1156,18,10","value":"1156,21,31"}},{"$type":"property","dynamic":true,"name":"$dialog-header-background-color","text":"Dialog Header background-color\n","type":"color","value":"$base-highlight-color","src":{"dynamic":"1156,123,34","name":"1156,123,1","text":"1156,121,4,31","type":"1156,120,10","value":"1156,123,42"}},{"$type":"property","dynamic":true,"name":"$dialog-header-background-gradient","text":"Dialog Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1156,130,37","name":"1156,130,1","text":"1156,127,4,149","type":"1156,126,10","value":"1156,130,45"}},{"$type":"property","dynamic":true,"name":"$dialog-header-border-color","text":"Dialog Header border-color\n","type":"color/list","value":"null","src":{"dynamic":"1156,142,30","name":"1156,142,1","text":"1156,140,4,27","type":"1156,139,10","value":"1156,142,38"}},{"$type":"property","dynamic":true,"name":"$dialog-header-border-style","text":"Dialog Header border-style\n","type":"string/list","value":"null","src":{"dynamic":"1156,154,30","name":"1156,154,1","text":"1156,152,4,27","type":"1156,151,10","value":"1156,154,38"}},{"$type":"property","dynamic":true,"name":"$dialog-header-border-width","text":"Dialog Header border-width\n","type":"number/list","value":"null","src":{"dynamic":"1156,148,30","name":"1156,148,1","text":"1156,146,4,27","type":"1156,145,10","value":"1156,148,38"}},{"$type":"property","dynamic":true,"name":"$dialog-header-color","text":"Dialog Header text color\n","type":"color","value":"$light-color","src":{"dynamic":"1156,136,23","name":"1156,136,1","text":"1156,134,4,25","type":"1156,133,10","value":"1156,136,31"}},{"$type":"property","dynamic":true,"name":"$dialog-header-font-family","text":"Dialog Header font-family\n","type":"string","value":"null","src":{"dynamic":"1156,190,29","name":"1156,190,1","text":"1156,188,4,26","type":"1156,187,10","value":"1156,190,37"}},{"$type":"property","dynamic":true,"name":"$dialog-header-font-size","text":"Dialog Header font-size\n","type":"number","value":"null","src":{"dynamic":"1156,166,27","name":"1156,166,1","text":"1156,164,4,24","type":"1156,163,10","value":"1156,166,35"}},{"$type":"property","dynamic":true,"name":"$dialog-header-font-size-big","text":"Dialog Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,172,31","name":"1156,172,1","text":"1156,170,4,80","type":"1156,169,10","value":"1156,172,39"}},{"$type":"property","dynamic":true,"name":"$dialog-header-font-weight","text":"Dialog Header font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1156,160,29","name":"1156,160,1","text":"1156,158,4,26","type":"1156,157,10","value":"1156,160,37"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-color","text":"Dialog Header icon color.\n","type":"color","value":"null","src":{"dynamic":"1156,250,28","name":"1156,250,1","text":"1156,248,4,26","type":"1156,247,10","value":"1156,250,36"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-font-size","text":"Dialog Header icon font-size.  Used for configuring the size of font icons\n","type":"number","value":"null","src":{"dynamic":"1156,268,32","name":"1156,268,1","text":"1156,266,4,75","type":"1156,265,10","value":"1156,268,40"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-font-size-big","text":"Dialog Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,274,36","name":"1156,274,1","text":"1156,272,4,85","type":"1156,271,10","value":"1156,274,44"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-horizontal-spacing","text":"The space between the Dialog Header icon and text when the icon is horizontally aligned\n","type":"number","value":"null","src":{"dynamic":"1156,280,41","name":"1156,280,1","text":"1156,278,4,88","type":"1156,277,10","value":"1156,280,49"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-horizontal-spacing-big","text":"The space between the Dialog Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,287,45","name":"1156,287,1","text":"1156,284,4,144","type":"1156,283,10","value":"1156,287,53"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-opacity","text":"Dialog Header icon opacity\n","type":"number","value":"null","src":{"dynamic":"1156,306,30","name":"1156,306,1","text":"1156,304,4,27","type":"1156,303,10","value":"1156,306,38"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-size","text":"Dialog Header icon size\n","type":"number","value":"null","src":{"dynamic":"1156,256,27","name":"1156,256,1","text":"1156,254,4,24","type":"1156,253,10","value":"1156,256,35"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-size-big","text":"Dialog Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,262,31","name":"1156,262,1","text":"1156,260,4,80","type":"1156,259,10","value":"1156,262,39"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-vertical-spacing","text":"The space between the Dialog Header icon and text when the icon is vertically aligned\n","type":"number","value":"null","src":{"dynamic":"1156,293,39","name":"1156,293,1","text":"1156,291,4,86","type":"1156,290,10","value":"1156,293,47"}},{"$type":"property","dynamic":true,"name":"$dialog-header-icon-vertical-spacing-big","text":"The space between the Dialog Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,300,43","name":"1156,300,1","text":"1156,297,4,142","type":"1156,296,10","value":"1156,300,51"}},{"$type":"property","dynamic":true,"name":"$dialog-header-line-height","text":"Dialog Header line-height\n","type":"number","value":"null","src":{"dynamic":"1156,178,29","name":"1156,178,1","text":"1156,176,4,26","type":"1156,175,10","value":"1156,178,37"}},{"$type":"property","dynamic":true,"name":"$dialog-header-line-height-big","text":"Dialog Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,184,33","name":"1156,184,1","text":"1156,182,4,82","type":"1156,181,10","value":"1156,184,41"}},{"$type":"property","dynamic":true,"name":"$dialog-header-min-height","text":"Dialog Header min-height\n","type":"number","value":"null","src":{"dynamic":"1156,238,28","name":"1156,238,1","text":"1156,236,4,25","type":"1156,235,10","value":"1156,238,36"}},{"$type":"property","dynamic":true,"name":"$dialog-header-min-height-big","text":"Dialog Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,244,32","name":"1156,244,1","text":"1156,242,4,81","type":"1156,241,10","value":"1156,244,40"}},{"$type":"property","dynamic":true,"name":"$dialog-header-padding","text":"Dialog Header padding\n","type":"number/list","value":"4px 5px 10px","src":{"dynamic":"1156,196,25","name":"1156,196,1","text":"1156,194,4,22","type":"1156,193,10","value":"1156,196,33"}},{"$type":"property","dynamic":true,"name":"$dialog-header-padding-big","text":"Dialog Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"5px 10px 13px","src":{"dynamic":"1156,202,29","name":"1156,202,1","text":"1156,200,4,78","type":"1156,199,10","value":"1156,202,37"}},{"$type":"property","dynamic":true,"name":"$dialog-header-shadow","text":"Dialog Header Shadow\n","type":"shadow","value":"null","src":{"dynamic":"1156,226,24","name":"1156,226,1","text":"1156,224,4,21","type":"1156,223,10","value":"1156,226,32"}},{"$type":"property","dynamic":true,"name":"$dialog-header-title-opacity","text":"Dialog Header Title opacity\n","type":"number","value":"null","src":{"dynamic":"1156,220,31","name":"1156,220,1","text":"1156,218,4,28","type":"1156,217,10","value":"1156,220,39"}},{"$type":"property","dynamic":true,"name":"$dialog-header-title-padding","text":"Dialog Header Title padding\n","type":"number/list","value":"0","src":{"dynamic":"1156,208,31","name":"1156,208,1","text":"1156,206,4,28","type":"1156,205,10","value":"1156,208,39"}},{"$type":"property","dynamic":true,"name":"$dialog-header-title-padding-big","text":"Dialog Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"0","src":{"dynamic":"1156,214,35","name":"1156,214,1","text":"1156,212,4,84","type":"1156,211,10","value":"1156,214,43"}},{"$type":"property","dynamic":true,"name":"$dialog-header-z-index","text":"Z-Index for the Dialog Header, should be used with shadows to raise header above content\n","type":"number","value":"null","src":{"dynamic":"1156,232,25","name":"1156,232,1","text":"1156,230,4,89","type":"1156,229,10","value":"1156,232,33"}},{"$type":"property","dynamic":true,"name":"$dialog-manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","value":"$panel-manage-borders","src":{"dynamic":"1156,499,25","name":"1156,499,1","text":"1156,497,4,65","type":"1156,496,10","value":"1156,499,33"}},{"$type":"property","dynamic":true,"name":"$dialog-min-width","text":"Dialog min-width\n","type":"number","value":"250px","src":{"dynamic":"1156,505,20","name":"1156,505,1","text":"1156,503,4,17","type":"1156,502,10","value":"1156,505,28"}},{"$type":"property","dynamic":true,"name":"$dialog-min-width-big","text":"Dialog min-width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"300px","src":{"dynamic":"1156,511,24","name":"1156,511,1","text":"1156,509,4,73","type":"1156,508,10","value":"1156,511,32"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-background-color","text":"Dialog Tool background-color\n","type":"color","value":"null","src":{"dynamic":"1156,336,32","name":"1156,336,1","text":"1156,334,4,29","type":"1156,333,10","value":"1156,336,40"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-border-radius","text":"Dialog Tool border radius\n","type":"number","value":"null","src":{"dynamic":"1156,384,29","name":"1156,384,1","text":"1156,382,4,26","type":"1156,381,10","value":"1156,384,37"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-border-radius-big","text":"Dialog Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,390,33","name":"1156,390,1","text":"1156,388,4,82","type":"1156,387,10","value":"1156,390,41"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-color","text":"Dialog Tool color\n","type":"color","value":"null","src":{"dynamic":"1156,312,21","name":"1156,312,1","text":"1156,310,4,18","type":"1156,309,10","value":"1156,312,29"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-cursor","text":"Dialog Tool cursor\n","type":"string","value":"null","src":{"dynamic":"1156,432,22","name":"1156,432,1","text":"1156,430,4,19","type":"1156,429,10","value":"1156,432,30"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-disabled-background-color","text":"Dialog Tool background-color when disabled\n","type":"number","value":"null","src":{"dynamic":"1156,354,41","name":"1156,354,1","text":"1156,352,4,43","type":"1156,351,10","value":"1156,354,49"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-disabled-color","text":"Dialog Tool color when disabled\n","type":"number","value":"null","src":{"dynamic":"1156,330,30","name":"1156,330,1","text":"1156,328,4,32","type":"1156,327,10","value":"1156,330,38"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-disabled-cursor","text":"Dialog Tool cursor when disabled\n","type":"string","value":"null","src":{"dynamic":"1156,438,31","name":"1156,438,1","text":"1156,436,4,33","type":"1156,435,10","value":"1156,438,39"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-disabled-opacity","text":"Dialog Tool opacity when disabled\n","type":"number","value":"null","src":{"dynamic":"1156,378,32","name":"1156,378,1","text":"1156,376,4,34","type":"1156,375,10","value":"1156,378,40"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-focused-outline-color","text":"Dialog Tool outline color when focused\n","type":"color","value":"null","src":{"dynamic":"1156,456,37","name":"1156,456,1","text":"1156,454,4,39","type":"1156,453,10","value":"1156,456,45"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-focused-outline-offset","text":"Dialog Tool outline offset when focused\n","type":"number","value":"null","src":{"dynamic":"1156,462,38","name":"1156,462,1","text":"1156,460,4,40","type":"1156,459,10","value":"1156,462,46"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-focused-outline-style","text":"Dialog Tool outline style when focused\n","type":"string","value":"null","src":{"dynamic":"1156,450,37","name":"1156,450,1","text":"1156,448,4,39","type":"1156,447,10","value":"1156,450,45"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-focused-outline-width","text":"Dialog Tool outline width when focused\n","type":"number","value":"null","src":{"dynamic":"1156,444,37","name":"1156,444,1","text":"1156,442,4,39","type":"1156,441,10","value":"1156,444,45"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-font-size","text":"Dialog Tool font-size\n","type":"number","value":"null","src":{"dynamic":"1156,408,25","name":"1156,408,1","text":"1156,406,4,22","type":"1156,405,10","value":"1156,408,33"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-font-size-big","text":"Dialog Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,414,29","name":"1156,414,1","text":"1156,412,4,78","type":"1156,411,10","value":"1156,414,37"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-hovered-background-color","text":"Dialog Tool background-color when hovered\n","type":"number","value":"null","src":{"dynamic":"1156,342,40","name":"1156,342,1","text":"1156,340,4,42","type":"1156,339,10","value":"1156,342,48"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-hovered-color","text":"Dialog Tool color when hovered\n","type":"number","value":"null","src":{"dynamic":"1156,318,29","name":"1156,318,1","text":"1156,316,4,31","type":"1156,315,10","value":"1156,318,37"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-hovered-opacity","text":"Dialog Tool opacity when hovered\n","type":"number","value":"null","src":{"dynamic":"1156,366,31","name":"1156,366,1","text":"1156,364,4,33","type":"1156,363,10","value":"1156,366,39"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-opacity","text":"Dialog Tool opacity\n","type":"number","value":"null","src":{"dynamic":"1156,360,23","name":"1156,360,1","text":"1156,358,4,20","type":"1156,357,10","value":"1156,360,31"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-pressed-background-color","text":"Dialog Tool background-color when pressed\n","type":"number","value":"null","src":{"dynamic":"1156,348,40","name":"1156,348,1","text":"1156,346,4,42","type":"1156,345,10","value":"1156,348,48"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-pressed-color","text":"Dialog Tool color when pressed\n","type":"number","value":"null","src":{"dynamic":"1156,324,29","name":"1156,324,1","text":"1156,322,4,31","type":"1156,321,10","value":"1156,324,37"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-pressed-opacity","text":"Dialog Tool opacity when pressed\n","type":"number","value":"null","src":{"dynamic":"1156,372,31","name":"1156,372,1","text":"1156,370,4,33","type":"1156,369,10","value":"1156,372,39"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-size","text":"Dialog Tool size\n","type":"number","value":"null","src":{"dynamic":"1156,396,20","name":"1156,396,1","text":"1156,394,4,17","type":"1156,393,10","value":"1156,396,28"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-size-big","text":"Dialog Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,402,24","name":"1156,402,1","text":"1156,400,4,73","type":"1156,399,10","value":"1156,402,32"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-spacing","text":"The space between Dialog Tools\n","type":"number","value":"null","src":{"dynamic":"1156,420,23","name":"1156,420,1","text":"1156,418,4,31","type":"1156,417,10","value":"1156,420,31"}},{"$type":"property","dynamic":true,"name":"$dialog-tool-spacing-big","text":"The space between Dialog Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1156,426,27","name":"1156,426,1","text":"1156,424,4,87","type":"1156,423,10","value":"1156,426,35"}}]}],"src":{"alias":"413,122,0:413,123,0","alternateClassNames":"413,125,0:413,125,0","extends":"413,120,0","name":"1156,2,11","requires":"413,128,0:413,129,0","since":"413,117,11","text":"413,2,4,4499"},"group":"Container","displayName":"Dialog"},{"$type":"class","alias":"widget.editor","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.grid.CellEditor","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.Editor","text":"The Editor class is used to provide inline editing for elements on the page. The editor\nis backed by a {@link Ext.field.Field} that will be displayed to edit the underlying content.\nThe editor is a floating Component, when the editor is shown it is automatically aligned to\ndisplay over the top of the bound element it is editing. The Editor contains several options\nfor how to handle key presses:\n\n- {@link #completeOnEnter}\n- {@link #cancelOnEsc}\n- {@link #swallowKeys}\n\nIt also has options for how to use the value once the editor has been activated:\n\n- {@link #revertInvalid}\n- {@link #ignoreNoChange}\n- {@link #updateEl}\n\nSample usage:\n\n```javascript\n@example({ framework: 'extjs' })\nvar form = Ext.create('Ext.form.Panel', {\n    renderTo: Ext.getBody(),\n    width: 380,\n    height: 400,\n    title: 'User Details',\n    bodyPadding: 10,\n    items: [{\n        html: 'Double-Click on the header title, this, or the field label to edit',\n        height:30\n    },{\n        label: 'First Name',\n        name: 'firstname',\n        xtype: 'textfield'\n    }]\n});\n\nvar editor = new Ext.Editor({\n    // update the innerHTML of the bound element\n    // when editing completes\n    updateEl: true,\n    alignment: 'l-l',\n    autoSize: {\n        width: 'boundEl'\n    },\n    field: {\n        xtype: 'textfield'\n    }\n});\n\nform.header.getTitle().textEl.on('dblclick', function(e, t) {\n    editor.startEdit(t);\n});\n\nform.getTargetEl().on('dblclick', function(e, t) {\n    editor.startEdit(t);\n    // Manually focus, since clicking on the label will focus the text field\n    editor.getField().focus(50, true);\n});\n\n```\n{@img Ext.Editor/Ext.Editor.png Ext.Editor component}\n","items":[{"$type":"configs","items":[{"$type":"property","name":"alignment","optional":true,"text":"The position to align to (see {@link Ext.util.Positionable#alignTo} for more details).\n","type":"String","value":"c-c","src":{"name":"414,118,23","text":"414,119,8,87","type":"414,118,14","value":"414,118,33"}},{"$type":"property","name":"allowBlur","text":"True to {@link #completeEdit complete the editing process} if in edit mode when focus exits\nfrom this Editor's hierarchy.\n","type":"Boolean","value":"true","src":{"name":"414,84,23","text":"414,85,8,122","type":"414,84,14","value":"414,88,0"}},{"$type":"property","name":"cancelOnClear","text":"True to cancel edit when the clear icon of a field is pressed\n","type":"Boolean","value":"false","src":{"name":"414,160,23","text":"414,161,8,62","type":"414,160,14","value":"414,163,0"}},{"$type":"property","name":"cancelOnEsc","text":"True to cancel the edit when the escape key is pressed.\n","type":"Boolean","value":"true","src":{"name":"414,154,23","text":"414,155,8,56","type":"414,154,14","value":"414,157,0"}},{"$type":"property","name":"completeOnEnter","text":"True to complete the edit when the enter key is pressed.\n","type":"Boolean","value":"true","src":{"name":"414,148,23","text":"414,149,8,57","type":"414,148,14","value":"414,151,0"}},{"$type":"property","name":"constrain","text":"True to constrain the editor to the viewport\n","type":"Boolean","value":"false","src":{"name":"414,136,23","text":"414,137,8,45","type":"414,136,14","value":"414,139,0"}},{"$type":"property","accessor":true,"name":"field","text":"Config object for a {@link Ext.field.Field}\n","type":"Object","value":"{\n    xtype: 'textfield'\n}","src":{"accessor":"414,76,0","name":"414,73,26","text":"414,74,12,44","type":"414,73,18","value":"414,76,0"}},{"$type":"property","name":"hideEl","optional":true,"text":"False to keep the bound element visible while the editor is displayed\n","type":"Boolean","value":"true","src":{"name":"414,106,24","text":"414,107,8,70","type":"414,106,14","value":"414,106,31"}},{"$type":"property","name":"ignoreNoChange","optional":true,"text":"True to skip the edit completion process (no save, no events fired) if the user completes an\nedit and the value has not changed.  Applies only to string values - edits for other data\ntypes will never be ignored.\n","type":"Boolean","value":"false","src":{"name":"414,99,24","text":"414,100,8,212","type":"414,99,14","value":"414,99,39"}},{"$type":"property","name":"matchFont","text":"Determines if the editor input should match the font style of the target element\n","type":"Boolean","value":"false","src":{"name":"414,251,23","text":"414,252,8,81","type":"414,251,14","value":"414,254,0"}},{"$type":"property","name":"offset","text":"The offset to use when aligning (see {@link Ext.util.Positionable#alignTo} for more details.\n","type":"Number[]","value":"[\n    0,\n    0\n]","src":{"name":"414,124,24","text":"414,125,8,93","type":"414,124,14","value":"414,127,0"}},{"$type":"property","name":"parentEl","optional":true,"text":"An element to render to.\n","type":"String/HTMLElement/Ext.dom.Element","value":"document.body","src":{"name":"414,177,51","text":"414,178,8,25","type":"414,177,14","value":"414,177,60"}},{"$type":"property","name":"revertInvalid","text":"True to automatically revert the field value and cancel the edit when the user completes an\nedit and the field\nvalidation fails\n","type":"Boolean","value":"true","src":{"name":"414,91,23","text":"414,92,8,128","type":"414,91,14","value":"414,96,0"}},{"$type":"property","accessor":true,"name":"shadow","text":"\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow.\n","type":"Boolean/String","value":"'frame'","src":{"accessor":"689,186,0","name":"414,130,30","text":"414,131,8,93","type":"414,130,14","value":"414,133,0"}},{"$type":"property","name":"swallowKeys","text":"Handle the keydown/keypress events so they don't propagate\n","type":"Boolean","value":"true","src":{"name":"414,142,23","text":"414,143,8,59","type":"414,142,14","value":"414,145,0"}},{"$type":"property","name":"updateEl","text":"True to update the innerHTML of the bound element when the update completes\n","type":"Boolean","value":"false","src":{"name":"414,166,23","text":"414,167,8,76","type":"414,166,14","value":"414,169,0"}},{"$type":"property","name":"value","text":"The data value of the underlying field\n","type":"Object","value":"''","src":{"name":"414,112,22","text":"414,113,8,39","type":"414,112,14","value":"414,115,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforecomplete","text":"Fires after a change has been made to the field, but before the change is reflected in the\nunderlying field.  Saving the change to the field can be canceled by returning false from\nthe handler of this event. Note that if the value has not changed and ignoreNoChange = true,\nthe editing will still end but this event will not fire since no edit actually occurred.\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,213,28","type":"414,213,16"}},{"$type":"param","name":"value","text":"The current field value\n","type":"Object","src":{"name":"414,214,24","text":"414,214,30,24","type":"414,214,16"}},{"$type":"param","name":"startValue","text":"The original field value\n","type":"Object","src":{"name":"414,215,24","text":"414,215,35,25","type":"414,215,16"}}],"src":{"name":"414,208,15","text":"414,209,8,363"}},{"$type":"event","name":"beforestartedit","text":"Fires when editing is initiated, but before the value changes.  Editing can be canceled by\nreturning false from the handler of this event.\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,194,28","type":"414,194,16"}},{"$type":"param","name":"boundEl","text":"The underlying element bound to this editor\n","type":"Ext.dom.Element","src":{"name":"414,195,33","text":"414,195,41,44","type":"414,195,16"}},{"$type":"param","name":"value","text":"The field value being set\n","type":"Object","src":{"name":"414,196,24","text":"414,196,30,26","type":"414,196,16"}}],"src":{"name":"414,191,15","text":"414,192,8,139"}},{"$type":"event","name":"canceledit","text":"Fires after editing has been canceled and the editor's value has been reset.\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,230,28","type":"414,230,16"}},{"$type":"param","name":"value","text":"The user-entered field value that was discarded\n","type":"Object","src":{"name":"414,231,24","text":"414,231,30,48","type":"414,231,16"}},{"$type":"param","name":"startValue","text":"The original field value that was set back into the editor after\ncancel\n","type":"Object","src":{"name":"414,232,24","text":"414,232,35,65:414,233,8,7","type":"414,232,16"}}],"src":{"name":"414,228,15","text":"414,229,8,77"}},{"$type":"event","name":"complete","text":"Fires after editing is complete and any changed value has been written to the underlying\nfield.\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,222,28","type":"414,222,16"}},{"$type":"param","name":"value","text":"The current field value\n","type":"Object","src":{"name":"414,223,24","text":"414,223,30,24","type":"414,223,16"}},{"$type":"param","name":"startValue","text":"The original field value\n","type":"Object","src":{"name":"414,224,24","text":"414,224,35,25","type":"414,224,16"}}],"src":{"name":"414,219,15","text":"414,220,8,96"}},{"$type":"event","name":"specialkey","text":"Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can\ncheck\n{@link Ext.event.Event#getKey} to determine which key was pressed.\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,241,28","type":"414,241,16"}},{"$type":"param","name":"field","text":"The field attached to this editor\n","type":"Ext.form.field.Field","src":{"name":"414,242,38","text":"414,242,44,34","type":"414,242,16"}},{"$type":"param","name":"event","text":"The event object\n","type":"Ext.event.Event","src":{"name":"414,243,33","text":"414,243,39,17","type":"414,243,16"}}],"src":{"name":"414,237,15","text":"414,238,8,166"}},{"$type":"event","name":"startedit","text":"Fires when this editor is displayed\n","items":[{"$type":"param","name":"this","type":"Ext.Editor","src":{"name":"414,202,28","type":"414,202,16"}},{"$type":"param","name":"boundEl","text":"The underlying element bound to this editor\n","type":"Ext.dom.Element","src":{"name":"414,203,33","text":"414,203,41,44","type":"414,203,16"}},{"$type":"param","name":"value","text":"The starting field value\n","type":"Object","src":{"name":"414,204,24","text":"414,204,30,25","type":"414,204,16"}}],"src":{"name":"414,200,15","text":"414,201,8,36"}}]},{"$type":"methods","items":[{"$type":"method","fires":"canceledit","name":"cancelEdit","text":"Cancels the editing process and hides the editor without persisting any changes. The field\nvalue will be reverted to the original starting value.\n","items":[{"$type":"param","name":"remainVisible","optional":true,"text":"Override the default behavior and keep the editor\nvisible after cancel\n","type":"Boolean","value":"false","src":{"name":"414,499,26","text":"414,499,47,50:414,500,8,21","type":"414,499,16","value":"414,499,40"}},{"$type":"param","access":"private","name":"followItem","optional":true,"text":"Pass `true` to ensure the item remains visible.\n","type":"Boolean","src":{"access":"414,501,39","name":"414,501,26","text":"414,501,48,48","type":"414,501,16"}}],"src":{"fires":"414,520,0","name":"414,503,0","text":"414,497,8,146"}},{"$type":"method","fires":"beforecomplete,complete","name":"completeEdit","text":"Ends the editing process, persists the changed value to the underlying field, and hides the\neditor.\n","items":[{"$type":"param","name":"remainVisible","optional":true,"text":"Override the default behavior and keep the editor\nvisible after edit\n","type":"Boolean","value":"false","src":{"name":"414,434,26","text":"414,434,47,50:414,435,8,19","type":"414,434,16","value":"414,434,40"}},{"$type":"param","access":"private","name":"followItem","optional":true,"text":"Pass `true` to ensure the item remains visible,\nthat is, the component that contains the editor. This is used by grid cell editing to\ntrack the item (i.e., the row component) since it may move due to edit of sorted fields.\n","type":"Boolean","src":{"access":"414,436,39","name":"414,436,26","text":"414,436,48,48:414,437,8,175","type":"414,436,16"}}],"src":{"fires":"414,469,0:414,478,0","name":"414,440,0","text":"414,432,8,100"}},{"$type":"method","access":"protected","name":"getLocation","items":[{"$type":"return","text":"The location where editing is active *if* editing is\nactive, else `null`.\n","type":"Ext.grid.Location","src":{"text":"414,259,37,53:414,260,8,21","type":"414,259,18"}}],"src":{"access":"414,258,8","name":"414,262,0"}},{"$type":"method","name":"getValue","text":"Gets the data value of the editor\n","items":[{"$type":"return","text":"The data value\n","type":"Object","src":{"text":"414,572,25,15","type":"414,572,17"}}],"src":{"name":"414,574,0","text":"414,571,8,34"}},{"$type":"method","access":"private","name":"onEditComplete","items":[{"$type":"param","name":"remainVisible","src":{"name":"414,528,0"}}],"src":{"access":"414,526,8","name":"414,528,0"}},{"$type":"method","access":"private","fires":"specialkey","name":"onSpecialKey","items":[{"$type":"param","name":"field","src":{"name":"414,315,0"}},{"$type":"param","name":"event","src":{"name":"414,315,0"}}],"src":{"access":"414,313,8","fires":"414,348,0","name":"414,315,0"}},{"$type":"method","name":"realign","text":"Realigns the editor to the bound field based on the current alignment config value.\n","src":{"name":"414,422,0","text":"414,420,8,84"}},{"$type":"method","name":"setValue","text":"Sets the data value of the editor\n","items":[{"$type":"param","name":"value","text":"Any valid value supported by the underlying field\n","type":"Object","src":{"name":"414,582,24","text":"414,582,30,50","type":"414,582,16"}}],"src":{"name":"414,584,0","text":"414,581,8,34"}},{"$type":"method","name":"startEdit","text":"Starts the editing process and shows the editor.\n","items":[{"$type":"param","name":"el","text":"The element to edit\n","type":"String/HTMLElement/Ext.dom.Element","src":{"name":"414,353,52","text":"414,353,55,20","type":"414,353,16"}},{"$type":"param","name":"value","optional":true,"text":"A value to initialize the editor with. If a value is not\nprovided, it defaults to the innerHTML of el.\n","type":"String","src":{"name":"414,354,25","text":"414,354,32,57:414,355,8,46","type":"414,354,16"}},{"$type":"param","access":"private","name":"doFocus","optional":true,"src":{"access":"414,356,26","name":"414,356,16"}}],"src":{"name":"414,358,0","text":"414,352,8,49"}}]},{"$type":"properties","items":[{"$type":"property","name":"editing","readonly":true,"text":"True if this editor is currently active.\n","type":"Boolean","value":"false","src":{"name":"414,184,28","readonly":"414,186,8","text":"414,185,8,41","type":"414,184,19","value":"414,188,0"}}]}],"src":{"alias":"414,67,0","extends":"414,66,0","name":"414,65,0","text":"414,2,4,1658"},"group":"Container","displayName":"Editor"},{"$type":"class","access":"private","alternateClassNames":"Ext.EventedBase","extended":"Ext.Base","extenders":"Ext.Widget,Ext.dataview.NavigationModel,Ext.dataview.selection.Model,Ext.fx.animation.Abstract,Ext.fx.runner.Css,Ext.layout.card.fx.Abstract,Ext.scroll.Scroller,Ext.util.Geolocation,Ext.util.translatable.Abstract","extends":"Ext.Base","mixed":"Ext.Mixin,Ext.mixin.Identifiable,Ext.mixin.Observable","mixins":"Ext.mixin.Observable","name":"Ext.Evented","package":"core","src":{"access":"6,2,4","alternateClassNames":"6,5,0","extends":"6,4,0","mixins":"6,8,0","name":"6,4,0"},"displayName":"Evented"},{"$type":"class","alias":"widget.field","alternateClassNames":"Ext.form.Field","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Input,Ext.field.Container,Ext.field.Display,Ext.field.Slider","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.field.Dirty","name":"Ext.field.Field","text":"Field is the base class for all form fields. It provides a lot of shared functionality to all\nfield subclasses (for example labels, simple validation, {@link #clearable clearing} and tab\nindex management), but is rarely used directly. Instead, it is much more common to use one of\nthe field subclasses:\n\n    xtype            Class\n    ---------------------------------------\n    textfield        {@link Ext.field.Text}\n    numberfield      {@link Ext.field.Number}\n    textareafield    {@link Ext.field.TextArea}\n    hiddenfield      {@link Ext.field.Hidden}\n    radiofield       {@link Ext.field.Radio}\n    filefield        {@link Ext.field.File}\n    checkboxfield    {@link Ext.field.Checkbox}\n    selectfield      {@link Ext.field.Select}\n    togglefield      {@link Ext.field.Toggle}\n    fieldset         {@link Ext.form.FieldSet}\n\nFields are normally used within the context of a form and/or fieldset. See the\n{@link Ext.form.Panel FormPanel} and {@link Ext.form.FieldSet FieldSet} docs for examples on how\nto put those together, or the list of links above for usage of individual field types. If you\nwish to create your own Field subclasses you can extend this class, though it is sometimes more\nuseful to extend {@link Ext.field.Text} as this provides additional text entry functionality.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"autoFitErrors","optional":true,"text":"Whether to adjust the field's body width to make room for the\n{@link #errorTarget error messages}.\n","type":"Boolean","value":"true","src":{"accessor":"489,254,0","name":"489,250,28","text":"489,251,12,99","type":"489,250,18","value":"489,250,42"}},{"$type":"property","accessor":true,"name":"bodyAlign","text":"\nThe horizontal alignment the contents of this field's body element.\n","type":"'start'/'center'/'end'/'stretch'","value":"'start'","src":{"accessor":"489,96,0","name":"489,96,0","text":"489,93,12,69","type":"489,92,18","value":"489,96,0"}},{"$type":"property","accessor":true,"name":"dataType","since":"7.0","text":"A config for a {@link Ext.data.field.Field} or data field sub-class instance\nused to serialize this field's value for form submission. This is used by the\n{@link #serialize} method unless `{@link #cfg!modelValidation modelValidation}` is used, in which case, the\ndata field of the bound {@link Ext.data.Model model} is used.\n\nFor example:\n\n     {\n         xtype: 'datefield',\n         dataType: {\n             // type: 'date'  (datefield does this by default)\n             dateWriteFormat: 'Y-m-d'\n         }\n     }\n\nIf this config is a string, it is used to create a {@link Ext.data.field.Field field}\nby that alias.\n","type":"Ext.data.field.Field/Object/String","value":"null","src":{"accessor":"489,195,0","name":"489,175,54","since":"489,193,19","text":"489,176,12,589","type":"489,175,18","value":"489,197,0"}},{"$type":"property","accessor":true,"name":"disabled","optional":true,"text":"`true` to disable the field.\n\nBe aware that conformant with the [HTML specification](http://www.w3.org/TR/html401/interact/forms.html),\ndisabled Fields will not be {@link Ext.form.Panel#method-submit submitted}.\n","type":"Boolean","value":"false","src":{"accessor":"489,241,12","name":"489,237,28","text":"489,237,44,29:489,238,12,183","type":"489,237,18","value":"489,237,37"}},{"$type":"property","accessor":true,"name":"error","since":"6.5.0","text":"The error (or errors) to display for this field. This config is typically set\nby the field's {@link #cfg!validators validators} but can be set directly if\nan error needs to be associated with a field manually.\n\nErrors will be HTML encoded as necessary and {@link #cfg!errorTpl formatted}\nbefore becoming the current {@link #cfg!errorMessage}.\n","type":"String/String[]","value":"null","src":{"accessor":"489,274,0","name":"489,265,35","since":"489,272,19","text":"489,266,12,343","type":"489,265,18","value":"489,274,0"}},{"$type":"property","accessor":true,"name":"errorMessage","since":"6.5.0","text":"The field's error message to display as {@link #cfg!errorTarget specified}.\nThis message must already be properly formatted and encoded as appropriate\nfor the `{@link #cfg!errorTarget errorTarget}`.\n","type":"String","value":"null","src":{"accessor":"489,283,0","name":"489,277,26","since":"489,281,19","text":"489,278,12,174","type":"489,277,18","value":"489,283,0"}},{"$type":"property","accessor":true,"name":"errorTarget","since":"6.5.0","text":"The location where the error message text should display.\n\nThe following are values that have predefined meaning:\n\n- `qtip` Display a {@link Ext.tip.Manager quick tip} containing the message\n when the user hovers (or taps) the field. For this option to work, quick tips\n must be enabled by calling {@link Ext.tip.Manager#init}.\n- `side` Add an error icon to the right of the field, displaying the message\n in a popup on hover or tap.\n- `title` Display the message in a default browser `title` attribute.\n- `under` Add a `div` beneath the field containing the error message.\n","type":"String","value":"'qtip'","src":{"accessor":"489,300,0","name":"489,286,26","since":"489,298,19","text":"489,287,12,574","type":"489,286,18","value":"489,300,0"}},{"$type":"property","accessor":true,"name":"errorTip","since":"6.5.0","text":"The default config that will be used to display errors in the tooltip.\n","type":"Object","value":"null","src":{"accessor":"489,316,0","name":"489,312,26","since":"489,314,19","text":"489,313,12,71","type":"489,312,18","value":"489,316,0"}},{"$type":"property","accessor":true,"name":"errorTpl","since":"6.5.0","text":"The template used to format the {@link #cfg!error error} set for this field.\nBy default, the {@link #cfg!errorTarget errorTarget} is used to determine\nwhether the error(s) are formatted as an HTML list or as plain text.\n","type":"String/String[]/Ext.XTemplate","value":"null","src":{"accessor":"489,309,0","name":"489,303,49","since":"489,307,19","text":"489,304,12,220","type":"489,303,18","value":"489,309,0"}},{"$type":"property","hide":true,"name":"fullscreen","type":"Boolean","src":{"hide":"489,246,12","name":"489,245,27","type":"489,245,18"}},{"$type":"property","accessor":true,"name":"inline","optional":true,"text":"`true` to cause this field to layout with inline element behavior.\nAn inline field's width is determined by the total width of its label and body\nelements instead of automatically expanding to fill the width of its container.\n","type":"Boolean","value":"false","src":{"accessor":"489,262,0","name":"489,257,28","text":"489,258,12,226","type":"489,257,18","value":"489,257,35"}},{"$type":"property","accessor":true,"name":"label","text":"The label of this field\n","type":"String","value":"null","src":{"accessor":"489,151,12","name":"489,150,26","text":"489,149,12,24","type":"489,150,18","value":"489,153,0"}},{"$type":"property","accessor":true,"name":"labelAlign","text":"The position to render the label relative to the field body.\n","type":"'top'/'left'/'bottom'/'right'","value":"'left'","src":{"accessor":"489,102,0","name":"489,102,0","text":"489,100,12,61","type":"489,99,18","value":"489,102,0"}},{"$type":"property","accessor":true,"name":"labelCls","text":"Optional CSS class to add to the Label element.\n","type":"String","value":"null","src":{"accessor":"489,108,0","name":"489,108,0","text":"489,106,12,48","type":"489,105,18","value":"489,108,0"}},{"$type":"property","accessor":true,"name":"labelMinWidth","text":"Min-width of this field's label.\n","type":"Number/String","value":"null","src":{"accessor":"489,128,0","name":"489,128,0","text":"489,126,12,33","type":"489,125,18","value":"489,128,0"}},{"$type":"property","accessor":true,"name":"labelTextAlign","text":"\nText alignment of this field's label\n","type":"'top'/'right'/'bottom'/'left'","value":"'left'","src":{"accessor":"489,115,0","name":"489,115,0","text":"489,112,12,38","type":"489,111,18","value":"489,115,0"}},{"$type":"property","accessor":true,"name":"labelWidth","text":"Width of this field's label. Can be a number of pixels or any valid CSS value,\nsuch as `'30%'`. To size the label to its text, use `labelWidth: 'auto'`\n","type":"Number/String","value":"null","src":{"accessor":"489,122,0","name":"489,122,0","text":"489,119,12,152","type":"489,118,18","value":"489,122,0"}},{"$type":"property","accessor":true,"name":"labelWrap","text":"`true` to allow the label to wrap. If set to `false`, the label will be truncated\nwith an ellipsis.\n","type":"Boolean","value":"false","src":{"accessor":"489,135,0","name":"489,135,0","text":"489,132,12,100","type":"489,131,18","value":"489,135,0"}},{"$type":"property","accessor":true,"name":"name","text":"The field's name.  Used by form panels to gather data to be submitted.\n\nFor {@link Ext.field.Input Input Fields} this name is set as the `{@link #cfg!name name}` attribute\nof the `inputElement`\n","type":"String","value":"null","src":{"accessor":"489,146,0","name":"489,146,0","text":"489,141,12,176","type":"489,140,18","value":"489,146,0"}},{"$type":"property","accessor":true,"name":"required","text":"`true` to make this field required.\n","type":"Boolean","value":"false","src":{"accessor":"489,159,0","name":"489,159,0","text":"489,157,12,36","type":"489,156,18","value":"489,159,0"}},{"$type":"property","accessor":true,"name":"requiredMessage","text":"The error message to display when {@link #required} is `true` and the field's\nvalue is \"empty\" (`null`, `undefined`, or empty string).\n","type":"String","value":"'This field is required'","src":{"accessor":"489,166,0","name":"489,166,0","text":"489,163,12,135","type":"489,162,18","value":"489,166,0"}},{"$type":"property","access":"private","accessor":true,"name":"sideError","type":"String","value":"null","src":{"access":"489,320,12","accessor":"489,322,0","name":"489,322,0","type":"489,319,18","value":"489,322,0"}},{"$type":"property","access":"private","accessor":true,"name":"tipError","type":"String","value":"null","src":{"access":"489,326,12","accessor":"489,328,0","name":"489,328,0","type":"489,325,18","value":"489,328,0"}},{"$type":"property","access":"private","accessor":true,"name":"titleError","type":"String","value":"null","src":{"access":"489,332,12","accessor":"489,334,0","name":"489,334,0","type":"489,331,18","value":"489,334,0"}},{"$type":"property","access":"private","accessor":true,"name":"underError","type":"String","value":"null","src":{"access":"489,338,12","accessor":"489,340,0","name":"489,340,0","type":"489,337,18","value":"489,340,0"}},{"$type":"property","accessor":true,"name":"validateDisabled","optional":true,"text":"`true` to validate the field, even if it is disabled.\n","type":"Boolean","value":"false","src":{"accessor":"489,234,0","name":"489,231,28","text":"489,232,12,54","type":"489,231,18","value":"489,231,45"}},{"$type":"property","accessor":true,"name":"validationMessage","text":"For validation, regex, etc., this is the error message returned if field is invalid.\n","type":"String","value":"'Is in the wrong format'","src":{"accessor":"489,228,0","name":"489,225,26","text":"489,226,12,85","type":"489,225,18","value":"489,228,0"}},{"$type":"property","accessor":true,"name":"validators","text":"A validator or array of validators to be applied to the field.\n\nWhen the field is validated, each validator is applied and if any one of them\ndetermines the field  is invalid, the field will be marked as invalid.  If you\nexamine the field's validators, you will get an array of Ext.data.Validators.\n\nValidation currently is synchronous.  If you need to validate a field with interaction\nwith a server, you would do this when the form is submitted.\n\nA validator may be:\n\n* A regexp - if the field fails to match the regexp, it is invalid.\n* A function - the function will be called to validate the field; it should return\nfalse if invalid.\n\n* An object - an object with a member fn that is a function to be called to validate\nthe field.\n\n* An instantiated Validator {@link  Ext.data.validator.Validator}\n","type":"Mixed","value":"null","src":{"accessor":"489,222,0","name":"489,222,0","text":"489,202,12,803","type":"489,201,18","value":"489,222,0"}},{"$type":"property","accessor":true,"name":"value","text":"The field's value\n","type":"Mixed","value":"null","src":{"accessor":"489,172,0","name":"489,172,0","text":"489,170,12,18","type":"489,169,18","value":"489,172,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the value has changed.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Field","src":{"name":"489,85,33","text":"489,85,38,11","type":"489,85,16"}},{"$type":"param","name":"newValue","text":"The new value\n","type":"String","src":{"name":"489,86,24","text":"489,86,33,14","type":"489,86,16"}},{"$type":"param","name":"oldValue","text":"The original value\n","type":"String","src":{"name":"489,87,24","text":"489,87,33,19","type":"489,87,16"}}],"src":{"name":"489,83,15","text":"489,84,8,34"}},{"$type":"event","name":"click","text":"Fires whenever the input is clicked.\n","items":[{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"489,53,33","text":"489,53,35,18","type":"489,53,16"}}],"src":{"name":"489,51,15","text":"489,52,8,37"}},{"$type":"event","name":"errorchange","since":"6.5.0","text":"Fires when the active error message changes.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Field","src":{"name":"489,77,33","type":"489,77,16"}},{"$type":"param","name":"error","text":"The current error message\n","type":"String","src":{"name":"489,78,24","text":"489,78,30,26","type":"489,78,16"}}],"src":{"name":"489,75,15","since":"489,79,15","text":"489,76,8,45"}},{"$type":"event","name":"keyup","text":"Fires whenever keyup is detected.\n","items":[{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"489,59,33","text":"489,59,35,18","type":"489,59,16"}}],"src":{"name":"489,57,15","text":"489,58,8,34"}},{"$type":"event","name":"mousedown","text":"Fires whenever the input has a mousedown occur.\n","items":[{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"489,71,33","text":"489,71,35,18","type":"489,71,16"}}],"src":{"name":"489,69,15","text":"489,70,8,48"}},{"$type":"event","name":"paste","text":"Fires whenever paste is detected.\n","items":[{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"489,65,33","text":"489,65,35,18","type":"489,65,16"}}],"src":{"name":"489,63,15","text":"489,64,8,34"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyValidators","items":[{"$type":"param","name":"validators","src":{"name":"489,934,0"}}],"src":{"access":"489,932,8","name":"489,934,0"}},{"$type":"method","deprecatedMessage":"Use {@link #setError setError(null)} instead. (for classic compatibility)\n","deprecatedVersion":"6.5.0","name":"clearInvalid","since":"6.5.0","text":"Mark field as valid.\n","src":{"deprecatedMessage":"489,905,8","deprecatedVersion":"489,905,8","name":"489,908,0","since":"489,906,15","text":"489,904,8,21"}},{"$type":"method","access":"protected","name":"completeEdit","text":"Called when focus leaves this input field.\nUsed to postprocess raw values and perform conversion and validation.\n","src":{"access":"489,504,8","name":"489,508,0","text":"489,505,8,113"}},{"$type":"method","access":"private","name":"didValueChange","text":"Checks if the value has changed. Allows subclasses to override for\nany more complex logic.\n","items":[{"$type":"param","name":"newVal","src":{"name":"489,451,0"}},{"$type":"param","name":"oldVal","src":{"name":"489,451,0"}}],"src":{"access":"489,447,8","name":"489,451,0","text":"489,448,8,91"}},{"$type":"method","access":"private","name":"doValidate","text":"This method is called by {@link #method!validate validate} if the value is both\nnon-empty (not `null`, `undefined` or `''`) and if the value can be parsed by the\n{@link #method!parseValue parseValue} method. This parsing concern is technically\nonly in play for `{@link Ext.field.Text}` and derived classes (such as `{@link Ext.field.Date}` and\n`{@link Ext.field.Number}`) but the guarantee here is that the `{@link #cfg!value value}` will be a parsed\nvalue and not the raw string and if the value cannot be parsed, this method will\nnot be called.\n","items":[{"$type":"param","name":"value","text":"The (parsed) value\n","type":"Mixed","src":{"name":"489,967,23","text":"489,967,29,19","type":"489,967,16"}},{"$type":"param","name":"errors","text":"The array of validation errors\n","type":"String[]","src":{"name":"489,968,26","text":"489,968,33,31","type":"489,968,16"}},{"$type":"param","name":"skipLazy","optional":true,"text":"`false` (the default) to run all validators.\n","type":"Boolean","src":{"name":"489,969,26","text":"489,969,36,45","type":"489,969,16"}}],"src":{"access":"489,970,8","name":"489,972,0","text":"489,959,8,505"}},{"$type":"method","access":"protected","name":"formatErrors","since":"6.5.0","text":"Formats the given error(s) based on the given {@link #cfg!errorTpl} and the\nspecified {@link #cfg!errorTarget}.\n","items":[{"$type":"param","name":"errors","type":"String[]","src":{"name":"489,541,26","type":"489,541,16"}},{"$type":"return","type":"String","src":{"type":"489,542,17"}}],"src":{"access":"489,543,8","name":"489,546,0","since":"489,544,15","text":"489,539,8,112"}},{"$type":"method","name":"getRawValue","since":"7.0","text":"Returns the raw value of the field, without performing any normalization, conversion,\nor validation. To get a normalized and converted value see {@link #getValue}.\n","items":[{"$type":"return","text":"value The raw String value of the field\n","type":"String","src":{"text":"489,1144,25,40","type":"489,1144,17"}}],"src":{"name":"489,1141,16","since":"489,1146,15","text":"489,1142,8,164"}},{"$type":"method","name":"isDirty","text":"Returns `true` if the value of this Field has been changed from its {@link #originalValue}.\nWill return `false` if the field is disabled or has not been rendered yet.\n","items":[{"$type":"return","text":"`true` if this field has been changed from its original value (and\nis not disabled), `false` otherwise.\n","type":"Boolean","src":{"text":"489,878,26,67:489,879,8,37","type":"489,878,17"}}],"src":{"name":"489,881,0","text":"489,875,8,168"}},{"$type":"method","name":"isEqual","text":"Returns whether two field {@link #getValue values} are logically equal.\nField implementations may override this to provide custom comparison logic appropriate\nfor the particular field's data type.\n","items":[{"$type":"param","name":"value1","text":"The first value to compare\n","type":"Object","src":{"name":"489,923,24","text":"489,923,31,27","type":"489,923,16"}},{"$type":"param","name":"value2","text":"The second value to compare\n","type":"Object","src":{"name":"489,924,24","text":"489,924,31,28","type":"489,924,16"}},{"$type":"return","text":"True if the values are equal, false if inequal.\n","type":"Boolean","src":{"text":"489,925,26,48","type":"489,925,17"}}],"src":{"name":"489,927,0","text":"489,920,8,197"}},{"$type":"method","name":"isValid","text":"Returns true if field is valid.\n","src":{"name":"489,915,0","text":"489,913,8,32"}},{"$type":"method","deprecatedMessage":"Use {@link #setError} instead. (for classic compatibility)\n","deprecatedVersion":"6.5.0","name":"markInvalid","since":"6.5.0","text":"Mark field as invalid.\n","items":[{"$type":"param","name":"messages","src":{"name":"489,899,0"}}],"src":{"deprecatedMessage":"489,896,8","deprecatedVersion":"489,896,8","name":"489,899,0","since":"489,897,15","text":"489,895,8,23"}},{"$type":"method","name":"processRawValue","since":"7.0","text":"Performs any necessary manipulation of a raw field value to prepare it for\n{@link #rawToValue conversion} and/or {@link #validate validation}, for instance\nstripping out ignored characters. In the base implementation it does nothing;\nindividual subclasses may override this as needed.\n","items":[{"$type":"param","name":"value","text":"The unprocessed string value\n","type":"Object","src":{"name":"489,1122,24","text":"489,1122,30,29","type":"489,1122,16"}},{"$type":"return","text":"The processed string value\n","type":"Object","src":{"text":"489,1123,25,27","type":"489,1123,17"}}],"src":{"name":"489,1116,16","since":"489,1125,15","text":"489,1117,8,286"}},{"$type":"method","name":"rawToValue","since":"7.0","text":"Converts a raw input field value into a mixed-type value that is suitable for this particular\nfield type. This allows controlling the normalization and conversion of user-entered values\ninto field-type-appropriate values, e.g. a Date object for {@link Ext.field.Date},\nand is invoked by {@link #getValue}.\n\nIt is up to individual implementations to decide how to handle raw values that cannot be\nsuccessfully converted to the desired object type.\n\nThe base implementation does no conversion, returning the raw value untouched.\n","items":[{"$type":"param","name":"rawValue","type":"Object","src":{"name":"489,1108,24","type":"489,1108,16"}},{"$type":"return","text":"The converted value.\n","type":"Object","src":{"text":"489,1109,25,21","type":"489,1109,17"}}],"src":{"name":"489,1097,16","since":"489,1111,15","text":"489,1098,8,528"}},{"$type":"method","chainable":true,"name":"reset","text":"Resets the current field value back to the original value on this field when it was created.\n\n    // This will create a field with an original value\n    var field = Ext.Viewport.add({\n        xtype: 'textfield',\n        value: 'first value'\n    });\n\n    // Update the value\n    field.setValue('new value');\n\n    // Now you can reset it back to the `first value`\n    field.reset();\n","items":[{"$type":"return","text":"this\n","type":"Ext.field.Field","src":{"text":"489,855,34,5","type":"489,855,17"}}],"src":{"chainable":"489,860,0","name":"489,857,0","text":"489,841,8,382"}},{"$type":"method","name":"resetOriginalValue","text":"Resets the field's {@link #originalValue} property so it matches the current\n{@link #getValue value}. This is called by\n{@link Ext.form.Panel}.{@link Ext.form.Panel#setValues setValues} if the form's\n{@link Ext.form.Panel#trackResetOnLoad trackResetOnLoad} property is set to true.\n","src":{"name":"489,869,0","text":"489,864,8,282"}},{"$type":"method","name":"serialize","since":"7.0","text":"A function which converts the field’s value for submission. This is the value used\nfor form submit. The field's value is serialized using the serializer for the\nassociated {@link Ext.data.Model} when using `{@link #cfg!modelValidation modelValidation}`, or using the\nserializer specified by the {@link #dataType} config.\n","items":[{"$type":"return","type":"String","src":{"type":"489,1194,17"}}],"src":{"name":"489,1197,0","since":"489,1195,15","text":"489,1190,8,292"}},{"$type":"method","access":"private","name":"toggleInvalidCls","text":"Add/remove invalid class(es)\n","items":[{"$type":"param","name":"hasError","type":"Boolean","src":{"name":"489,888,25","type":"489,888,16"}}],"src":{"access":"489,886,8","name":"489,890,0","text":"489,887,8,29"}},{"$type":"method","access":"protected","name":"transformRawValue","since":"7.0","text":"Transform the raw value before it is set\n","items":[{"$type":"param","name":"value","text":"The value\n","type":"Object","src":{"name":"489,1133,24","text":"489,1133,30,10","type":"489,1133,16"}},{"$type":"return","text":"The value to set\n","type":"Object","src":{"text":"489,1134,25,17","type":"489,1134,17"}}],"src":{"access":"489,1132,8","name":"489,1130,16","since":"489,1136,15","text":"489,1131,8,41"}},{"$type":"method","name":"validate","text":"Validate the field and return it's validity state.\nTo get the existing validity state without re-validating current value,\nuse {@link isValid}.\n","items":[{"$type":"param","access":"private","name":"skipLazy","optional":true,"text":"Pass `true` to skip validators marked as `lazy`.\n","type":"Boolean","src":{"access":"489,1003,37","name":"489,1003,26","text":"489,1003,46,49","type":"489,1003,16"}},{"$type":"return","text":"The new validity state.\n","type":"Boolean","src":{"text":"489,1004,26,24","type":"489,1004,17"}}],"src":{"name":"489,1006,0","text":"489,999,8,145"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"htmlErrorsTpl","readonly":true,"since":"6.5.0","text":"The default template used to format errors in HTML. This property is promoted\nto an `{@link Ext.XTemplate}` instance on first use.\n","type":"Ext.XTemplate","value":"[\n    '<tpl if=\"count == 1\">',\n    '<tpl for=\"errors\">{.:htmlEncode}</tpl>',\n    '<tpl elseif=\"count\">',\n    '<ul class=\"{listCls}\">',\n    '<tpl for=\"errors\"><li>{.:htmlEncode}</li></tpl>',\n    '</ul>',\n    '</tpl>'\n]","src":{"access":"489,347,8","name":"489,344,34","readonly":"489,348,8","since":"489,349,15","text":"489,345,8,123","type":"489,344,19","value":"489,351,0"}},{"$type":"property","name":"isField","readonly":true,"text":"`true` in this class to identify an object this type, or subclass thereof.\n\nThis is used by {@link Ext.form.Panel#getValues} to determine which\ncomponents inside a form are fields.\n","type":"Boolean","value":"true","src":{"name":"489,36,28","readonly":"489,41,8","text":"489,37,8,181","type":"489,36,19","value":"489,43,0"}},{"$type":"property","access":"private","name":"isFormField","value":"true","src":{"access":"489,46,8","name":"489,48,0","value":"489,48,0"}},{"$type":"property","access":"private","name":"originalValue","text":"The original value when the field was instantiated.\n","type":"Mixed","value":"null","src":{"access":"489,382,8","name":"489,380,26","text":"489,381,8,52","type":"489,380,19","value":"489,384,0"}},{"$type":"property","access":"private","name":"plainErrorsTpl","readonly":true,"since":"6.5.0","text":"The default template used to format errors as plain text. This property is promoted\nto an `{@link Ext.XTemplate}` instance on first use.\n","type":"Ext.XTemplate","value":"[\n    '<tpl if=\"count\">',\n    '<tpl for=\"errors\" between=\"\\\\n\">{.}</tpl>',\n    '</tpl>'\n]","src":{"access":"489,365,8","name":"489,362,34","readonly":"489,366,8","since":"489,367,15","text":"489,363,8,129","type":"489,362,19","value":"489,369,0"}},{"$type":"property","name":"validateOnInit","text":"Determines how initial values will handle validation\n- none: Will not validate any initial values\n- auto: Will only validate non-empty initial values\n- all: Will validate all initial values\n","type":"\"none\"/\"auto\"/\"all\"","value":"'auto'","src":{"name":"489,412,40","text":"489,413,8,190","type":"489,412,19","value":"489,418,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"field-ui","text":"Creates a visual theme for a Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1185,351,20","text":"1185,352,4,109","type":"1185,351,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"field","src":{"access":"1185,355,36","name":"1185,355,21","text":"1185,355,47,35:1185,356,4,61","type":"1185,355,12","value":"1185,355,28"}},{"$type":"param","name":"$background-color","text":"Field background-color\n","type":"color","src":{"name":"1185,358,19","text":"1185,359,4,24","type":"1185,358,12"}},{"$type":"param","name":"$focused-background-color","text":"Field background-color when focused\n","type":"color","src":{"name":"1185,361,19","text":"1185,362,4,37","type":"1185,361,12"}},{"$type":"param","name":"$invalid-background-color","text":"Field background-color when invalid\n","type":"color","src":{"name":"1185,364,19","text":"1185,365,4,37","type":"1185,364,12"}},{"$type":"param","name":"$disabled-background-color","text":"Field background-color when disabled\n","type":"color","src":{"name":"1185,367,19","text":"1185,368,4,38","type":"1185,367,12"}},{"$type":"param","name":"$label-color","text":"Field label text color\n","type":"color","src":{"name":"1185,370,19","text":"1185,371,4,24","type":"1185,370,12"}},{"$type":"param","name":"$focused-label-color","text":"Field label text color when focused\n","type":"color","src":{"name":"1185,373,19","text":"1185,374,4,37","type":"1185,373,12"}},{"$type":"param","name":"$invalid-label-color","text":"Field label text color when invalid\n","type":"color","src":{"name":"1185,376,19","text":"1185,377,4,37","type":"1185,376,12"}},{"$type":"param","name":"$disabled-label-color","text":"Field label text color when disabled\n","type":"color","src":{"name":"1185,379,19","text":"1185,380,4,38","type":"1185,379,12"}},{"$type":"param","name":"$label-background-color","text":"Field label background-color\n","type":"color","src":{"name":"1185,382,19","text":"1185,383,4,30","type":"1185,382,12"}},{"$type":"param","name":"$focused-label-background-color","text":"Field label background-color when focused\n","type":"color","src":{"name":"1185,385,19","text":"1185,386,4,43","type":"1185,385,12"}},{"$type":"param","name":"$invalid-label-background-color","text":"Field label background-color when invalid\n","type":"color","src":{"name":"1185,388,19","text":"1185,389,4,43","type":"1185,388,12"}},{"$type":"param","name":"$disabled-label-background-color","text":"Field label background-color when disabled\n","type":"color","src":{"name":"1185,391,19","text":"1185,392,4,44","type":"1185,391,12"}},{"$type":"param","name":"$label-padding","text":"Field label padding\n","type":"number/list","src":{"name":"1185,394,25","text":"1185,395,4,21","type":"1185,394,12"}},{"$type":"param","name":"$label-padding-big","text":"Field label padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1185,397,25","text":"1185,398,4,77","type":"1185,397,12"}},{"$type":"param","name":"$label-font-weight","text":"Field label font-weight\n","type":"string/number","src":{"name":"1185,400,27","text":"1185,401,4,25","type":"1185,400,12"}},{"$type":"param","name":"$label-font-size","text":"Field label font-size\n","type":"number","src":{"name":"1185,403,20","text":"1185,404,4,23","type":"1185,403,12"}},{"$type":"param","name":"$label-font-size-big","text":"Field label font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,406,20","text":"1185,407,4,79","type":"1185,406,12"}},{"$type":"param","name":"$label-line-height","text":"Field label line-height\n","type":"number","src":{"name":"1185,409,20","text":"1185,410,4,25","type":"1185,409,12"}},{"$type":"param","name":"$label-line-height-big","text":"Field label line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,412,20","text":"1185,413,4,81","type":"1185,412,12"}},{"$type":"param","name":"$label-font-family","text":"Field label font-family\n","type":"string","src":{"name":"1185,415,20","text":"1185,416,4,25","type":"1185,415,12"}},{"$type":"param","name":"$label-width","text":"Field label width\n","type":"number","src":{"name":"1185,418,20","text":"1185,419,4,19","type":"1185,418,12"}},{"$type":"param","name":"$label-width-big","text":"Field label width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,421,20","text":"1185,422,4,75","type":"1185,421,12"}},{"$type":"param","name":"$label-min-width","text":"Field label min-width\n","type":"number","src":{"name":"1185,424,20","text":"1185,425,4,23","type":"1185,424,12"}},{"$type":"param","name":"$label-min-width-big","text":"Field label min-width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,427,20","text":"1185,428,4,79","type":"1185,427,12"}},{"$type":"param","name":"$disabled-opacity","text":"Opacity of form fields when disabled\n","type":"number","src":{"name":"1185,430,20","text":"1185,431,4,38","type":"1185,430,12"}},{"$type":"param","name":"$required-indicator-font-weight","text":"Field {@link #required} indicator font-weight\n","type":"string/number","src":{"name":"1185,433,27","text":"1185,434,4,47","type":"1185,433,12"}},{"$type":"param","name":"$required-indicator-font-size","text":"Field {@link #required} indicator font-size\n","type":"number","src":{"name":"1185,436,20","text":"1185,437,4,45","type":"1185,436,12"}},{"$type":"param","name":"$required-indicator-line-height","text":"Field {@link #required} indicator line-height\n","type":"number","src":{"name":"1185,439,20","text":"1185,440,4,47","type":"1185,439,12"}},{"$type":"param","name":"$required-indicator-font-family","text":"Field {@link #required} indicator font-family\n","type":"string","src":{"name":"1185,442,20","text":"1185,443,4,47","type":"1185,442,12"}},{"$type":"param","name":"$required-indicator-margin","text":"Field {@link #required} indicator margin\n","type":"number","src":{"name":"1185,445,20","text":"1185,446,4,42","type":"1185,445,12"}},{"$type":"param","name":"$required-indicator-margin-big","text":"Field {@link #required} indicator margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,448,20","text":"1185,449,4,98","type":"1185,448,12"}},{"$type":"param","name":"$error-icon-side","text":"Field error icon when {#errorTarget} is `'side'`\n","type":"string","src":{"name":"1185,451,20","text":"1185,452,4,50","type":"1185,451,12"}},{"$type":"param","name":"$error-icon-side-color","text":"Field error icon color when {#errorTarget} is `'side'`\n","type":"color","src":{"name":"1185,454,19","text":"1185,455,4,56","type":"1185,454,12"}},{"$type":"param","name":"$error-icon-side-size","text":"Field error icon size when {#errorTarget} is `'side'`\n","type":"number","src":{"name":"1185,457,20","text":"1185,458,4,55","type":"1185,457,12"}},{"$type":"param","name":"$error-icon-side-size-big","text":"Field error icon size when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,460,20","text":"1185,461,4,111","type":"1185,460,12"}},{"$type":"param","name":"$error-icon-side-font-size","text":"Field error icon font-size when {#errorTarget} is `'side'`\n","type":"number","src":{"name":"1185,464,20","text":"1185,465,4,60","type":"1185,464,12"}},{"$type":"param","name":"$error-icon-side-font-size-big","text":"Field error icon font-size when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,467,20","text":"1185,468,4,116","type":"1185,467,12"}},{"$type":"param","name":"$error-icon-side-margin","text":"Field error icon margin when {#errorTarget} is `'side'`\n","type":"number/list","src":{"name":"1185,471,25","text":"1185,472,4,57","type":"1185,471,12"}},{"$type":"param","name":"$error-icon-side-margin-big","text":"Field error icon margin when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1185,474,25","text":"1185,475,4,113","type":"1185,474,12"}},{"$type":"param","name":"$error-icon-under","text":"Field error icon when {#errorTarget} is `'under'`\n","type":"string","src":{"name":"1185,478,20","text":"1185,479,4,51","type":"1185,478,12"}},{"$type":"param","name":"$error-icon-under-color","text":"Field error icon color when {#errorTarget} is `'under'`\n","type":"color","src":{"name":"1185,481,19","text":"1185,482,4,57","type":"1185,481,12"}},{"$type":"param","name":"$error-icon-under-size","text":"Field error icon size when {#errorTarget} is `'under'`\n","type":"number","src":{"name":"1185,484,20","text":"1185,485,4,56","type":"1185,484,12"}},{"$type":"param","name":"$error-icon-under-size-big","text":"Field error icon size when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,487,20","text":"1185,488,4,112","type":"1185,487,12"}},{"$type":"param","name":"$error-icon-under-font-size","text":"Field error icon font-size when {#errorTarget} is `'under'`\n","type":"number","src":{"name":"1185,491,20","text":"1185,492,4,61","type":"1185,491,12"}},{"$type":"param","name":"$error-icon-under-font-size-big","text":"Field error icon font-size when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,494,20","text":"1185,495,4,117","type":"1185,494,12"}},{"$type":"param","name":"$error-icon-under-margin","text":"Field error icon margin when {#errorTarget} is `'under'`\n","type":"number/list","src":{"name":"1185,498,25","text":"1185,499,4,58","type":"1185,498,12"}},{"$type":"param","name":"$error-icon-under-margin-big","text":"Field error icon margin when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1185,501,25","text":"1185,502,4,114","type":"1185,501,12"}},{"$type":"param","name":"$error-under-margin","text":"Field error element margin when {#errorTarget} is `'under'`\n","type":"number/list","src":{"name":"1185,505,25","text":"1185,506,4,61","type":"1185,505,12"}},{"$type":"param","name":"$error-under-margin-big","text":"Field error element margin when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1185,508,25","text":"1185,509,4,117","type":"1185,508,12"}},{"$type":"param","name":"$error-message-color","text":"Field error message color\n","type":"color","src":{"name":"1185,512,19","text":"1185,513,4,27","type":"1185,512,12"}},{"$type":"param","name":"$error-message-font-weight","text":"Field error message font-weight\n","type":"string/number","src":{"name":"1185,515,27","text":"1185,516,4,33","type":"1185,515,12"}},{"$type":"param","name":"$error-message-font-size","text":"Field error message font-size\n","type":"number","src":{"name":"1185,518,20","text":"1185,519,4,31","type":"1185,518,12"}},{"$type":"param","name":"$error-message-font-size-big","text":"Field error message font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,521,20","text":"1185,522,4,87","type":"1185,521,12"}},{"$type":"param","name":"$error-message-line-height","text":"Field error message line-height\n","type":"number","src":{"name":"1185,524,20","text":"1185,525,4,33","type":"1185,524,12"}},{"$type":"param","name":"$error-message-line-height-big","text":"Field error message line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1185,527,20","text":"1185,528,4,89","type":"1185,527,12"}},{"$type":"param","name":"$error-message-font-family","text":"Field error message font-family\n","type":"string","src":{"name":"1185,530,20","text":"1185,531,4,32","type":"1185,530,12"}}],"src":{"name":"1185,533,7","text":"1185,349,4,36"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$field-background-color","text":"Field background-color\n","type":"color","value":"null","src":{"dynamic":"1185,9,26","name":"1185,9,1","text":"1185,7,4,23","type":"1185,6,10","value":"1185,9,34"}},{"$type":"property","dynamic":true,"name":"$field-disabled-background-color","text":"Field background-color when disabled\n","type":"color","value":"null","src":{"dynamic":"1185,27,35","name":"1185,27,1","text":"1185,25,4,37","type":"1185,24,10","value":"1185,27,43"}},{"$type":"property","dynamic":true,"name":"$field-disabled-label-background-color","text":"Field label background-color when disabled\n","type":"color","value":"null","src":{"dynamic":"1185,75,41","name":"1185,75,1","text":"1185,73,4,43","type":"1185,72,10","value":"1185,75,49"}},{"$type":"property","dynamic":true,"name":"$field-disabled-label-color","text":"Field label text color when disabled\n","type":"color","value":"null","src":{"dynamic":"1185,51,30","name":"1185,51,1","text":"1185,49,4,37","type":"1185,48,10","value":"1185,51,38"}},{"$type":"property","dynamic":true,"name":"$field-disabled-opacity","text":"Opacity of form fields when disabled\n","type":"number","value":".3","src":{"dynamic":"1185,153,26","name":"1185,153,1","text":"1185,151,4,37","type":"1185,150,10","value":"1185,153,34"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side","text":"Field error icon when {#errorTarget} is `'side'`\n","type":"string","value":"$fa-var-exclamation-circle 'Font Awesome 5 Free'","src":{"dynamic":"1185,195,25","name":"1185,195,1","text":"1185,193,4,49","type":"1185,192,10","value":"1185,195,33"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-color","text":"Field error icon color when {#errorTarget} is `'side'`\n","type":"color","value":"$alert-color","src":{"dynamic":"1185,201,31","name":"1185,201,1","text":"1185,199,4,55","type":"1185,198,10","value":"1185,201,39"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-font-size","text":"Field error icon font-size when {#errorTarget} is `'side'`\n","type":"number","value":"null","src":{"dynamic":"1185,220,35","name":"1185,220,1","text":"1185,218,4,59","type":"1185,217,10","value":"1185,220,43"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-font-size-big","text":"Field error icon font-size when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1185,227,39","name":"1185,227,1","text":"1185,224,4,115","type":"1185,223,10","value":"1185,227,47"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-margin","text":"Field error icon margin when {#errorTarget} is `'side'`\n","type":"number/list","value":"0 5px","src":{"dynamic":"1185,233,32","name":"1185,233,1","text":"1185,231,4,56","type":"1185,230,10","value":"1185,233,40"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-margin-big","text":"Field error icon margin when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"0 8px","src":{"dynamic":"1185,240,36","name":"1185,240,1","text":"1185,237,4,112","type":"1185,236,10","value":"1185,240,44"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-size","text":"Field error icon size when {#errorTarget} is `'side'`\n","type":"number","value":"16px","src":{"dynamic":"1185,207,30","name":"1185,207,1","text":"1185,205,4,54","type":"1185,204,10","value":"1185,207,38"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-side-size-big","text":"Field error icon size when {#errorTarget} is `'side'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"30px","src":{"dynamic":"1185,214,34","name":"1185,214,1","text":"1185,211,4,110","type":"1185,210,10","value":"1185,214,42"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under","text":"Field error icon when {#errorTarget} is `'under'`\n","type":"string","value":"$fa-var-exclamation-circle 'Font Awesome 5 Free'","src":{"dynamic":"1185,246,26","name":"1185,246,1","text":"1185,244,4,50","type":"1185,243,10","value":"1185,246,34"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-color","text":"Field error icon color when {#errorTarget} is `'under'`\n","type":"color","value":"$alert-color","src":{"dynamic":"1185,252,32","name":"1185,252,1","text":"1185,250,4,56","type":"1185,249,10","value":"1185,252,40"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-font-size","text":"Field error icon font-size when {#errorTarget} is `'under'`\n","type":"number","value":"null","src":{"dynamic":"1185,271,36","name":"1185,271,1","text":"1185,269,4,60","type":"1185,268,10","value":"1185,271,44"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-font-size-big","text":"Field error icon font-size when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1185,278,40","name":"1185,278,1","text":"1185,275,4,116","type":"1185,274,10","value":"1185,278,48"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-margin","text":"Field error icon margin when {#errorTarget} is `'under'`\n","type":"number/list","value":"0 5px 0 0","src":{"dynamic":"1185,284,33","name":"1185,284,1","text":"1185,282,4,57","type":"1185,281,10","value":"1185,284,41"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-margin-big","text":"Field error icon margin when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"0 8px 0 0","src":{"dynamic":"1185,291,37","name":"1185,291,1","text":"1185,288,4,113","type":"1185,287,10","value":"1185,291,45"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-size","text":"Field error icon size when {#errorTarget} is `'under'`\n","type":"number","value":"16px","src":{"dynamic":"1185,258,31","name":"1185,258,1","text":"1185,256,4,55","type":"1185,255,10","value":"1185,258,39"}},{"$type":"property","dynamic":true,"name":"$field-error-icon-under-size-big","text":"Field error icon size when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"30px","src":{"dynamic":"1185,265,35","name":"1185,265,1","text":"1185,262,4,111","type":"1185,261,10","value":"1185,265,43"}},{"$type":"property","dynamic":true,"name":"$field-error-message-color","text":"Field error message color\n","type":"color","value":"$alert-color","src":{"dynamic":"1185,310,29","name":"1185,310,1","text":"1185,308,4,26","type":"1185,307,10","value":"1185,310,37"}},{"$type":"property","dynamic":true,"name":"$field-error-message-font-family","text":"Field error message font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1185,346,35","name":"1185,346,1","text":"1185,344,4,32","type":"1185,343,10","value":"1185,346,43"}},{"$type":"property","dynamic":true,"name":"$field-error-message-font-size","text":"Field error message font-size\n","type":"number","value":"1rem","src":{"dynamic":"1185,322,33","name":"1185,322,1","text":"1185,320,4,30","type":"1185,319,10","value":"1185,322,41"}},{"$type":"property","dynamic":true,"name":"$field-error-message-font-size-big","text":"Field error message font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1185,328,37","name":"1185,328,1","text":"1185,326,4,86","type":"1185,325,10","value":"1185,328,45"}},{"$type":"property","dynamic":true,"name":"$field-error-message-font-weight","text":"Field error message font-weight\n","type":"string/number","value":"$font-weight","src":{"dynamic":"1185,316,35","name":"1185,316,1","text":"1185,314,4,32","type":"1185,313,10","value":"1185,316,43"}},{"$type":"property","dynamic":true,"name":"$field-error-message-line-height","text":"Field error message line-height\n","type":"number","value":"16px","src":{"dynamic":"1185,334,35","name":"1185,334,1","text":"1185,332,4,32","type":"1185,331,10","value":"1185,334,43"}},{"$type":"property","dynamic":true,"name":"$field-error-message-line-height-big","text":"Field error message line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"24px","src":{"dynamic":"1185,340,39","name":"1185,340,1","text":"1185,338,4,88","type":"1185,337,10","value":"1185,340,47"}},{"$type":"property","dynamic":true,"name":"$field-error-under-margin","text":"Field error element margin when {#errorTarget} is `'under'`\n","type":"number/list","value":"2px 0","src":{"dynamic":"1185,297,28","name":"1185,297,1","text":"1185,295,4,60","type":"1185,294,10","value":"1185,297,36"}},{"$type":"property","dynamic":true,"name":"$field-error-under-margin-big","text":"Field error element margin when {#errorTarget} is `'under'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"3px","src":{"dynamic":"1185,304,32","name":"1185,304,1","text":"1185,301,4,116","type":"1185,300,10","value":"1185,304,40"}},{"$type":"property","dynamic":true,"name":"$field-focused-background-color","text":"Field background-color when focused\n","type":"color","value":"null","src":{"dynamic":"1185,15,34","name":"1185,15,1","text":"1185,13,4,36","type":"1185,12,10","value":"1185,15,42"}},{"$type":"property","dynamic":true,"name":"$field-focused-label-background-color","text":"Field label background-color when focused\n","type":"color","value":"null","src":{"dynamic":"1185,63,40","name":"1185,63,1","text":"1185,61,4,42","type":"1185,60,10","value":"1185,63,48"}},{"$type":"property","dynamic":true,"name":"$field-focused-label-color","text":"Field label text color when focused\n","type":"color","value":"null","src":{"dynamic":"1185,39,29","name":"1185,39,1","text":"1185,37,4,36","type":"1185,36,10","value":"1185,39,37"}},{"$type":"property","dynamic":true,"name":"$field-invalid-background-color","text":"Field background-color when invalid\n","type":"color","value":"null","src":{"dynamic":"1185,21,34","name":"1185,21,1","text":"1185,19,4,36","type":"1185,18,10","value":"1185,21,42"}},{"$type":"property","dynamic":true,"name":"$field-invalid-label-background-color","text":"Field label background-color when invalid\n","type":"color","value":"null","src":{"dynamic":"1185,69,40","name":"1185,69,1","text":"1185,67,4,42","type":"1185,66,10","value":"1185,69,48"}},{"$type":"property","dynamic":true,"name":"$field-invalid-label-color","text":"Field label text color when invalid\n","type":"color","value":"null","src":{"dynamic":"1185,45,29","name":"1185,45,1","text":"1185,43,4,36","type":"1185,42,10","value":"1185,45,37"}},{"$type":"property","dynamic":true,"name":"$field-label-background-color","text":"Field label background-color\n","type":"color","value":"null","src":{"dynamic":"1185,57,32","name":"1185,57,1","text":"1185,55,4,29","type":"1185,54,10","value":"1185,57,40"}},{"$type":"property","dynamic":true,"name":"$field-label-color","text":"Field label text color\n","type":"color","value":"$color","src":{"dynamic":"1185,33,21","name":"1185,33,1","text":"1185,31,4,23","type":"1185,30,10","value":"1185,33,29"}},{"$type":"property","dynamic":true,"name":"$field-label-font-family","text":"Field label font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1185,123,27","name":"1185,123,1","text":"1185,121,4,24","type":"1185,120,10","value":"1185,123,35"}},{"$type":"property","dynamic":true,"name":"$field-label-font-size","text":"Field label font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1185,99,25","name":"1185,99,1","text":"1185,97,4,22","type":"1185,96,10","value":"1185,99,33"}},{"$type":"property","dynamic":true,"name":"$field-label-font-size-big","text":"Field label font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1185,105,29","name":"1185,105,1","text":"1185,103,4,78","type":"1185,102,10","value":"1185,105,37"}},{"$type":"property","dynamic":true,"name":"$field-label-font-weight","text":"Field label font-weight\n","type":"string/number","value":"$font-weight-normal","src":{"dynamic":"1185,93,27","name":"1185,93,1","text":"1185,91,4,24","type":"1185,90,10","value":"1185,93,35"}},{"$type":"property","dynamic":true,"name":"$field-label-line-height","text":"Field label line-height\n","type":"number","value":"17px","src":{"dynamic":"1185,111,27","name":"1185,111,1","text":"1185,109,4,24","type":"1185,108,10","value":"1185,111,35"}},{"$type":"property","dynamic":true,"name":"$field-label-line-height-big","text":"Field label line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"20px","src":{"dynamic":"1185,117,31","name":"1185,117,1","text":"1185,115,4,80","type":"1185,114,10","value":"1185,117,39"}},{"$type":"property","dynamic":true,"name":"$field-label-min-width","text":"Field label min-width\n","type":"number","value":"null","src":{"dynamic":"1185,141,25","name":"1185,141,1","text":"1185,139,4,22","type":"1185,138,10","value":"1185,141,33"}},{"$type":"property","dynamic":true,"name":"$field-label-min-width-big","text":"Field label min-width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1185,147,29","name":"1185,147,1","text":"1185,145,4,78","type":"1185,144,10","value":"1185,147,37"}},{"$type":"property","dynamic":true,"name":"$field-label-padding","text":"Field label padding\n","type":"number/list","value":"4px 6px 3px 0","src":{"dynamic":"1185,81,23","name":"1185,81,1","text":"1185,79,4,20","type":"1185,78,10","value":"1185,81,31"}},{"$type":"property","dynamic":true,"name":"$field-label-padding-big","text":"Field label padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"6px 6px 6px 0","src":{"dynamic":"1185,87,27","name":"1185,87,1","text":"1185,85,4,76","type":"1185,84,10","value":"1185,87,35"}},{"$type":"property","dynamic":true,"name":"$field-label-width","text":"Field label width\n","type":"number","value":"100px","src":{"dynamic":"1185,129,21","name":"1185,129,1","text":"1185,127,4,18","type":"1185,126,10","value":"1185,129,29"}},{"$type":"property","dynamic":true,"name":"$field-label-width-big","text":"Field label width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"120px","src":{"dynamic":"1185,135,25","name":"1185,135,1","text":"1185,133,4,74","type":"1185,132,10","value":"1185,135,33"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-font-family","text":"Field {@link #required} indicator font-family\n","type":"string","value":"null","src":{"dynamic":"1185,177,40","name":"1185,177,1","text":"1185,175,4,46","type":"1185,174,10","value":"1185,177,48"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-font-size","text":"Field {@link #required} indicator font-size\n","type":"number","value":"null","src":{"dynamic":"1185,165,38","name":"1185,165,1","text":"1185,163,4,44","type":"1185,162,10","value":"1185,165,46"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-font-weight","text":"Field {@link #required} indicator font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1185,159,40","name":"1185,159,1","text":"1185,157,4,46","type":"1185,156,10","value":"1185,159,48"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-line-height","text":"Field {@link #required} indicator line-height\n","type":"number","value":"null","src":{"dynamic":"1185,171,40","name":"1185,171,1","text":"1185,169,4,46","type":"1185,168,10","value":"1185,171,48"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-margin","text":"Field {@link #required} indicator margin\n","type":"number","value":"-3px null null 4px","src":{"dynamic":"1185,183,35","name":"1185,183,1","text":"1185,181,4,41","type":"1185,180,10","value":"1185,183,43"}},{"$type":"property","dynamic":true,"name":"$field-required-indicator-margin-big","text":"Field {@link #required} indicator margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1185,189,39","name":"1185,189,1","text":"1185,187,4,97","type":"1185,186,10","value":"1185,189,47"}},{"$type":"property","dynamic":true,"name":"$field-vertical-spacing","text":"Vertical space in between form fields\n","type":"number","value":"8px","src":{"dynamic":"1185,756,26","name":"1185,756,1","text":"1185,754,4,38","type":"1185,753,10","value":"1185,756,34"}},{"$type":"property","dynamic":true,"name":"$field-vertical-spacing-big","text":"Vertical space in between form fields in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1185,762,30","name":"1185,762,1","text":"1185,760,4,94","type":"1185,759,10","value":"1185,762,38"}}]}],"src":{"alias":"489,29,0","alternateClassNames":"489,28,0","extends":"489,27,0","mixins":"489,32,0","name":"1185,2,11","text":"489,2,4,1296"},"displayName":"Field"},{"$type":"class","alias":"widget.checkbox,widget.checkboxfield","alternateClassNames":"Ext.form.Checkbox","extended":"Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Radio","extends":"Ext.field.Input","mixed":"Ext.Mixin,Ext.field.BoxLabelable,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.field.BoxLabelable","name":"Ext.field.Checkbox","text":" The checkbox field is an enhanced version of the native browser checkbox and is\n great for enabling your user to choose one or more items from a set (for example\n choosing toppings for a pizza order). It works like any other\n {@link Ext.field.Field field} and is usually found in the context of a form:\n\n ## Example\n\n ```javascript\n @example({ framework: 'extjs' })\n var form = Ext.create('Ext.form.Panel', {\n     fullscreen: true,\n     items: [\n         {\n             xtype: 'checkboxfield',\n             name : 'tomato',\n             label: 'Tomato',\n             value: 'tomato',\n             checked: true\n         },\n         {\n             xtype: 'checkboxfield',\n             name : 'salami',\n             label: 'Salami'\n         },\n         {\n             xtype: 'toolbar',\n             docked: 'bottom',\n             items: [\n                 { xtype: 'spacer' },\n                 {\n                     text: 'getValues',\n                     handler: function() {\n                         var form = Ext.ComponentQuery.query('formpanel')[0],\n                             values = form.getValues();\n\n                         Ext.Msg.alert(null,\n                             \"Tomato: \" + ((values.tomato) ? \"yes\" : \"no\") +\n                             \"<br />Salami: \" + ((values.salami) ? \"yes\" : \"no\")\n                         );\n                     }\n                 },\n                 { xtype: 'spacer' }\n             ]\n         }\n     ]\n });\n\n\n The form above contains two check boxes - one for Tomato, one for Salami. We configured the\n Tomato checkbox to be checked immediately on load, and the Salami checkbox to be unchecked.\n We also specified an optional text {@link #value} that will be sent when we submit the form.\n We can get this value using the Form's {@link Ext.form.Panel#getValues getValues} function,\n or have it sent as part of the data that is sent when the form is submitted:\n\n     form.getValues(); //contains a key called 'tomato' if the Tomato field is still checked\n     form.submit(); //will send 'tomato' in the form submission data\n\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtFormPanel, ExtContainer, ExtCheckBoxField } from '@sencha/ext-react';\n export default class MyExample extends Component {\n     render() {\n         return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow layout={{type: 'vbox', align: 'left'}}>\n                    <ExtCheckBoxField boxLabel=\"Unchecked\"/>\n                    <ExtCheckBoxField boxLabel=\"Checked\" checked/>\n                    <ExtCheckBoxField boxLabel=\"Disabled\" disabled/>\n                    <ExtCheckBoxField boxLabel=\"Disabled (checked)\" disabled checked/>\n                </ExtFormPanel>\n            </ExtContainer>\n         )\n     }\n }\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n @Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n            <ExtContainer [shadow]=\"true\" [layout]='\"center\"'>\n                <ExtFormPanel [shadow] [layout]=\"{type: 'vbox', align: 'left'}\">\n                    <ExtCheckBoxField [boxLabel]='\"Unchecked\"'>\n                    </ExtCheckBoxField>\n                    <ExtCheckBoxField [boxLabel]='\"Checked\"' [checked]=\"true\">\n                    </ExtCheckBoxField>\n                    <ExtCheckBoxField [boxLabel]='\"Disabled\"' [disabled]=\"true\">\n                    </ExtCheckBoxField>\n                    <ExtCheckBoxField [boxLabel]='\"Disabled (checked)\"'\n                       [disabled]=\"true\" [checked]=\"true\">\n                    </ExtCheckBoxField>\n                </ExtFormPanel>\n            </ExtContainer>\n    `\n })\n export class AppComponent {}\n ```\n ```html\n  @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n  <ext-container layout=\"center\">\n    <ext-formpanel\n        shadow=\"true\"\n        layout='{\"type\": \"vbox\", \"align\": \"left\"}'\n     >\n        <ext-checkboxfield boxLabel=\"Unchecked\"></ext-checkboxfield>\n        <ext-checkboxfield boxLabel=\"Checked\" checked></ext-checkboxfield>\n        <ext-checkboxfield boxLabel=\"Disabled\" disabled></ext-checkboxfield>\n        <ext-checkboxfield boxLabel=\"Disabled (checked)\" disabled checked></ext-checkboxfield>\n    </ext-formpanel>\n  </ext-container>\n```\n```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-checkboxfield.component';\n\nexport default class CheckBoxFieldComponent {}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"checked","text":"`true` if the checkbox should render initially checked.\n","type":"Boolean","value":"false","src":{"accessor":"479,200,12","name":"479,198,27","text":"479,199,12,56","type":"479,198,18","value":"479,202,0"}},{"$type":"property","access":"private","name":"labelMaskTap","type":"Boolean","src":{"access":"479,206,12","name":"479,205,27","type":"479,205,18"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    checked: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"479,163,8","name":"479,162,13","text":"275,104,12,2499","type":"275,103,18","value":"479,165,0"}},{"$type":"property","inheritdoc":true,"name":"shareableName","text":"Set to `true` to allow this component's `{@link #cfg!name name}` to be shared by other items in the\nsame `nameHolder`. Such items will be returned in an array from `lookupName`.\n","type":"Boolean","value":"true","src":{"inheritdoc":"479,142,8","name":"479,141,13","text":"275,299,8,160","type":"275,298,14","value":"479,144,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    checked: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"479,155,8","name":"479,154,13","text":"275,231,12,406","type":"275,230,18","value":"479,157,0"}},{"$type":"property","accessor":true,"name":"value","text":"The string value to submit if the item is in a checked state.\n","type":"String","value":"''","src":{"accessor":"479,193,12","name":"479,191,26","text":"479,192,12,62","type":"479,191,18","value":"479,195,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the field value changes.\n","items":[{"$type":"param","name":"this","text":"This field.\n","type":"Ext.field.Checkbox","src":{"name":"479,172,36","text":"479,172,41,12","type":"479,172,16"}},{"$type":"param","name":"newValue","text":"The new value.\n","type":"Boolean","src":{"name":"479,173,25","text":"479,173,34,15","type":"479,173,16"}},{"$type":"param","name":"oldValue","text":"The original value.\n","type":"Boolean","src":{"name":"479,174,25","text":"479,174,34,20","type":"479,174,16"}}],"src":{"name":"479,170,15","text":"479,171,8,36"}},{"$type":"event","name":"check","text":"Fires when the checkbox is checked.\n","items":[{"$type":"param","name":"this","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"name":"479,180,36","text":"479,180,41,15","type":"479,180,16"}}],"src":{"name":"479,178,15","text":"479,179,8,36"}},{"$type":"event","name":"uncheck","text":"Fires when the checkbox is unchecked.\n","items":[{"$type":"param","name":"this","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"name":"479,186,36","text":"479,186,41,15","type":"479,186,16"}}],"src":{"name":"479,184,15","text":"479,185,8,38"}}]},{"$type":"methods","items":[{"$type":"method","name":"check","text":"Set the checked state of the checkbox to `true`.\n","items":[{"$type":"return","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"text":"479,313,37,15","type":"479,313,17"}}],"src":{"name":"479,315,0","text":"479,312,8,49"}},{"$type":"method","access":"private","name":"getBoxTemplate","src":{"access":"479,224,8","name":"479,226,0"}},{"$type":"method","name":"getChecked","text":"Returns the `{@link #cfg!checked checked}` value of this field\n","items":[{"$type":"return","text":"value The field value\n","type":"Mixed","src":{"text":"479,265,24,22","type":"479,265,17"}}],"src":{"name":"479,267,0","text":"479,264,8,42"}},{"$type":"method","name":"getGroupValues","text":"Returns an array of values from the checkboxes in the group that are checked.\n","items":[{"$type":"return","type":"Array","src":{"type":"479,361,17"}}],"src":{"name":"479,363,0","text":"479,360,8,78"}},{"$type":"method","name":"getRawValue","since":"7.0","text":"Returns the checked state of the checkbox.\n","items":[{"$type":"return","text":"True if checked, else false\n","type":"Boolean","src":{"text":"479,414,26,28","type":"479,414,17"}}],"src":{"name":"479,417,0","since":"479,415,15","text":"479,413,8,43"}},{"$type":"method","name":"getSameGroupFields","text":"return all fields with same name in nameHolder\n","src":{"name":"479,338,0","text":"479,336,8,47"}},{"$type":"method","name":"getSubmitValue","text":"Returns the submit value for the checkbox which can be used when submitting forms.\n","items":[{"$type":"return","text":"value The value of {@link #value} or `true`, if {@link #checked}.\n","type":"Boolean/String","src":{"text":"479,248,33,66","type":"479,248,17"}}],"src":{"name":"479,250,0","text":"479,247,8,83"}},{"$type":"method","name":"isChecked","text":"Returns the checked state of the checkbox.\n","items":[{"$type":"return","text":"`true` if checked, `false` otherwise.\n","type":"Boolean","src":{"text":"479,301,26,38","type":"479,301,17"}}],"src":{"name":"479,303,0","text":"479,300,8,43"}},{"$type":"method","chainable":true,"name":"resetGroupValues","text":"Resets the status of all matched checkboxes in the same group to checked.\n","items":[{"$type":"return","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"text":"479,390,37,15","type":"479,390,17"}}],"src":{"chainable":"479,397,0","name":"479,392,0","text":"479,389,8,74"}},{"$type":"method","chainable":true,"name":"setGroupValues","text":"Set the status of all matched checkboxes in the same group to checked.\n","items":[{"$type":"param","name":"values","text":"An array of values.\n","type":"Array","src":{"name":"479,377,23","text":"479,377,30,20","type":"479,377,16"}},{"$type":"return","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"text":"479,378,37,15","type":"479,378,17"}}],"src":{"chainable":"479,385,0","name":"479,380,0","text":"479,376,8,71"}},{"$type":"method","name":"uncheck","text":"Set the checked state of the checkbox to `false`.\n","items":[{"$type":"return","text":"This checkbox.\n","type":"Ext.field.Checkbox","src":{"text":"479,321,37,15","type":"479,321,17"}}],"src":{"name":"479,323,0","text":"479,320,8,50"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"checkedRe","value":"/^(true|1|on)/i","src":{"access":"479,259,8","name":"479,261,0","value":"479,261,0"}},{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'checkboxfield'","src":{"inheritdoc":"479,214,8","name":"479,213,18","text":"18,529,8,532","value":"479,216,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'checked'","src":{"inheritdoc":"479,149,8","name":"479,148,18","text":"275,272,8,373","type":"275,271,19","value":"479,151,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"checkboxfield-ui","text":"Creates a visual theme for a Checkbox Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1183,148,20","text":"1183,149,4,109","type":"1183,148,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"checkboxfield","src":{"access":"1183,152,44","name":"1183,152,21","text":"1183,152,55,35:1183,153,4,61","type":"1183,152,12","value":"1183,152,28"}},{"$type":"param","name":"$checkbox-size","text":"Checkbox Field checkbox size\n","type":"number","src":{"name":"1183,155,20","text":"1183,156,4,30","type":"1183,155,12"}},{"$type":"param","name":"$checkbox-size-big","text":"Checkbox Field checkbox size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1183,158,20","text":"1183,159,4,86","type":"1183,158,12"}},{"$type":"param","name":"$checkbox-font-size","text":"Checkbox Field checkbox font size\n","type":"number","src":{"name":"1183,161,20","text":"1183,162,4,35","type":"1183,161,12"}},{"$type":"param","name":"$checkbox-font-size-big","text":"CheckboxField checkbox font size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1183,164,20","text":"1183,165,4,90","type":"1183,164,12"}},{"$type":"param","name":"$checkbox-margin","text":"CheckboxField checkbox margin\n","type":"number","src":{"name":"1183,167,20","text":"1183,168,4,31","type":"1183,167,12"}},{"$type":"param","name":"$checkbox-margin-big","text":"CheckboxField checkbox margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1183,170,20","text":"1183,171,4,87","type":"1183,170,12"}},{"$type":"param","name":"$checkbox-icon","text":"Checkbox Field checkbox icon\n","type":"string/list","src":{"name":"1183,173,25","text":"1183,174,4,30","type":"1183,173,12"}},{"$type":"param","name":"$checked-checkbox-icon","text":"Checkbox Field checkbox icon when checked\n","type":"string/list","src":{"name":"1183,176,25","text":"1183,177,4,43","type":"1183,176,12"}},{"$type":"param","name":"$checkbox-color","text":"Checkbox Field checkbox color\n","type":"color","src":{"name":"1183,179,19","text":"1183,180,4,31","type":"1183,179,12"}},{"$type":"param","name":"$checked-checkbox-color","text":"Checkbox Field checkbox color when checked\n","type":"color","src":{"name":"1183,182,19","text":"1183,183,4,44","type":"1183,182,12"}},{"$type":"param","name":"$disabled-checkbox-color","text":"Checkbox Field checkbox color when disabled\n","type":"color","src":{"name":"1183,185,19","text":"1183,186,4,45","type":"1183,185,12"}},{"$type":"param","name":"$focused-checkbox-color","text":"Checkbox Field checkbox color when focused\n","type":"color","src":{"name":"1183,188,19","text":"1183,189,4,44","type":"1183,188,12"}},{"$type":"param","name":"$box-label-color","text":"Checkbox Field {@link #boxLabel} text color\n","type":"color","src":{"name":"1183,191,19","text":"1183,192,4,45","type":"1183,191,12"}},{"$type":"param","name":"$box-label-font-weight","text":"Checkbox Field {@link #boxLabel} font-weight\n","type":"string/number","src":{"name":"1183,194,27","text":"1183,195,4,46","type":"1183,194,12"}},{"$type":"param","name":"$box-label-font-size","text":"Checkbox Field {@link #boxLabel} font-size\n","type":"number","src":{"name":"1183,197,20","text":"1183,198,4,44","type":"1183,197,12"}},{"$type":"param","name":"$box-label-font-size-big","text":"Checkbox Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1183,200,20","text":"1183,201,4,100","type":"1183,200,12"}},{"$type":"param","name":"$box-label-line-height","text":"Checkbox Field {@link #boxLabel} line-height\n","type":"number","src":{"name":"1183,203,20","text":"1183,204,4,46","type":"1183,203,12"}},{"$type":"param","name":"$box-label-line-height-big","text":"Checkbox Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1183,206,20","text":"1183,207,4,102","type":"1183,206,12"}},{"$type":"param","name":"$box-label-font-family","text":"Checkbox Field {@link #boxLabel} font-family\n","type":"string","src":{"name":"1183,209,20","text":"1183,210,4,46","type":"1183,209,12"}},{"$type":"param","name":"$box-label-padding","text":"Checkbox Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1183,212,25","text":"1183,213,4,127","type":"1183,212,12"}},{"$type":"param","name":"$box-label-padding-big","text":"Checkbox Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1183,216,25","text":"1183,217,4,182","type":"1183,216,12"}}],"src":{"name":"1183,220,7","text":"1183,146,4,45"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$checkboxfield-box-font-family","text":"Checkbox Field box font-family\n","type":"string","value":"'Font Awesome 5 Free Regular'","src":{"dynamic":"1183,129,34","name":"1183,129,2","text":"1183,127,4,31","type":"1183,126,10","value":"1183,129,42"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-color","text":"Checkbox Field {@link #boxLabel} text color\n","type":"color","value":"$field-box-label-color","src":{"dynamic":"1183,87,33","name":"1183,87,1","text":"1183,85,4,44","type":"1183,84,10","value":"1183,87,41"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-font-family","text":"Checkbox Field {@link #boxLabel} font-family\n","type":"string","value":"$field-box-label-font-family","src":{"dynamic":"1183,123,39","name":"1183,123,1","text":"1183,121,4,45","type":"1183,120,10","value":"1183,123,47"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-font-size","text":"Checkbox Field {@link #boxLabel} font-size\n","type":"number","value":"$field-box-label-font-size","src":{"dynamic":"1183,99,37","name":"1183,99,1","text":"1183,97,4,43","type":"1183,96,10","value":"1183,99,45"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-font-size-big","text":"Checkbox Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$field-box-label-font-size-big","src":{"dynamic":"1183,105,41","name":"1183,105,1","text":"1183,103,4,99","type":"1183,102,10","value":"1183,105,49"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-font-weight","text":"Checkbox Field {@link #boxLabel} font-weight\n","type":"string/number","value":"$field-box-label-font-weight","src":{"dynamic":"1183,93,39","name":"1183,93,1","text":"1183,91,4,45","type":"1183,90,10","value":"1183,93,47"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-line-height","text":"Checkbox Field {@link #boxLabel} line-height\n","type":"number","value":"$field-box-label-line-height","src":{"dynamic":"1183,111,39","name":"1183,111,1","text":"1183,109,4,45","type":"1183,108,10","value":"1183,111,47"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-line-height-big","text":"Checkbox Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$field-box-label-line-height-big","src":{"dynamic":"1183,117,43","name":"1183,117,1","text":"1183,115,4,101","type":"1183,114,10","value":"1183,117,51"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-padding","text":"Checkbox Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"$field-box-label-padding","src":{"dynamic":"1183,136,35","name":"1183,136,1","text":"1183,133,4,126","type":"1183,132,10","value":"1183,136,43"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-box-label-padding-big","text":"Checkbox Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"$field-box-label-padding-big","src":{"dynamic":"1183,143,39","name":"1183,143,1","text":"1183,140,4,182","type":"1183,139,10","value":"1183,143,47"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-color","text":"Checkbox Field checkbox color\n","type":"color","value":"$neutral-dark-color","src":{"dynamic":"1183,63,32","name":"1183,63,1","text":"1183,61,4,30","type":"1183,60,10","value":"1183,63,40"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-font-size","text":"Checkbox Field checkbox font size\n","type":"number","value":"null","src":{"dynamic":"1183,21,36","name":"1183,21,1","text":"1183,19,4,34","type":"1183,18,10","value":"1183,21,44"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-font-size-big","text":"CheckboxField checkbox font size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1183,27,40","name":"1183,27,1","text":"1183,25,4,89","type":"1183,24,10","value":"1183,27,48"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-icon","text":"Checkbox Field checkbox icon\n","type":"string/list","value":"$fa-var-square","src":{"dynamic":"1183,45,31","name":"1183,45,1","text":"1183,43,4,29","type":"1183,42,10","value":"1183,45,39"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-margin","text":"CheckboxField checkbox margin\n","type":"number","value":"null","src":{"dynamic":"1183,33,33","name":"1183,33,1","text":"1183,31,4,30","type":"1183,30,10","value":"1183,33,41"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-margin-big","text":"CheckboxField checkbox margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1183,39,37","name":"1183,39,1","text":"1183,37,4,86","type":"1183,36,10","value":"1183,39,45"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-size","text":"Checkbox Field checkbox size\n","type":"number","value":"16px","src":{"dynamic":"1183,9,31","name":"1183,9,1","text":"1183,7,4,29","type":"1183,6,10","value":"1183,9,39"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checkbox-size-big","text":"Checkbox Field checkbox size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"20px","src":{"dynamic":"1183,15,35","name":"1183,15,1","text":"1183,13,4,85","type":"1183,12,10","value":"1183,15,43"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checked-checkbox-color","text":"Checkbox Field checkbox color when checked\n","type":"color","value":"null","src":{"dynamic":"1183,69,40","name":"1183,69,1","text":"1183,67,4,43","type":"1183,66,10","value":"1183,69,48"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-checked-checkbox-icon","text":"Checkbox Field checkbox icon when checked\n","type":"string/list","value":"$fa-var-check-square","src":{"dynamic":"1183,51,39","name":"1183,51,1","text":"1183,49,4,42","type":"1183,48,10","value":"1183,51,47"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-disabled-checkbox-color","text":"Checkbox Field checkbox color when disabled\n","type":"color","value":"null","src":{"dynamic":"1183,75,41","name":"1183,75,1","text":"1183,73,4,44","type":"1183,72,10","value":"1183,75,49"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-focused-checkbox-color","text":"Checkbox Field checkbox color when focused\n","type":"color","value":"mix(#fff, $base-color, 15%)","src":{"dynamic":"1183,81,40","name":"1183,81,1","text":"1183,79,4,43","type":"1183,78,10","value":"1183,81,48"}},{"$type":"property","dynamic":true,"name":"$checkboxfield-intermediate-checkbox-icon","text":"Checkbox Field checkbox icon when its in intermediate state\n","type":"string/list","value":"$fa-var-minus-square","src":{"dynamic":"1183,57,44","name":"1183,57,1","text":"1183,55,4,60","type":"1183,54,10","value":"1183,57,52"}}]}],"src":{"alias":"479,131,0:479,132,0","alternateClassNames":"479,129,0","extends":"479,128,0","mixins":"479,135,0","name":"1183,2,11","text":"479,2,3,4791"},"group":"Form Fields","displayName":"Field Checkbox"},{"$type":"class","alias":"widget.checkboxgroup","extended":"Ext.field.FieldGroupContainer,Ext.field.Container,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.FieldGroupContainer","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.CheckboxGroup","requires":"Ext.field.Checkbox","since":"7.0","text":" This Field is useful for containing multiple {@link Ext.field.Checkbox checkbox}.\n\n It plots items into wither horizontal / vertical depending on\n {@link Ext.field.FieldGroupContainer#vertical} config properties.\n\n\n ```javascript\n @example({ framework: 'extjs' }\n     Ext.create('Ext.form.Panel', {\n         title: 'Checkbox Group',\n         width: 300,\n         height: 125,\n         fullscreen: true,\n         items:[{\n             xtype: 'checkboxgroup',\n             label: 'Checkbox Group',\n             // Arrange checkboxes distributed vertically.\n             // Automatically latter items flow to next column if\n             // available height is less to display all the items in single column.\n             vertical: true,\n             height: 100,\n             items: [\n                 { label: 'Item 1', name: 'cb-item-1', value: '1' },\n                 { label: 'Item 2', name: 'cb-item-2', value: '2', checked: true },\n                 { label: 'Item 3', name: 'cb-item-3', value: '3' },\n                 { label: 'Item 4', name: 'cb-common', value: '4' },\n                 { label: 'Item 5', name: 'cb-common', value: '5' },\n                 { label: 'Item 6', name: 'cb-common', value: '6' }\n             ]\n         }]\n     }\n );\n\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtFormPanel, ExtCheckBoxGroup, ExtCheckBoxField } from '@sencha/ext-react';\n\n export default class MyExample extends Component {\n      render() {\n           return (\n               <ExtFormPanel\n                title=\"Checkbox Group\"\n                width=\"300\"\n                height=\"125\"\n                fullscreen={true}\n               >\n                   <ExtCheckBoxGroup\n                       label=\"Checkbox Group\"\n                       vertical\n                       height=\"100\"\n                   >\n                       <ExtCheckBoxField\n                           label=\"Item 1\"\n                           name=\"cb-item-1\"\n                           value=\"1\"\n                       >\n                       </ExtCheckBoxField>\n                       <ExtCheckBoxField\n                           label=\"Item 2\"\n                           name=\"cb-item-2\"\n                           value=\"2\"\n                           checked=\"true\"\n                       >\n                       </ExtCheckBoxField>\n                       <ExtCheckBoxField\n                           label=\"Item 3\"\n                           name=\"cb-item-3\"\n                           value=\"3\"\n                       >\n                       </ExtCheckBoxField>\n                       <ExtCheckBoxField\n                           label=\"Item 4\"\n                           name=\"cb-common\"\n                           value=\"4\"\n                       >\n                       </ExtCheckBoxField>\n                       <ExtCheckBoxField\n                           label=\"Item 5\"\n                           name=\"cb-common\"\n                           value=\"5\"\n                       >\n                       </ExtCheckBoxField>\n                       <ExtCheckBoxField\n                           label=\"Item 6\"\n                           name=\"cb-common\"\n                           value=\"6\"\n                       >\n                       </ExtCheckBoxField>\n                   </ExtCheckBoxGroup>\n               </ExtFormPanel>\n           )\n      }\n }\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'checkboxgroup-component',\n     styles: [``],\n     template: `\n         <ExtFormPanel\n              title=\"Checkbox Group\"\n              [width]=\"600\"\n              [height]=\"400\"\n              [fullscreen]=\"true\"\n          >\n              <ExtCheckBoxGroup\n                  label=\"Checkbox Group\"\n                  [vertical]=\"true\"\n                  [height]=\"100\"\n              >\n                  <ExtCheckBoxField\n                      [label]=\"'Item 1'\"\n                      [name]=\"'cb-item-1'\"\n                      value=\"1\"\n                  >\n                  </ExtCheckBoxField>\n                  <ExtCheckBoxField\n                      [label]=\"'Item 2'\"\n                      [name]=\"'cb-item-2'\"\n                      value=\"2\"\n                      [checked]=\"true\"\n                  >\n                  </ExtCheckBoxField>\n                  <ExtCheckBoxField\n                      [label]=\"'Item 3'\"\n                      [name]=\"'cb-item-3'\"\n                      value=\"3\"\n                  >\n                  </ExtCheckBoxField>\n                  <ExtCheckBoxField\n                      [label]=\"'Item 4'\"\n                      [name]=\"'cb-common'\"\n                      value=\"4\"\n                  >\n                  </ExtCheckBoxField>\n                  <ExtCheckBoxField\n                      [label]=\"'Item 5'\"\n                      [name]=\"'cb-common'\"\n                      value=\"5\"\n                  >\n                  </ExtCheckBoxField>\n                  <ExtCheckBoxField\n                      [label]=\"'Item 6'\"\n                      [name]=\"'cb-common'\"\n                      value=\"6\"\n                  >\n                  </ExtCheckBoxField>\n              </ExtCheckBoxGroup>\n          </ExtFormPanel>\n      `\n })\n export class CheckBoxGroupComponent  {}\n```\n```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-formpanel\n      title=\"Checkbox Group\"\n      width=\"300\"\n      height=\"125\"\n      fullscreen=\"true\"\n  >\n   <ext-checkboxgroup\n       label=\"Checkbox Group\"\n       vertical=\"true\"\n       height=\"100\"\n   >\n       <ext-checkboxfield\n           label=\"Item 1\"\n           name=\"cb-item-1\"\n           value=\"1\"\n       >\n       </ext-checkboxfield>\n       <ext-checkboxfield\n           label=\"Item 2\"\n           name=\"cb-item-2\"\n           value=\"2\"\n           checked=\"true\"\n       >\n       </ext-checkboxfield>\n       <ext-checkboxfield\n           label=\"Item 3\"\n           name=\"cb-item-3\"\n           value=\"3\"\n       >\n       </ext-checkboxfield>\n       <ext-checkboxfield\n           label=\"Item 4\"\n           name=\"cb-common\"\n           value=\"4\"\n       >\n       </ext-checkboxfield>\n       <ext-checkboxfield\n           label=\"Item 5\"\n           name=\"cb-common\"\n           value=\"5\"\n       >\n       </ext-checkboxfield>\n       <ext-checkboxfield\n           label=\"Item 6\"\n           name=\"cb-common\"\n           value=\"6\"\n       >\n       </ext-checkboxfield>\n   </ext-checkboxgroup>\n </ext-formpanel>\n```\n```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-formpanel.component';\n import '@sencha/ext-web-components/dist/ext-checkboxgroup.component';\n import '@sencha/ext-web-components/dist/ext-checkboxfield.component';\n export default class CheckBoxGroupComponent {}\n```\n","items":[{"$type":"methods","items":[{"$type":"method","name":"getValue","text":"Returns an object containing the values of all checked checkboxes within the group.\nEach key-value pair in the object corresponds to a checkbox\n{@link Ext.field.Checkbox#name name}. If there is only one checked checkbox\nwith a particular name, the value of that pair will be the String\n{@link Ext.field.Checkbox#value value} of that checkbox. If there are\nmultiple checked checkboxes with that name, the value of that pair will be an Array\nof the selected inputValues.\n\nThe object format returned from this method can also be passed directly to the\n{@link #setValue} method.\n","src":{"name":"480,351,0","text":"480,340,8,575"}},{"$type":"method","chainable":true,"name":"setValue","text":"Sets the value(s) of all checkboxes in the group. The expected format is an Object\nof name-value pairs corresponding to the names of the checkboxes in the group. Each pair\ncan have either a single or multiple values:\n\n  - A single Boolean or String value will be passed to the `{@link #method!setValue setValue}` method of the checkbox\n    with that name.\n  - An Array of String values will be matched against the\n    {@link Ext.field.Checkbox#value value} of checkboxes in the group\n    with that name; those checkboxes whose value exists in the array will be\n    checked and others will be unchecked.\n\nIf a checkbox's name is not in the mapping at all, it will be unchecked.\n\nAn example:\n\n    var myCheckboxGroup = new Ext.field.CheckboxGroup({\n        items: [{\n            name: 'cb1',\n            label: 'Single 1'\n        }, {\n            name: 'cb2',\n            label: 'Single 2'\n        }, {\n            name: 'cb3',\n            label: 'Single 3'\n        }, {\n            name: 'cbGroup',\n            label: 'Grouped 1',\n            value: 'value1'\n        }, {\n            name: 'cbGroup',\n            label: 'Grouped 2',\n            value: 'value2'\n        }, {\n            name: 'cbGroup',\n            label: 'Grouped 3',\n            value: 'value3'\n        }]\n    });\n\n    myCheckboxGroup.setValue({\n        cb1: true,\n        cb3: false,\n        cbGroup: ['value1', 'value3']\n    });\n\nThe above code will cause the checkbox named 'cb1' to be checked, as well as the first\nand third checkboxes named 'cbGroup'. The other three checkboxes will be unchecked.\n","items":[{"$type":"param","name":"value","text":"The mapping of checkbox names to values.\n","type":"Object","src":{"name":"480,298,24","text":"480,298,30,41","type":"480,298,16"}},{"$type":"return","text":"this\n","type":"Ext.field.CheckboxGroup","src":{"text":"480,299,42,5","type":"480,299,17"}}],"src":{"chainable":"480,336,0","name":"480,301,0","text":"480,249,8,1546"}}]},{"$type":"properties","items":[{"$type":"property","name":"defaultType","readonly":true,"text":"Default item type in radio group\n","type":"String","value":"'checkbox'","src":{"name":"480,239,27","readonly":"480,241,8","text":"480,240,8,33","type":"480,239,19","value":"480,243,0"}},{"$type":"property","name":"isCheckboxGroup","readonly":true,"text":"The value `true` to identify an object as an instance of this or derived class.\n","type":"Boolean","value":"true","src":{"name":"480,232,28","readonly":"480,234,8","text":"480,233,8,80","type":"480,232,19","value":"480,236,0"}}]}],"src":{"alias":"480,225,0","extends":"480,224,0","name":"480,223,0","requires":"480,228,0","since":"480,35,11","text":"480,2,3,1250:480,36,3,5723"},"group":"Form Fields","displayName":"Field Checkboxgroup"},{"$type":"class","alias":"widget.combobox,widget.comboboxfield","alternateClassNames":"Ext.form.field.ComboBox","extended":"Ext.field.Select,Ext.field.Picker,Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Select","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.ComboBox","requires":"Ext.dataview.BoundListNavigationModel","since":"6.5.0","text":" A combobox control with support for autocomplete, remote loading, and many other features.\n\n A ComboBox is like a combination of a traditional HTML text `<input>` field and a `<select>`\n field; if the {@link #cfg!editable} config is `true`, then the user is able to type freely\n into the field, and/or pick values from a dropdown selection list.\n\n The user can input any value by default, even if it does not appear in the selection list;\n to prevent free-form values and restrict them to items in the list, set\n {@link #forceSelection} to `true`.\n\n The selection list's options are populated from any {@link Ext.data.Store}, including remote\n stores. The data items in the store are mapped to each option's displayed text and backing\n value via the {@link #valueField} and {@link #displayField} configurations which are applied\n to the list via the {@link #cfg!itemTpl}.\n\n If your store is not remote, i.e. it depends only on local data and is loaded up front, you MUST\n set the {@link #queryMode} to `'local'`.\n\n # Example usage:\n\n ```javascript\n @example({ framework: 'extjs' })\n      Ext.create({\n          fullscreen: true,\n          xtype: 'container',\n          padding: 50,\n          layout: 'vbox',\n          items: [{\n              xtype: 'combobox',\n              label: 'Choose State',\n              queryMode: 'local',\n              displayField: 'name',\n              valueField: 'abbr',\n\n              store: [\n                  { abbr: 'AL', name: 'Alabama' },\n                  { abbr: 'AK', name: 'Alaska' },\n                  { abbr: 'AZ', name: 'Arizona' }\n              ]\n          }]\n      });\n ```\n\n # Events\n\n ComboBox fires a select event if an item is chosen from the associated list.  If\n the ComboBox is configured with {@link #forceSelection}: true, an action event is fired\n when the user has typed the ENTER key while editing the field, and a change event on\n each keystroke.\n\n ## Customized combobox\n\n Both the text shown in dropdown list and text field can be easily customized:\n```javascript\n     @example({ framework: 'extjs' })\n      Ext.create({\n          fullscreen: true,\n          xtype: 'container',\n          padding: 50,\n          layout: 'vbox',\n          items: [{\n              xtype: 'combobox',\n              label: 'Choose State',\n              queryMode: 'local',\n              displayField: 'name',\n              valueField: 'abbr',\n\n              // For the dropdown list\n              itemTpl: '<span role=\"option\" class=\"x-boundlist-item\">{abbr} - {name}</span>',\n\n              // For the content of the text field\n              displayTpl: '{abbr} - {name}',\n\n              editable: false,  // disable typing in the text field\n\n              store: [\n                  { abbr: 'AL', name: 'Alabama' },\n                  { abbr: 'AK', name: 'Alaska' },\n                  { abbr: 'AZ', name: 'Arizona' }\n              ]\n          }]\n      });\n\n See also the {@link #cfg!floatedPicker} and {@link #cfg!edgePicker} options for additional\n configuration of the options list.\n\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [``],\n     template: `\n         <ExtContainer [layout]='\"center\"'>\n             <ExtFormPanel [shadow]>\n                 <ExtComboBox\n                     [width]=\"200\"\n                     [label]='\"State\"'\n                     [options]='data'\n                     [displayField]='\"name\"'\n                     [valueField]='\"code\"'\n                     [queryMode]='\"local\"'\n                     [labelAlign]='\"placeholder\"'\n                     [typeAhead]\n                 ></ExtComboBox>\n             </ExtFormPanel>\n         </ExtContainer>\n })\n export class AppComponent {\n     data = [\n         {\"name\":\"Alabama\",\"abbrev\":\"AL\"},\n         {\"name\":\"Alaska\",\"abbrev\":\"AK\"},\n         {\"name\":\"Arizona\",\"abbrev\":\"AZ\"}\n     ];\n  }\n ```\n ```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-formpanel\n    shadow=\"true\"\n >\n    <ext-combobox\n        width=\"200\"\n        label=\"State\"\n        displayField=\"name\"\n        valueField=\"code\"\n        queryMode=\"local\"\n        labelAlign=\"placeholder\"\n        typeAhead=\"true\"\n        onready=\"comboboxfield.comboboxFieldReady\"\n     >\n     </ext-combobox>\n </ext-formpanel>\n ```\n ```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-formpanel.component';\n import '@sencha/ext-web-components/dist/ext-combobox.component';\n\n export default class ComboBoxFieldComponent {\n    constructor() {\n         this.data = [\n             {\"name\":\"Alabama\",\"abbrev\":\"AL\"},\n             {\"name\":\"Alaska\",\"abbrev\":\"AK\"},\n             {\"name\":\"Arizona\",\"abbrev\":\"AZ\"}\n         ]\n   }\n   comboboxFieldReady(event) {\n       this.combobox = event.detail.cmp;\n       this.combobox.setOptions(this.data);\n   }\n }\n\n window.comboboxfield = new ComboBoxFieldComponent();\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtFormPanel, ExtComboBox } from '@sencha/ext-react';\n\n export default class MyExample extends Component {\n     render() {\n          const data = [\n               {\"name\":\"Alabama\",\"abbrev\":\"AL\"},\n               {\"name\":\"Alaska\",\"abbrev\":\"AK\"},\n               {\"name\":\"Arizona\",\"abbrev\":\"AZ\"}\n          ]\n\n          return (\n              <ExtFormPanel shadow>\n                  <ExtComboBox\n                      width={200}\n                      label=\"State\"\n                      options={data}\n                      displayField=\"name\"\n                      valueField=\"code\"\n                      queryMode=\"local\"\n                      labelAlign=\"placeholder\"\n                      typeAhead\n                  />\n              </ExtFormPanel>\n          )\n      }\n }\n ```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"allQuery","text":"The text query to use to filter the store when the trigger element is tapped\n(or expansion is requested by a keyboard gesture). By default, this is `null`\ncausing no filtering to occur.\n","type":"String","value":"null","src":{"accessor":"482,359,0","name":"482,354,26","text":"482,355,12,186","type":"482,354,18","value":"482,359,0"}},{"$type":"property","accessor":true,"name":"anyMatch","text":"* Only valid when {@link #cfg!queryMode} is `'local'`.*\nConfigure as `true` to cause the {@link #cfg!primaryFilter} to match the typed\ncharacters at any position in the {@link #displayField}'s value when filtering\n*locally*.\n","type":"Boolean","value":"false","src":{"accessor":"482,308,0","name":"482,302,27","text":"482,303,12,225","type":"482,302,18","value":"482,308,0"}},{"$type":"property","accessor":true,"name":"autoSelect","text":"`true` to auto select the first value in the {@link #store} or {@link #options} when\nthey are changed. Only happens when the {@link #value} is set to `null`.\n","type":"Boolean","value":"false","src":{"accessor":"503,282,0","name":"482,373,23","text":"482,374,8,158","type":"482,373,14","value":"482,377,0"}},{"$type":"property","accessor":true,"name":"caseSensitive","text":"* Only valid when {@link #cfg!queryMode} is `'local'`.*\nConfigure as `true` to cause the {@link #cfg!primaryFilter} to match with\nexact case matching.\n","type":"Boolean","value":"false","src":{"accessor":"482,316,0","name":"482,311,27","text":"482,312,12,151","type":"482,311,18","value":"482,316,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.field.Text#cfg-editable","name":"editable","text":"Configure as `false` to prevent the user from typing text directly into the\nfield; the field can only have its value set programmatically or via an action\ninvoked by a trigger.\n\nContrast with {@link #cfg!readOnly} which disables all mutation via the UI.\n","type":"Boolean","value":"true","src":{"accessor":"507,414,0","inheritdoc":"482,383,8","name":"482,382,13","text":"507,408,12,254","type":"507,407,18","value":"482,385,0"}},{"$type":"property","accessor":true,"name":"enableRegEx","text":"*When {@link #queryMode} is `'local'` only*\n\nSet to `true` to have the ComboBox use the typed value as a RegExp source to\nfilter the store to get possible matches.\nInvalid regex values will be ignored.\n","type":"Boolean","value":"null","src":{"accessor":"482,369,0","name":"482,362,27","text":"482,363,12,202","type":"482,362,18","value":"482,369,0"}},{"$type":"property","accessor":true,"name":"forceSelection","text":"Set to `true` to restrict the selected value to one of the values in the list, or\n`false` to allow the user to set arbitrary text into the field.\n","type":"Boolean","value":"false","src":{"accessor":"503,335,0","name":"482,388,23","text":"482,389,8,146","type":"482,388,14","value":"482,392,0"}},{"$type":"property","accessor":true,"name":"minChars","text":"The minimum number of characters the user must type before autocomplete and\n{@link #typeAhead} activate.\n\nDefaults to `4` if {@link #queryMode} is `'remote'` or `0` if {@link #queryMode}\nis `'local'`, does not apply if {@link Ext.form.field.Trigger#editable editable}\nis `false`.\n","type":"Number","value":"null","src":{"accessor":"482,299,0","name":"482,291,26","text":"482,292,12,280","type":"482,291,18","value":"482,299,0"}},{"$type":"property","accessor":true,"name":"primaryFilter","text":"A filter config object, or a Filter instance used to filter the store on input\nfield mutation by typing or pasting.\n\nThis may be a filter config object which specifies a filter which uses the\n{@link #cfg!store}'s fields.\n\n{@link Ext.util.Filter Filters} may also be instantiated using a custom `filterFn`\nto allow a developer to specify complex matching. For example, a combobox developer\nmight allow a user to filter using either the {@link #cfg!valueField} or\n{@link #cfg!displayField} by using:\n\n    primaryFilter: function(candidateRecord) {\n        // This called in the scope of the Filter instance, we have this config\n        var value = this.getValue();\n\n        return Ext.String.startsWith(candidateRecord.get('stateName', value, true) ||\n               Ext.String.startsWith(candidateRecord.get('abbreviation', value, true);\n    }\n\nThis may also be configured as the name of a method on a ViewController which is to\nbe used as the filtering function. Note that this will *still* be called in the\nscope of the created Filter object because that has access to the `{@link #cfg!value value}`\nwhich is being tested for.\n","type":"Function/String/Object/Ext.util.Filter","value":"true","src":{"accessor":"482,235,0","name":"482,210,58","text":"482,211,12,1109","type":"482,210,18","value":"482,235,0"}},{"$type":"property","accessor":true,"name":"queryCaching","text":"When true, this prevents the combo from re-querying (either locally or remotely)\nwhen the current query is the same as the previous query.\n","type":"Boolean","value":"true","src":{"accessor":"482,278,0","name":"482,274,27","text":"482,275,12,139","type":"482,274,18","value":"482,278,0"}},{"$type":"property","accessor":true,"name":"queryDelay","text":"The length of time in milliseconds to delay between the start of typing and sending\nthe query to filter the dropdown list.\n\nDefaults to `500` if `{@link #queryMode} = 'remote'` or `10` if\n`{@link #queryMode} = 'local'`\n","type":"Number","value":"true","src":{"accessor":"482,288,0","name":"482,281,26","text":"482,282,12,219","type":"482,281,18","value":"482,288,0"}},{"$type":"property","accessor":true,"name":"queryMode","text":"The mode in which the ComboBox uses the configured Store. Acceptable values are:\n\n - **`'local'`** : In this mode, the ComboBox assumes the store is fully loaded and\n  will query it directly.\n\n - **`'remote'`** : In this mode the ComboBox loads its Store dynamically based upon\n  user interaction.\n\n  This is typically used for \"autocomplete\" type inputs, and after the user finishes\n  typing, the Store is {@link Ext.data.Store#method!load load}ed.\n\n  A parameter containing the typed string is sent in the load request. The default\n  parameter name for the input string is `query`, but this can be configured using\n  the {@link #cfg!queryParam} config.\n\n  In `queryMode: 'remote'`, the Store may be configured with\n  `{@link Ext.data.Store#cfg!remoteFilter remoteFilter}: true`, and further filters\n  may be _programmatically_ added to the Store which are then passed with every\n  load request which allows the server to further refine the returned dataset.\n\n  Typically, in an autocomplete situation, {@link #cfg!hideTrigger} is configured\n  `true` because it has no meaning for autocomplete.\n","type":"String","value":"'remote'","src":{"accessor":"482,271,0","name":"482,247,26","text":"482,248,12,1096","type":"482,247,18","value":"482,271,0"}},{"$type":"property","accessor":true,"name":"queryParam","text":"Name of the parameter used by the Store to pass the typed string when the ComboBox\nis configured with\n`{@link #queryMode}: 'remote'`. If explicitly set to a falsy value it will not be\nsent.\n","type":"String","value":"'query'","src":{"accessor":"482,244,0","name":"482,238,26","text":"482,239,12,190","type":"482,238,18","value":"482,244,0"}},{"$type":"property","accessor":true,"name":"triggerAction","text":"The action to execute when the trigger is clicked.\n\n - **`'all'`** :\n\n  {@link #doFilter run the query} specified by the `{@link #cfg!allQuery}` config option\n\n - **`'last'`** :\n\n  {@link #doFilter run the query} using the `{@link #lastQuery last query value}`.\n\n - **`'query'`** :\n\n  {@link #doFilter run the query} using the {@link Ext.form.field.Base#getRawValue\n  raw value}.\n\nSee also `{@link #queryParam}`.\n","type":"String","value":"'all'","src":{"accessor":"482,351,0","name":"482,333,26","text":"482,334,12,413","type":"482,333,18","value":"482,351,0"}},{"$type":"property","accessor":true,"name":"typeAhead","text":"`true` to populate and autoselect the remainder of the text being typed after\na configurable delay ({@link #typeAheadDelay}) if it matches a known value.\n","type":"Boolean","value":"false","src":{"accessor":"482,323,0","name":"482,319,27","text":"482,320,12,154","type":"482,319,18","value":"482,323,0"}},{"$type":"property","accessor":true,"name":"typeAheadDelay","text":"The length of time in milliseconds to wait until the typeahead text is displayed\nif {@link #typeAhead} is `true`.\n","type":"Number","value":"250","src":{"accessor":"482,330,0","name":"482,326,26","text":"482,327,12,114","type":"482,326,18","value":"482,330,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforepickercreate","text":"Fires before the pop-up picker is created to give a developer a chance to configure it.\n","items":[{"$type":"param","name":"this","type":"Ext.field.ComboBox","src":{"name":"482,397,36","type":"482,397,16"}},{"$type":"param","name":"newValue","text":"The config object for the picker.\n","type":"Object","src":{"name":"482,398,24","text":"482,398,33,34","type":"482,398,16"}}],"src":{"name":"482,395,15","text":"482,396,8,88"}},{"$type":"event","name":"beforequery","text":"Fires before all queries are processed. Return false to cancel the query or set the\nqueryPlan's cancel property to true.\n","items":[{"$type":"param","name":"queryPlan","text":"An object containing details about the query to be executed.\n","type":"Object","items":[{"$type":"property","name":"combo","text":"A reference to this ComboBox.\n","type":"Ext.form.field.ComboBox","src":{"name":"482,414,51","text":"482,414,57,30","type":"482,414,16"}},{"$type":"property","name":"query","text":"The query value to be used to match against the ComboBox's\n{@link #valueField}.\n","type":"String","src":{"name":"482,415,34","text":"482,415,40,59:482,416,8,21","type":"482,415,16"}},{"$type":"property","name":"force","text":"If `true`, causes the query to be executed even if the\nminChars threshold is not met.\n","type":"Boolean","src":{"name":"482,417,35","text":"482,417,41,55:482,418,8,31","type":"482,417,16"}},{"$type":"property","name":"cancel","text":"A boolean value which, if set to `true` upon return,\ncauses the query not to be executed.\n","type":"Boolean","src":{"name":"482,419,35","text":"482,419,42,53:482,420,8,37","type":"482,419,16"}},{"$type":"property","name":"lastQuery","optional":true,"text":"The queryPlan object used in the previous query.\n","type":"Object","src":{"name":"482,421,35","text":"482,421,46,49","type":"482,421,16"}}],"src":{"name":"482,413,24","text":"482,413,34,61","type":"482,413,16"}}],"src":{"name":"482,409,15","text":"482,410,8,122"}},{"$type":"event","name":"change","text":"Fires when the field is changed, or if forceSelection is false, on keystroke.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.ComboBox","src":{"name":"482,434,36","text":"482,434,41,11","type":"482,434,16"}},{"$type":"param","name":"newValue","text":"The new value\n","type":"Ext.data.Model","src":{"name":"482,435,32","text":"482,435,41,14","type":"482,435,16"}},{"$type":"param","name":"oldValue","text":"The original value\n","type":"Ext.data.Model","src":{"name":"482,436,32","text":"482,436,41,19","type":"482,436,16"}}],"src":{"name":"482,432,15","text":"482,433,8,78"}},{"$type":"event","name":"pickercreate","text":"Fires after the pop-up picker is created to give a developer a chance to configure it.\n","items":[{"$type":"param","name":"this","type":"Ext.field.ComboBox","src":{"name":"482,404,36","type":"482,404,16"}},{"$type":"param","name":"picker","text":"The instantiated picker.\n","type":"Ext.dataview.List/Ext.Component","src":{"name":"482,405,49","text":"482,405,56,25","type":"482,405,16"}}],"src":{"name":"482,402,15","text":"482,403,8,87"}},{"$type":"event","name":"select","text":"Fires when the user has selected an item from the associated picker.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.ComboBox","src":{"name":"482,427,36","text":"482,427,41,11","type":"482,427,16"}},{"$type":"param","name":"newValue","text":"The corresponding record for the new value\n","type":"Ext.data.Model","src":{"name":"482,428,32","text":"482,428,41,43","type":"482,428,16"}}],"src":{"name":"482,425,15","text":"482,426,8,69"}}]},{"$type":"methods","items":[{"$type":"method","fires":"beforequery","name":"beforeFilter","template":true,"text":"A method which may modify aspects of how the store is to be filtered (if\n{@link #queryMode} is `\"local\"`) of loaded (if {@link #queryMode} is `\"remote\"`).\n\nThis is called by the {@link #doFilter method, and may be overridden in subclasses to modify\nthe default behaviour.\n\nThis method is passed an object containing information about the upcoming query operation\nwhich it may modify before returning.\n","items":[{"$type":"param","name":"queryPlan","text":"An object containing details about the query to be executed.\n","type":"Object","items":[{"$type":"property","name":"query","optional":true,"text":"The query value to be used to match against the\nComboBox's {@link #textField}.\nIf not present, the primary {@link #cfg!textfield} filter is disabled.\n","type":"String","src":{"name":"482,741,35","text":"482,741,42,48:482,742,8,102","type":"482,741,16"}},{"$type":"property","name":"lastQuery","text":"The query value used the last time a store query\nwas made.\n","type":"String","src":{"name":"482,744,34","text":"482,744,44,49:482,745,8,10","type":"482,744,16"}},{"$type":"property","name":"force","text":"If `true`, causes the query to be executed even if\nthe minChars threshold is not met.\n","type":"Boolean","src":{"name":"482,746,35","text":"482,746,41,51:482,747,8,35","type":"482,746,16"}},{"$type":"property","name":"cancel","text":"A boolean value which, if set to `true` upon\nreturn, causes the query not to be executed.\n","type":"Boolean","src":{"name":"482,748,35","text":"482,748,42,45:482,749,8,45","type":"482,748,16"}}],"src":{"name":"482,740,24","text":"482,740,34,61","type":"482,740,16"}}],"src":{"fires":"482,757,0","name":"482,751,0","template":"482,730,8","text":"482,731,8,402"}},{"$type":"method","name":"doFilter","text":"Executes a query to filter the dropdown list. Fires the {@link #beforequery} event\nprior to performing the query allowing the query action to be canceled if needed.\n","items":[{"$type":"param","name":"query","text":"An object containing details about the query to be executed.\n","type":"Object","items":[{"$type":"property","name":"query","optional":true,"text":"The query value to be used to match against the\nComboBox's {@link #textField}. If not present, the primary {@link #cfg!textfield}\nfilter is disabled.\n","type":"String","src":{"name":"482,618,31","text":"482,618,38,48:482,619,8,102","type":"482,618,16"}},{"$type":"property","name":"force","text":"If `true`, causes the query to be executed even if\nthe {@link #cfg!minChars} threshold is not met.\n","type":"Boolean","src":{"name":"482,621,31","text":"482,621,37,51:482,622,8,48","type":"482,621,16"}}],"src":{"name":"482,617,24","text":"482,617,30,61","type":"482,617,16"}},{"$type":"return","text":"`true` if the query resulted in picker expansion.\n","type":"Boolean","src":{"text":"482,623,27,50","type":"482,623,18"}}],"src":{"name":"482,625,0","text":"482,614,8,166"}},{"$type":"method","access":"private","name":"doRawFilter","text":"Execute the query with the raw contents within the textfield.\n","src":{"access":"482,547,8","name":"482,550,0","text":"482,548,8,62"}},{"$type":"method","access":"private","name":"onCollectionAdd","text":"Respond to selection. Needed if we are multiselect\n","items":[{"$type":"param","name":"valueCollection","src":{"name":"482,452,0"}},{"$type":"param","name":"adds","src":{"name":"482,452,0"}}],"src":{"access":"482,449,8","name":"482,452,0","text":"482,450,8,51"}},{"$type":"method","access":"private","name":"onExpandTap","text":"Show the dropdown based upon triggerAction and allQuery\n","src":{"access":"482,563,8","name":"482,566,0","text":"482,564,8,56"}},{"$type":"method","access":"private","name":"onStoreFilterChange","text":"Called when local filtering is being used.\nOnly effective when NOT actively using the primary filter\n","src":{"access":"482,839,8","name":"482,843,0","text":"482,840,8,101"}},{"$type":"method","name":"serializePrimaryFilter","template":true,"text":"A method that may be overridden in a subclass which serializes the primary filter\n(the filter that passes the typed value for transmission to the server in the\n{@link #cfg!queryParam}).\n\nThe provided implementation simply passes the filter's textual value as the\n{@link #cfg!queryParam} value.\n","items":[{"$type":"param","name":"filter","text":"The {@link #cfg!primaryFilter} of this ComboBox which\nencapsulates the typed value and the matching rules.\n","type":"Ext.util.Filter","src":{"name":"482,1041,33","text":"482,1041,40,54:482,1042,8,53","type":"482,1041,16"}},{"$type":"return","text":"A value which, when encoded as an HTML parameter, your server\nwill understand.\n","type":"String/Object","src":{"text":"482,1043,32,62:482,1044,8,17","type":"482,1043,17"}}],"src":{"name":"482,1046,0","template":"482,1033,8","text":"482,1034,8,295"}}]}],"src":{"alias":"482,196,0:482,197,0","alternateClassNames":"482,201,0","extends":"482,194,0","name":"482,193,0","requires":"482,205,0","since":"482,191,11","text":"482,2,3,5980"},"group":"Form Fields","displayName":"Field Combobox"},{"$type":"class","alias":"widget.containerfield,widget.fieldcontainer","extended":"Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.FieldGroupContainer,Ext.froala.EditorField","extends":"Ext.field.Field","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.field.Manager,Ext.mixin.ConfigProxy,Ext.mixin.FieldDefaults","name":"Ext.field.Container","requires":"Ext.field.Text","text":"This Container Field is useful for containing multiple form fields\nto be a single field within a form and will line up nicely with other\nfields. This allows it to be configured with a {@link #label field label}\nand optional {@link #errorTarget error message} around it's sub-items.\nA common use is for grouping a set of related fields under a single label\nin a form.\n\nThe container's configured {@link #cfg-items} will be layed out within\nthe field body area according to the configured {@link #layout} type.\nThe default layout is `'hbox'`.\n\n# Example\n\n```javascript\n @example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        title: 'FieldContainer Example',\n        bodyPadding: 10,\n\n        items: [{\n            xtype: 'containerfield',\n            label: 'Name',\n            name: 'name',\n            items: [{\n                flex: 1,\n                name: 'first',\n                placeholder: 'First'\n            }, {\n                margin: '0 10',\n                name: 'middle',\n                placeholder: 'MI',\n                width: 50\n            }, {\n                flex: 1,\n                name: 'last',\n                placeholder: 'Last'\n            }]\n        }]\n    });\n```\n","items":[{"$type":"configs","items":[{"$type":"property","inheritdoc":"Ext.Container#","name":"autoSize","text":"This Container Field is useful for containing multiple form fields\nto be a single field within a form and will line up nicely with other\nfields. This allows it to be configured with a {@link #label field label}\nand optional {@link #errorTarget error message} around it's sub-items.\nA common use is for grouping a set of related fields under a single label\nin a form.\n\nThe container's configured {@link #cfg-items} will be layed out within\nthe field body area according to the configured {@link #layout} type.\nThe default layout is `'hbox'`.\n\n# Example\n\n```javascript\n @example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        title: 'FieldContainer Example',\n        bodyPadding: 10,\n\n        items: [{\n            xtype: 'containerfield',\n            label: 'Name',\n            name: 'name',\n            items: [{\n                flex: 1,\n                name: 'first',\n                placeholder: 'First'\n            }, {\n                margin: '0 10',\n                name: 'middle',\n                placeholder: 'MI',\n                width: 50\n            }, {\n                flex: 1,\n                name: 'last',\n                placeholder: 'Last'\n            }]\n        }]\n    });\n```\n","src":{"inheritdoc":"483,112,20","name":"483,111,25","text":"483,2,4,1241"}},{"$type":"property","accessor":true,"name":"container","text":"The configuration of the container used to maintain child items.\n","type":"Ext.Container","value":"{\n    xtype: 'container',\n    autoSize: null,\n    defaultType: 'textfield',\n    defaults: {\n        errorTarget: 'parent'\n    },\n    layout: {\n        type: 'hbox'\n    }\n}","src":{"accessor":"483,65,0","name":"483,62,33","text":"483,63,12,65","type":"483,62,18","value":"483,65,0"}},{"$type":"property","inheritdoc":"Ext.Container#defaults","name":"defaults","text":"A set of default configurations to apply to all child Components\nin this Container. It's often useful to specify defaults when creating more than one\nitems with similar configurations. For example here we can specify that each child is a\npanel and avoid repeating the xtype declaration for each one:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        defaults: {\n            xtype: 'panel'\n        },\n        items: [\n            {\n                html: 'Panel 1'\n            },\n            {\n                html: 'Panel 2'\n            }\n        ]\n    });\n","type":"Object","value":"null","src":{"inheritdoc":"483,88,20","name":"483,87,25","text":"411,291,35,65:411,292,12,509","type":"411,291,18","value":"411,314,0"}},{"$type":"property","inheritdoc":"Ext.Container#defaultType","name":"defaultType","text":"The default {@link Ext.Component xtype} of child Components to create in this Container\nwhen a child item is specified as a raw configuration object, rather than as an\ninstantiated Component.\n","type":"String","value":"container","src":{"inheritdoc":"483,94,20","name":"483,93,25","text":"411,363,12,192","type":"411,362,18","value":"411,362,39"}},{"$type":"property","accessor":true,"hide":true,"name":"error","src":{"accessor":"489,274,0","hide":"483,57,8","name":"483,56,13"}},{"$type":"property","name":"fieldDefaults","text":"The properties in this object are used as default config values for field instance.\n","type":"Object","src":{"name":"483,78,26","text":"483,79,12,84","type":"483,78,18"}},{"$type":"property","inheritdoc":"Ext.Container#items","name":"items","text":"The child items to add to this Container. This is usually an\narray of Component configurations or instances, for example:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        items: [{\n            xtype: 'panel',\n            html: 'This is an item'\n        }]\n    });\n\nThis may also be specified as an object, the property names of which are `{@link #cfg!itemId itemId}`s, and\nthe property values are child Component config objects, for example:\n\n    @example\n    Ext.create({\n        xtype: 'tabpanel',\n        items: {\n            panel1: {\n                xtype: 'panel',\n                title: 'First panel'\n            },\n            panel2: {\n                xtype: 'panel',\n                title: 'Second panel'\n            }\n        }\n    });\n","type":"Array/Object","value":"null","src":{"inheritdoc":"483,100,20","name":"483,99,25","text":"411,319,38,61:411,320,12,685","type":"411,319,18","value":"411,351,0"}},{"$type":"property","inheritdoc":"Ext.Container#layout","name":"layout","text":"Configuration for this Container's layout. Example:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        layout: {\n            type: 'hbox',\n            align: 'middle'\n        },\n        items: [{\n            xtype: 'panel',\n            flex: 1,\n            bodyStyle: {\n                background: \"#000\",\n                color:\"#fff\"\n            }\n        }, {\n           xtype: 'panel',\n           flex: 2,\n           bodyStyle: {\n               background: \"#f00\",\n               color:\"#fff\"\n           }\n        }]\n    });\n","type":"Object/String","value":"'auto'","src":{"inheritdoc":"483,106,20","name":"483,105,25","text":"411,231,40,52:411,232,12,493","type":"411,231,18","value":"411,259,0"}}]},{"$type":"methods","items":[{"$type":"method","inheritdoc":"Ext.Container#add","name":"add","text":"Adds one or more Components to this Container. Example:\n\n    var myPanel = Ext.create({\n        xtype: 'panel',\n        html : 'This will be added to a Container'\n    });\n\n    var items = myContainer.add([myPanel]); // Array returned\n    var item  = myContainer.add(myPanel);   // One item is returned\n","items":[{"$type":"param","name":"newItems","text":"The new item(s) to add\nto the Container. Note that if an array of items to add was passed in, an array of added\nitems will be returned as well even if there was only one item.\n","type":"Object/Object[]/Ext.Component/Ext.Component[]","src":{"name":"411,799,63","text":"411,799,72,23:411,800,8,154","type":"411,799,16"}},{"$type":"return","text":"The Component(s) that were added.\n","type":"Ext.Component/Ext.Component[]","src":{"text":"411,803,48,34","type":"411,803,17"}}],"src":{"inheritdoc":"483,119,20","name":"483,118,28","text":"411,789,8,303"}},{"$type":"method","inheritdoc":"Ext.Container#child","name":"child","text":"Retrieves the first direct child of this container which matches the passed selector\nor component. The passed in selector must comply with an Ext.ComponentQuery selector,\nor it can be an actual Ext.Component.\n","items":[{"$type":"param","name":"selector","optional":true,"text":"An Ext.ComponentQuery selector. If no selector is\nspecified, the first child will be returned.\n","type":"String/Ext.Component","src":{"name":"293,66,39","text":"293,66,49,50:293,67,8,45","type":"293,66,16"}},{"$type":"return","text":"The matching child Ext.Component (or `null` if no match was found).\n","type":"Ext.Component","src":{"text":"293,68,32,68","type":"293,68,17"}}],"src":{"inheritdoc":"483,149,20","name":"483,148,28","text":"293,63,8,209"}},{"$type":"method","inheritdoc":"Ext.Container#down","name":"down","text":"Retrieves the first descendant of this container which matches the passed selector.\nThe passed in selector must comply with an Ext.ComponentQuery selector, or it can be\nan actual Ext.Component.\n","items":[{"$type":"param","name":"selector","optional":true,"text":"An Ext.ComponentQuery selector or Ext.Component.\nIf no selector is\nspecified, the first child will be returned.\n","type":"String/Ext.Component","src":{"name":"293,94,39","text":"293,94,49,49:293,95,8,63","type":"293,94,16"}},{"$type":"return","text":"The matching descendant Ext.Component (or `null` if no match\nwas found).\n","type":"Ext.Component","src":{"text":"293,97,32,61:293,98,8,12","type":"293,97,17"}}],"src":{"inheritdoc":"483,155,20","name":"483,154,28","text":"293,91,8,194"}},{"$type":"method","inheritdoc":"Ext.Container#getAt","name":"getAt","text":"Returns the Component for a given index in the Container's {@link #property-items}.\n","items":[{"$type":"param","name":"index","text":"The index of the Component to return.\n","type":"Number","src":{"name":"411,1088,24","text":"411,1088,30,38","type":"411,1088,16"}},{"$type":"return","text":"The item at the specified `index`, if found.\n","type":"Ext.Component","src":{"text":"411,1089,32,45","type":"411,1089,17"}}],"src":{"inheritdoc":"483,143,20","name":"483,142,28","text":"411,1087,8,84"}},{"$type":"method","localdoc":"Finds the first form field that can be focused.\n","name":"getFocusEl","text":"Finds the first form field that can be focused.\n","src":{"localdoc":"483,278,18,48","name":"483,280,0","text":"483,278,18,48"}},{"$type":"method","access":"private","name":"getRefItems","text":"Used by {@link Ext.ComponentQuery} to find all items\nwhich can potentially be considered a child of this container.\n","items":[{"$type":"param","name":"deep","text":"`true` to find grandchildren of child containers.\n","type":"Boolean","src":{"name":"483,260,25","text":"483,260,30,50","type":"483,260,16"}}],"src":{"access":"483,257,8","name":"483,262,0","text":"483,258,8,116"}},{"$type":"method","inheritdoc":"Ext.Container#insert","name":"insert","text":"Adds a child Component at the given index. For example, here's how we can add a new item,\nmaking it the first child Component of this Container:\n\n    myContainer.insert(0, {xtype: 'panel', html: 'new item'});\n","items":[{"$type":"param","name":"index","text":"The index to insert the Component at.\n","type":"Number","src":{"name":"411,1221,24","text":"411,1221,30,38","type":"411,1221,16"}},{"$type":"param","name":"item","text":"The Component to insert.\n","type":"Object","src":{"name":"411,1222,24","text":"411,1222,29,25","type":"411,1222,16"}},{"$type":"return","name":"this","src":{"name":"411,1240,0"}}],"src":{"inheritdoc":"483,125,20","name":"483,124,28","text":"411,1216,8,210"}},{"$type":"method","inheritdoc":"Ext.Container#query","name":"query","text":"Retrieves all descendant components which match the passed selector.\nExecutes an Ext.ComponentQuery.query using this container as its root.\n","items":[{"$type":"param","name":"selector","optional":true,"text":"Selector complying to an Ext.ComponentQuery selector.\nIf no selector is specified all items will be returned.\n","type":"String","src":{"name":"293,14,25","text":"293,14,35,54:293,15,8,56","type":"293,14,16"}},{"$type":"return","text":"Components which matched the selector\n","type":"Ext.Component[]","src":{"text":"293,16,34,38","type":"293,16,17"}}],"src":{"inheritdoc":"483,161,20","name":"483,160,28","text":"293,12,8,140"}},{"$type":"method","inheritdoc":"Ext.Container#remove","name":"remove","text":"Removes an item from this Container, optionally destroying it.\n","items":[{"$type":"param","name":"which","text":"The component instance, id or\nindex to remove or an array of these.\n","type":"Ext.Component/String/Number/Array","src":{"name":"411,922,51","text":"411,922,57,30:411,923,8,38","type":"411,922,16"}},{"$type":"param","name":"destroy","optional":true,"text":"`true` to automatically call Component's\n{@link Ext.Component#method-destroy destroy} method.\n","type":"Boolean","src":{"name":"411,924,26","text":"411,924,35,41:411,925,8,54","type":"411,924,16"}},{"$type":"return","text":"The Component that was removed.\n","type":"Ext.Component","src":{"text":"411,927,32,32","type":"411,927,17"}}],"src":{"inheritdoc":"483,131,20","name":"483,130,28","text":"411,921,8,63"}},{"$type":"method","inheritdoc":"Ext.Container#removeAll","name":"removeAll","text":"Removes all items currently in the Container, optionally destroying them all.\n","items":[{"$type":"param","name":"destroy","optional":true,"text":"Pass `true` to {@link Ext.Component#method!destroy destroy}\neach removed Component. Defaults to `autoDestroy`.\n","type":"Boolean","src":{"name":"411,1035,26","text":"411,1035,35,60:411,1036,8,51","type":"411,1035,16"}},{"$type":"param","name":"everything","optional":true,"text":"Pass `true` to completely remove all items including\ndocked, floated and positioned items.\n","type":"Boolean","src":{"name":"411,1037,26","text":"411,1037,38,53:411,1038,8,39","type":"411,1037,16"}},{"$type":"return","text":"The removed components\n","type":"Ext.Component[]","src":{"text":"411,1040,34,23","type":"411,1040,17"}}],"src":{"inheritdoc":"483,137,20","name":"483,136,28","text":"411,1033,8,79"}},{"$type":"method","chainable":true,"name":"setErrors","text":"Marks each field invalid based on the messages passed. The object will\nbe iterated over and a child field is found based on the key matching\na field's name. The field will then be marked invalid with that message.\nIf the value is falsey, that field will be not be marked invalid. Example:\n\n```javascript\n @example({ framework: 'extjs' })\n    var form = Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        title: 'FieldContainer Example',\n        bodyPadding: 10,\n\n        items: [{\n            xtype: 'containerfield',\n            label: 'Name',\n            name: 'name',\n            items: [{\n                flex: 1,\n                name: 'first',\n                placeholder: 'First',\n                required: true\n            }, {\n                margin: '0 10',\n                name: 'middle',\n                placeholder: 'MI',\n                width: 50\n            }, {\n                flex: 1,\n                name: 'last',\n                placeholder: 'Last',\n                required: true\n            }]\n        }]\n    });\n\n    var fieldcontainer = form.child('containerfield');\n\n    fieldcontainer.setErrors({\n        first: 'First name is required',\n        last: 'Last name is required',\n        middle: null                      //clears any errors on the field\n    });\n","items":[{"$type":"param","name":"errors","text":"The errors to set child fields with.\n","type":"Object","src":{"name":"483,349,24","text":"483,349,31,37","type":"483,349,16"}},{"$type":"return","text":"this\n```\n","type":"Ext.field.Container","src":{"text":"483,350,38,5:483,351,8,4","type":"483,350,17"}}],"src":{"chainable":"483,381,0","name":"483,353,0","text":"483,306,8,1300"}}]}],"src":{"alias":"483,48,0:483,49,0","extends":"483,46,0","mixins":"483,53,0:483,53,0:483,53,0","name":"483,45,0","requires":"483,51,0","text":"483,2,4,1241"},"group":"Container","displayName":"Field Container"},{"$type":"class","alias":"widget.datefield,widget.datepickerfield","alternateClassNames":"Ext.form.DatePicker,Ext.field.DatePicker","extended":"Ext.field.Picker,Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.DatePickerNative","extends":"Ext.field.Picker","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Date","requires":"Ext.data.validator.Date,Ext.field.trigger.Date,Ext.picker.Date,Ext.panel.Date,Ext.data.field.Date","text":" This is a specialized field which shows a {@link Ext.picker.Date} when tapped.\n If it has a predefined value, or a value is selected in the {@link Ext.picker.Date},\n it will be displayed like a normal {@link Ext.field.Text} (but not selectable/changable).\n\n     Ext.create('Ext.field.Date', {\n         label: 'Birthday',\n         value: new Date()\n     });\n\n {@link Ext.field.Date} fields are very simple to implement, and have no required configurations.\n\n ## Examples\n\n It can be very useful to set a default {@link #value} configuration on\n {@link Ext.field.Date} fields. In this example, we set the {@link #value} to be\n the current date.  You can also use the {@link #setValue} method to update the value at any time.\n\n ```javascript\n @example({ framework: 'extjs' })\n     var form = Ext.create('Ext.form.Panel', {\n         fullscreen: true,\n         referenceHolder: true,\n         items: [{\n             xtype: 'fieldset',\n             items: [{\n                 xtype: 'datefield',\n                 label: 'Birthday',\n                 reference: 'birthday',\n                 value: new Date()\n             }]\n         }, {\n             xtype: 'toolbar',\n             docked: 'bottom',\n             items: [{\n                 text: 'setValue',\n                 handler: function() {\n                     var field = form.lookup('birthday'),\n                         y = Ext.Number.randomInt(1980, 2011),\n                         m = Ext.Number.randomInt(0, 11),\n                         d = Ext.Number.randomInt(1, 28);\n\n                     field.setValue(new Date(y, m, d));\n                 }\n             }]\n         }]\n     });\n ```\n When you need to retrieve the date from the {@link Ext.field.Date}, you can either use\n the {@link #getValue} or {@link #getFormattedValue} methods:\n\n ```javascript\n @example({ framework: 'extjs' })\n var form = Ext.create('Ext.form.Panel', {\n     fullscreen: true,\n     referenceHolder: true,\n     items: [{\n         xtype: 'fieldset',\n         items: [{\n             xtype: 'datefield',\n             label: 'Birthday',\n             reference: 'birthday',\n             value: new Date()\n         }]\n     }, {\n         xtype: 'toolbar',\n         docked: 'bottom',\n         items: [{\n             text: 'getValue',\n             handler: function() {\n                 var field = form.lookup('birthday');\n                 console.log(field.getValue());\n             }\n         }, {\n             text: 'getFormattedValue',\n             handler: function() {\n                 var field = form.lookup('birthday');\n                 console.log(field.getFormattedValue());\n             }\n         }]\n     }]\n });\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtContainer, ExtFormPanel, ExtDatePickerField } from '@sencha/ext-react';\n\n export default class MyExample extends Component {\n     render() {\n         return (\n             <ExtContainer layout=\"center\">\n                 <ExtFormPanel shadow>\n                     <ExtDatePickerField\n                         width={150}\n                         value={new Date()}\n                         destroyPickerOnHide\n                         label=\"Date\"\n                         picker={{\n                             yearFrom: 1990\n                         }}\n                     />\n                 </ExtFormPanel>\n             </ExtContainer>\n         )\n     }\n }\n ```\n ```javascript\n  @example({framework: 'ext-angular', packages:['ext-angular']})\n  import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [``],\n     template: `\n         <ExtContainer [layout]='\"center\"'>\n             <ExtFormPanel [shadow]>\n                 <ExtDatePickerField\n                     [width]='150'\n                     [value]='date'\n                     [destroyPickerOnHide]\n                     [label]='\"Date\"'\n                     [picker]='{\n                         yearFrom: 1990\n                     }'\n                 >\n                 </ExtDatePickerField>\n             </ExtFormPanel>\n         </ExtContainer>\n     `\n })\n export class AppComponent {\n     date:Date = new Date();\n }\n ```\n ```html\n  @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n  <ext-container layout=\"center\">\n    <ext-formpanel\n      layout='{\"type\": \"vbox\", \"align\": \"stretch\"}'\n      width=\"300\"\n      height=\"100\"\n      bodyPadding=\"10\"\n      shadow=\"true\"\n     >\n      <ext-datepickerfield\n        destroyPickerOnHide=\"true\"\n        label=\"Date\"\n        picker='{\n          \"yearFrom\": \"1990\"\n        }'\n        onready=\"datepickerfield.datePickerFieldReady\"\n      >\n      </ext-datepickerfield>\n     </ext-formPanel>\n  </ext-container>\n ```\n ```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-container.component';\n import '@sencha/ext-web-components/dist/ext-datepickerfield.component';\n import '@sencha/ext-web-components/dist/ext-formpanel.component';\n\n export default class DatePickerFieldComponent {\n    datePickerFieldReady(event) {\n        this.datepickerfieldView = event.detail.cmp;\n        this.datepickerfieldView.setValue(new Date());\n    }\n }\n window.datepickerfield = new DatePickerFieldComponent();\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"altFormats","since":"7.0","text":"Multiple date formats separated by \"|\" or an array of date formats\nto try when parsing a user input value and it doesn't match the defined format.\n","type":"String|String[]","value":"'m/d/Y|' + 'n/j/Y|' + 'n/j/y|' + 'm/j/y|' + 'n/d/y|' + 'm/j/Y|' + 'n/d/Y|' + 'm-d-y|' + 'm-d-Y|' + 'm/d|' + 'm-d|' + 'md|' + 'mdy|' + 'mdY|' + 'd|' + 'Y-m-d|' + 'n-j|' + 'n/j'","src":{"accessor":"484,236,0","name":"484,231,35","since":"484,234,19","text":"484,232,12,147","type":"484,231,18","value":"484,236,0"}},{"$type":"property","accessor":true,"name":"dateFormat","optional":true,"text":"The format to be\nused when displaying the date in this field. Accepts any valid date format. You\ncan view formats over in the {@link Ext.Date} documentation.\n","type":"String","value":"Ext.util.Format.defaultDateFormat","src":{"accessor":"484,228,0","name":"484,224,27","text":"484,224,73,17:484,225,12,141","type":"484,224,18","value":"484,224,38"}},{"$type":"property","accessor":true,"name":"destroyPickerOnHide","text":"Whether or not to destroy the picker widget on hide. This save memory if it's\nnot used frequently, but increase delay time on the next show due to\nre-instantiation.\n","type":"Boolean","value":"false","src":{"accessor":"484,217,0","name":"484,212,27","text":"484,213,12,165","type":"484,212,18","value":"484,217,0"}},{"$type":"property","accessor":true,"name":"maxDate","optional":true,"text":"The maximum allowed date value for this field.\nString value should conform to {@link #cfg!dateFormat}.\n","type":"Date/String","value":"null","src":{"accessor":"484,265,0","name":"484,262,32","text":"484,262,41,47:484,263,12,56","type":"484,262,18","value":"484,265,0"}},{"$type":"property","accessor":true,"name":"minDate","optional":true,"text":"The minimum allowed date value for this field.\nString value should conform to {@link #cfg!dateFormat}.\n","type":"Date/String","value":"null","src":{"accessor":"484,259,0","name":"484,256,32","text":"484,256,41,47:484,257,12,56","type":"484,256,18","value":"484,259,0"}},{"$type":"property","accessor":true,"name":"value","text":"Default value for the field and the internal {@link Ext.picker.Date} component.\nAccepts an object of 'year', 'month' and 'day' values, all of which should be\nnumbers, or a {@link Date}.\n\nExample: {year: 1989, day: 1, month: 5} = 1st May 1989 or new Date()\n","type":"Object/Date","src":{"accessor":"489,172,0","name":"484,203,31","text":"484,204,12,256","type":"484,203,18"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when a date is selected\n","items":[{"$type":"param","name":"this","type":"Ext.field.Date","src":{"name":"484,196,32","type":"484,196,16"}},{"$type":"param","name":"newDate","text":"The new date\n","type":"Date","src":{"name":"484,197,22","text":"484,197,30,13","type":"484,197,16"}},{"$type":"param","name":"oldDate","text":"The old date\n","type":"Date","src":{"name":"484,198,22","text":"484,198,30,13","type":"484,198,16"}}],"src":{"name":"484,194,15","text":"484,195,8,30"}}]},{"$type":"methods","items":[{"$type":"method","name":"getFormattedValue","text":"Returns the value of the field formatted using the specified format. If it is not\nspecified, it will default to {@link #dateFormat} and then\n{@link Ext.util.Format#defaultDateFormat}.\n","items":[{"$type":"param","name":"format","text":"The format to be returned.\n","type":"String","src":{"name":"484,436,24","text":"484,436,31,27","type":"484,436,16"}},{"$type":"return","text":"The formatted date.\n","type":"String","src":{"text":"484,437,25,20","type":"484,437,17"}}],"src":{"name":"484,439,0","text":"484,433,8,184"}},{"$type":"method","access":"private","fires":"select","name":"onPickerChange","text":"Called when the picker changes its value.\n","items":[{"$type":"param","name":"picker","text":"The date picker.\n","type":"Ext.picker.Date","src":{"name":"484,542,33","text":"484,542,40,17","type":"484,542,16"}},{"$type":"param","name":"value","text":"The new value from the date picker.\n","type":"Object","src":{"name":"484,543,24","text":"484,543,30,36","type":"484,543,16"}}],"src":{"access":"484,544,8","fires":"484,555,0","name":"484,546,0","text":"484,541,8,42"}},{"$type":"method","access":"private","name":"updateDateFormat","text":"Updates the date format in the field.\n","src":{"access":"484,389,8","name":"484,391,0","text":"484,388,8,38"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"initTime","text":"In the absence of a time value, a default value of 12 noon will be used\nnote: 12 noon was chosen because it steers well clear of all DST timezone changes\n","value":"'12'","src":{"access":"484,295,8","name":"484,297,0","text":"484,293,8,154","value":"484,297,0"}},{"$type":"property","locale":true,"name":"maxDateMessage","text":"The error message when the {@link #cfg!maxDate} constraint has been violated.\n","type":"String","value":"\"The date in this field must be equal to or before {0}\"","src":{"locale":"484,288,8","name":"484,290,0","text":"484,287,8,78","type":"484,286,19","value":"484,290,0"}},{"$type":"property","locale":true,"name":"minDateMessage","text":"The error message when the {@link #cfg!minDate} constraint has been violated.\n","type":"String","value":"\"The date in this field must be equal to or after {0}\"","src":{"locale":"484,281,8","name":"484,283,0","text":"484,280,8,78","type":"484,279,19","value":"484,283,0"}}]}],"src":{"alias":"484,183,0:484,183,0","alternateClassNames":"484,179,0:484,180,0","extends":"484,176,0","name":"484,175,0","requires":"484,186,0:484,187,0:484,188,0:484,189,0:484,190,0","text":"484,2,3,5377"},"group":"Form Fields","displayName":"Field Date"},{"$type":"class","alias":"widget.displayfield","alternateClassNames":"Ext.form.Display","extended":"Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Field","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Display","since":"6.5.1","text":"A display-only text field which is not validated and not submitted. This is useful for when you\nwant to display a value from a form's loaded data but do not want to allow the  user to edit or\nsubmit that * value. The value can be optionally {@link #htmlEncode HTML encoded} if it contains\nHTML markup that you do not want * to be rendered.\n\nIf you have more complex content, or need to include components within the displayed content,\nalso consider using a {@link Ext.field.Container} instead.\n\nExample:\n\n    @example\n    Ext.create('Ext.form.Panel', {\n        renderTo: Ext.getBody(),\n        width: 175,\n        height: 150,\n        bodyPadding: 10,\n        title: 'Final Score',\n        items: [{\n            xtype: 'displayfield',\n            fieldLabel: 'Home',\n            name: 'home_score',\n            value: '10'\n        }, {\n            xtype: 'displayfield',\n            fieldLabel: 'Visitor',\n            name: 'visitor_score',\n            value: '11'\n        }],\n        buttons: [{\n            text: 'Update'\n        }]\n    });\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"encodeHtml","text":"Set to `false` to render HTML. Be aware this can be a security risk if the\ndata presented is not properly filtered for malicious HTML tags.\n","type":"Boolean","value":"true","src":{"accessor":"487,63,0","name":"487,59,27","text":"487,60,12,140","type":"487,59,18","value":"487,63,0"}},{"$type":"property","access":"private","name":"focusable","type":"Boolean","value":"false","src":{"access":"487,47,8","name":"487,46,23","type":"487,46,14","value":"487,49,0"}},{"$type":"property","access":"private","name":"readOnly","type":"Boolean","value":"true","src":{"access":"487,53,8","name":"487,52,23","type":"487,52,14","value":"487,55,0"}},{"$type":"property","accessor":true,"controllable":true,"name":"renderer","text":"A function to transform the raw value for display in the field.\n\n    Ext.create('Ext.form.Panel', {\n        renderTo: document.body,\n        width: 175,\n        bodyPadding: 10,\n        title: 'Final Score',\n        items: [{\n            xtype: 'displayfield',\n            fieldLabel: 'Grade',\n            name: 'final_grade',\n            value: 68,\n            renderer: function (value, field) {\n                var color = (value < 70) ? 'red' : 'black';\n                return '<span style=\"color:' + color + ';\">' + value + '</span>';\n            }\n        }]\n    });\n","type":"Function/String","value":"null","items":[{"$type":"param","name":"value","text":"The raw field {@link #value}\n","type":"Object","src":{"name":"487,86,28","text":"487,86,34,29","type":"487,86,20"}},{"$type":"param","name":"field","text":"The display field\n","type":"Ext.form.field.Display","src":{"name":"487,87,44","text":"487,87,50,18","type":"487,87,20"}},{"$type":"return","text":"displayValue The HTML string to be rendered\n","type":"String","src":{"text":"487,88,29,44","type":"487,88,21"}}],"src":{"accessor":"487,91,0","controllable":"487,89,12","name":"487,66,35","text":"487,67,12,574","type":"487,66,18","value":"487,91,0"}},{"$type":"property","name":"scope","text":"The scope to execute the {@link #renderer} function. Defaults to `this` component.\n","type":"Object","src":{"name":"487,97,22","text":"487,98,8,83","type":"487,97,14"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getBodyTemplate","src":{"access":"487,107,8","name":"487,109,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"displayfield-ui","text":"Creates a visual theme for a Display Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1184,92,20","text":"1184,93,4,109","type":"1184,92,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"displayfield","src":{"access":"1184,96,43","name":"1184,96,21","text":"1184,96,54,35:1184,97,4,61","type":"1184,96,12","value":"1184,96,28"}},{"$type":"param","name":"$input-color","text":"Display field input color\n","type":"color","src":{"name":"1184,99,19","text":"1184,100,4,27","type":"1184,99,12"}},{"$type":"param","name":"$input-border-width","text":"Display Field input border width\n","type":"number/list","src":{"name":"1184,102,25","text":"1184,103,4,34","type":"1184,102,12"}},{"$type":"param","name":"$input-border-style","text":"Display Field input border style\n","type":"string/list","src":{"name":"1184,105,25","text":"1184,106,4,34","type":"1184,105,12"}},{"$type":"param","name":"$input-border-color","text":"Display Field input border color\n","type":"color/list","src":{"name":"1184,108,24","text":"1184,109,4,34","type":"1184,108,12"}},{"$type":"param","name":"$input-background-color","text":"Display Field input background-color\n","type":"color","src":{"name":"1184,111,19","text":"1184,112,4,38","type":"1184,111,12"}},{"$type":"param","name":"$input-padding","text":"Display Field input padding\n","type":"color","src":{"name":"1184,114,19","text":"1184,115,4,29","type":"1184,114,12"}},{"$type":"param","name":"$input-padding-big","text":"Display Field input padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"color","src":{"name":"1184,117,19","text":"1184,118,4,85","type":"1184,117,12"}},{"$type":"param","name":"$input-font-weight","text":"Display Field input font-weight\n","type":"string/number","src":{"name":"1184,120,27","text":"1184,121,4,33","type":"1184,120,12"}},{"$type":"param","name":"$input-font-size","text":"Display Field input font-size\n","type":"number","src":{"name":"1184,123,20","text":"1184,124,4,31","type":"1184,123,12"}},{"$type":"param","name":"$input-font-size-big","text":"Display Field input font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1184,126,20","text":"1184,127,4,87","type":"1184,126,12"}},{"$type":"param","name":"$input-line-height","text":"Display Field input line-height\n","type":"number","src":{"name":"1184,129,20","text":"1184,130,4,33","type":"1184,129,12"}},{"$type":"param","name":"$input-line-height-big","text":"Display Field input line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1184,132,20","text":"1184,133,4,89","type":"1184,132,12"}},{"$type":"param","name":"$input-font-family","text":"Display Field input font-family\n","type":"string","src":{"name":"1184,135,20","text":"1184,136,4,33","type":"1184,135,12"}},{"$type":"param","name":"$input-border-radius","text":"The border radius of the text field\n","type":"number","src":{"name":"1184,138,20","text":"1184,139,4,36","type":"1184,138,12"}}],"src":{"name":"1184,141,7","text":"1184,90,4,44"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$displayfield-input-background-color","text":"Display Field body background-color\n","type":"color","value":"null","src":{"dynamic":"1184,33,39","name":"1184,33,1","text":"1184,31,4,36","type":"1184,30,10","value":"1184,33,47"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-border-color","text":"Display Field input border color\n","type":"color/list","value":"transparent","src":{"dynamic":"1184,27,35","name":"1184,27,1","text":"1184,25,4,33","type":"1184,24,10","value":"1184,27,43"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-border-radius","text":"Display Field input border-radius\n","type":"number","value":"null","src":{"dynamic":"1184,87,36","name":"1184,87,1","text":"1184,85,4,34","type":"1184,84,10","value":"1184,87,44"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-border-style","text":"Display Field input border style\n","type":"string/list","value":"$textfield-input-border-style","src":{"dynamic":"1184,21,35","name":"1184,21,1","text":"1184,19,4,33","type":"1184,18,10","value":"1184,21,43"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-border-width","text":"Display Field input border width\n","type":"number/list","value":"$textfield-input-border-width","src":{"dynamic":"1184,15,35","name":"1184,15,1","text":"1184,13,4,33","type":"1184,12,10","value":"1184,15,43"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-color","text":"Display Field input color\n","type":"color","value":"$color","src":{"dynamic":"1184,9,28","name":"1184,9,1","text":"1184,7,4,26","type":"1184,6,10","value":"1184,9,36"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-font-family","text":"Display Field input font-family\n","type":"string","value":"$textfield-input-font-family","src":{"dynamic":"1184,81,34","name":"1184,81,1","text":"1184,79,4,32","type":"1184,78,10","value":"1184,81,42"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-font-size","text":"Display Field input font-size\n","type":"number","value":"$textfield-input-font-size","src":{"dynamic":"1184,57,32","name":"1184,57,1","text":"1184,55,4,30","type":"1184,54,10","value":"1184,57,40"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-font-size-big","text":"Display Field input font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$textfield-input-font-size-big","src":{"dynamic":"1184,63,36","name":"1184,63,1","text":"1184,61,4,86","type":"1184,60,10","value":"1184,63,44"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-font-weight","text":"Display Field input font-weight\n","type":"string/number","value":"$textfield-input-font-weight","src":{"dynamic":"1184,51,34","name":"1184,51,1","text":"1184,49,4,32","type":"1184,48,10","value":"1184,51,42"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-line-height","text":"Display Field input line-height\n","type":"number","value":"$textfield-input-line-height","src":{"dynamic":"1184,69,34","name":"1184,69,1","text":"1184,67,4,32","type":"1184,66,10","value":"1184,69,42"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-line-height-big","text":"Display Field input line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$textfield-input-line-height-big","src":{"dynamic":"1184,75,38","name":"1184,75,1","text":"1184,73,4,88","type":"1184,72,10","value":"1184,75,46"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-padding","text":"Display Field input padding\n","type":"number/list","value":"$textfield-input-padding","src":{"dynamic":"1184,39,30","name":"1184,39,1","text":"1184,37,4,28","type":"1184,36,10","value":"1184,39,38"}},{"$type":"property","dynamic":true,"name":"$displayfield-input-padding-big","text":"Display Field input padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"$textfield-input-padding-big","src":{"dynamic":"1184,45,34","name":"1184,45,1","text":"1184,43,4,84","type":"1184,42,10","value":"1184,45,42"}}]}],"src":{"alias":"487,39,0","alternateClassNames":"487,40,0","extends":"487,38,0","name":"1184,2,11","since":"487,35,11","text":"487,2,4,1044"},"group":"Form Fields","displayName":"Field Display"},{"$type":"class","alias":"widget.emailfield","alternateClassNames":"Ext.form.Email","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Email","since":"6.5.1","text":" The Email field creates an HTML5 email input and is usually created inside a form.\n Because it creates an HTML email input field, most browsers will show a specialized virtual\n keyboard for email address input. Aside from that, the email field is just a normal text field.\n Here's an example of how to use it in a form:\n\n ```javascript\n    @example({ framework: 'extjs' })\n     Ext.create('Ext.form.Panel', {\n         fullscreen: true,\n         items: [\n             {\n                 xtype: 'fieldset',\n                 title: 'Register',\n                 items: [\n                     {\n                         xtype: 'emailfield',\n                         label: 'Email',\n                         name: 'email'\n                     },\n                     {\n                         xtype: 'passwordfield',\n                         label: 'Password',\n                         name: 'password'\n                     }\n                 ]\n             }\n         ]\n     });\n\n Or on its own, outside of a form:\n\n     Ext.create('Ext.field.Email', {\n         label: 'Email address',\n         value: 'prefilled@email.com'\n     });\n\n Because email field inherits from {@link Ext.field.Text textfield} it gains all of the\n functionality that text fields provide, including getting and setting the value at runtime,\n validations and various events that are fired as the user interacts with the component.\n Check out the {@link Ext.field.Text} docs to see the additional functionality available.\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtContainer, ExtFormPanel, ExtEmailField } from '@sencha/ext-react';\n\n export default class MyExample extends Component {\n     render() {\n         return (\n             <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtEmailField\n                        width={250}\n                        placeholder=\"user@domain.com\"\n                        label=\"Email\"\n                     />\n                  </ExtFormPanel>\n             </ExtContainer>\n         )\n     }\n }\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n  selector: 'app-root-1',\n  styles: [``],\n  template: `\n      <ExtContainer [layout]='\"center\"'>\n          <ExtFormPanel [shadow]>\n              <ExtEmailField\n                  [width]='250'\n                  [placeholder]='\"user@domain.com\"'\n                  [label]='\"Email\"'\n              >\n              </ExtEmailField>\n          </ExtFormPanel>\n      </ExtContainer>\n          `\n })\n export class AppComponent {}\n ```\n ```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n  <ext-container\n    layout=\"center\"\n  >\n   <ext-formpanel\n         shadow=\"true\"\n    >\n       <ext-emailfield\n            width=\"250\"\n            placeholder=\"user@domain.com\"\n            label=\"Email\"\n        >\n       </ext-emailfield>\n    </ext-formpanel>\n </ext-container>\n ```\n ```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-container.component';\n import '@sencha/ext-web-components/dist/ext-formpanel.component';\n import '@sencha/ext-web-components/dist/ext-emailfield.component';\n\n export default class EmailFieldComponent {}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"autoCapitalize","text":"True to set the field's DOM element auto-capitalize attribute to \"on\", false to\nset to \"off\".\n","type":"Boolean","value":"false","src":{"accessor":"488,124,0","inheritdoc":"488,122,12","name":"488,121,17","text":"507,304,12,94","type":"507,303,18","value":"488,124,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"inputType","text":"The type attribute for input fields -- e.g. text,\npassword, date, url, email, etc.\n","type":"String","value":"'email'","src":{"accessor":"494,24,0","inheritdoc":"488,129,8","name":"488,128,13","text":"494,21,45,50:494,22,12,33","type":"494,21,18","value":"488,131,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'emailfield'","src":{"inheritdoc":"488,135,8","name":"488,134,18","text":"18,529,8,532","value":"488,137,0"}}]}],"src":{"alias":"488,117,0","alternateClassNames":"488,116,0","extends":"488,115,0","name":"488,114,0","since":"488,112,11","text":"488,2,3,3457"},"group":"Form Fields","displayName":"Field Email"},{"$type":"class","alias":"widget.groupcontainer","extended":"Ext.field.Container,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.CheckboxGroup,Ext.field.RadioGroup","extends":"Ext.field.Container","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.FieldGroupContainer","requires":"Ext.layout.Box","text":"This Group Container Field is useful for containing multiple form fields\nto be a single group and will line up nicely with group other fields.\nA common use is for grouping a set of related fields.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"defaultFieldValue","text":"The value used for the name property for each field in the group.\nIf a field defines its own value property,\nthat will take precedence over defaultFieldValue.\n","type":"Mixed","value":"'on'","src":{"accessor":"490,37,0","name":"490,32,25","text":"490,33,12,159","type":"490,32,18","value":"490,37,0"}},{"$type":"property","name":"delegate","optional":true,"text":"A querySelector which identifies child component of the Group,\nwhich manages the change event to be triggered on group items.\n","type":"String","value":"'[isField]'","src":{"name":"490,41,23","text":"490,42,8,126","type":"490,41,14","value":"490,45,0"}},{"$type":"property","accessor":true,"name":"fieldsName","text":"The value used for the name property for each field in the group.\nIf a field defines its own name property, that will take precedence over fieldsName.\n\nDefaults to group id\n","type":"String","value":"undefined","src":{"accessor":"490,29,0","name":"490,23,26","text":"490,24,12,173","type":"490,23,18","value":"490,29,0"}},{"$type":"property","inheritdoc":true,"name":"shareableName","text":"Set to `true` to allow this component's `{@link #cfg!name name}` to be shared by other items in the\nsame `nameHolder`. Such items will be returned in an array from `lookupName`.\n","type":"Boolean","value":"true","src":{"inheritdoc":"490,49,8","name":"490,48,13","text":"275,299,8,160","type":"275,298,14","value":"490,51,0"}},{"$type":"property","accessor":true,"name":"vertical","text":"True to distribute contained controls vertically\nThe default value is false\n","type":"Boolean","value":"false","src":{"accessor":"490,20,0","name":"490,16,27","text":"490,17,12,76","type":"490,16,18","value":"490,20,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the value of a field is changed.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Field","src":{"name":"490,75,33","text":"490,75,38,11","type":"490,75,16"}},{"$type":"param","name":"newValue","text":"Group new value\n","type":"Object","src":{"name":"490,76,24","text":"490,76,33,16","type":"490,76,16"}},{"$type":"param","name":"oldValue","text":"Group previous value before change\n","type":"Object","src":{"name":"490,77,24","text":"490,77,33,35","type":"490,77,16"}}],"src":{"name":"490,73,15","text":"490,74,8,44"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getGroupItems","items":[{"$type":"param","name":"query","optional":true,"text":"An additional query to add to the selector.\n","type":"String","src":{"name":"490,151,25","text":"490,151,32,44","type":"490,151,16"}},{"$type":"return","text":"group items within the container based on delegate\n","type":"Array","src":{"text":"490,152,24,51","type":"490,152,17"}}],"src":{"access":"490,150,8","name":"490,154,0"}},{"$type":"method","name":"getValue","text":"Returns an object containing the value of each field in the group, keyed to the\nfield's name.\n\nFor groups of checkbox fields with the same name, it will be arrays of values.\nFor example:\n\n    {\n        name: \"Bill\", // From a TextField\n        favorites: [\n            'pizza',\n            'noodle',\n            'cake'\n        ]\n    }\n","items":[{"$type":"param","name":"enabled","optional":true,"text":"`true` to return only enabled fields.\n","type":"Boolean","src":{"name":"490,174,26","text":"490,174,35,38","type":"490,174,16"}},{"$type":"param","name":"all","optional":true,"text":"`true` to return all fields even if they don't have a\n{@link Ext.field.Field#name name} configured.\n","type":"Boolean","src":{"name":"490,175,26","text":"490,175,31,54:490,176,8,46","type":"490,175,16"}},{"$type":"return","text":"Object mapping field name to its value.\n","type":"Object","src":{"text":"490,177,25,40","type":"490,177,17"}}],"src":{"name":"490,179,0","text":"490,159,8,336"}},{"$type":"method","name":"isEqual","text":"Returns whether two values are logically equal. Group implementations may override this\nto provide custom comparison logic appropriate for the particular data type.\n","items":[{"$type":"param","name":"value1","text":"The first value to compare\n","type":"Object","src":{"name":"490,202,24","text":"490,202,31,27","type":"490,202,16"}},{"$type":"param","name":"value2","text":"The second value to compare\n","type":"Object","src":{"name":"490,203,24","text":"490,203,31,28","type":"490,203,16"}},{"$type":"return","text":"True if the values are equal, false if not equal.\n","type":"Boolean","src":{"text":"490,204,26,50","type":"490,204,17"}}],"src":{"name":"490,206,0","text":"490,200,8,165"}},{"$type":"method","name":"isValid","text":"Returns true if field is valid.\n","items":[{"$type":"return","type":"Boolean","src":{"type":"490,218,0"}}],"src":{"name":"490,213,0","text":"490,211,8,32"}},{"$type":"method","chainable":true,"name":"setValue","text":"Sets the values of fields\n","items":[{"$type":"param","name":"value","src":{"name":"490,186,0"}},{"$type":"return","name":"this","src":{"name":"490,191,0"}}],"src":{"chainable":"490,196,0","name":"490,186,0","text":"490,184,8,26"}},{"$type":"method","name":"updateFieldsName","text":"Update group items name if item name matches with old name\nor have no name\n","items":[{"$type":"param","name":"name","type":"String","src":{"name":"490,112,24","type":"490,112,16"}},{"$type":"param","name":"oldName","type":"String","src":{"name":"490,113,24","type":"490,113,16"}}],"src":{"name":"490,115,0","text":"490,110,8,75"}}]},{"$type":"properties","items":[{"$type":"property","name":"verticalCls","readonly":true,"type":"String","value":"Ext.baseCSSPrefix + 'field-group-vertical'","src":{"name":"490,64,27","readonly":"490,65,8","type":"490,64,19","value":"490,67,0"}}]}],"src":{"alias":"490,8,0","extends":"490,7,0","name":"490,6,0","requires":"490,11,0","text":"490,2,4,197"},"group":"Container","displayName":"Field Fieldgroupcontainer"},{"$type":"class","alias":"widget.filefield","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.mixin.ConfigProxy","name":"Ext.field.File","text":"Creates an HTML file input field on the page. This is usually used to upload files\nto remote server.\nFile fields are usually created inside a form like this:\n\n```javascript\n @example({ framework: 'extjs' })\n     Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'fieldset',\n                title: 'My Uploader',\n                items: [\n                    {\n                        xtype: 'filefield',\n                        label: \"MyPhoto:\",\n                        name: 'photo',\n                        accept: 'image'\n                    }\n                ]\n            }\n        ]\n    });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtFileField } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtFileField\n                      label=\"Select a File\"\n                      name=\"photo\"\n                      accept=\"image\"\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n       )\n   }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n   selector: 'app-root-1',\n   styles: [``],\n   template: `\n       <ExtContainer [layout]='\"center\"'>\n           <ExtFormPanel [shadow]>\n               <ExtFileField\n                   [label]='\"Select a File\"'\n                   [name]='\"photo\"'\n                   [accept]='\"image\"'\n               >\n               </ExtFileField>\n           </ExtFormPanel>\n       </ExtContainer>\n   `\n})\n\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n    <ext-formpanel shadow=\"true\">\n        <ext-filefield\n             label=\"Select a File\"\n             name=\"photo\"\n             accept=\"image\"\n         >\n         </ext-filefield>\n    </ext-formpanel>\n</ext-container>\n```\n```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-container.component';\n import '@sencha/ext-web-components/dist/ext-formpanel.component';\n import '@sencha/ext-web-components/dist/ext-filefield.component';\n\n export default class FileFieldComponent {}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","inheritdoc":"Ext.field.FileButton#accept","name":"accept","text":"File input accept attribute documented here (http://www.w3schools.com/tags/att_input_accept.asp)\nAlso can be simple strings -- e.g. audio, video, image\n","type":"String","value":"null","src":{"inheritdoc":"491,117,16","name":"491,116,21","text":"492,31,12,152","type":"492,30,18","value":"492,34,0"}},{"$type":"property","inheritdoc":"Ext.field.FileButton#capture","name":"capture","text":"File input capture attribute. Accepts values such as \"camera\", \"camcorder\", \"microphone\"\n","type":"String","value":"null","src":{"inheritdoc":"491,123,16","name":"491,122,21","text":"492,38,12,89","type":"492,37,18","value":"492,40,0"}},{"$type":"property","inheritdoc":"Ext.field.FileButton#multiple","name":"multiple","text":"Allow selection of multiple files\n","type":"Boolean","value":"false","src":{"inheritdoc":"491,111,16","name":"491,110,21","text":"492,25,12,34","type":"492,24,18","value":"492,27,0"}}]},{"$type":"methods","items":[{"$type":"method","name":"getFiles","text":"Returns the field files.\n","items":[{"$type":"return","text":"List of the files selected.\n","type":"FileList","src":{"text":"491,217,27,28","type":"491,217,17"}}],"src":{"name":"491,219,0","text":"491,216,8,25"}},{"$type":"method","name":"reset","text":"Resets the fileField values & input values\nAlong with fileButton dom files.\n","src":{"name":"491,203,0","text":"491,200,8,76"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"isFile","value":"true","src":{"access":"491,103,8","name":"491,105,0","value":"491,105,0"}}]}],"src":{"alias":"491,96,0","extends":"491,95,0","mixins":"491,99,0","name":"491,94,0","text":"491,2,4,2555"},"group":"Form Fields","displayName":"Field File"},{"$type":"class","alias":"widget.hiddenfield","alternateClassNames":"Ext.form.Hidden","extended":"Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Input","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Hidden","text":"Hidden fields allow you to easily inject additional data into a {@link Ext.form.Panel form}\nwithout displaying additional fields on the screen. This is often useful for sending dynamic\nor previously collected data back to the server in the same request as the normal form\nsubmission.\nFor example, here is how we might set up a form to send back a hidden userId field:\n\n```javascript\n@example({ framework: 'extjs' })\nvar form = Ext.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [{\n        xtype: 'fieldset',\n        title: 'Enter your name',\n        items: [{\n                  xtype: 'hiddenfield',\n                  name: 'userId',\n                  value: 123\n               }, {\n                  xtype: 'checkboxfield',\n                  label: 'Enable notifications',\n                  name: 'notifications'\n               }]\n        }]\n });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtHiddenField } from '@sencha/ext-react';\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtHiddenField\n                      value=\"123\"\n                      name=\"hide\"\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n@Component({\n selector: 'app-root-1',\n styles: [``],\n template: `\n     <ExtContainer layout=\"center\">\n         <ExtFormPanel shadow=\"true\">\n             <ExtHiddenField\n                 value=\"123\"\n                 name=\"hide\"\n             >\n             </ExtHiddenField>\n         </ExtFormPanel>\n     </ExtContainer>\n `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n       <ext-hiddenfield\n            value=\"123\"\n            name=\"hide\"\n        >\n       </ext-hiddenfield>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-hiddenfield.component';\n\nexport default class HiddenFieldComponent {}\n```\n\nIn the form above we created two fields - a hidden field and a\n{@link Ext.field.Checkbox check box field}. Only the check box will be visible, but both fields\nwill be submitted. Hidden fields cannot be tabbed to - they are removed from the tab index so\nwhen your user taps the next/previous field buttons the hidden field is skipped over.\n\nIt's easy to read and update the value of a hidden field within a form. Using the example\nabove, we can get a reference to the hidden field and then set it to a new value in 2 lines\nof code:\n\n    var userId = form.down('hiddenfield')[0];\n    userId.setValue(1234);\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"hide":true,"name":"inputType","value":"'hidden'","src":{"accessor":"494,24,0","hide":"493,105,8","name":"493,107,0","value":"493,107,0"}}]}],"src":{"alias":"493,101,0","alternateClassNames":"493,100,0","extends":"493,99,0","name":"493,98,0","text":"493,2,4,3143"},"group":"Form Fields","displayName":"Field Hidden"},{"$type":"class","alias":"widget.inputfield","extended":"Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Text,Ext.field.Checkbox,Ext.field.Hidden","extends":"Ext.field.Field","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Input","text":"A base class for form fields that contain and manage an `<input>` element.  This class\nis intended to be extended, not directly instantiated.\n","items":[{"$type":"configs","items":[{"$type":"property","deprecatedMessage":"There is no longer an input component to which to add a class.\n","deprecatedVersion":"6.5.0","name":"inputCls","type":"String","src":{"deprecatedMessage":"494,168,20","deprecatedVersion":"494,168,20","name":"494,167,34","type":"494,167,26"}},{"$type":"property","accessor":true,"name":"inputType","optional":true,"text":"The type attribute for input fields -- e.g. text,\npassword, date, url, email, etc.\n","type":"String","value":"'text'","src":{"accessor":"494,24,0","name":"494,21,27","text":"494,21,45,50:494,22,12,33","type":"494,21,18","value":"494,21,37"}},{"$type":"property","access":"private","accessor":true,"name":"inputValue","value":"null","src":{"access":"494,42,12","accessor":"494,44,0","name":"494,44,0","value":"494,44,0"}},{"$type":"property","accessor":true,"name":"readOnly","optional":true,"text":"`true` to set the field DOM element `readonly` attribute to `\"true\"`.\n\nMutation of {@link Ext.field.Text text fields} through triggers is also disabled.\n\nTo simply prevent typing into the field while still allowing mutation through\ntriggers, set {@link Ext.field.Text#cfg!editable} to `false`.\n","type":"Boolean","value":"false","src":{"accessor":"494,37,12","name":"494,30,28","text":"494,31,12,294","type":"494,30,18","value":"494,30,37"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"setInputAttribute","text":"Helper method to update or remove an attribute on the `inputElement`\n","items":[{"$type":"param","name":"attribute","src":{"name":"494,149,0"}},{"$type":"param","name":"newValue","src":{"name":"494,149,0"}}],"src":{"access":"494,147,12","name":"494,149,0","text":"494,146,12,69"}}]},{"$type":"properties","items":[{"$type":"property","access":"protected","name":"tag","text":"The tag name to use for this field's input element. Subclasses should override this\nproperty on their class body.  Not intended for instance-level use.\n","type":"String","value":"'input'","src":{"access":"494,15,8","name":"494,12,27","text":"494,13,8,152","type":"494,12,19","value":"494,17,0"}}]}],"src":{"alias":"494,7,0","extends":"494,6,0","name":"494,5,0","text":"494,2,4,142"},"displayName":"Field Input"},{"$type":"class","alias":"widget.numberfield","alternateClassNames":"Ext.form.Number","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Spinner","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Number","requires":"Ext.data.validator.Number","text":"The Number field creates an HTML5 text input that allows the editing of number values,\nand is usually created inside a form. Most browsers will show a specialized virtual keyboard\nfor entering numbers. The Number field only accepts numerical input.  If you want a Number field\nwith up/down spinners, see {@link Ext.field.Spinner}.\n```javascript\n @example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'fieldset',\n                title: 'How old are you?',\n                items: [\n                    {\n                        xtype: 'numberfield',\n                        label: 'Age',\n                        minValue: 18,\n                        maxValue: 150,\n                        name: 'age'\n                    }\n                ]\n            }\n        ]\n    });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtNumberField, ExtFormPanel } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n       return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtNumberField\n                        label=\"Number\"\n                        width=\"150\"\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n@Component({\n selector: 'app-root-1',\n styles: [``],\n template: `\n     <ExtContainer layout=\"center\">\n         <ExtFormPanel shadow=\"true\">\n             <ExtNumberField\n                 label=\"Number\"\n                 width=\"150\"\n             >\n             </ExtNumberField>\n         </ExtFormPanel>\n     </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-numberfield\n            label=\"Number\"\n            width=\"150\"\n        >\n       </ext-numberfield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-numberfield.component';\n\nexport default class NumberFieldComponent {}\n```\n\nOr on its own, outside of a form:\n\n    Ext.create('Ext.field.Number', {\n        label: 'Age',\n        value: '26'\n    });\n\n## minValue, maxValue\n\nThe {@link #minValue} and {@link #maxValue} configurations are self-explanatory and\nsimply constrain the value\nFor example, to create a salary field that limits entry to between 25,000 and 50,000\nwe can do this:\n\n    @example\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'fieldset',\n                title: 'Are you rich yet?',\n                items: [\n                    {\n                        xtype: 'numberfield',\n                        label: 'Salary',\n                        value: 30000,\n                        minValue: 25000,\n                        maxValue: 50000\n                    }\n                ]\n            }\n        ]\n    });\n\nThis creates a field that starts with a value of $30,000 and will not go beneath $25,000\nor above $50,000.\n\nBecause number field inherits from {@link Ext.field.Text textfield} it gains all of the\nfunctionality that text fields provide, including getting and setting the value at runtime,\nvalidations and various events that are fired as the user interacts with the component.\nCheck out the {@link Ext.field.Text} docs to see the additional functionality available.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"decimals","text":"The maximum precision to display after the decimal separator.\n","type":"Number","value":"2","src":{"accessor":"496,157,0","name":"496,154,26","text":"496,155,12,62","type":"496,154,18","value":"496,157,0"}},{"$type":"property","accessor":true,"name":"decimalSeparator","since":"7.0","text":"Character(s) to allow as the decimal separator.\nDefaults to {@link Ext.util.Format#decimalSeparator decimalSeparator}.\n","type":"String","value":"null","src":{"accessor":"496,171,0","name":"496,166,26","since":"496,169,13","text":"496,167,12,119","type":"496,166,18","value":"496,171,0"}},{"$type":"property","locale":true,"name":"decimalsText","since":"6.5.1","text":"The error message that will be displayed if the field's value has incorrect number of\ndecimal places.\n","type":"String","value":"'The maximum decimal places is {0}'","src":{"locale":"496,208,8","name":"496,205,22","since":"496,209,15","text":"496,206,8,102","type":"496,205,14","value":"496,211,0"}},{"$type":"property","accessor":true,"name":"inputType","text":"For desktop environments, an input of `type=text` is used and a rich user experience\nis provided for numeric entry. For mobile environments, an input of `type=number` is\nused and basic validation is performed on keystroke and `{@link #cfg!minValue minValue}` and `{@link #cfg!maxValue maxValue}`\nclamping is only done on blur or `setValue` if the field is not focused.\n\nIf you specify `{@link #cfg!inputType inputType}` of `'text'`, the text input will be used on all devices\nat the expense of numeric input keyboard on non-iOS devices. Alternatively, you may\nspecify an `{@link #cfg!inputType inputType}` of `'tel'` which will bring up the phone number input\nkeyboard, which isn't as ideal as the numeric keyboard.\n","type":"String","value":"Ext.os.is.Desktop ? 'text' : 'number'","src":{"accessor":"494,24,0","name":"496,175,22","text":"496,176,8,626","type":"496,175,14","value":"496,186,0"}},{"$type":"property","accessor":true,"name":"maxValue","text":"The maximum value that this Number field can accept. Defaults to no maximum.\n","type":"Number","value":"null","src":{"accessor":"496,151,0","name":"496,148,26","text":"496,149,12,77","type":"496,148,18","value":"496,151,0"}},{"$type":"property","locale":true,"name":"maxValueText","since":"6.5.1","text":"The error message that will be displayed if the field's value is greater than maxValue.\n","type":"String","value":"'The maximum value for this field is {0}'","src":{"locale":"496,199,8","name":"496,197,22","since":"496,200,15","text":"496,198,8,88","type":"496,197,14","value":"496,202,0"}},{"$type":"property","accessor":true,"name":"minValue","text":"The minimum value that this Number field can accept. Defaults to no minimum.\n","type":"Number","value":"null","src":{"accessor":"496,145,0","name":"496,142,26","text":"496,143,12,77","type":"496,142,18","value":"496,145,0"}},{"$type":"property","locale":true,"name":"minValueText","since":"6.5.1","text":"The error message that will be displayed if the field's value is less than minValue\n","type":"String","value":"'The minimum value for this field is {0}'","src":{"locale":"496,191,8","name":"496,189,22","since":"496,192,15","text":"496,190,8,84","type":"496,189,14","value":"496,194,0"}},{"$type":"property","accessor":true,"name":"trim","text":"`false` to always show zeros when formatting the number\n","type":"Boolean","value":"true","src":{"accessor":"496,163,0","name":"496,160,27","text":"496,161,12,56","type":"496,160,18","value":"496,163,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"syncDecimalValidator","text":"Validate field against decimals and decimalSeparator\nIf decimals is 0, don't allow decimals else use decimalSeparator\n","src":{"access":"496,337,-1","name":"496,417,0","text":"496,414,12,118"}}]}],"src":{"alias":"496,133,0","alternateClassNames":"496,134,0","extends":"496,132,0","name":"496,131,0","requires":"496,137,0","text":"496,2,4,3945"},"group":"Form Fields","displayName":"Field Number"},{"$type":"class","alias":"widget.fieldpanel","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.form.Panel","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.form.Borders,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","mixins":"Ext.field.Dirty,Ext.field.Manager,Ext.form.Borders","name":"Ext.field.Panel","since":"6.5.0","text":"A `fieldpanel` is a convenient way to manage and load {@link Ext.field.Field fields}.\nThis class does not provide the `form` submit capabilities of\n{@link Ext.form.Panel formpanel} but is instead designed to be used where data will be\nsaved to a server in other ways (see below) or perhaps as a child of a `formpanel`.\n\nUsually a `fieldpanel` just contains a set of fields to display such as the following:\n\n```javascript\n@example({ framework: 'extjs' })\n     var panel = Ext.create({\n         xtype: 'fieldpanel',\n         fullscreen: true,\n\n         items: [{\n             xtype: 'textfield',\n             name: 'name',\n             label: 'Name'\n         }, {\n             xtype: 'emailfield',\n             name: 'email',\n             label: 'Email'\n         }, {\n             xtype: 'passwordfield',\n             name: 'password',\n             label: 'Password'\n         }]\n     });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtFieldPanel, ExtTextField, ExtEmailField, ExtPasswordField } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtFieldPanel width=\"600\" height=\"300\">\n                <ExtTextField\n                    name=\"name\"\n                    label=\"Name\"\n                    padding=\"10\"\n                >\n                </ExtTextField>\n                <ExtEmailField\n                    name=\"email\"\n                    label=\"Email\"\n                    padding=\"10\"\n                >\n                </ExtEmailField>\n                <ExtPasswordField\n                    name=\"password\"\n                    label=\"Password\"\n                    padding=\"10\"\n                >\n                </ExtPasswordField>\n            </ExtFieldPanel>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'fieldpanel-component',\n    styles: [``],\n    template: `\n        <ExtFieldPanel width=\"600\" height=\"300\">\n            <ExtTextField\n                [name]=\"'name'\"\n                [label]=\"'Name'\"\n                padding=\"10\"\n            >\n            </ExtTextField>\n            <ExtEmailField\n                 [name]=\"'email'\"\n                 [label]=\"'Email'\"\n                 padding=\"10\"\n            >\n            </ExtEmailField>\n            <ExtPasswordField\n                 [name]=\"'password'\"\n                 [label]=\"'Password'\"\n                 padding=\"10\"\n            >\n            </ExtPasswordField>\n        </ExtFieldPanel>\n    `\n})\nexport class FieldPanelComponent  {}\n```\n```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-fieldpanel fullscreen=\"true\">\n     <ext-textfield\n          name=\"name\"\n          label=\"Name\"\n      >\n      </ext-textfield>\n      <ext-emailfield\n          name=\"email\"\n          label=\"Email\"\n      >\n      </ext-emailfield>\n      <ext-passwordfield\n          name=\"password\"\n          label=\"Password\"\n      >\n      </ext-passwordfield>\n  </ext-fieldpanel>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-fieldpanel.component';\nimport '@sencha/ext-web-components/dist/ext-textfield.component';\nimport '@sencha/ext-web-components/dist/ext-emailfield.component';\nimport '@sencha/ext-web-components/dist/ext-passwordfield.component';\nexport default class PanelComponent {}\n```\n\nHere we just created a simple container which could be used as a registration form to\nsign up to your service. We added a plain {@link Ext.field.Text text field} for the\nuser's Name, an {@link Ext.field.Email email field} and finally a\n{@link Ext.field.Password password field}.\n\nIn each case we provided a {@link Ext.field.Field#name name} config on the field so\nthat we can identify it later and act on the whole group of fields.\n\n## Gathering Field Data\n\nOne simple way to get the data from a `fieldpanel` is {@link #getValues}:\n\n     var values = panel.getValues();\n\n     // values now looks like this:\n\n     {\n         name: 'Peter',\n         email: 'peter.venkman@gb.com',\n         password: '**********'\n     }\n\nOr if you have a {@link Ext.data.Model record}, you can use `{@link #method!fillRecord fillRecord}`:\n\n     panel.fillRecord(rec);\n\nThis method is equivalent to the classic toolkit `updateRecord` method, but that name\nis not used in the modern toolkit due to conflicts with the `{@link #cfg!record record}` config property.\n\n## Observing Fields\n\nTypical applications use a {@link Ext.app.ViewController controller} to manage events\nfrom containers like this:\n\n     var panel = Ext.create({\n         xtype: 'fieldpanel',\n         fullscreen: true,\n\n         controller: 'mycontroller',\n\n         items: [{\n             xtype: 'textfield',\n             name: 'name',\n             label: 'Name'\n         }, {\n             xtype: 'emailfield',\n             name: 'email',\n             label: 'Email'\n         }, {\n             xtype: 'passwordfield',\n             name: 'password',\n             label: 'Password'\n         }]\n     });\n\n     Ext.define('MyController', {\n         extend: 'Ext.app.ViewController',\n         alias: 'controller.mycontroller',\n\n         control: {\n             '> field': {\n                 change: 'onChange'\n             }\n         },\n\n         onChange: function (field, value) {\n             console.log('change', field.name, value);\n         }\n     });\n\nThe above code responds to a {@link Ext.field.Text#change change} event from any `field`\nthat is an immediate child of its view, the `fieldpanel`.\n\n## Saving Data\n\nWith a `fieldpanel` you can use the {@link Ext.data.Model#method!save save method} on a\nrecord to save data to the server.\n\n     var panel = Ext.create({\n         xtype: 'fieldpanel',\n         fullscreen: true,\n\n         controller: 'mycontroller',\n\n         buttons: {\n             save: 'onSave'\n         },\n\n         items: [{\n             xtype: 'textfield',\n             name: 'name',\n             label: 'Name'\n         }, {\n             xtype: 'emailfield',\n             name: 'email',\n             label: 'Email'\n         }, {\n             xtype: 'passwordfield',\n             name: 'password',\n             label: 'Password'\n         }]\n     });\n\n     Ext.define('MyController', {\n         extend: 'Ext.app.ViewController',\n         alias: 'controller.mycontroller',\n\n         onSave: function () {\n             var rec = new MyModel();\n\n             this.getView().fillRecord(rec);\n\n             rec.save({\n                 // options\n             });\n         }\n     });\n\nTo use `form` submit, use {@link Ext.form.Panel formpanel} instead.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"api","text":"If specified, load and submit (see `formpanel`) actions will be loaded and\nsubmitted via Ext Direct. Methods which have been imported by\n{@link Ext.direct.Manager} can be specified here to load and submit forms.\n\nAPI methods may also be specified as strings and will be parsed into the actual\nfunctions when the first submit or load has occurred.\n\nFor example, instead of the following:\n\n     api: {\n         load: App.ss.MyProfile.load,\n         submit: App.ss.MyProfile.submit\n     }\n\nYou can use strings:\n\n     api: {\n         load: 'App.ss.MyProfile.load',\n         submit: 'App.ss.MyProfile.submit'\n     }\n\nYou can also use a prefix instead of fully qualified function names:\n\n     api: {\n         prefix: 'App.ss.MyProfile',\n         load: 'load',\n         submit: 'submit'\n     }\n\nLoad actions can use {@link #paramOrder} or {@link #paramsAsHash} to customize\nhow the {@link #method!load load method} is invoked.\n\nFor `formpanel`, submit actions will always use a standard form submit. The\n`formHandler` configuration (see Ext.direct.RemotingProvider#action) must be\nset on the associated server-side method which has been imported by\n{@link Ext.direct.Manager}.\n","type":"Object","value":"null","src":{"accessor":"497,340,0","name":"497,302,26","text":"497,303,12,1170","type":"497,302,18","value":"497,340,0"}},{"$type":"property","accessor":true,"name":"baseParams","text":"Optional set of params to be sent.\n\nFor `formpanel` this only applies when `standardSubmit` is set to `false`.\n","type":"Object","value":"null","src":{"accessor":"497,348,0","name":"497,343,26","text":"497,344,12,111","type":"497,343,18","value":"497,348,0"}},{"$type":"property","inheritdoc":true,"name":"nameable","text":"Set to `true` for this component's `{@link #cfg!name name}` property to be tracked by its containing\n`{@link #cfg!nameHolder nameHolder}`.\nForms can be assigned names to be used in parent forms.\n","type":"Boolean","value":"true","src":{"inheritdoc":"497,267,8","name":"497,266,13","text":"275,292,8,97:497,268,8,56","type":"275,291,14","value":"497,270,0"}},{"$type":"property","inheritdoc":true,"name":"nameHolder","text":"When `true` child components are tracked by their `{@link #cfg!name name}` property and can be\nretrieved using the `{@link #method!lookupName lookupName}` method.\n","type":"Boolean","value":"true","src":{"inheritdoc":"497,283,8","name":"497,282,13","text":"280,20,8,118","type":"280,19,14","value":"497,285,0"}},{"$type":"property","accessor":true,"name":"paramOrder","text":"A list of params to be executed server side. Only used for the\n{@link #cfg!api load} config.\n\nSpecify the params in the order in which they must be executed on the\nserver-side as either (1) a String[], or (2) a String of params delimited by\neither whitespace, comma, or pipe.\n\nFor example, any of the following would be acceptable:\n\n    paramOrder: ['param1','param2','param3']\n    paramOrder: 'param1 param2 param3'\n    paramOrder: 'param1,param2,param3'\n    paramOrder: 'param1|param2|param'\n","type":"String/String[]","value":"null","src":{"accessor":"497,366,0","name":"497,351,35","text":"497,352,12,494","type":"497,351,18","value":"497,366,0"}},{"$type":"property","accessor":true,"name":"paramsAsHash","text":"If true, parameters will be sent as a single hash collection of named arguments.\nProviding a {@link #paramOrder} nullifies this configuration.\n\nOnly used for the {@link #cfg!api load} config.\n","type":"Boolean","value":"null","src":{"accessor":"497,375,0","name":"497,369,27","text":"497,370,12,192","type":"497,369,18","value":"497,375,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"scrollable","text":"Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or `null`) to disable scrolling - this is the default.\n- `{@link #cfg!x x}` or `horizontal` to enable horizontal scrolling only\n- `{@link #cfg!y y}` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a `{@link Ext.scroll.Scroller}` if\nif advanced configuration is needed.\n\nThe getter for this config returns the {@link Ext.scroll.Scroller Scroller}\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n","type":"Boolean/String/Object","value":"true","src":{"accessor":"410,422,12","inheritdoc":"497,261,8","name":"497,260,13","text":"410,406,12,685","type":"410,405,18","value":"497,263,0"}},{"$type":"property","inheritdoc":true,"name":"shareableName","text":"Set to `true` to allow this component's `{@link #cfg!name name}` to be shared by other items in the\nsame `{@link #cfg!nameHolder nameHolder}`. Such items will be returned in an array from `{@link #method!lookupName lookupName}`.\nForms can be assigned the same name as other forms in their parent form. This\nmeans that if a form is assigned a `{@link #cfg!name name}` it will be returned as an array from\n`{@link #method!lookupName lookupName}` in its parent form.\n","type":"Boolean","value":"true","src":{"inheritdoc":"497,274,8","name":"497,273,13","text":"275,299,8,160:497,275,8,190","type":"275,298,14","value":"497,279,0"}},{"$type":"property","accessor":true,"name":"timeout","text":"Timeout for server actions (in seconds).\n","type":"Number","value":"30","src":{"accessor":"497,381,0","name":"497,378,26","text":"497,379,12,41","type":"497,378,18","value":"497,381,0"}},{"$type":"property","accessor":true,"name":"url","text":"The default URL for server actions (`{@link #method!load load}` and `submit` in `formpanel`).\n","type":"String","value":"null","src":{"accessor":"497,387,0","name":"497,384,26","text":"497,385,12,73","type":"497,384,18","value":"497,387,0"}}]},{"$type":"events","items":[{"$type":"event","name":"exception","text":"Fires when either the Ajax HTTP request reports a failure OR the server returns a\n`success:false` response in the result payload.\n","items":[{"$type":"param","name":"this","text":"This container.\n","type":"Ext.field.Panel","src":{"name":"497,295,33","text":"497,295,38,16","type":"497,295,16"}},{"$type":"param","name":"result","text":"Either a failed `{@link Ext.data.Connection}` request object or a\nfailed (logical) server response payload.\n","type":"Object","src":{"name":"497,296,24","text":"497,296,31,58:497,297,8,42","type":"497,296,16"}}],"src":{"name":"497,292,15","text":"497,293,8,130"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getParams","items":[{"$type":"param","name":"params","src":{"name":"497,575,0"}}],"src":{"access":"497,573,8","name":"497,575,0"}},{"$type":"method","name":"load","text":"Performs an Ajax or Ext Direct call to load values for this form.\n","items":[{"$type":"param","name":"options","text":"The configuration when loading this form.\n\nThe following are the configurations when loading via Ajax only:\n","type":"Object","items":[{"$type":"property","name":"url","text":"The url for the action (defaults to the form's {@link #url}).\n","type":"String","src":{"name":"497,398,32","text":"497,399,8,63","type":"497,398,16"}},{"$type":"property","name":"method","text":"The form method to use (defaults to the form's {@link #method}, or GET if not\ndefined).\n","type":"String","src":{"name":"497,401,32","text":"497,402,8,89","type":"497,401,16"}},{"$type":"property","name":"headers","text":"Request headers to set for the action.\n","type":"Object","src":{"name":"497,405,32","text":"497,406,8,40","type":"497,405,16"}},{"$type":"property","name":"timeout","text":"The number is seconds the loading will timeout in.\n\nThe following are the configurations when loading via Ajax or Direct:\n","type":"Number","src":{"name":"497,408,32","text":"497,409,8,123","type":"497,408,16"}},{"$type":"property","name":"autoAbort","optional":true,"text":"`true` to abort any pending Ajax request prior to loading.\n","type":"Boolean","value":"false","src":{"name":"497,413,34","text":"497,414,8,60","type":"497,413,16","value":"497,413,44"}},{"$type":"property","name":"params","text":"The params to pass when submitting this form (defaults to {@link #baseParams}).\nParameters are encoded as standard HTTP parameters using {@link Ext#urlEncode}.\n","type":"String/Object","src":{"name":"497,416,39","text":"497,417,8,161","type":"497,416,16"}},{"$type":"property","name":"waitMsg","optional":true,"text":"If specified, the value which is passed to the loading {@link #masked mask}. See\n{@link #masked} for more information.\n","type":"String/Object","src":{"name":"497,420,40","text":"497,421,8,120","type":"497,420,16"}},{"$type":"property","name":"success","text":"The callback that will be invoked after a successful response. A response is\nsuccessful if a response is received from the server and is a JSON object where the\n`success` property is set to `true`, `{\"success\": true}`.\n\nThe function is passed the following parameters and can be used for loading via\nAjax or Direct:\n","type":"Function","items":[{"$type":"property","name":"form","text":"The {@link Ext.form.Panel} that requested the load.\n","type":"Ext.form.Panel","src":{"name":"497,432,48","text":"497,433,8,53","type":"497,432,16"}},{"$type":"property","name":"result","text":"The result object returned by the server as a result of the load request. If the\nloading was done via Ext Direct, will return the {@link Ext.direct.Event} instance,\notherwise will return an Object.\n","type":"Object/Ext.direct.Event","src":{"name":"497,435,57","text":"497,436,8,199","type":"497,435,16"}},{"$type":"property","name":"data","text":"The parsed data returned by the server.\n","type":"Object","src":{"name":"497,440,40","text":"497,441,8,41","type":"497,440,16"}}],"src":{"name":"497,424,34","text":"497,425,8,317","type":"497,424,16"}},{"$type":"property","name":"failure","text":"The callback that will be invoked after a failed transaction attempt.\n\nThe function is passed the following parameters and can be used for loading via\nAjax or Direct:\n","type":"Function","items":[{"$type":"property","name":"form","text":"The {@link Ext.form.Panel} that requested the load.\n","type":"Ext.form.Panel","src":{"name":"497,449,48","text":"497,450,8,53","type":"497,449,16"}},{"$type":"property","name":"result","text":"The failed response or result object returned by the server which performed the\noperation.\n","type":"Ext.form.Panel","src":{"name":"497,452,48","text":"497,453,8,92","type":"497,452,16"}}],"src":{"name":"497,443,34","text":"497,444,8,168","type":"497,443,16"}},{"$type":"property","name":"scope","text":"The scope in which to call the callback functions (The `this` reference for the\ncallback functions).\n","type":"Object","src":{"name":"497,456,32","text":"497,457,8,102","type":"497,456,16"}}],"src":{"name":"497,393,24","text":"497,394,8,109","type":"497,393,16"}},{"$type":"return","text":"The request object.\n","type":"Ext.data.Connection","src":{"text":"497,460,38,20","type":"497,460,17"}}],"src":{"name":"497,462,0","text":"497,391,8,67"}}]}],"src":{"alias":"497,248,0","extends":"497,247,0","mixins":"497,252,0:497,253,0:497,254,0","name":"497,246,0","since":"497,244,11","text":"497,2,4,6758"},"group":"Container","displayName":"Field Panel"},{"$type":"class","alias":"widget.passwordfield","alternateClassNames":"Ext.form.Password","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Password","requires":"Ext.field.trigger.Reveal","text":"The Password field creates a password input and is usually created inside a form.\nBecause it creates a password field, when the user enters text it will show up as stars.\nAside from that, the password field is just a normal text field. Here's an example of how\nto use it in a form:\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'fieldset',\n                title: 'Register',\n                items: [\n                    {\n                        xtype: 'emailfield',\n                        label: 'Email',\n                        name: 'email'\n                    },\n                    {\n                        xtype: 'passwordfield',\n                        label: 'Password',\n                        name: 'password'\n                    }\n                ]\n            }\n        ]\n    });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, PasswordField } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtPasswordField\n                        width={200}\n                        label=\"Password\"\n                        required\n                        revealable\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow=\"true\">\n                    <ExtPasswordField\n                        width=\"200\"\n                        label=\"Password\"\n                        required=\"true\"\n                        revealable=\"true\"\n                    >\n                    </ExtPasswordField>\n                </ExtFormPanel>\n            </ExtContainer>\n      `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-passwordfield\n            width=\"200\"\n            label=\"Password\"\n            required=\"true\"\n            revealable=\"true\"\n       >\n       </ext-passwordfield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-passwordfield.component';\n\nexport default class PasswordFieldComponent {}\n```\n\nOr on its own, outside of a form:\n\n    Ext.create('Ext.field.Password', {\n        label: 'Password',\n        value: 'existingPassword'\n    });\n\nBecause the password field inherits from {@link Ext.field.Text textfield} it gains all of\nthe functionality that text fields provide, including getting and setting the value at runtime,\nvalidations and various events that are fired as the user interacts with the component.\nCheck out the {@link Ext.field.Text} docs to see the additional functionality available.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"autoCapitalize","text":"True to set the field's DOM element auto-capitalize attribute to \"on\", false to\nset to \"off\".\n","type":"Boolean","value":"false","src":{"accessor":"498,126,0","inheritdoc":"498,124,12","name":"498,123,17","text":"507,304,12,94","type":"507,303,18","value":"498,126,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"inputType","text":"The type attribute for input fields -- e.g. text,\npassword, date, url, email, etc.\n","type":"String","value":"'password'","src":{"accessor":"494,24,0","inheritdoc":"498,146,8","name":"498,145,13","text":"494,21,45,50:494,22,12,33","type":"494,21,18","value":"498,148,0"}},{"$type":"property","accessor":true,"name":"revealable","text":"Enables the reveal toggle button that will show the password in clear text.\n","type":"Boolean","value":"false","src":{"accessor":"498,132,0","name":"498,129,27","text":"498,130,12,76","type":"498,129,18","value":"498,132,0"}},{"$type":"property","accessor":true,"name":"revealed","text":"A value of 'true' for this config will show the password from clear text\n","type":"Boolean","value":"false","src":{"accessor":"498,138,0","name":"498,135,27","text":"498,136,12,73","type":"498,135,18","value":"498,139,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"doRevealTap","items":[{"$type":"param","name":"me","src":{"name":"498,202,0"}},{"$type":"param","name":"e","src":{"name":"498,202,0"}}],"src":{"access":"498,200,8","name":"498,202,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'passwordfield'","src":{"inheritdoc":"498,152,8","name":"498,151,18","text":"18,529,8,532","value":"498,154,0"}}]}],"src":{"alias":"498,114,0","alternateClassNames":"498,115,0","extends":"498,113,0","name":"498,112,0","requires":"498,118,0","text":"498,2,4,3466"},"group":"Form Fields","displayName":"Field Password"},{"$type":"class","alias":"widget.pickerfield","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Select,Ext.field.Date,Ext.field.Time,Ext.ux.colorpick.Field","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Picker","requires":"Ext.field.trigger.Expand","text":"An abstract class for fields that have a single trigger which opens a \"picker\" popup\nabove the field. It provides a base implementation for toggling the picker's\nvisibility when the trigger is tapped.\n\nYou would not normally use this class directly, but instead use it as the parent\nclass for a specific picker field implementation.\n","items":[{"$type":"configs","items":[{"$type":"property","name":"alignTarget","text":"The element reference to which the {@link #cfg!picker floated picker} aligns\nand sizes to. By default, it sizes to the `bodyElement` which encapsulates the\ninput field and triggers.\n\nAn alternate value which may be useful if using `{@link #cfg!floated floated}` pickers on phone platforms\ncould be `el`, to align the picker to the field's encapsulating element.\n","type":"String","value":"'bodyElement'","src":{"name":"499,114,22","text":"499,115,8,341","type":"499,114,14","value":"499,122,0"}},{"$type":"property","accessor":true,"name":"autoComplete","optional":true,"text":"Autocomplete is disabled on Picker fields by default.\n","type":"Boolean","value":"false","src":{"accessor":"507,300,0","name":"499,132,24","text":"499,133,8,54","type":"499,132,14","value":"499,132,37"}},{"$type":"property","accessor":true,"name":"edgePicker","since":"6.5.0","text":"A configuration object, containing an {@link cfg#xtype} property which specifies\nthe widget to create if `{@link #cfg!picker}: 'edge'` (or if it's '`auto'` and the\napp is on a phone).\n\nReplaces `defaultPhonePicker`\n","type":"Object","value":"null","src":{"accessor":"499,59,0","name":"499,51,26","since":"499,57,19","text":"499,52,12,215","type":"499,51,18","value":"499,61,0"}},{"$type":"property","accessor":true,"name":"floatedPicker","since":"6.5.0","text":"A configuration object, containing an {@link cfg#xtype} property which specifies\nthe widget to create if `{@link #cfg!picker}: 'floated'` (or if it's '`auto'` and\nthe app is *not* on a phone).\n\nReplaces `defaultTabletPicker`\n","type":"Object","value":"null","src":{"accessor":"499,45,0","name":"499,37,26","since":"499,43,19","text":"499,38,12,225","type":"499,37,18","value":"499,47,0"}},{"$type":"property","accessor":true,"name":"floatedPickerAlign","optional":true,"text":"*Only valud when the {@link #cfg!floatedPicker} is used.\nThe {@link Ext.Component#method!showBy} alignment string to use when showing the\nfloated picker by the input field.\n","type":"String","value":"tl-bl?","src":{"accessor":"499,80,0","name":"499,75,27","text":"499,76,12,173","type":"499,75,18","value":"499,75,46"}},{"$type":"property","access":"private","accessor":true,"name":"focusTrap","value":"{\n    tabIndex: -1,\n    cls: 'x-hidden-clip'\n}","src":{"access":"499,96,12","accessor":"499,98,0","name":"499,98,0","value":"499,100,0"}},{"$type":"property","accessor":true,"name":"hideTrigger","text":"`true` to hide the expand {@link #triggers trigger}.\n","type":"Boolean","value":"false","src":{"accessor":"499,93,0","name":"499,90,27","text":"499,91,12,53","type":"499,90,18","value":"499,93,0"}},{"$type":"property","accessor":true,"name":"matchFieldWidth","optional":true,"text":"*Only valid when the `{@link #cfg!picker}: 'floated'` is used.\nWhether the {@link #cfg!floatedPicker}'s width should be explicitly set to match\nthe width of the input element.\n","type":"Boolean","value":"true","src":{"accessor":"499,72,0","name":"499,67,28","text":"499,68,12,176","type":"499,67,18","value":"499,67,44"}},{"$type":"property","accessor":true,"name":"picker","optional":true,"text":"\nA string representing the type of picker to use.  Can be one of the following values.\n\n- `'edge'` to use the {@link #edgePicker}, generally used on small formfactor devices.\n- `'floated'` to use the {@link #floatedPicker}, generally used on tablets or desktops.\n- `'auto'` to allow the framework to select the appropriate picker for the device.\n\nCan also be a config object for the picker.\n","type":"String/Object","value":"'auto'","src":{"accessor":"499,31,0","name":"499,20,34","text":"499,21,12,392","type":"499,20,18","value":"499,20,41"}},{"$type":"property","access":"private","accessor":true,"name":"pickerSlotAlign","text":"The alignment of text in the picker created by this Select\n","type":"String","value":"'center'","src":{"access":"499,85,12","accessor":"499,87,0","name":"499,83,26","text":"499,84,12,59","type":"499,83,18","value":"499,87,0"}}]},{"$type":"events","items":[{"$type":"event","name":"collapse","text":"Fires when the field's picker is collapsed.\n","items":[{"$type":"param","name":"field","text":"This field instance\n","type":"Ext.form.field.Picker","src":{"name":"499,148,39","text":"499,148,45,20","type":"499,148,16"}}],"src":{"name":"499,146,15","text":"499,147,8,44"}},{"$type":"event","name":"expand","text":"Fires when the field's picker is expanded.\n","items":[{"$type":"param","name":"field","text":"This field instance\n","type":"Ext.form.field.Picker","src":{"name":"499,142,39","text":"499,142,45,20","type":"499,142,16"}}],"src":{"name":"499,140,15","text":"499,141,8,43"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"collapseIf","text":"Runs on touchstart of doc to check to see if we should collapse the picker.\n","items":[{"$type":"param","name":"e","src":{"name":"499,492,0"}}],"src":{"access":"499,489,8","name":"499,492,0","text":"499,490,8,76"}},{"$type":"method","access":"private","name":"initialize","src":{"access":"499,152,8","name":"499,154,0"}},{"$type":"method","access":"private","name":"onEsc","items":[{"$type":"param","name":"e","src":{"name":"499,207,0"}}],"src":{"access":"499,205,8","name":"499,207,0"}},{"$type":"method","access":"private","name":"realignFloatedPicker","items":[{"$type":"param","name":"picker","src":{"name":"499,415,0"}}],"src":{"access":"499,413,8","name":"499,415,0"}},{"$type":"method","name":"setPickerLocation","template":true,"items":[{"$type":"param","name":"fromKeyboard","optional":true,"text":"Passed as `true` if the keyboard was used\nto open the picker. This usually means that picker location should be set.\n\nA function which may be implemented in subclasses which moves the focus\nto the value in the {@link #cfg!picker} which matches this field's value.\n\nFor example, if you were writing a time picker, this method would be where\nyou synced the picker's value with the field's value.\n","type":"Boolean","value":"false","src":{"name":"499,254,26","text":"499,254,46,42:499,255,8,352","type":"499,254,16","value":"499,254,39"}}],"src":{"name":"499,263,0","template":"499,252,8"}}]}],"src":{"alias":"499,11,0","extends":"499,10,0","name":"499,9,0","requires":"499,14,0","text":"499,2,4,333"},"displayName":"Field Picker"},{"$type":"class","alias":"widget.radio,widget.radiofield","alternateClassNames":"Ext.form.Radio","extended":"Ext.field.Checkbox,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Checkbox","mixed":"Ext.Mixin,Ext.field.BoxLabelable,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Radio","text":"The radio field is an enhanced version of the native browser radio controls and is a good\nway of allowing your user to choose one option out of a selection of several (for example,\nchoosing a favorite color):\n```javascript\n@example({ framework: 'extjs' })\nvar form = Ext.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [\n        {\n            xtype: 'radiofield',\n            name : 'color',\n            value: 'red',\n            label: 'Red',\n            checked: true\n        },\n        {\n            xtype: 'radiofield',\n            name : 'color',\n            value: 'green',\n            label: 'Green'\n        },\n        {\n            xtype: 'radiofield',\n            name : 'color',\n            value: 'blue',\n            label: 'Blue'\n        }\n    ]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtRadioField, ExtFieldSet } from '@sencha/ext-react';\nconst radioProps = {\n    name: 'radios'\n};\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow layout={{type: 'vbox', align: 'left'}}>\n                    <ExtRadioField {...radioProps} boxLabel=\"Checked\" value=\"checked\"\n                          checked/>\n                    <ExtRadioField {...radioProps} boxLabel=\"Unchecked\"\n                         value=\"unchecked\"/>\n                    <ExtRadioField {...radioProps} boxLabel=\"Disabled\"\n                         value=\"disabled\" disabled/>\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\"\n                  [layout]=\"{type: 'vbox', align: 'left'}\">\n                <ExtRadioField name=\"radios\" boxLabel=\"Checked\" value=\"checked\"\n                   checked=\"true\"></ExtRadioField>\n                <ExtRadioField name=\"radios\" boxLabel=\"Unchecked\"\n                  value=\"unchecked\"></ExtRadioField>\n                <ExtRadioField name=\"radios\" boxLabel=\"Disabled\"\n                       value=\"disabled\" disabled=\"true\"></ExtRadioField>\n            </ExtFormPanel>\n        </ExtContainer>\n   `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel\n        shadow=\"true\"\n        layout='{\"type\": \"vbox\", \"align\": \"left\"}'\n   >\n       <ext-radiofield\n          name=\"radios\"\n          boxLabel=\"Checked\"\n          value=\"checked\"\n          checked=\"true\"\n       >\n       </ext-radiofield>\n       <ext-radiofield\n           name=\"radios\"\n           boxLabel=\"Unchecked\"\n           value=\"unchecked\"\n       >\n       </ext-radiofield>\n       <ext-radiofield\n           name=\"radios\"\n           boxLabel=\"Disabled\"\n           value=\"disabled\"\n           disabled=\"true\"\n       >\n       </ext-radiofield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-radiofield.component';\n\nexport default class RadioFieldComponent {}\n```\n\nAbove we created a simple form which allows the user to pick a color from the options red,\ngreen and blue. Because we gave each of the fields above the same {@link #name}, the radio\nfield ensures that only one of them can be checked at a time. When we come to get the values\nout of the form again or submit it to the server, only 1 value will be sent for each group of\nradio fields with the same name:\n\n    form.getValues(); //looks like {color: 'red'}\n    form.submit(); //sends a single field back to the server (in this case color: red)\n","items":[{"$type":"methods","items":[{"$type":"method","name":"getGroupValue","text":"Returns the selected value if this radio is part of a group (other radio fields with the\nsame name, in the same FormPanel),\n","items":[{"$type":"return","type":"String","src":{"type":"500,177,17"}}],"src":{"name":"500,179,0","text":"500,175,8,124"}},{"$type":"method","name":"getSameGroupFields","text":"return all radio fields with same name in nameHolder\n","src":{"name":"500,199,0","text":"500,197,8,53"}},{"$type":"method","access":"private","name":"refreshGroupValues","text":"Loops through each of the fields this radiofield is linked to (has the same name) and\ncalls `onChange` on those fields so the appropriate event is fired.\n","items":[{"$type":"param","name":"trigger","src":{"name":"500,235,0"}}],"src":{"access":"500,233,8","name":"500,235,0","text":"500,231,8,154"}},{"$type":"method","name":"setGroupValue","text":"Set the matched radio field's status (that has the same value as the given string)\nto checked.\n","items":[{"$type":"param","name":"value","text":"The value of the radio field to check.\n","type":"String","src":{"name":"500,210,24","text":"500,210,30,39","type":"500,210,16"}},{"$type":"return","text":"The field that is checked.\n","type":"Ext.field.Radio","src":{"text":"500,211,34,27","type":"500,211,17"}}],"src":{"name":"500,213,0","text":"500,208,8,95"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"radiofield-ui","text":"Creates a visual theme for a Radio Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1186,136,20","text":"1186,137,4,109","type":"1186,136,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"radiofield","src":{"access":"1186,140,41","name":"1186,140,21","text":"1186,140,52,35:1186,141,4,61","type":"1186,140,12","value":"1186,140,28"}},{"$type":"param","name":"$checkbox-size","text":"Radio Field checkbox size\n","type":"number","src":{"name":"1186,143,20","text":"1186,144,4,27","type":"1186,143,12"}},{"$type":"param","name":"$checkbox-size-big","text":"Radio Field checkbox size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1186,146,20","text":"1186,147,4,83","type":"1186,146,12"}},{"$type":"param","name":"$checkbox-font-size","text":"Radio Field checkbox font size\n","type":"number","src":{"name":"1186,149,20","text":"1186,150,4,32","type":"1186,149,12"}},{"$type":"param","name":"$checkbox-font-size-big","text":"Radio checkbox font size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1186,152,20","text":"1186,153,4,82","type":"1186,152,12"}},{"$type":"param","name":"$checkbox-margin","text":"Radio checkbox margin\n","type":"number","src":{"name":"1186,155,20","text":"1186,156,4,23","type":"1186,155,12"}},{"$type":"param","name":"$checkbox-margin-big","text":"Radio checkbox margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1186,158,20","text":"1186,159,4,79","type":"1186,158,12"}},{"$type":"param","name":"$checkbox-icon","text":"Radio Field checkbox icon\n","type":"string/list","src":{"name":"1186,161,25","text":"1186,162,4,27","type":"1186,161,12"}},{"$type":"param","name":"$checked-checkbox-icon","text":"Radio Field checkbox icon when checked\n","type":"string/list","src":{"name":"1186,164,25","text":"1186,165,4,40","type":"1186,164,12"}},{"$type":"param","name":"$checkbox-color","text":"Radio Field checkbox color\n","type":"color","src":{"name":"1186,167,19","text":"1186,168,4,28","type":"1186,167,12"}},{"$type":"param","name":"$checked-checkbox-color","text":"Radio Field checkbox color when checked\n","type":"color","src":{"name":"1186,170,19","text":"1186,171,4,41","type":"1186,170,12"}},{"$type":"param","name":"$disabled-checkbox-color","text":"Radio Field checkbox color when disabled\n","type":"color","src":{"name":"1186,173,19","text":"1186,174,4,42","type":"1186,173,12"}},{"$type":"param","name":"$focused-checkbox-color","text":"Radio Field checkbox color when focused\n","type":"color","src":{"name":"1186,176,19","text":"1186,177,4,41","type":"1186,176,12"}},{"$type":"param","name":"$box-label-color","text":"Radio Field {@link #boxLabel} text color\n","type":"color","src":{"name":"1186,179,19","text":"1186,180,4,42","type":"1186,179,12"}},{"$type":"param","name":"$box-label-font-weight","text":"Radio Field {@link #boxLabel} font-weight\n","type":"string/number","src":{"name":"1186,182,27","text":"1186,183,4,43","type":"1186,182,12"}},{"$type":"param","name":"$box-label-font-size","text":"Radio Field {@link #boxLabel} font-size\n","type":"number","src":{"name":"1186,185,20","text":"1186,186,4,41","type":"1186,185,12"}},{"$type":"param","name":"$box-label-font-size-big","text":"Radio Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1186,188,20","text":"1186,189,4,97","type":"1186,188,12"}},{"$type":"param","name":"$box-label-line-height","text":"Radio Field {@link #boxLabel} line-height\n","type":"number","src":{"name":"1186,191,20","text":"1186,192,4,43","type":"1186,191,12"}},{"$type":"param","name":"$box-label-line-height-big","text":"Radio Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1186,194,20","text":"1186,195,4,99","type":"1186,194,12"}},{"$type":"param","name":"$box-label-font-family","text":"Radio Field {@link #boxLabel} font-family\n","type":"string","src":{"name":"1186,197,20","text":"1186,198,4,43","type":"1186,197,12"}},{"$type":"param","name":"$box-label-padding","text":"Radio Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1186,200,25","text":"1186,201,4,124","type":"1186,200,12"}},{"$type":"param","name":"$box-label-padding-big","text":"Radio Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1186,204,25","text":"1186,205,4,179","type":"1186,204,12"}}],"src":{"name":"1186,208,7","text":"1186,134,4,42"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$radiofield-box-label-color","text":"Radio Field {@link #boxLabel} text color\n","type":"color","value":"$field-label-color","src":{"dynamic":"1186,81,30","name":"1186,81,1","text":"1186,79,4,41","type":"1186,78,10","value":"1186,81,38"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-font-family","text":"Radio Field {@link #boxLabel} font-family\n","type":"string","value":"null","src":{"dynamic":"1186,117,36","name":"1186,117,1","text":"1186,115,4,42","type":"1186,114,10","value":"1186,117,44"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-font-size","text":"Radio Field {@link #boxLabel} font-size\n","type":"number","value":"null","src":{"dynamic":"1186,93,34","name":"1186,93,1","text":"1186,91,4,40","type":"1186,90,10","value":"1186,93,42"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-font-size-big","text":"Radio Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1186,99,38","name":"1186,99,1","text":"1186,97,4,96","type":"1186,96,10","value":"1186,99,46"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-font-weight","text":"Radio Field {@link #boxLabel} font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1186,87,36","name":"1186,87,1","text":"1186,85,4,42","type":"1186,84,10","value":"1186,87,44"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-line-height","text":"Radio Field {@link #boxLabel} line-height\n","type":"number","value":"null","src":{"dynamic":"1186,105,36","name":"1186,105,1","text":"1186,103,4,42","type":"1186,102,10","value":"1186,105,44"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-line-height-big","text":"Radio Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1186,111,40","name":"1186,111,1","text":"1186,109,4,98","type":"1186,108,10","value":"1186,111,48"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-padding","text":"Radio Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"null","src":{"dynamic":"1186,124,32","name":"1186,124,1","text":"1186,121,4,123","type":"1186,120,10","value":"1186,124,40"}},{"$type":"property","dynamic":true,"name":"$radiofield-box-label-padding-big","text":"Radio Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"null","src":{"dynamic":"1186,131,36","name":"1186,131,1","text":"1186,128,4,179","type":"1186,127,10","value":"1186,131,44"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-color","text":"Radio Field checkbox color\n","type":"color","value":"null","src":{"dynamic":"1186,57,29","name":"1186,57,1","text":"1186,55,4,27","type":"1186,54,10","value":"1186,57,37"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-font-size","text":"Radio Field checkbox font size\n","type":"number","value":"null","src":{"dynamic":"1186,21,33","name":"1186,21,1","text":"1186,19,4,31","type":"1186,18,10","value":"1186,21,41"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-font-size-big","text":"Radio checkbox font size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1186,27,37","name":"1186,27,1","text":"1186,25,4,81","type":"1186,24,10","value":"1186,27,45"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-icon","text":"Radio Field checkbox icon\n","type":"string/list","value":"$fa-var-circle","src":{"dynamic":"1186,45,28","name":"1186,45,1","text":"1186,43,4,26","type":"1186,42,10","value":"1186,45,36"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-margin","text":"Radio checkbox margin\n","type":"number","value":"null","src":{"dynamic":"1186,33,30","name":"1186,33,1","text":"1186,31,4,22","type":"1186,30,10","value":"1186,33,38"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-margin-big","text":"Radio checkbox margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1186,39,34","name":"1186,39,1","text":"1186,37,4,78","type":"1186,36,10","value":"1186,39,42"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-size","text":"Radio Field checkbox size\n","type":"number","value":"null","src":{"dynamic":"1186,9,28","name":"1186,9,1","text":"1186,7,4,26","type":"1186,6,10","value":"1186,9,36"}},{"$type":"property","dynamic":true,"name":"$radiofield-checkbox-size-big","text":"Radio Field checkbox size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1186,15,32","name":"1186,15,1","text":"1186,13,4,82","type":"1186,12,10","value":"1186,15,40"}},{"$type":"property","dynamic":true,"name":"$radiofield-checked-checkbox-color","text":"Radio Field checkbox color when checked\n","type":"color","value":"null","src":{"dynamic":"1186,63,37","name":"1186,63,1","text":"1186,61,4,40","type":"1186,60,10","value":"1186,63,45"}},{"$type":"property","dynamic":true,"name":"$radiofield-checked-checkbox-icon","text":"Radio Field checkbox icon when checked\n","type":"string/list","value":"$fa-var-dot-circle","src":{"dynamic":"1186,51,36","name":"1186,51,1","text":"1186,49,4,39","type":"1186,48,10","value":"1186,51,44"}},{"$type":"property","dynamic":true,"name":"$radiofield-disabled-checkbox-color","text":"Radio Field checkbox color when disabled\n","type":"color","value":"null","src":{"dynamic":"1186,69,38","name":"1186,69,1","text":"1186,67,4,41","type":"1186,66,10","value":"1186,69,46"}},{"$type":"property","dynamic":true,"name":"$radiofield-focused-checkbox-color","text":"Radio Field checkbox color when focused\n","type":"color","value":"null","src":{"dynamic":"1186,75,37","name":"1186,75,1","text":"1186,73,4,40","type":"1186,72,10","value":"1186,75,45"}}]}],"src":{"alias":"500,133,0:500,134,0","alternateClassNames":"500,136,0","extends":"500,131,0","name":"1186,2,11","text":"500,2,4,4139"},"group":"Form Fields","displayName":"Field Radio"},{"$type":"class","alias":"widget.radiogroup","extended":"Ext.field.FieldGroupContainer,Ext.field.Container,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.FieldGroupContainer","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.RadioGroup","requires":"Ext.field.Radio","since":"7.0","text":"This Field is useful for containing multiple {@link Ext.field.Radio radiofield}.\n\nIt plots items into wither horizontal / vertical depending on\n{@link Ext.field.FieldGroupContainer#vertical} config properties.\n\n## Example usage\n\n```javascript\n @example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        title: 'RadioGroup Example',\n        width: 300,\n        height: 125,\n        fullscreen: true,\n        items:[{\n            xtype: 'radiogroup',\n            label: 'Two Columns',\n            // Arrange radio field distributed vertically.\n            // Automatically latter items flow to next column if\n            // available height is less to display all the items in single column.\n            vertical: true,\n            height: 100,\n            items: [\n                { label: 'Item 1', name: 'rb', value: '1' },\n                { label: 'Item 2', name: 'rb', value: '2', checked: true},\n                { label: 'Item 3', name: 'rb', value: '3' },\n                { label: 'Item 4', name: 'rb', value: '4' },\n                { label: 'Item 5', name: 'rb', value: '5' },\n                { label: 'Item 6', name: 'rb', value: '6' }\n            ]\n        }]\n    });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtFormPanel, ExtRadioGroup, ExtRadioField } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtFormPanel\n                title=\"RadioGroup Example\"\n                width={600}\n                height={300}\n                fullscreen\n            >\n                <ExtRadioGroup\n                    label=\"Two Columns\"\n                    vertical={true}\n                    height={100}\n                >\n                    <ExtRadioField\n                        label=\"Item 1\"\n                        name=\"rb\"\n                        value={1}\n                    >\n                    </ExtRadioField>\n                    <ExtRadioField\n                        label=\"Item 2\"\n                        name=\"rb\"\n                        value={2}\n                        checked={true}\n                    >\n                    </ExtRadioField>\n                    <ExtRadioField\n                        label=\"Item 3\"\n                        name=\"rb\"\n                        value={3}\n                    >\n                    </ExtRadioField>\n                    <ExtRadioField\n                        label=\"Item 4\"\n                        name=\"rb\"\n                        value={4}\n                    >\n                    </ExtRadioField>\n                    <ExtRadioField\n                        label=\"Item 5\"\n                        name=\"rb\"\n                        value={5}\n                    >\n                    </ExtRadioField>\n                    <ExtRadioField\n                        label=\"Item 6\"\n                        name=\"rb\"\n                        value={6}\n                    >\n                    </ExtRadioField>\n                </ExtRadioGroup>\n            </ExtFormPanel>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'radiogroup-component',\n    styles: [``],\n    template: `\n      <ExtFormPanel\n           title=\"RadioGroup Example\"\n           [width]=\"600\"\n           [height]=\"400\"\n           [fullscreen]=\"true\"\n       >\n           <ExtRadioGroup\n               [label]=\"'Two Columns'\"\n               [vertical]=\"true\"\n               [height]=\"100\"\n           >\n               <ExtRadioField\n                   [label]=\"'Item 1'\"\n                   [name]=\"'rb'\"\n                   value=\"1\"\n               >\n               </ExtRadioField>\n               <ExtRadioField\n                   [label]=\"'Item 2'\"\n                   [name]=\"'rb'\"\n                   value=\"2\"\n                   [checked]=\"true\"\n               >\n               </ExtRadioField>\n               <ExtRadioField\n                   [label]=\"'Item 3'\"\n                   [name]=\"'rb'\"\n                   value=\"3\"\n               >\n               </ExtRadioField>\n               <ExtRadioField\n                   [label]=\"'Item 4'\"\n                   [name]=\"'rb'\"\n                   value=\"4\"\n               >\n               </ExtRadioField>\n               <ExtRadioField\n                   [label]=\"'Item 5'\"\n                   [name]=\"'rb'\"\n                   value=\"5\"\n               >\n               </ExtRadioField>\n               <ExtRadioField\n                   [label]=\"'Item 6'\"\n                   [name]=\"'rb'\"\n                   value=\"6\"\n               >\n               </ExtRadioField>\n           </ExtRadioGroup>\n       </ExtFormPanel>`\n})\nexport class RadioGroupComponents  {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-formpanel\n     title=\"RadioGroup Example\"\n     width=\"300\"\n     height=\"125\"\n     fullscreen=\"true\"\n >\n  <ext-radiogroup\n      label=\"Two Columns\"\n      vertical=\"true\"\n      height=\"100\"\n  >\n      <ext-radiofield\n          label=\"Item 1\"\n          name=\"rb\"\n          value=\"1\"\n      >\n      </ext-radiofield>\n      <ext-radiofield\n          label=\"Item 2\"\n          name=\"rb\"\n          value=\"2\"\n          checked=\"true\"\n      >\n      </ext-radiofield>\n      <ext-radiofield\n          label=\"Item 3\"\n          name=\"rb\"\n          value=\"3\"\n      >\n      </ext-radiofield>\n      <ext-radiofield\n          label=\"Item 4\"\n          name=\"rb\"\n          value=\"4\"\n      >\n      </ext-radiofield>\n      <ext-radiofield\n          label=\"Item 5\"\n          name=\"rb\"\n          value=\"5\"\n      >\n      </ext-radiofield>\n      <ext-radiofield\n          label=\"Item 6\"\n          name=\"rb\"\n          value=\"6\"\n      >\n      </ext-radiofield>\n  </ext-radiogroup>\n </ext-formpanel>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-radiogroup.component';\nimport '@sencha/ext-web-components/dist/ext-radiofield.component';\nexport default class RadioGroupComponent {}\n```\n\n## Binding Example\n\nIn the below example, \"Item 2\" will initially be checked using `myValue: '2'` from\nthe ViewModel.\n\n    @example\n    Ext.define('MyApp.main.view.MainModel', {\n        extend: 'Ext.app.ViewModel',\n        alias: 'viewmodel.main',\n        data: {\n            myValue: '2'\n        }\n    });\n\n    Ext.create('Ext.form.Panel', {\n        title: 'RadioGroup Example',\n        viewModel: {\n            type: 'main'\n        },\n        width: 300,\n        bodyPadding: 10,\n        renderTo: Ext.getBody(),\n        items:[{\n            xtype: 'radiogroup',\n            label: 'Two Columns',\n            vertical: true,\n            height: 100,\n            bind: '{myValue}',\n            items: [\n                { label: 'Item 1', name: 'rb', value: '1' },\n                { label: 'Item 2', name: 'rb', value: '2' },\n                { label: 'Item 3', name: 'rb', value: '3' },\n                { label: 'Item 4', name: 'rb', value: '4' },\n                { label: 'Item 5', name: 'rb', value: '5' },\n                { label: 'Item 6', name: 'rb', value: '6' }\n            ]\n        }]\n    });\n","items":[{"$type":"configs","items":[{"$type":"property","name":"simpleValue","text":"When set to `true` the `{@link #cfg!value value}` of this group of `radiofield` components will be\nmapped to the `{@link #cfg!value value}` of the checked item.\n\nThis field allows the `radiogroup` to participate in binding an entire group of\nradio buttons to a single value.\n","type":"Boolean","value":"true","src":{"name":"501,282,23","text":"501,283,8,237","type":"501,282,14","value":"501,289,0"}}]},{"$type":"methods","items":[{"$type":"method","name":"getChecked","text":"return first checked radio field from group\n","items":[{"$type":"param","name":"query","src":{"name":"501,298,0"}}],"src":{"name":"501,295,16","text":"501,296,8,44"}},{"$type":"method","chainable":true,"name":"setValue","text":"Sets the checked status of the radio group.\nIf {@link #simpleValue `{@link #cfg!simpleValue simpleValue}`} is `true`,\nvalue must be a single value, the child radiobutton matching the value\nwill be checked. If `{@link #cfg!simpleValue simpleValue}` is not used, value must be an object of name-value\npairs, each child radiobutton matching the name and value will be checked.\n","items":[{"$type":"param","name":"value","text":"Checked value, or the value of the sibling radio button\nto check.\n","type":"String/Object","src":{"name":"501,316,31","text":"501,316,37,56:501,317,8,10","type":"501,316,16"}},{"$type":"return","text":"this\n","type":"Ext.field.RadioGroup","src":{"text":"501,318,39,5","type":"501,318,17"}}],"src":{"chainable":"501,361,0","name":"501,320,0","text":"501,311,8,164:501,314,5,160"}}]},{"$type":"properties","items":[{"$type":"property","name":"defaultType","readonly":true,"text":"Default item type in radio group\n","type":"String","value":"'radiofield'","src":{"name":"501,275,27","readonly":"501,277,8","text":"501,276,8,33","type":"501,275,19","value":"501,279,0"}},{"$type":"property","name":"isRadioGroup","readonly":true,"text":"The value `true` to identify an object as an instance of this or derived class.\n","type":"Boolean","value":"true","src":{"name":"501,268,28","readonly":"501,270,8","text":"501,269,8,80","type":"501,268,19","value":"501,272,0"}}]}],"src":{"alias":"501,263,0","extends":"501,262,0","name":"501,261,0","requires":"501,265,0","since":"501,259,11","text":"501,2,4,7377"},"group":"Form Fields","displayName":"Field Radiogroup"},{"$type":"class","alias":"widget.searchfield","alternateClassNames":"Ext.form.Search","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Search","requires":"Ext.field.trigger.Search","text":"The Search field creates an HTML5 search input and is usually created inside a form.\nBecause it creates an HTML search input type, the visual styling of this input is\nslightly different to normal text input controls (the corners are rounded), though the virtual\nkeyboard displayed by the operating system is the standard keyboard control.\n\nAs with all other form fields, the search field gains a \"clear\" button that appears\nwhenever there is text entered into the form, and which removes that text when tapped.\n\n```javascript\n @example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [{\n         xtype: 'fieldset',\n         title: 'Search',\n         items: [{\n             xtype: 'searchfield',\n             label: 'Query',\n             name: 'query'\n         }]\n    }]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtSearchField } from '@sencha/ext-react'\n\nexport default class SearchFieldExample extends Component {\n    state = { };\n    search = (field, value) => {\n        this.setState({ query: value });\n    }\n\n    render() {\n        const { query } = this.state;\n\n        return (\n               <ExtContainer layout=\"center\">\n                   <ExtFormPanel shadow>\n                       <ExtSearchField\n                           value={query}\n                           width=\"300\"\n                           placeholder=\"Search...\"\n                           onChange={this.search}\n                       />\n                       { query && <div>You searched for \"{query}\"</div> }\n                   </ExtFormPanel>\n               </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\" >\n                <ExtSearchField\n                    [value]=\"query\"\n                    width=\"300\"\n                    placeholder=\"Search...\"\n                    (change)=\"search($event)\"\n                >\n                </ExtSearchField>\n                <div>You searched for \"{{query}}\"</div>\n            </ExtFormPanel>\n         </ExtContainer>\n    `\n})\nexport class AppComponent {\n    query:string = \"\";\n    search = (event) => {\n        console.log(\"In search : \" + event.newValue);\n        this.query = event.newValue;\n    }\n}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-searchfield\n            width=\"300\"\n            placeholder=\"Search...\"\n            onChange=\"searchfield.search\"\n            onready=\"searchfield.searchFieldReady()\"\n       >\n       </ext-searchfield>\n       <ext-container\n            onready=\"searchfield.searchMessageReady()\"\n       >\n       </ext-container>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-searchfield.component';\n\nexport default class SearchFieldComponent {\n\n   search = (field, value) => {\n      this.searchFieldView.setValue(value);\n      this.searchMessage.setHTML(`<div>You searched for ${value} </div>`);\n   }\n\n   searchFieldReady = (event) => {\n       this.searchFieldView = event.detail.cmp;\n   }\n\n   searchMessageRead = (event) => {\n       this.searchMessage = event.detail.cmp;\n   }\n}\n\nwindow.searchfield = new SearchFieldComponent();\n```\n\nOr on its own, outside of a form:\n\n    Ext.create('Ext.field.Search', {\n        label: 'Search:',\n        value: 'query'\n    });\n\nBecause search field inherits from {@link Ext.field.Text textfield} it gains all of the\nfunctionality that text fields provide, including getting and setting the value at runtime,\nvalidations and various events that are fired as the user interacts with the component.\nCheck out the {@link Ext.field.Text} docs to see the additional functionality available.\n","src":{"alias":"502,143,0","alternateClassNames":"502,144,0","extends":"502,142,0","name":"502,141,0","requires":"502,147,0","text":"502,2,4,4334"},"group":"Form Fields","displayName":"Field Search"},{"$type":"class","alias":"widget.selectfield","alternateClassNames":"Ext.form.Select","extended":"Ext.field.Picker,Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.calendar.form.CalendarPicker,Ext.calendar.form.TimeField,Ext.field.ComboBox","extends":"Ext.field.Picker","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Select","requires":"Ext.Panel,Ext.picker.Picker,Ext.picker.Tablet,Ext.data.Store,Ext.data.StoreManager,Ext.data.ChainedStore,Ext.dataview.BoundList,Ext.dataview.ChipView,Ext.field.ChipViewNavigationModel,Ext.picker.SelectPicker","text":"Simple Select field wrapper. Example usage:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [{\n        xtype: 'fieldset',\n        title: 'Select',\n        items: [{\n            xtype: 'selectfield',\n            label: 'Choose one',\n            options: [{\n                text: 'First Option',\n                value: 'first'\n            }, {\n                text: 'Second Option',\n                value: 'second'\n            }, {\n                text: 'Third Option',\n                value: 'third'\n            }]\n        }]\n    }]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtFormPanel, ExtSelectField, ExtContainer } from '@sencha/ext-react';\n\nExt.require('Ext.Toast');\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtSelectField\n                        label=\"Select\"\n                        width=\"200\"\n                        onChange={(field, newValue)\n                             => Ext.toast(`You selected ${newValue.get('value')}`)}\n                        options={[\n                            { text: 'Option 1', value: 1 },\n                            { text: 'Option 2', value: 2 },\n                            { text: 'Option 3', value: 3 }\n                        ]}\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow=\"true\" >\n                    <ExtSelectField\n                        label=\"Select\"\n                        width=\"200\"\n                        (change)=\"onChange($event)\"\n                        [options]=\"[\n                            { text: 'Option 1', value: 1 },\n                            { text: 'Option 2', value: 2 },\n                            { text: 'Option 3', value: 3 }\n                        ]\"\n                     ></ExtSelectField>\n                </ExtFormPanel>\n            </ExtContainer>\n        `\n})\nexport class AppComponent {\n    onChange = (event) => {\n        Ext.toast(`You selected ${event.newValue}`)\n    }\n }\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-selectfield\n            label=\"Select\"\n            width=\"200\"\n            onChange=\"selectfield.onchangeselectfield\"\n            options='[\n                { \"text\": \"Option 1\", \"value\": \"1\" },\n                { \"text\": \"Option 2\", \"value\": \"2\" },\n                { \"text\": \"Option 3\", \"value\": \"3\" }\n            ]'\n       >\n       </ext-selectfield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-selectfield.component';\n\nexport default class SelectFieldComponent {\n\n   onchangeselectfield = (event) => {\n        return Ext.toast(`You selected the item with value ${event.detail.newValue}`);\n   }\n}\n\nwindow.selectfield = new SelectFieldComponent();\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"autoFocus","text":"`true` to automatically focus the first result gathered by the data store in the\ndropdown list when it is opened. A false value would cause nothing in the list\nto be highlighted automatically, so the user would have to manually highlight an\nitem before pressing the enter or {@link #selectOnTab tab} key to select it\n(unless the value of ({@link #typeAhead}) were true), or use the mouse to select\na value.\n","type":"Boolean","value":"true","src":{"accessor":"503,293,0","name":"503,285,27","text":"503,286,12,407","type":"503,285,18","value":"503,293,0"}},{"$type":"property","accessor":true,"name":"autoFocusLast","text":"When `true`, the last selected record in the dropdown list will be re-selected\nupon {@link #autoFocus}. Set to `false` to always select the first record in\nthe drop-down list. For accessible applications it is recommended to set this\noption to `false`.\n","type":"Boolean","value":"true","src":{"accessor":"503,302,0","name":"503,296,27","text":"503,297,12,253","type":"503,296,18","value":"503,302,0"}},{"$type":"property","accessor":true,"name":"autoLoadOnValue","text":"This option controls whether to initially load the store when a value is set so\nthat the display value can be determined from the appropriate record.\n\nThe store will only be loaded in a limited set of circumstances:\n- The store is not currently loading.\n- The store does not have a pending {@link Ext.data.Store#autoLoad}.\n- The store has not been loaded before.\n","type":"Boolean","value":"false","src":{"accessor":"503,321,0","name":"503,312,27","text":"503,313,12,363","type":"503,312,18","value":"503,321,0"}},{"$type":"property","accessor":true,"name":"autoSelect","text":"`true` to auto select the first value in the {@link #store} or {@link #options}\nwhen they are changed. This settings attempts to avoid the {@link #value} being\nset to `null`, unless {@link #clearable clearable} is also `true` in which case\nonly other changes (such as store load) will trigger auto-selection.\n\nIf this value is `'initial'` then auto selection will only occur on the first\nopportunity (such as initial store load). This config will then be set to\n`false`.\n","type":"Boolean/'initial'","value":"false","src":{"accessor":"503,282,0","name":"503,272,37","text":"503,273,12,471","type":"503,272,18","value":"503,282,0"}},{"$type":"property","accessor":true,"name":"chipView","since":"6.7.0","text":"A configuration object which may be specified to configure the\n{@link Ext.dataview.ChipView} used to display \"tags\" representing selected items\nwhen {@link #cfg!multiSelect} is `true`.\n","value":"{\n    xtype: 'chipview',\n    tabIndex: null,\n    focusable: false,\n    itemsFocusable: false,\n    focusedCls: '',\n    navigationModel: 'fieldchipview',\n    selectable: {\n        mode: 'multi'\n    },\n    closable: true,\n    closeHandler: 'up.onChipCloseTap'\n}","src":{"accessor":"503,394,0","name":"503,394,0","since":"503,392,19","text":"503,389,12,185","value":"503,395,0"}},{"$type":"property","accessor":true,"name":"collapseOnSelect","optional":true,"text":"Has no effect if {@link #cfg!multiSelect} is `false`\n\nConfigure as true to automatically hide the picker after a selection is made.\n","type":"Boolean","value":"false","src":{"accessor":"503,386,0","name":"503,381,28","text":"503,382,12,132","type":"503,381,18","value":"503,381,45"}},{"$type":"property","accessor":true,"name":"delimiter","text":"The character(s) used to separate new values to be added when {@link #createNewOnEnter}\nor {@link #createNewOnBlur} are set.\n\nOnly meaningful when {@link #cfg!multiSelect} is `true`.\n","type":"String","value":"','","src":{"accessor":"503,367,0","name":"503,361,26","text":"503,362,12,183","type":"503,361,18","value":"503,367,0"}},{"$type":"property","accessor":true,"name":"displayField","text":"The underlying {@link Ext.data.Field#name data value name} to bind to this\nSelect control.  If configured as `null`, the {@link #cfg!valueField} is used.\n\nThis resolved value is the visibly rendered value of the available selection\noptions.\n","type":"String/Number","value":"'text'","src":{"accessor":"503,231,12","name":"503,225,33","text":"503,226,12,241","type":"503,225,18","value":"503,233,0"}},{"$type":"property","accessor":true,"name":"displayTpl","text":"The template to be used to display the selected record inside the text field.\n\nIf not specified, the {@link #cfg!displayField} is shown in the text field.\n","type":"String/String[]/Ext.XTemplate","value":"null","src":{"accessor":"503,222,0","name":"503,217,49","text":"503,218,12,155","type":"503,217,18","value":"503,222,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"edgePicker","text":"A configuration object, containing an {@link cfg#xtype} property which specifies\nthe widget to create if `{@link #cfg!picker}: 'edge'` (or if it's '`auto'` and the\napp is on a phone).\n\nReplaces `defaultPhonePicker`\n","type":"Object","value":"{\n    xtype: 'selectpicker',\n    cover: true\n}","src":{"accessor":"499,59,0","inheritdoc":"503,464,8","name":"503,463,13","text":"499,52,12,215","type":"499,51,18","value":"503,466,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"editable","text":"Configure as `false` to prevent the user from typing text directly into the\nfield; the field can only have its value set programmatically or via an action\ninvoked by a trigger.\n\nContrast with {@link #cfg!readOnly} which disables all mutation via the UI.\n","type":"Boolean","value":"false","src":{"accessor":"507,414,0","inheritdoc":"503,438,8","name":"503,437,13","text":"507,408,12,254","type":"507,407,18","value":"503,440,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"floatedPicker","text":"A configuration object, containing an {@link cfg#xtype} property which specifies\nthe widget to create if `{@link #cfg!picker}: 'floated'` (or if it's '`auto'` and\nthe app is *not* on a phone).\n\nReplaces `defaultTabletPicker`\n","type":"Object","value":"{\n    xtype: 'boundlist',\n    infinite: false,\n    // BoundListNavigationModel binds to input field\n    // Must only be enabled when list is visible\n    navigationModel: {\n        disabled: true\n    },\n    scrollToTopOnRefresh: false,\n    loadingHeight: 70,\n    maxHeight: 300,\n    floated: true,\n    axisLock: true,\n    hideAnimation: null\n}","src":{"accessor":"499,45,0","inheritdoc":"503,444,8","name":"503,443,13","text":"499,38,12,225","type":"499,37,18","value":"503,446,0"}},{"$type":"property","access":"private","accessor":true,"name":"forceSelection","since":"6.5.0","text":"By default the value must always be the {@link #cfg!valueField} of one of the\nrecords in the store. Configure as `false` to allow the value to be set to\narbitrary text, and have this component auto create an associated record with\nthe typed value as the {@link #cfg!valueField}.\n\nThis config is only supported for use in {@link Ext.field.ComboBox} but is defined\nhere (as private) because of its many entanglements with value processing.\n","type":"Boolean","value":"true","src":{"access":"503,332,12","accessor":"503,335,0","name":"503,324,27","since":"503,333,19","text":"503,325,12,438","type":"503,324,18","value":"503,335,0"}},{"$type":"property","accessor":true,"name":"hiddenName","text":"Specify a `{@link #cfg!hiddenName hiddenName}` if you're using the {@link Ext.form.Panel#standardSubmit}\noption. This name will be used to post the underlying value of the select to\nthe server.\n","type":"String","value":"null","src":{"accessor":"503,267,12","name":"503,263,26","text":"503,264,12,170","type":"503,263,18","value":"503,269,0"}},{"$type":"property","accessor":true,"name":"itemCls","text":"An additional CSS class to apply to items within the picker list.\n","type":"String","value":"null","src":{"accessor":"503,214,0","name":"503,211,26","text":"503,212,12,66","type":"503,211,18","value":"503,214,0"}},{"$type":"property","accessor":true,"name":"itemTpl","text":"An XTemplate definition string (Or an {@link Ext.XTemplate}) which specifies\nhow to display a list item from a record values object. This is automatically\ngenerated to display the {@link #cfg!displayField} if not specified.\n","type":"String/Ext.XTemplate","value":"false","src":{"accessor":"503,208,0","name":"503,203,40","text":"503,204,12,224","type":"503,203,18","value":"503,208,0"}},{"$type":"property","accessor":true,"name":"multiSelect","text":"Configure as `true` to allow selection of multiple items from the picker. This\nresults in each selected item being represented by a \"chip\" in the input area.\n\nWhen `true`, the field's {@link #cfg!value} will be an array containing the\n{@link #cfg!valueField} values of all selected records or `null` when there is\nno selection.\n","type":"Boolean","value":"null","src":{"accessor":"503,358,0","name":"503,350,27","text":"503,351,12,328","type":"503,350,18","value":"503,358,0"}},{"$type":"property","accessor":true,"name":"options","text":"An array of select options.\n\n    [\n        {text: 'First Option',  value: 'first'},\n        {text: 'Second Option', value: 'second'},\n        {text: 'Third Option',  value: 'third'}\n    ]\n\n__Note:__ Option object member names should correspond with defined\n{@link #valueField valueField} and {@link #displayField displayField} values.\n\nThis config is mutually exclusive with the {@link #cfg!store} config. Specifying\nthem both is unssupported and will produce undefined behaviour.\n","type":"Array","value":"null","src":{"accessor":"503,258,12","name":"503,244,25","text":"503,245,12,481","type":"503,244,18","value":"503,260,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"503,489,8","name":"503,488,13","text":"275,104,12,2499","type":"275,103,18","value":"503,491,0"}},{"$type":"property","accessor":true,"name":"recordCreator","since":"6.6.0","type":"Function/String","value":"null","items":[{"$type":"property","name":"value","text":"The typed value to be converted into a new record.\n","type":"String","src":{"name":"503,413,40","text":"503,413,46,51","type":"503,413,18"}},{"$type":"property","name":"model","text":"This field's {@link #cfg!store}'s\n{@link Ext.data.Store#cfg!model Model}.\n","type":"ObExt.data.Model","src":{"name":"503,414,50","text":"503,414,56,34:503,415,12,40","type":"503,414,18"}},{"$type":"property","name":"field","text":"This SelectField.\n\nA function, or a method name in this class, or in a ViewController to be used to\ncreate a record from a typed value when {@link #cfg!forceSelection} is `false`.\n\nThis gives app developers a chance to create a full featured record, or to veto the\nrecord creation by returning `null`.\n","type":"Ext.field.Select","src":{"name":"503,416,50","text":"503,416,56,18:503,417,12,284","type":"503,416,18"}}],"src":{"accessor":"503,425,0","name":"503,412,35","since":"503,423,19","type":"503,412,18","value":"503,425,0"}},{"$type":"property","accessor":true,"name":"recordCreatorScope","since":"6.6.0","text":"The scope (`this` reference) in which the configured {@link #cfg!recordCreator}\nwill be executed, unless the recordCreator is a ViewController method name.\n","type":"Object","value":"null","src":{"accessor":"503,433,0","name":"503,428,26","since":"503,431,19","text":"503,429,12,156","type":"503,428,18","value":"503,433,0"}},{"$type":"property","accessor":true,"name":"selection","text":"The selected model. `null` if no value exists.\n","type":"Ext.data.Model","value":"null","src":{"accessor":"503,306,12","name":"503,305,34","text":"503,307,12,47","type":"503,305,18","value":"503,309,0"}},{"$type":"property","accessor":true,"name":"selectOnTab","text":"Whether the Tab key should select the currently highlighted item.\n","type":"Boolean","value":"true","src":{"accessor":"503,347,0","name":"503,344,27","text":"503,345,12,66","type":"503,344,18","value":"503,347,0"}},{"$type":"property","accessor":true,"name":"store","text":"The store to provide selection options data. Either a Store instance,\nconfiguration object or store ID.\n","type":"Ext.data.Store/Object/String","value":"null","src":{"accessor":"503,239,12","name":"503,236,48","text":"503,237,12,104","type":"503,236,18","value":"503,241,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"503,481,8","name":"503,480,13","text":"275,231,12,406","type":"275,230,18","value":"503,483,0"}},{"$type":"property","access":"private","accessor":true,"name":"valueCollection","readonly":true,"since":"6.5.0","text":"A {@link Ext.util.Collection collection} instance, or configuration object used\nto create the collection of selected records.\n\nThis is used by the {@link #cfg!picker} as the core of its selection handling,\nand also as the collection of selected values for this widget.\n","type":"Object|Ext.util.Collection","value":"{\n    rootProperty: 'data'\n}","src":{"access":"503,186,12","accessor":"503,189,0","name":"503,178,46","readonly":"503,185,12","since":"503,187,19","text":"503,179,12,270","type":"503,178,18","value":"503,189,0"}},{"$type":"property","accessor":true,"name":"valueField","text":"The underlying {@link Ext.data.Field#name data value name} to bind to this\nSelect control. If configured as `null`, the {@link #cfg!displayField} is\nused.\n","type":"String/Number","value":"'value'","src":{"accessor":"503,198,12","name":"503,194,33","text":"503,195,12,155","type":"503,194,18","value":"503,200,0"}},{"$type":"property","accessor":true,"name":"valueNotFoundText","text":"The message to display if the value passed to `setValue` is not found in the store.\n","type":"String","value":"null","src":{"accessor":"503,341,0","name":"503,338,26","text":"503,339,12,84","type":"503,338,18","value":"503,341,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when selection has changed.\n\nThis includes keystrokes that edit the text (if editable).\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Select","src":{"name":"503,152,34","text":"503,152,39,11","type":"503,152,16"}},{"$type":"param","name":"newValue","text":"The new value\n","type":"Mixed","src":{"name":"503,153,23","text":"503,153,32,14","type":"503,153,16"}},{"$type":"param","name":"oldValue","text":"The original value\n","type":"Mixed","src":{"name":"503,154,23","text":"503,154,32,19","type":"503,154,16"}}],"src":{"name":"503,148,15","text":"503,149,8,94"}},{"$type":"event","name":"focus","text":"Fires when this field receives input focus. This happens both when you tap on the\nfield and when you focus on the field by using 'next' or 'tab' on a keyboard.\n\nPlease note that this event is not very reliable on Android. For example, if your\nSelect field is second in your form panel, you cannot use the Next button to get to\nthis select field. This functionality works as expected on iOS.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Select","src":{"name":"503,172,34","text":"503,172,39,11","type":"503,172,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"503,173,33","type":"503,173,16"}}],"src":{"name":"503,165,15","text":"503,166,8,391"}},{"$type":"event","name":"select","text":"Fires when an option from the drop down list has been selected.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Select","src":{"name":"503,160,34","type":"503,160,16"}},{"$type":"param","name":"newValue","text":"The corresponding record for the new value\n","type":"Ext.data.Model","src":{"name":"503,161,32","text":"503,161,41,43","type":"503,161,16"}}],"src":{"name":"503,158,15","text":"503,159,8,64"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"createEnteredRecord","text":"This is used by the field to create a new record if {@link #cfg!forceSelection}\nis `false`.\n","items":[{"$type":"param","name":"value","src":{"name":"503,1699,19"}},{"$type":"return","text":"The created record, if it can be created from the passed value.\n","type":"Ext.data.Model","src":{"text":"503,1700,37,64","type":"503,1700,21"}}],"src":{"access":"503,1701,12","name":"503,1703,0","text":"503,1697,12,92"}},{"$type":"method","name":"createSelectionRecord","since":"6.5.1","template":true,"text":"This method is called to create a temporary record when the value entered does not\nmatch a record in the `{@link #cfg!store store}` (when {@link #cfg!forceSelection} is `false`).\n\nThe `{@link #cfg!data data}` object passed contains the typed value in both the {@link #cfg!valueField}\nand the {@link #cfg!displayField}.\n\nThe record created and returned from this method will be the {@link #cfg!selection}\nvalue in this non-matching state.\n","items":[{"$type":"param","name":"data","text":"The data object used to create the new record.\n","src":{"name":"503,518,15","text":"503,518,20,47"}},{"$type":"return","text":"The new record.\n","type":"Ext.data.Model","src":{"text":"503,519,33,16","type":"503,519,17"}}],"src":{"name":"503,523,0","since":"503,521,15","template":"503,520,8","text":"503,509,8,402"}},{"$type":"method","access":"private","name":"filterPicked","text":"Filter function to implement {@link #cfg!filterPickList}. Filter out records\nwhich are in the valueCollection.\n","items":[{"$type":"param","name":"record","text":"The record to test for presence in the\n{@link #cfg!valueCollection}.\n","type":"Ext.data.Model","src":{"name":"503,1827,36","text":"503,1827,43,39:503,1828,12,30","type":"503,1827,20"}}],"src":{"access":"503,1675,-1","name":"503,1830,0","text":"503,1825,12,111"}},{"$type":"method","name":"findRecordByDisplay","text":"Finds the record by searching values in the {@link #displayField}.\n","items":[{"$type":"param","name":"value","text":"The value to match the field against.\n","type":"Object","src":{"name":"503,794,24","text":"503,794,30,38","type":"503,794,16"}},{"$type":"return","text":"The matched record or `false`.\n","type":"Ext.data.Model/false","src":{"text":"503,795,39,31","type":"503,795,17"}}],"src":{"name":"503,797,0","text":"503,793,8,67"}},{"$type":"method","name":"findRecordByValue","text":"Finds the record in the {@link #cfg!store}, or the {@link #cfg!valueCollection}\nwhich has the {@link #cfg!valueField} matching the passed value.\n\nThe {@link #cfg!valueCollection} is included because of the {@link #cfg!createNewOnEnter},\n{@link #cfg!createNewOnBlur}, and {@link #cfg!forceSelection} configs which allow\nfor insertion into the {@link #cfg!valueCollection} of newly created records which\nare not in the configured {@link #cfg!store}.\n\nAlso, a currently selected value may be filtered out of visibility in the\nconfigured {@link #cfg!store}.\n","items":[{"$type":"param","name":"value","text":"The value to match the {@link #valueField} against.\n","type":"String","src":{"name":"503,760,24","text":"503,760,30,52","type":"503,760,16"}},{"$type":"return","text":"The matched record or null.\n","type":"Ext.data.Model","src":{"text":"503,761,33,28","type":"503,761,17"}}],"src":{"name":"503,763,0","text":"503,749,8,555"}},{"$type":"method","access":"protected","name":"getRecordDisplayData","template":true,"text":"Gets data for each record to be used for constructing the display value with\nthe {@link #displayTpl}. This may be overridden to provide access to associated records.\n","items":[{"$type":"param","name":"record","text":"The record.\n","type":"Ext.data.Model","src":{"name":"503,1023,32","text":"503,1023,39,12","type":"503,1023,16"}},{"$type":"return","text":"The data to be passed for each record to the {@link #displayTpl}.\n","type":"Object","src":{"text":"503,1024,25,66","type":"503,1024,17"}}],"src":{"access":"503,1026,8","name":"503,1029,0","template":"503,1027,8","text":"503,1021,8,166"}},{"$type":"method","access":"private","name":"maybeCollapse","items":[{"$type":"param","name":"event","src":{"name":"503,559,0"}}],"src":{"access":"503,557,8","name":"503,559,0"}},{"$type":"method","access":"private","name":"onCollectionAdd","text":"Respond to selection. Update the selection.\n","items":[{"$type":"param","name":"valueCollection","src":{"name":"503,596,0"}},{"$type":"param","name":"adds","src":{"name":"503,596,0"}}],"src":{"access":"503,593,8","name":"503,596,0","text":"503,594,8,44"}},{"$type":"method","access":"private","name":"onCollectionEndUpdate","text":"Respond to the end of mutation of the value collection.\n","src":{"access":"503,608,8","name":"503,611,0","text":"503,609,8,56"}},{"$type":"method","access":"private","name":"onCollectionRemove","text":"Respond to deselection. Call the onItemDeselect template method\n","items":[{"$type":"param","name":"valueCollection","src":{"name":"503,573,0"}},{"$type":"param","name":"chunk","src":{"name":"503,573,0"}}],"src":{"access":"503,570,8","name":"503,573,0","text":"503,571,8,64"}},{"$type":"method","access":"private","name":"onStoreDataChanged","text":"Called when the internal {@link #store}'s data has changed.\n","src":{"access":"503,1528,8","name":"503,1531,0","text":"503,1529,8,60"}},{"$type":"method","access":"private","name":"onStoreLoad","text":"Whenever the store loads, we need to refresh the selection by pushing a value through\nthe setValue machinery. Upon initialization, there may be a cached initial value.\nOtherwise use the current value.\n","items":[{"$type":"param","name":"store","src":{"name":"503,1350,0"}},{"$type":"param","name":"records","src":{"name":"503,1350,0"}},{"$type":"param","name":"success","src":{"name":"503,1350,0"}}],"src":{"access":"503,1345,8","name":"503,1350,0","text":"503,1346,8,201"}},{"$type":"method","access":"private","name":"onStoreRecordUpdated","text":"Called when a internal {@link #store}'s record has been mutated.\nKeep the field UI synced if we are not multiselect.\n\nIf we *are* multiselect, the ChipView's store observes the valueCollection\nand will fire mutation events to keep the view synced.\n","items":[{"$type":"param","name":"store","src":{"name":"503,1554,0"}},{"$type":"param","name":"record","src":{"name":"503,1554,0"}}],"src":{"access":"503,1547,8","name":"503,1554,0","text":"503,1548,8,248"}},{"$type":"method","access":"private","name":"onStoreRefresh","text":"This method resopnds to store `refresh` events. The purpose is to respond to\nfiltering and evict from the {@link #cfg!valueCollection}, records which are\nfiltered out of the store. *Unless the filtering out is the result only\nof the {@link #cfg!primaryFilter} or {@link #cfg!filterPickList}*\n","items":[{"$type":"param","name":"store","text":"This field's primary store which has just been refreshed.\n","src":{"name":"503,1575,15","text":"503,1575,21,58"}}],"src":{"access":"503,1569,8","name":"503,1577,0","text":"503,1570,8,293"}},{"$type":"method","chainable":true,"name":"reset","text":"Resets the Select field to the value of the first record in the store.\n","items":[{"$type":"return","text":"this\n","type":"Ext.field.Select","src":{"text":"503,1638,35,5","type":"503,1638,17"}}],"src":{"chainable":"503,1639,8","name":"503,1641,0","text":"503,1637,8,71"}},{"$type":"method","access":"private","name":"setFieldDisplay","text":"Updates the fields input UI according to the current selection.\n\nIn the case of single selection, simply updates the input field's value.\n\nFor multiSelection, a more complex input UI is needed.\n","src":{"access":"503,1898,12","name":"503,1900,0","text":"503,1893,12,194"}},{"$type":"method","access":"private","name":"updatePickerStore","text":"Returns ths Store used to drive the BoundList.\n\nWhen the supplied store is `queryMode: 'local'`, or if `{@link #cfg!multiSelect multiSelect}` is `true`\nis used with filterPickList:true` this will be a ChainedStore sources from the\nconfigured store.\n","src":{"access":"503,1840,12","name":"503,1842,0","text":"503,1835,12,224"}},{"$type":"method","access":"private","fires":"select","name":"updateSelection","text":"Update the UI to reflect the new selection. The selection arrives as mutation notifications\nfrom the {@link #cfg!valueCollection} which is the {@link Ext.util.Collection} at the heart\nof the picker's {@link Ext.mixin.Selectable} persona.\n","items":[{"$type":"param","name":"selection","src":{"name":"503,909,0"}},{"$type":"param","name":"oldSelection","src":{"name":"503,909,0"}}],"src":{"access":"503,904,8","fires":"503,975,0","name":"503,909,0","text":"503,905,8,238"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'selectfield'","src":{"inheritdoc":"503,473,8","name":"503,472,18","text":"18,529,8,532","value":"503,475,0"}},{"$type":"property","name":"isSelectField","text":"`true` in this class to identify an object this type, or subclass thereof.\n","type":"Boolean","value":"true","src":{"name":"503,142,28","text":"503,143,8,75","type":"503,142,19","value":"503,145,0"}}]},{"$type":"vars","items":[{"$type":"property","name":"$selectfield-chipview-padding","text":"Padding value for the inline {@link Ext.dataview.ChipView} used to present\nmultiple selected values.\n","type":"number/list","value":"0 0 0 4px","src":{"name":"1187,10,1","text":"1187,7,4,101","type":"1187,6,10","value":"1187,10,32"}}]}],"src":{"alias":"503,124,0","alternateClassNames":"503,126,0","extends":"503,123,0","name":"1187,2,11","requires":"503,129,0:503,130,0:503,131,0:503,132,0:503,133,0:503,134,0:503,135,0:503,136,0:503,137,0:503,138,0","text":"503,2,4,3626"},"group":"Form Fields","displayName":"Field Select"},{"$type":"class","alias":"widget.singlesliderfield","extended":"Ext.field.Slider,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Toggle","extends":"Ext.field.Slider","mixed":"Ext.Mixin,Ext.field.BoxLabelable,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.SingleSlider","text":"The slider is a way to allow the user to select a value from a given numerical range.\nYou might use it for choosing\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"504,77,8","name":"504,76,13","text":"275,104,12,2499","type":"275,103,18","value":"504,79,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"504,11,8","name":"504,10,13","text":"275,231,12,406","type":"275,230,18","value":"504,13,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.slider.Slider#cfg-value","name":"value","text":"The value(s) of this slider's thumbs. If you pass\na number, it will assume you have just 1 thumb.\n","type":"Number/Number[]","value":"0","src":{"accessor":"504,66,8","inheritdoc":"504,65,8","name":"504,64,13","text":"662,134,41,50:662,135,12,48","type":"662,134,18","value":"662,138,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the value changes.\n","items":[{"$type":"param","name":"me","type":"Ext.field.Slider","src":{"name":"504,20,34","type":"504,20,16"}},{"$type":"param","name":"newValue","text":"The new value.\n","type":"Number","src":{"name":"504,21,24","text":"504,21,33,15","type":"504,21,16"}},{"$type":"param","name":"oldValue","text":"The old value.\n","type":"Number","src":{"name":"504,22,24","text":"504,22,33,15","type":"504,22,16"}}],"src":{"name":"504,18,15","text":"504,19,8,30"}},{"$type":"event","name":"drag","text":"Fires when the slider thumb starts a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"504,47,33","type":"504,47,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"504,48,34","text":"504,48,37,18","type":"504,48,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"504,49,33","text":"504,49,39,25","type":"504,49,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"504,50,32","type":"504,50,15"}}],"src":{"name":"504,45,14","text":"504,46,7,53"}},{"$type":"event","name":"dragchange","text":"Fires when the value changes via drag.\n","items":[{"$type":"param","name":"me","type":"Ext.field.Slider","src":{"name":"504,28,34","type":"504,28,16"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"504,29,35","text":"504,29,38,18","type":"504,29,16"}},{"$type":"param","name":"newValue","text":"The new value.\n","type":"Number","src":{"name":"504,30,24","text":"504,30,33,15","type":"504,30,16"}},{"$type":"param","name":"oldValue","text":"The old value.\n","type":"Number","src":{"name":"504,31,24","text":"504,31,33,15","type":"504,31,16"}}],"src":{"name":"504,26,15","text":"504,27,8,39"}},{"$type":"event","name":"dragend","text":"Fires when the slider thumb ends a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"504,56,33","type":"504,56,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"504,57,34","text":"504,57,37,18","type":"504,57,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"504,58,33","text":"504,58,39,25","type":"504,58,15"}},{"$type":"param","name":"value","text":"The end value.\n","type":"Array","src":{"name":"504,59,22","text":"504,59,28,15","type":"504,59,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"504,60,32","type":"504,60,15"}}],"src":{"name":"504,54,14","text":"504,55,7,51"}},{"$type":"event","name":"dragstart","text":"Fires when the slider thumb starts a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"504,37,33","type":"504,37,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"504,38,34","text":"504,38,37,18","type":"504,38,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"504,39,33","text":"504,39,39,25","type":"504,39,15"}},{"$type":"param","name":"value","text":"The start value.\n","type":"Array","src":{"name":"504,40,22","text":"504,40,28,17","type":"504,40,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"504,41,32","type":"504,41,15"}}],"src":{"name":"504,35,14","text":"504,36,7,53"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'value'","src":{"inheritdoc":"504,71,8","name":"504,70,18","text":"275,272,8,373","type":"275,271,19","value":"504,73,0"}}]}],"src":{"alias":"504,7,0","extends":"504,6,0","name":"504,5,0","text":"504,2,4,116"},"displayName":"Field Singleslider"},{"$type":"class","alias":"widget.sliderfield","alternateClassNames":"Ext.form.Slider","extended":"Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.SingleSlider","extends":"Ext.field.Field","mixed":"Ext.Mixin,Ext.field.BoxLabelable,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.mixin.ConfigProxy,Ext.field.BoxLabelable","name":"Ext.field.Slider","requires":"Ext.slider.Slider","text":"The slider is a way to allow the user to select a value from a given numerical range.\nYou might use it for choosing a percentage, combine two of them to get min and max values,\nor use three of them to specify the hex values for a color. Each slider contains a single\n'thumb' that can be dragged along the slider's length to change the value. Sliders are equally\nuseful inside {@link Ext.form.Panel forms} and standalone. Here's how to quickly create a slider\nin form, in this case enabling a user to choose a percentage:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [\n        {\n            xtype: 'sliderfield',\n            label: 'Percentage',\n            value: 50,\n            minValue: 0,\n            maxValue: 100\n        }\n    ]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtSliderField } from '@sencha/ext-react';\nexport default class SliderFieldExample extends Component {\n        state = {\n            singleValue: 20,\n            multipleValue: [10, 70]\n        };\n\n        onSingleChange = (field, value) => {\n            this.setState({ singleValue: value });\n        }\n\n        onMultipleChange = (field, value) => {\n            this.setState({ multipleValue: value });\n        }\n\n        render() {\n            const { singleValue, multipleValue } = this.state;\n\n            return (\n                <ExtContainer layout=\"center\">\n                    <ExtFormPanel shadow width=\"300\">\n                        <ExtSliderField\n                            onChange={this.onSingleChange}\n                            label=\"Single Thumb\"\n                            value={singleValue}\n                        />\n                        <div style={{marginBottom: '20px'}}>Value: {singleValue}</div>\n                        <ExtSliderField\n                            onChange={this.onMultipleChange}\n                            label=\"Multiple Thumbs\"\n                            values={multipleValue}\n                        />\n                        <div>Values: {multipleValue.join(', ')}</div>\n                    </ExtFormPanel>\n                </ExtContainer>\n            )\n        }\n    }\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer [layout]=\"'center'\">\n            <ExtFormPanel [shadow]=\"true\" [width]=\"400\" [height]=\"300\">\n                <ExtSliderField\n                    (change)=\"onSingleChange($event)\"\n                    label=\"Single Thumb\"\n                    [value]=\"singleValue\"\n                >\n                </ExtSliderField>\n                <ExtContainer [style]=\"{marginBottom: 20}\"\n                     [html]=\"'Value: '+singleValue\">\n                </ExtContainer>\n                <ExtSliderField\n                    (change)=\"onMultipleChange($event)\"\n                    label=\"Multiple Thumbs\"\n                    [value]=\"multipleValue\"\n                >\n                </ExtSliderField>\n                <ExtContainer\n                    [html]=\"'Values: '+multipleValue.join(', ')\">\n                </ExtContainer>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {\n    singleValue:number = 20;\n    multipleValue:number[] = [10, 70];\n\n    onSingleChange = (params) => {\n        this.singleValue = params.newValue;\n    }\n\n    onMultipleChange = (params) => {\n        this.multipleValue = params.newValue;\n    }\n}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel\n        shadow=\"true\"\n        width=\"300\"\n   >\n       <ext-sliderfield\n            onChange=\"sliderfield.onSingleChange\"\n            label=\"Single Thumb\"\n            value=\"20\"\n            onready=\"sliderfield.readySingleChangeSliderField\"\n       >\n       </ext-sliderfield>\n       <ext-container\n           style='{marginBottom: \"20px\"}'\n           onready=\"sliderfield.readySingleValueMessage\"\n       >\n       </ext-container>\n       <ext-sliderfield\n            onChange=\"sliderfield.onMultipleChange\"\n            label=\"Multiple Thumbs\"\n            value=\"[10,70]\"\n            onready=\"sliderfield.readyMultipleChangeSliderField\"\n       >\n       </ext-sliderfield>\n       <ext-container\n            onready=\"sliderfield.readyMultipleValueMessage\"\n       >\n       </ext-container>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-sliderfield.component';\n\nexport default class SliderFieldComponent {\n\n  constructor() {\n      this.singleValue = 20;\n      this.multipleValue = [10, 70];\n  }\n\n  onSingleChange = (event) => {\n      this.singleValueMessageView.setHTML(`Values: ${event.detail.newValue}`)\n  }\n\n  readySingleChangeSliderField = (event) => {\n      this.singleValueSliderFieldView = event.detail.cmp;\n  }\n\n  readyMultipleChangeSliderField = (event) => {\n      this.multipleValueSliderFieldView = event.detail.cmp;\n  }\n\n  onMultipleChange = (event) => {\n      this.multipleValueMessageView.setHTML(`Values: ${event.detail.newValue.join(',')}`)\n  }\n\n  readyMultipleValueMessage = (event) => {\n       this.multipleValueMessageView = event.detail.cmp;\n       this.multipleValueMessageView.setHtml(`Values: ${this.multipleValue}`)\n  }\n\n  readySingleValueMessage = (event) => {\n       this.singleValueMessageView = event.detail.cmp;\n       this.singleValueMessageView.setHtml(`Value: ${this.singleValue}`);\n  }\n}\n\n window.sliderfield = new SliderFieldComponent();\n```\n\nIn this case we set a starting value of 50%, and defined the min and max values to be 0 and\n100 respectively, giving us a percentage slider. Because this is such a common use case, the\ndefaults for {@link #minValue} and {@link #maxValue} are already set to 0 and 100 so in the\nexample above they could be removed.\n\nIt's often useful to render sliders outside the context of a form panel too. In this example\nwe create a slider that allows a user to choose the waist measurement of a pair of jeans.\nLet's say the online store we're making this for sells jeans with waist sizes from 24 inches\nto 60 inches in 2 inch increments - here's how we might achieve that:\n\n    @example\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'sliderfield',\n                label: 'Waist Measurement',\n                minValue: 24,\n                maxValue: 60,\n                increment: 2,\n                value: 32\n            }\n        ]\n    });\n\nNow that we've got our slider, we can ask it what value it currently has and listen\nto events that it fires. For example, if we wanted our app to show different images\nfor different sizes, we can listen to the {@link #change} event to be informed whenever\nthe slider is moved:\n\n    slider.on('change', function(field, newValue) {\n        if (newValue[0] > 40) {\n            imgComponent.setSrc('large.png');\n        } else {\n            imgComponent.setSrc('small.png');\n        }\n    }, this);\n\nHere we listened to the {@link #change} event on the slider and updated the background\nimage of an {@link Ext.Img image component} based on what size the user selected. Of\ncourse, you can use any logic inside your event listener.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"bodyAlign","text":"\nThe horizontal alignment the contents of this field's body element.\n","type":"'start'/'center'/'end'/'stretch'","value":"'stretch'","src":{"accessor":"489,96,0","inheritdoc":"505,355,8","name":"505,354,13","text":"489,93,12,69","type":"489,92,18","value":"505,357,0"}},{"$type":"property","inheritdoc":"Ext.slider.Slider#increment","name":"increment","text":"The increment by which to snap each thumb when its value\nchanges. Any thumb movement will be snapped to the nearest value that is a multiple\nof the increment (e.g. if increment is 10 and the user tries to move the thumb to 67,\nit will be snapped to 70 instead)\n","type":"Number","value":"1","src":{"inheritdoc":"505,335,16","name":"505,334,21","text":"662,125,36,57:662,126,12,204","type":"662,125,18","value":"662,131,0"}},{"$type":"property","accessor":true,"name":"liveUpdate","text":"`true` to fire change events while the slider is dragging. `false` will\nonly fire a change once the drag is complete.\n","type":"Boolean","value":"false","src":{"accessor":"505,302,0","name":"505,298,27","text":"505,299,12,118","type":"505,298,18","value":"505,302,0"}},{"$type":"property","inheritdoc":"Ext.slider.Slider#maxValue","name":"maxValue","text":"The highest value any thumb on this slider can be set to.\n","type":"Number","value":"100","src":{"inheritdoc":"505,347,16","name":"505,346,21","text":"662,156,35,58","type":"662,156,18","value":"662,159,0"}},{"$type":"property","inheritdoc":"Ext.slider.Slider#minValue","name":"minValue","text":"The lowest value any thumb on this slider can be set to.\n","type":"Number","value":"0","src":{"inheritdoc":"505,341,16","name":"505,340,21","text":"662,150,35,57","type":"662,150,18","value":"662,153,0"}},{"$type":"property","accessor":true,"name":"readOnly","text":"Will make this field read only, meaning it cannot be changed with used interaction.\n","value":"false","src":{"accessor":"505,313,12","name":"505,311,17","text":"505,312,12,84","value":"505,315,0"}},{"$type":"property","access":"private","accessor":true,"name":"slider","value":"{\n    xtype: 'slider',\n    inheritUi: true\n}","src":{"access":"505,290,12","accessor":"505,292,0","name":"505,292,0","value":"505,292,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"tabIndex","text":"DOM tabIndex attribute for this component's\n{@link #focusEl}.\n","type":"Number","value":"-1","src":{"accessor":"505,308,0","inheritdoc":"505,306,12","name":"505,305,17","text":"410,311,12,62","type":"410,310,18","value":"505,308,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    values: 1,\n    value: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"505,367,8","name":"505,366,13","text":"275,231,12,406","type":"275,230,18","value":"505,369,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.slider.Slider#cfg-value","name":"value","text":"The value(s) of this slider's thumbs. If you pass\na number, it will assume you have just 1 thumb.\n","type":"Number/Number[]","value":"0","src":{"accessor":"505,320,12","inheritdoc":"505,319,12","name":"505,318,17","text":"662,134,41,50:662,135,12,48","type":"662,134,18","value":"505,322,0"}},{"$type":"property","inheritdoc":"Ext.slider.Slider#cfg-values","name":"values","text":"Alias to {@link #value}\n","type":"Number/Number[]","src":{"inheritdoc":"505,376,8","name":"505,375,13","text":"662,196,38,24","type":"662,196,14"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when the value changes.\n","items":[{"$type":"param","name":"me","type":"Ext.field.Slider","src":{"name":"505,244,34","type":"505,244,16"}},{"$type":"param","name":"newValue","text":"The new value.\n","type":"Number[]","src":{"name":"505,245,26","text":"505,245,35,15","type":"505,245,16"}},{"$type":"param","name":"oldValue","text":"The old value.\n","type":"Number[]","src":{"name":"505,246,26","text":"505,246,35,15","type":"505,246,16"}}],"src":{"name":"505,242,15","text":"505,243,8,30"}},{"$type":"event","name":"drag","text":"Fires when the slider thumb starts a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"505,272,33","type":"505,272,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"505,273,34","text":"505,273,37,18","type":"505,273,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"505,274,33","text":"505,274,39,25","type":"505,274,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"505,275,32","type":"505,275,15"}}],"src":{"name":"505,270,14","text":"505,271,7,53"}},{"$type":"event","name":"dragchange","text":"Fires when a thumb value changes via drag.\n","items":[{"$type":"param","name":"me","type":"Ext.field.Slider","src":{"name":"505,252,34","type":"505,252,16"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"505,253,35","text":"505,253,38,18","type":"505,253,16"}},{"$type":"param","name":"thumb","type":"Ext.slider.Thumb","src":{"name":"505,254,34","type":"505,254,16"}},{"$type":"param","name":"newValue","text":"The new value of this thumb.\n","type":"Number[]","src":{"name":"505,255,26","text":"505,255,35,29","type":"505,255,16"}},{"$type":"param","name":"oldValue","text":"The old value of this thumb.\n","type":"Number[]","src":{"name":"505,256,26","text":"505,256,35,29","type":"505,256,16"}}],"src":{"name":"505,250,15","text":"505,251,8,43"}},{"$type":"event","name":"dragend","text":"Fires when the slider thumb ends a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"505,281,33","type":"505,281,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"505,282,34","text":"505,282,37,18","type":"505,282,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"505,283,33","text":"505,283,39,25","type":"505,283,15"}},{"$type":"param","name":"value","text":"The end value.\n","type":"Array","src":{"name":"505,284,22","text":"505,284,28,15","type":"505,284,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"505,285,32","type":"505,285,15"}}],"src":{"name":"505,279,14","text":"505,280,7,51"}},{"$type":"event","name":"dragstart","text":"Fires when the slider thumb starts a drag operation.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Slider","src":{"name":"505,262,33","type":"505,262,15"}},{"$type":"param","name":"sl","text":"Slider Component.\n","type":"Ext.slider.Slider","src":{"name":"505,263,34","text":"505,263,37,18","type":"505,263,15"}},{"$type":"param","name":"thumb","text":"The thumb being dragged.\n","type":"Ext.slider.Thumb","src":{"name":"505,264,33","text":"505,264,39,25","type":"505,264,15"}},{"$type":"param","name":"value","text":"The start value.\n","type":"Array","src":{"name":"505,265,22","text":"505,265,28,17","type":"505,265,15"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"505,266,32","type":"505,266,15"}}],"src":{"name":"505,260,14","text":"505,261,7,53"}}]},{"$type":"methods","items":[{"$type":"method","name":"getValues","text":"Convenience method. Calls {@link #getValue}\n","items":[{"$type":"return","type":"Object","src":{"type":"505,504,17"}}],"src":{"name":"505,506,0","text":"505,503,8,44"}},{"$type":"method","access":"private","name":"initialize","src":{"access":"505,391,8","name":"505,393,0"}},{"$type":"method","name":"setValues","text":"Convenience method. Calls {@link #setValue}.\n","items":[{"$type":"param","name":"value","type":"Object","src":{"name":"505,495,24","type":"505,495,16"}}],"src":{"name":"505,497,0","text":"505,494,8,45"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'sliderfield'","src":{"inheritdoc":"505,327,8","name":"505,326,18","text":"18,529,8,532","value":"505,329,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'value'","src":{"inheritdoc":"505,361,8","name":"505,360,18","text":"275,272,8,373","type":"275,271,19","value":"505,363,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"sliderfield-ui","text":"Creates a visual theme for a Slider Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1188,88,20","text":"1188,89,4,109","type":"1188,88,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"sliderfield","src":{"access":"1188,92,42","name":"1188,92,21","text":"1188,92,53,35:1188,93,4,61","type":"1188,92,12","value":"1188,92,28"}},{"$type":"param","name":"$padding","text":"Slider Field padding\n","type":"number/list","src":{"name":"1188,95,25","text":"1188,96,4,22","type":"1188,95,12"}},{"$type":"param","name":"$padding-big","text":"Slider Field padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1188,98,25","text":"1188,99,4,78","type":"1188,98,12"}},{"$type":"param","name":"$box-label-color","text":"Slider Field {@link #boxLabel} text color\n","type":"color","src":{"name":"1188,101,19","text":"1188,102,4,43","type":"1188,101,12"}},{"$type":"param","name":"$box-label-font-weight","text":"Slider Field {@link #boxLabel} font-weight\n","type":"string/number","src":{"name":"1188,104,27","text":"1188,105,4,44","type":"1188,104,12"}},{"$type":"param","name":"$box-label-font-size","text":"Slider Field {@link #boxLabel} font-size\n","type":"number","src":{"name":"1188,107,20","text":"1188,108,4,42","type":"1188,107,12"}},{"$type":"param","name":"$box-label-font-size-big","text":"Slider Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1188,110,20","text":"1188,111,4,98","type":"1188,110,12"}},{"$type":"param","name":"$box-label-line-height","text":"Slider Field {@link #boxLabel} line-height\n","type":"number","src":{"name":"1188,113,20","text":"1188,114,4,44","type":"1188,113,12"}},{"$type":"param","name":"$box-label-line-height-big","text":"Slider Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1188,116,20","text":"1188,117,4,100","type":"1188,116,12"}},{"$type":"param","name":"$box-label-font-family","text":"Slider Field {@link #boxLabel} font-family\n","type":"string","src":{"name":"1188,119,20","text":"1188,120,4,44","type":"1188,119,12"}},{"$type":"param","name":"$box-label-padding","text":"Slider Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1188,122,25","text":"1188,123,4,125","type":"1188,122,12"}},{"$type":"param","name":"$box-label-padding-big","text":"Slider Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1188,126,25","text":"1188,127,4,181","type":"1188,126,12"}},{"$type":"param","name":"$body-width","text":"Slider Field body width\n","type":"number","src":{"name":"1188,130,20","text":"1188,131,4,25","type":"1188,130,12"}},{"$type":"param","name":"$body-width-big","text":"Slider Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1188,133,20","text":"1188,134,4,80","type":"1188,133,12"}}],"src":{"name":"1188,136,7","text":"1188,86,4,43"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$sliderfield-body-width","text":"Slider Field body width\n","type":"number","value":"100px","src":{"dynamic":"1188,77,26","name":"1188,77,1","text":"1188,75,4,24","type":"1188,74,10","value":"1188,77,34"}},{"$type":"property","dynamic":true,"name":"$sliderfield-body-width-big","text":"Slider Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"150px","src":{"dynamic":"1188,83,30","name":"1188,83,1","text":"1188,81,4,80","type":"1188,80,10","value":"1188,83,38"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-color","text":"Slider Field {@link #boxLabel} text color\n","type":"color","value":"$field-box-label-color","src":{"dynamic":"1188,21,31","name":"1188,21,1","text":"1188,19,4,42","type":"1188,18,10","value":"1188,21,39"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-font-family","text":"Slider Field {@link #boxLabel} font-family\n","type":"string","value":"$field-box-label-font-family","src":{"dynamic":"1188,57,37","name":"1188,57,1","text":"1188,55,4,43","type":"1188,54,10","value":"1188,57,45"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-font-size","text":"Slider Field {@link #boxLabel} font-size\n","type":"number","value":"$field-box-label-font-size","src":{"dynamic":"1188,33,35","name":"1188,33,1","text":"1188,31,4,41","type":"1188,30,10","value":"1188,33,43"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-font-size-big","text":"Slider Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$field-box-label-font-size-big","src":{"dynamic":"1188,39,39","name":"1188,39,1","text":"1188,37,4,97","type":"1188,36,10","value":"1188,39,47"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-font-weight","text":"Slider Field {@link #boxLabel} font-weight\n","type":"string/number","value":"$field-box-label-font-weight","src":{"dynamic":"1188,27,37","name":"1188,27,1","text":"1188,25,4,43","type":"1188,24,10","value":"1188,27,45"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-line-height","text":"Slider Field {@link #boxLabel} line-height\n","type":"number","value":"$field-box-label-line-height","src":{"dynamic":"1188,45,37","name":"1188,45,1","text":"1188,43,4,43","type":"1188,42,10","value":"1188,45,45"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-line-height-big","text":"Slider Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$field-box-label-line-height-big","src":{"dynamic":"1188,51,41","name":"1188,51,1","text":"1188,49,4,99","type":"1188,48,10","value":"1188,51,49"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-padding","text":"Slider Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"top($field-box-label-padding) right($field-box-label-padding) bottom($field-box-label-padding) 6px","src":{"dynamic":"1188,64,33","name":"1188,64,1","text":"1188,61,4,124","type":"1188,60,10","value":"1188,64,41"}},{"$type":"property","dynamic":true,"name":"$sliderfield-box-label-padding-big","text":"Slider Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"top($field-box-label-padding-big) right($field-box-label-padding-big) bottom($field-box-label-padding-big) 8px","src":{"dynamic":"1188,71,37","name":"1188,71,1","text":"1188,68,4,180","type":"1188,67,10","value":"1188,71,45"}},{"$type":"property","dynamic":true,"name":"$sliderfield-padding","text":"Slider Field padding\n","type":"number/list","value":"5px 0 4px","src":{"dynamic":"1188,9,23","name":"1188,9,1","text":"1188,7,4,21","type":"1188,6,10","value":"1188,9,31"}},{"$type":"property","dynamic":true,"name":"$sliderfield-padding-big","text":"Slider Field padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"2px 0","src":{"dynamic":"1188,15,27","name":"1188,15,1","text":"1188,13,4,77","type":"1188,12,10","value":"1188,15,35"}}]}],"src":{"alias":"505,232,0","alternateClassNames":"505,234,0","extends":"505,231,0","mixins":"505,237,0:505,238,0","name":"1188,2,11","requires":"505,233,0","text":"505,2,4,7697"},"group":"Form Fields","displayName":"Field Slider"},{"$type":"class","alias":"widget.spinnerfield","alternateClassNames":"Ext.form.Spinner","extended":"Ext.field.Number,Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Number","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Spinner","requires":"Ext.field.trigger.SpinDown,Ext.field.trigger.SpinUp","text":"Wraps a Ext.form.Number field to provide a number input field with up/down spinner button and\noptional step value for each spin up/down increment/decrement.\n\nExample usage:\n```javascript\n @example({ framework: 'extjs' })\n    var spinner = Ext.create('Ext.field.Spinner', {\n        label: 'Spinner Field',\n        minValue: 0,\n        maxValue: 100,\n        stepValue: 2,\n        cycle: true\n    });\n    Ext.Viewport.add({ xtype: 'container', items: [spinner] });\n```\n```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtContainer, ExtSpinnerField, ExtFormPanel } from '@sencha/ext-react';\n export default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtSpinnerField\n                        label=\"Spinner\"\n                        width=\"150\"\n                        minValue={0}\n                        maxValue={10}\n                        stepValue={1}\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\" >\n                <ExtSpinnerField\n                    label=\"Spinner\"\n                    width=\"150\"\n                    minValue=\"0\"\n                    maxValue=\"10\"\n                    stepValue=\"1\"\n                >\n                </ExtSpinnerField>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-spinnerfield\n           label=\"Spinner\"\n           width=\"150\"\n           minValue=\"1\"\n           maxValue=\"10\"\n           stepValue=\"1\"\n       >\n       </ext-spinnerfield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-spinnerfield.component';\n\nexport default class SpinnerFieldComponent {}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"accelerateOnTapHold","text":"`true` if autorepeating should start slowly and accelerate.\n","type":"Boolean","value":"true","src":{"accessor":"506,143,0","name":"506,140,27","text":"506,141,12,60","type":"506,140,18","value":"506,143,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"clearable","text":"`true` to show a clear trigger in this field when it has a non-empty value\n","type":"Boolean","value":"false","src":{"accessor":"506,157,0","inheritdoc":"506,155,12","name":"506,154,17","text":"507,271,12,75","type":"507,270,18","value":"506,157,0"}},{"$type":"property","accessor":true,"name":"cycle","text":"When set to `true`, it will loop the values of a minimum or maximum is\nreached. If the maximum value is reached, the value will be set to the\nminimum.\n","type":"Boolean","value":"false","src":{"accessor":"506,151,0","name":"506,146,27","text":"506,147,12,151","type":"506,146,18","value":"506,151,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"decimals","text":"The maximum precision to display after the decimal separator.\n","type":"Number","value":"0","src":{"accessor":"496,157,0","inheritdoc":"506,189,8","name":"506,188,13","text":"496,155,12,62","type":"496,154,18","value":"506,191,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"This concern should be handled by the theme.\n","deprecatedVersion":"6.2.0","name":"groupButtons","text":"`true` if you want to group the buttons to the right of the fields. `false` if\nyou want the buttons to be at either side of the field.\n","type":"Boolean","value":"true","src":{"accessor":"506,165,0","deprecatedMessage":"506,163,12","deprecatedVersion":"506,163,12","name":"506,160,27","text":"506,161,12,135","type":"506,160,18","value":"506,165,0"}},{"$type":"property","accessor":true,"name":"stepValue","text":"Value that is added or subtracted from the current value when a spinner\nis tapped.\n","type":"Number","value":"1","src":{"accessor":"506,137,0","name":"506,133,26","text":"506,134,12,83","type":"506,133,18","value":"506,137,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"value","text":"The field's value\n","type":"Mixed","value":"0","src":{"accessor":"489,172,0","inheritdoc":"506,183,8","name":"506,182,13","text":"489,170,12,18","type":"489,169,18","value":"506,185,0"}}]},{"$type":"events","items":[{"$type":"event","hide":true,"name":"action","src":{"hide":"506,128,8","name":"506,127,15"}},{"$type":"event","name":"spin","text":"Fires when the value is changed via either spinner buttons.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Spinner","src":{"name":"506,102,35","type":"506,102,16"}},{"$type":"param","name":"value","type":"Number","src":{"name":"506,103,24","type":"506,103,16"}},{"$type":"param","name":"direction","text":"'up' or 'down'.\n","type":"String","src":{"name":"506,104,24","text":"506,104,34,16","type":"506,104,16"}}],"src":{"name":"506,100,15","text":"506,101,8,60"}},{"$type":"event","name":"spindown","text":"Fires when the value is changed via the spinner down button.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Spinner","src":{"name":"506,110,35","type":"506,110,16"}},{"$type":"param","name":"value","type":"Number","src":{"name":"506,111,24","type":"506,111,16"}}],"src":{"name":"506,108,15","text":"506,109,8,61"}},{"$type":"event","name":"spinup","text":"Fires when the value is changed via the spinner up button.\n","items":[{"$type":"param","name":"this","type":"Ext.field.Spinner","src":{"name":"506,117,35","type":"506,117,16"}},{"$type":"param","name":"value","type":"Number","src":{"name":"506,118,24","type":"506,118,16"}}],"src":{"name":"506,115,15","text":"506,116,8,59"}},{"$type":"event","hide":true,"name":"updatedata","src":{"hide":"506,123,8","name":"506,122,15"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"onSpinDown","src":{"access":"506,282,8","name":"506,284,0"}},{"$type":"method","access":"private","name":"onSpinUp","src":{"access":"506,291,8","name":"506,293,0"}},{"$type":"method","access":"private","fires":"spin","name":"spin","items":[{"$type":"param","name":"down","src":{"name":"506,302,0"}}],"src":{"access":"506,300,8","fires":"506,341,0","name":"506,302,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'spinnerfield'","src":{"inheritdoc":"506,195,8","name":"506,194,18","text":"18,529,8,532","value":"506,197,0"}}]}],"src":{"alias":"506,91,0","alternateClassNames":"506,92,0","extends":"506,90,0","name":"506,89,0","requires":"506,95,0:506,96,0","text":"506,2,4,2547"},"group":"Form Fields","displayName":"Field Spinner"},{"$type":"class","alias":"widget.textfield","alternateClassNames":"Ext.form.Text","extended":"Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.field.Picker,Ext.field.Email,Ext.field.File,Ext.field.Number,Ext.field.Password,Ext.field.Search,Ext.field.TextArea,Ext.field.Url","extends":"Ext.field.Input","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Text","requires":"Ext.field.trigger.Clear,Ext.Deferred","text":"The text field is the basis for most of the input fields. It provides a baseline of shared\nfunctionality such as input validation, standard events, state management and look and\nfeel. Typically we create text fields inside a form, like this:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [\n        {\n xtype: 'fieldset',\n title: 'Enter your name',\n items: [{\n         xtype: 'textfield',\n         label: 'First Name',\n         name: 'firstName'\n     }, {\n         xtype: 'textfield',\n         label: 'Last Name',\n         name: 'lastName'\n     }]\n }]\n});\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n     <ExtContainer layout=\"center\">\n        <ExtFormPanel [shadow]=\"true\">\n            <ExtFieldSet title=\"Separate Label and Placeholder\"\n                  [margin]=\"'0 0 20 0'\">\n                <ExtTextField placeHolder=\"Enter Name...\" label=\"Name\"\n                    [required]=\"true\">\n                </ExtTextField>\n            </ExtFieldSet>\n            <ExtFieldSet title=\"Label as Placeholder\" [margin]=\"'0 0 20 0'\">\n                <ExtTextField labelAlign=\"placeholder\"\n                      label=\"Name\" [required]=\"true\">\n                </ExtTextField>\n            </ExtFieldSet>\n            <ExtFieldSet title=\"With Error Message\">\n                <ExtTextField\n                    labelAlign=\"placeholder\"\n                    label=\"Label\"\n                    errorMessage=\"The value you entered is invalid.\"\n                    value=\"invalid value\"\n                    errorTarget=\"under\"\n                ></ExtTextField>\n            </ExtFieldSet>\n        </ExtFormPanel>\n     </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtFormPanel, ExtContainer, ExtTextField, ExtFieldSet } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n             <ExtContainer layout=\"center\">\n                 <ExtFormPanel shadow>\n                     <ExtFieldSet title=\"Separate Label and Placeholder\"\n                          margin=\"0 0 20 0\">\n                         <ExtTextField placeHolder=\"Enter Name...\" label=\"Name\" required/>\n                     </ExtFieldSet>\n                     <ExtFieldSet title=\"Label as Placeholder\" margin=\"0 0 20 0\" >\n                         <ExtTextField labelAlign=\"placeholder\" label=\"Name\" required/>\n                     </ExtFieldSet>\n                     <ExtFieldSet title=\"With Error Message\">\n                         <ExtTextField\n                             labelAlign=\"placeholder\"\n                             label=\"Label\"\n                             errorMessage=\"The value you entered is invalid.\"\n                             value=\"invalid value\"\n                             errorTarget=\"under\"\n                         />\n                     </ExtFieldSet>\n                 </ExtFormPanel>\n             </ExtContainer>\n        )\n    }\n}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-fieldset\n            title=\"Separate Label and Placeholder\"\n            margin=\"0 0 20 0\"\n        >\n            <ext-textfield\n                placeHolder=\"Enter Name...\"\n                label=\"Name\"\n                required=\"true\"\n            >\n            </ext-textfield>\n       </ext-fieldset>\n       <ext-fieldset\n            title=\"Label as Placeholder\"\n            margin=\"0 0 20 0\"\n        >\n            <ext-textfield\n                labelAlign=\"placeholder\"\n                label=\"Name\"\n                required=\"true\"\n            >\n            </ext-textfield>\n       </ext-fieldset>\n       <ext-fieldset\n            title=\"With Error Message\"\n        >\n            <ext-textfield\n                labelAlign=\"placeholder\"\n                label=\"Label\"\n                value=\"invalid value\"\n                errorTarget=\"under\"\n                errorMessage=\"The value you entered is invalid.\"\n            >\n            </ext-textfield>\n       </ext-fieldset>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-textfield.component';\nimport '@sencha/ext-web-components/dist/ext-fieldset.component';\n\nexport default class TextFieldComponent {}\n```\n\nThis creates two text fields inside a form. Text Fields can also be created outside of a\nForm, like this:\n\n    Ext.create('Ext.field.Text', {\n        label: 'Your Name',\n        value: 'Ed Spencer'\n    });\n\n## Configuring\n\nText field offers several configuration options, including {@link #placeholder},\n{@link #maxLength}, {@link #autoComplete}, {@link #autoCapitalize} and\n{@link #autoCorrect}.\n\nFor example, here is how we would configure a text field to have a maximum length of\n10 characters, with placeholder text that disappears when the field is focused:\n\n    Ext.create('Ext.field.Text', {\n        label: 'Username',\n        maxLength: 10,\n        placeholder: 'Enter your username'\n    });\n\nThe autoComplete, autoCapitalize and autoCorrect configs simply set those attributes on\nthe text field and allow the native browser to provide those capabilities. For example,\nto enable auto complete and auto correct, simply configure your text field like this:\n\n    Ext.create('Ext.field.Text', {\n        label: 'Username',\n        autoComplete: true,\n        autoCorrect: true\n    });\n\nThese configurations will be picked up by the native browser, which will enable the\noptions at the OS level.\n\nText field inherits from {@link Ext.field.Field}, which is the base class for all\nfields and provides a lot of shared functionality for all fields, including setting\nvalues, clearing and basic validation. See the {@link Ext.field.Field} documentation\nto see how to leverage its capabilities.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"animateUnderline","text":"'true' to animate the underline of a field when focused\n","type":"Boolean","value":"false","src":{"accessor":"507,442,0","name":"507,439,27","text":"507,440,12,56","type":"507,439,18","value":"507,442,0"}},{"$type":"property","accessor":true,"name":"autoCapitalize","text":"True to set the field's DOM element auto-capitalize attribute to \"on\", false to\nset to \"off\".\n","type":"Boolean","value":"null","src":{"accessor":"507,307,0","name":"507,303,27","text":"507,304,12,94","type":"507,303,18","value":"507,307,0"}},{"$type":"property","accessor":true,"name":"autoComplete","optional":true,"text":"`false to disable autocomplete on this text field.  Autocomplete is enabled by\ndefault on text fields, but disabled on picker fields.\n","type":"Boolean","value":"true","src":{"accessor":"507,300,0","name":"507,296,28","text":"507,297,12,134","type":"507,296,18","value":"507,296,41"}},{"$type":"property","accessor":true,"name":"autoCorrect","text":"True to set the field DOM element autocorrect attribute to \"on\", false to set to \"off\".\n","type":"Boolean","value":"null","src":{"accessor":"507,313,0","name":"507,310,27","text":"507,311,12,88","type":"507,310,18","value":"507,313,0"}},{"$type":"property","accessor":true,"name":"autoHideInputMask","optional":true,"since":"6.5.0","text":"Specify as `false` to always show the `{@link #cfg!inputMask inputMask}`.\n","type":"Boolean","value":"true","src":{"accessor":"507,320,0","name":"507,316,28","since":"507,318,19","text":"507,317,12,51","type":"507,316,18","value":"507,316,46"}},{"$type":"property","locale":true,"name":"badFormatMessage","since":"6.5.0","text":"The error message that will be displayed if the value cannot be parsed (for some\nderived types) or if the value does not match a configured {@link #inputMask}.\n","type":"String","value":"'Value does not match the required format'","src":{"locale":"507,458,8","name":"507,455,22","since":"507,459,15","text":"507,456,8,160","type":"507,455,14","value":"507,461,0"}},{"$type":"property","accessor":true,"hide":true,"name":"bodyAlign","value":"'stretch'","src":{"accessor":"507,420,0","hide":"507,418,12","name":"507,417,17","value":"507,420,0"}},{"$type":"property","accessor":true,"name":"clearable","text":"`true` to show a clear trigger in this field when it has a non-empty value\n","type":"Boolean","value":"true","src":{"accessor":"507,273,0","name":"507,270,27","text":"507,271,12,75","type":"507,270,18","value":"507,273,0"}},{"$type":"property","accessor":true,"name":"editable","text":"Configure as `false` to prevent the user from typing text directly into the\nfield; the field can only have its value set programmatically or via an action\ninvoked by a trigger.\n\nContrast with {@link #cfg!readOnly} which disables all mutation via the UI.\n","type":"Boolean","value":"true","src":{"accessor":"507,414,0","name":"507,407,27","text":"507,408,12,254","type":"507,407,18","value":"507,414,0"}},{"$type":"property","accessor":true,"name":"inputMask","since":"6.5.0","text":"\n**Important:** To use this config you must require `{@link Ext.field.InputMask}` or\nuse a complete framework build. The logic to implement an `{@link #cfg!inputMask inputMask}` is not\nautomatically included in a build.\n","type":"String/Ext.field.InputMask","value":"null","src":{"accessor":"507,330,0","name":"507,323,46","since":"507,328,19","text":"507,324,12,189","type":"507,323,18","value":"507,330,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"inputType","text":"The type attribute for input fields -- e.g. text,\npassword, date, url, email, etc.\n","type":"String","value":"'text'","src":{"accessor":"494,24,0","inheritdoc":"507,487,8","name":"507,486,13","text":"494,21,45,50:494,22,12,33","type":"494,21,18","value":"507,489,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"labelAlign","text":"When value is `'placeholder'`, the label text will be rendered as placeholder\ntext inside the empty input and will animated to \"top\" alignment when the input\nis focused or contains text.\nThe position to render the label relative to the field body.\n","type":"'top'/'left'/'bottom'/'right'","value":"'left'","src":{"accessor":"489,102,0","inheritdoc":"507,280,12","name":"507,276,17","text":"507,277,12,187:489,100,12,61","type":"489,99,18","value":"489,102,0"}},{"$type":"property","access":"private","accessor":true,"name":"labelInPlaceholder","value":"true","src":{"access":"507,423,12","accessor":"507,425,0","name":"507,425,0","value":"507,427,0"}},{"$type":"property","accessor":true,"name":"maxLength","text":"The maximum number of permitted input characters.\n","type":"Number","value":"null","src":{"accessor":"507,293,0","name":"507,290,26","text":"507,291,12,50","type":"507,290,18","value":"507,293,0"}},{"$type":"property","access":"private","accessor":true,"name":"parseValidator","since":"6.5.1","type":"Ext.data.validator.Validator","value":"null","src":{"access":"507,446,12","accessor":"507,449,0","name":"507,445,48","since":"507,447,19","type":"507,445,18","value":"507,449,0"}},{"$type":"property","accessor":true,"name":"pattern","text":"The value for the HTML5 `{@link #cfg!pattern pattern}` attribute. You can use this to change which\nkeyboard layout will be used.\n\n    Ext.define('Ux.field.Pattern', {\n        extend : 'Ext.field.Text',\n        xtype  : 'patternfield',\n\n        config : {\n component : {\n     pattern : '[0-9]*'\n }\n        }\n    });\n\nEven though it extends {@link Ext.field.Text}, it will display the number keyboard.\n","type":"String","value":"null","src":{"accessor":"507,350,0","name":"507,333,26","text":"507,334,12,379","type":"507,333,18","value":"507,350,0"}},{"$type":"property","accessor":true,"name":"placeholder","text":"A string value displayed in the input when the control is empty.\n","type":"String","value":"null","src":{"accessor":"507,287,0","name":"507,284,26","text":"507,285,12,65","type":"507,284,18","value":"507,287,0"}},{"$type":"property","deprecatedMessage":"Use the all lowercase {@link #placeholder} config.\n","deprecatedVersion":"6.5.0","name":"placeHolder","text":"A string value displayed in the input when the control is empty.\n","type":"String","src":{"deprecatedMessage":"507,1637,20","deprecatedVersion":"507,1637,20","name":"507,1635,34","text":"507,1636,20,65","type":"507,1635,26"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"507,479,8","name":"507,478,13","text":"275,104,12,2499","type":"275,103,18","value":"507,481,0"}},{"$type":"property","name":"stripCharsRe","text":"A JavaScript RegExp object used to strip unwanted content from the value\nduring input. If `{@link #cfg!stripCharsRe stripCharsRe}` is specified,\nevery *character sequence* matching `{@link #cfg!stripCharsRe stripCharsRe}` will be removed.\n","type":"RegExp","src":{"name":"507,262,22","text":"507,263,8,187","type":"507,262,14"}},{"$type":"property","accessor":true,"name":"textAlign","optional":true,"text":"The text alignment of this field.\n","type":"'left'/'center'/'right'","value":"'left'","src":{"accessor":"507,434,0","name":"507,431,44","text":"507,432,12,34","type":"507,431,18","value":"507,431,54"}},{"$type":"property","accessor":true,"name":"triggers","text":"{@link Ext.field.trigger.Trigger Triggers} to use in this field.  The keys in\nthis object are unique identifiers for the triggers. The values in this object\nare {@link Ext.field.trigger.Trigger Trigger} configuration objects.\n\n    Ext.create('Ext.field.Text', {\n        label: 'My Custom Field',\n        triggers: {\n foo: {\n     cls: 'my-foo-trigger',\n     handler: function() {\n         console.log('foo trigger clicked');\n     }\n },\n bar: {\n     cls: 'my-bar-trigger',\n     handler: function() {\n         console.log('bar trigger clicked');\n     }\n }\n        }\n    });\n\nThe weight value may be a negative value in order to position custom triggers\nahead of default triggers like that of a DatePicker field.\n\n    Ext.create('Ext.form.DatePicker', {\n        label: 'Pick a Date',\n        triggers: {\n foo: {\n     cls: 'my-foo-trigger',\n     weight: -2, // negative to place before default triggers\n     handler: function() {\n         console.log('foo trigger clicked');\n     }\n },\n bar: {\n     cls: 'my-bar-trigger',\n     weight: -1,\n     handler: function() {\n         console.log('bar trigger clicked');\n     }\n }\n        }\n    });\n","type":"Object","value":"{\n    clear: {\n        type: 'clear'\n    }\n}","src":{"accessor":"507,400,0","name":"507,354,26","text":"507,355,12,1134","type":"507,354,18","value":"507,400,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"507,471,8","name":"507,470,13","text":"275,231,12,406","type":"275,230,18","value":"507,473,0"}}]},{"$type":"events","items":[{"$type":"event","name":"action","preventable":true,"text":"Fires whenever the return key or go is pressed. FormPanel listeners\nfor this event, and submits itself whenever it fires. Also note\nthat this event bubbles up to parent containers.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,257,32","text":"507,257,37,11","type":"507,257,16"}},{"$type":"param","name":"e","text":"The key event object\n","type":"Mixed","src":{"name":"507,258,23","text":"507,258,25,21","type":"507,258,16"}}],"src":{"name":"507,252,15","preventable":"507,253,8","text":"507,254,8,181"}},{"$type":"event","name":"blur","text":"Fires when this field loses input focus\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,207,32","text":"507,207,37,11","type":"507,207,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,208,33","type":"507,208,16"}}],"src":{"name":"507,205,15","text":"507,206,8,40"}},{"$type":"event","name":"clearicontap","preventable":true,"text":"Fires when the clear icon is tapped\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,246,32","text":"507,246,37,11","type":"507,246,16"}},{"$type":"param","name":"input","text":"The field's input component.\n","type":"Ext.field.Input","src":{"name":"507,247,33","text":"507,247,39,29","type":"507,247,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,248,33","type":"507,248,16"}}],"src":{"name":"507,243,15","preventable":"507,244,8","text":"507,245,8,36"}},{"$type":"event","name":"focus","text":"Fires when this field receives input focus\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,200,32","text":"507,200,37,11","type":"507,200,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,201,33","type":"507,201,16"}}],"src":{"name":"507,198,15","text":"507,199,8,43"}},{"$type":"event","name":"keydown","preventable":true,"since":"7.0","text":"Fires when a key is pressed on the input element\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,229,32","text":"507,229,37,11","type":"507,229,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,230,33","type":"507,230,16"}}],"src":{"name":"507,226,15","preventable":"507,227,8","since":"507,231,15","text":"507,228,8,49"}},{"$type":"event","name":"keyup","preventable":true,"text":"Fires when a key is released on the input element\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,238,32","text":"507,238,37,11","type":"507,238,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,239,33","type":"507,239,16"}}],"src":{"name":"507,235,15","preventable":"507,236,8","text":"507,237,8,50"}},{"$type":"event","name":"mousedown","text":"Fires when this field receives a mousedown\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,221,32","text":"507,221,37,11","type":"507,221,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,222,33","type":"507,222,16"}}],"src":{"name":"507,219,15","text":"507,220,8,43"}},{"$type":"event","name":"paste","text":"Fires when this field is pasted.\n","items":[{"$type":"param","name":"this","text":"This field\n","type":"Ext.field.Text","src":{"name":"507,214,32","text":"507,214,37,11","type":"507,214,16"}},{"$type":"param","name":"e","type":"Ext.event.Event","src":{"name":"507,215,33","type":"507,215,16"}}],"src":{"name":"507,212,15","text":"507,213,8,33"}}]},{"$type":"methods","items":[{"$type":"method","name":"addTrigger","text":"Adds a trigger to this text field.\n","items":[{"$type":"param","name":"name","text":"Unique name (within this field) for the trigger.  Cannot be the\nsame as the name of an existing trigger for this field.\n","type":"String","src":{"name":"507,890,24","text":"507,890,29,64:507,891,8,56","type":"507,890,16"}},{"$type":"param","name":"trigger","text":"The trigger instance or a config\nobject for a trigger to add\n","type":"Ext.field.trigger.Trigger/Object","src":{"name":"507,892,50","text":"507,892,58,33:507,893,8,28","type":"507,892,16"}},{"$type":"return","text":"The trigger that was added\n","type":"Ext.field.trigger.Trigger","src":{"text":"507,894,44,27","type":"507,894,17"}}],"src":{"name":"507,896,0","text":"507,889,8,35"}},{"$type":"method","name":"clearValue","text":"Clears the value of this field.\n","src":{"name":"507,556,0","text":"507,554,8,32"}},{"$type":"method","access":"private","name":"createTrigger","items":[{"$type":"param","name":"name","src":{"name":"507,1416,0"}},{"$type":"param","name":"trigger","src":{"name":"507,1416,0"}}],"src":{"access":"507,1414,12","name":"507,1416,0"}},{"$type":"method","access":"private","name":"doClearIconTap","src":{"access":"507,1116,8","name":"507,1118,0"}},{"$type":"method","access":"private","name":"doKeyUp","text":"Called when a key has been pressed in the `<input>`\n","items":[{"$type":"param","name":"me","src":{"name":"507,1035,0"}},{"$type":"param","name":"e","src":{"name":"507,1035,0"}}],"src":{"access":"507,1033,8","name":"507,1035,0","text":"507,1032,8,52"}},{"$type":"method","access":"private","fires":"specialkey","name":"fireKey","items":[{"$type":"param","name":"e","src":{"name":"507,979,0"}}],"src":{"access":"507,977,8","fires":"507,981,0","name":"507,979,0"}},{"$type":"method","name":"getTextSelection","since":"6.5.0","text":"Returns the selection range of an input element as an array of three values:\n\n     [ start, end, direction ]\n\nThese have the same meaning as the parameters to `{@link #method!select select}`.\n","items":[{"$type":"return","type":"Array","src":{"type":"507,1170,17"}}],"src":{"name":"507,1173,0","since":"507,1171,15","text":"507,1165,8,169"}},{"$type":"method","access":"protected","name":"parseValue","since":"6.5.1","template":true,"text":"Parses the given `{@link #cfg!value value}` and returns it in the desired representation. By default\nthis will return the `{@link #cfg!value value}` given (no change). Derived classes (such as `datefield`\nand `numberfield`) will override this method and return a Date or a Number,\nrespectively.\n\nIf `{@link #cfg!value value}` cannot be parsed, this method will return `null`, otherwise it will\nreturn the parsed value. It is the parsed value that will become the field's\n{@link #cfg!value value}.\n\nThis method is not called directly but is called internally by the\n{@link #method!validate validate method}. This call to parse a value is not made on\nempty or null values.\n\n*Note:* It is not expected that applications will need to override this method\nbecause an application can achieve value parsing by virtue of the `{@link #cfg!validators validators}` it\ndefines. These can come from this component or from a bound model field (using\n{@link #cfg!modelValidation}). In addition, `datefield` and `numberfield` both\nprovide default parsing for their values.\n","items":[{"$type":"param","name":"value","text":"The value to parse (never `null`).\n","type":"String","src":{"name":"507,655,24","text":"507,655,30,35","type":"507,655,16"}},{"$type":"param","name":"errors","text":"The set of validation errors. If the value cannot be\nparsed, the error message should be added to this array.\n","type":"String[]","src":{"name":"507,657,26","text":"507,657,33,53:507,658,8,58","type":"507,657,16"}},{"$type":"return","text":"The parsed value.\n","type":"Mixed","src":{"text":"507,660,24,18","type":"507,660,17"}}],"src":{"access":"507,663,8","name":"507,666,0","since":"507,664,15","template":"507,662,8","text":"507,636,8,977"}},{"$type":"method","access":"private","name":"processRawValue","since":"7.0","text":"Performs any necessary manipulation of a raw String value to prepare\nit for conversion and/or\n{@link #validate validation}. For text fields this applies the configured\n{@link #stripCharsRe} to the raw value.\n","items":[{"$type":"param","name":"value","text":"The unprocessed string value\n","type":"String","src":{"name":"507,1480,28","text":"507,1480,34,29","type":"507,1480,20"}},{"$type":"return","text":"The processed string value\n","type":"String","src":{"text":"507,1481,29,27","type":"507,1481,21"}}],"src":{"access":"507,1276,-1","name":"507,1484,0","since":"507,1482,19","text":"507,1476,12,208"}},{"$type":"method","name":"removeTrigger","text":"Removes a trigger from this text field.\n","items":[{"$type":"param","name":"trigger","text":"The name of the trigger to remove,\nor a trigger reference.\n","type":"String/Ext.field.trigger.Trigger","src":{"name":"507,933,50","text":"507,933,58,35:507,934,8,24","type":"507,933,16"}},{"$type":"param","name":"destroy","optional":true,"text":"False to prevent the trigger from being destroyed\non removal.  Only use this option if you want to reuse the trigger instance.\n","type":"Boolean","value":"true","src":{"name":"507,935,26","text":"507,935,40,50:507,936,8,77","type":"507,935,16","value":"507,935,34"}},{"$type":"return","text":"The trigger that was removed\n","type":"Ext.field.trigger.Trigger","src":{"text":"507,937,44,29","type":"507,937,17"}}],"src":{"name":"507,939,0","text":"507,932,8,40"}},{"$type":"method","chainable":true,"name":"select","text":"Select the specified contents of the input field (all by default).\n","items":[{"$type":"param","name":"start","optional":true,"type":"Number","value":"0","src":{"name":"507,1179,25","type":"507,1179,16","value":"507,1179,31"}},{"$type":"param","name":"end","optional":true,"type":"Number","src":{"name":"507,1180,25","type":"507,1180,16"}},{"$type":"param","name":"direction","optional":true,"text":"Pass \"f\" for forward,\n\"b\" for backwards.\n","type":"\"f\"/\"b\"/\"forward\"/\"backward\"","value":"\"f\"","src":{"name":"507,1181,47","text":"507,1181,62,22:507,1182,8,19","type":"507,1181,16","value":"507,1181,57"}},{"$type":"return","text":"this\n","type":"Ext.field.Text","src":{"text":"507,1183,33,5","type":"507,1183,17"}}],"src":{"chainable":"507,1184,8","name":"507,1186,0","text":"507,1178,8,67"}},{"$type":"method","access":"private","name":"syncTriggers","text":"Synchronizes the DOM to match the triggers' configured weight, side, and grouping\n","src":{"access":"507,1517,12","name":"507,1519,0","text":"507,1516,12,82"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'textfield'","src":{"inheritdoc":"507,493,8","name":"507,492,18","text":"18,529,8,532","value":"507,495,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'value'","src":{"inheritdoc":"507,465,8","name":"507,464,18","text":"275,272,8,373","type":"275,271,19","value":"507,467,0"}},{"$type":"property","access":"protected","name":"doKeyDown","text":"Called when a key has been pressed in the `<input>`\n","value":"Ext.emptyFn","src":{"access":"507,1023,8","name":"507,1025,0","text":"507,1022,8,52","value":"507,1025,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"textfield-ui","text":"Creates a visual theme for a Text Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1189,305,20","text":"1189,306,4,109","type":"1189,305,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"textfield","src":{"access":"1189,309,40","name":"1189,309,21","text":"1189,309,51,35:1189,310,4,61","type":"1189,309,12","value":"1189,309,28"}},{"$type":"param","name":"$background-color","text":"Text Field input background color\n","type":"color","src":{"name":"1189,312,19","text":"1189,313,4,35","type":"1189,312,12"}},{"$type":"param","name":"$focused-background-color","text":"Focused Text Field background color\n","type":"color","src":{"name":"1189,315,19","text":"1189,316,4,37","type":"1189,315,12"}},{"$type":"param","name":"$invalid-background-color","text":"Invalid Text Field background color\n","type":"color","src":{"name":"1189,318,19","text":"1189,319,4,37","type":"1189,318,12"}},{"$type":"param","name":"$disabled-background-color","text":"Disabled Text Field background color\n","type":"color","src":{"name":"1189,321,19","text":"1189,322,4,38","type":"1189,321,12"}},{"$type":"param","name":"$disabled-opacity","text":"Text Field disabled opacity\n","type":"Number","src":{"name":"1189,324,20","text":"1189,325,4,29","type":"1189,324,12"}},{"$type":"param","name":"$required-indicator-font-weight","text":"Required indicator font weight\n","type":"Number","src":{"name":"1189,327,20","text":"1189,328,4,32","type":"1189,327,12"}},{"$type":"param","name":"$required-indicator-font-size","text":"Required indicator font size\n","type":"Number","src":{"name":"1189,330,20","text":"1189,331,4,30","type":"1189,330,12"}},{"$type":"param","name":"$required-indicator-line-height","text":"Required indicator line height\n","type":"Number","src":{"name":"1189,333,20","text":"1189,334,4,32","type":"1189,333,12"}},{"$type":"param","name":"$required-indicator-font-family","text":"Required indicator font family\n","type":"String","src":{"name":"1189,336,20","text":"1189,337,4,32","type":"1189,336,12"}},{"$type":"param","name":"$required-indicator-margin","text":"Required indicator margin\n","type":"String","src":{"name":"1189,339,20","text":"1189,340,4,27","type":"1189,339,12"}},{"$type":"param","name":"$required-indicator-margin-big","text":"Required indicator margin in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"String","src":{"name":"1189,342,20","text":"1189,343,4,83","type":"1189,342,12"}},{"$type":"param","name":"$input-color","text":"Text field input color\n","type":"color","src":{"name":"1189,345,19","text":"1189,346,4,24","type":"1189,345,12"}},{"$type":"param","name":"$focused-input-color","text":"Text Field input color when focused\n","type":"color","src":{"name":"1189,348,19","text":"1189,349,4,37","type":"1189,348,12"}},{"$type":"param","name":"$invalid-input-color","text":"Text Field input color when invalid\n","type":"color","src":{"name":"1189,351,19","text":"1189,352,4,37","type":"1189,351,12"}},{"$type":"param","name":"$disabled-input-color","text":"Text Field input color when disabled\n","type":"color","src":{"name":"1189,354,19","text":"1189,355,4,38","type":"1189,354,12"}},{"$type":"param","name":"$input-border-width","text":"Text Field input border width\n","type":"number/list","src":{"name":"1189,357,25","text":"1189,358,4,31","type":"1189,357,12"}},{"$type":"param","name":"$input-border-style","text":"Text Field input border style\n","type":"string/list","src":{"name":"1189,360,25","text":"1189,361,4,31","type":"1189,360,12"}},{"$type":"param","name":"$focused-input-border-style","text":"Text Field input border style when focused\n","type":"string/list","src":{"name":"1189,363,25","text":"1189,364,4,44","type":"1189,363,12"}},{"$type":"param","name":"$invalid-input-border-style","text":"Text Field input border style when invalid\n","type":"string/list","src":{"name":"1189,366,25","text":"1189,367,4,44","type":"1189,366,12"}},{"$type":"param","name":"$input-border-color","text":"Text Field input border color\n","type":"color/list","src":{"name":"1189,369,24","text":"1189,370,4,31","type":"1189,369,12"}},{"$type":"param","name":"$focused-input-border-color","text":"Text Field input border color when focused\n","type":"string/list","src":{"name":"1189,372,25","text":"1189,373,4,44","type":"1189,372,12"}},{"$type":"param","name":"$invalid-input-border-color","text":"Text Field input border color when invalid\n","type":"string/list","src":{"name":"1189,375,25","text":"1189,376,4,44","type":"1189,375,12"}},{"$type":"param","name":"$disabled-input-border-color","text":"Text Field input border color when disabled\n","type":"string/list","src":{"name":"1189,378,25","text":"1189,379,4,45","type":"1189,378,12"}},{"$type":"param","name":"$input-underline-width","text":"Text field input underline width\n","type":"number","src":{"name":"1189,381,20","text":"1189,382,4,34","type":"1189,381,12"}},{"$type":"param","name":"$focused-input-underline-width","text":"Text field input underline width when focused\n","type":"number","src":{"name":"1189,384,20","text":"1189,385,4,47","type":"1189,384,12"}},{"$type":"param","name":"$invalid-input-underline-width","text":"Text field input underline width when invalid\n","type":"number","src":{"name":"1189,387,20","text":"1189,388,4,47","type":"1189,387,12"}},{"$type":"param","name":"$input-underline-color","text":"Text field input underline color\n","type":"color","src":{"name":"1189,390,19","text":"1189,391,4,34","type":"1189,390,12"}},{"$type":"param","name":"$focused-input-underline-color","text":"Text field input underline color when focused\n","type":"color","src":{"name":"1189,393,19","text":"1189,394,4,47","type":"1189,393,12"}},{"$type":"param","name":"$invalid-input-underline-color","text":"Text field input underline color when invalid\n","type":"color","src":{"name":"1189,396,19","text":"1189,397,4,47","type":"1189,396,12"}},{"$type":"param","name":"$input-background-color","text":"Text Field input background-color\n","type":"color","src":{"name":"1189,399,19","text":"1189,400,4,35","type":"1189,399,12"}},{"$type":"param","name":"$focused-input-background-color","text":"Text Field input background-color when focused\n","type":"color","src":{"name":"1189,402,19","text":"1189,403,4,48","type":"1189,402,12"}},{"$type":"param","name":"$invalid-input-background-color","text":"Text Field input background-color when invalid\n","type":"color","src":{"name":"1189,405,19","text":"1189,406,4,48","type":"1189,405,12"}},{"$type":"param","name":"$disabled-input-background-color","text":"Text Field input background-color when disabled\n","type":"color","src":{"name":"1189,408,19","text":"1189,409,4,49","type":"1189,408,12"}},{"$type":"param","name":"$input-padding","text":"Text Field input padding\n","type":"color","src":{"name":"1189,411,19","text":"1189,412,4,26","type":"1189,411,12"}},{"$type":"param","name":"$input-padding-big","text":"Text Field input padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"color","src":{"name":"1189,414,19","text":"1189,415,4,82","type":"1189,414,12"}},{"$type":"param","name":"$input-font-weight","text":"Text Field input font-weight\n","type":"string/number","src":{"name":"1189,417,27","text":"1189,418,4,30","type":"1189,417,12"}},{"$type":"param","name":"$input-font-size","text":"Text Field input font-size\n","type":"number","src":{"name":"1189,420,20","text":"1189,421,4,28","type":"1189,420,12"}},{"$type":"param","name":"$input-font-size-big","text":"Text Field input font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1189,423,20","text":"1189,424,4,84","type":"1189,423,12"}},{"$type":"param","name":"$input-line-height","text":"Text Field input line-height\n","type":"number","src":{"name":"1189,426,20","text":"1189,427,4,30","type":"1189,426,12"}},{"$type":"param","name":"$input-line-height-big","text":"Text Field input line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1189,429,20","text":"1189,430,4,86","type":"1189,429,12"}},{"$type":"param","name":"$input-font-family","text":"Text Field input font-family\n","type":"string","src":{"name":"1189,432,20","text":"1189,433,4,30","type":"1189,432,12"}},{"$type":"param","name":"$placeholder-color","text":"Text Field {@link #placeholder} color\n","type":"color","src":{"name":"1189,435,19","text":"1189,436,4,39","type":"1189,435,12"}},{"$type":"param","name":"$focused-placeholder-color","text":"Text Field {@link #placeholder} color when focused\n","type":"color","src":{"name":"1189,438,19","text":"1189,439,4,52","type":"1189,438,12"}},{"$type":"param","name":"$invalid-placeholder-color","text":"Text Field {@link #placeholder} color when invalid\n","type":"color","src":{"name":"1189,441,19","text":"1189,442,4,52","type":"1189,441,12"}},{"$type":"param","name":"$disabled-placeholder-color","text":"Text Field {@link #placeholder} color when disabled\n","type":"color","src":{"name":"1189,444,19","text":"1189,445,4,53","type":"1189,444,12"}},{"$type":"param","name":"$border-radius","text":"The border radius of the text field\n","type":"number","src":{"name":"1189,447,20","text":"1189,448,4,37","type":"1189,447,12"}},{"$type":"param","name":"$body-width","text":"Text Field body width\n","type":"number","src":{"name":"1189,450,20","text":"1189,451,4,23","type":"1189,450,12"}},{"$type":"param","name":"$body-width-big","text":"Text Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1189,453,20","text":"1189,454,4,79","type":"1189,453,12"}},{"$type":"param","name":"$animate-underline-duration","text":"The duration, in seconds, for the focus {@link #animateUnderline underline animation}\n","type":"number","src":{"name":"1189,456,20","text":"1189,457,4,86","type":"1189,456,12"}}],"src":{"name":"1189,459,7","text":"1189,303,4,41"}}]},{"$type":"vars","items":[{"$type":"property","name":"$textfield-alt-ui","text":"Parameters for the \"alt\" textfield UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1189,255,1","text":"1189,252,4,94","type":"1189,251,10"}},{"$type":"property","dynamic":true,"name":"$textfield-animate-underline-duration","text":"The duration for the focus {@link #animateUnderline underline animation}\n","type":"number","value":".45s","src":{"dynamic":"1189,248,40","name":"1189,248,1","text":"1189,246,4,73","type":"1189,245,10","value":"1189,248,48"}},{"$type":"property","dynamic":true,"name":"$textfield-body-width","text":"Text Field body width\n","type":"number","value":"170px","src":{"dynamic":"1189,214,24","name":"1189,214,1","text":"1189,212,4,22","type":"1189,211,10","value":"1189,214,32"}},{"$type":"property","dynamic":true,"name":"$textfield-body-width-big","text":"Text Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"200px","src":{"dynamic":"1189,220,28","name":"1189,220,1","text":"1189,218,4,78","type":"1189,217,10","value":"1189,220,36"}},{"$type":"property","name":"$textfield-celleditor-ui","text":"Parameters for the \"celleditor\" textfield UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1189,227,1","text":"1189,224,4,101","type":"1189,223,10"}},{"$type":"property","dynamic":true,"name":"$textfield-disabled-input-background-color","text":"Text Field input background-color when disabled\n","type":"color","value":"null","src":{"dynamic":"1189,136,45","name":"1189,136,1","text":"1189,134,4,48","type":"1189,133,10","value":"1189,136,53"}},{"$type":"property","dynamic":true,"name":"$textfield-disabled-input-border-color","text":"Text Field input border color when disabled\n","type":"string/list","value":"null","src":{"dynamic":"1189,76,41","name":"1189,76,1","text":"1189,74,4,44","type":"1189,73,10","value":"1189,76,49"}},{"$type":"property","dynamic":true,"name":"$textfield-disabled-input-color","text":"Text Field input color when disabled\n","type":"color","value":"null","src":{"dynamic":"1189,27,34","name":"1189,27,1","text":"1189,25,4,37","type":"1189,24,10","value":"1189,27,42"}},{"$type":"property","dynamic":true,"name":"$textfield-disabled-placeholder-color","text":"Text Field {@link #placeholder} color when disabled\n","type":"color","value":"null","src":{"dynamic":"1189,208,40","name":"1189,208,1","text":"1189,206,4,52","type":"1189,205,10","value":"1189,208,48"}},{"$type":"property","name":"$textfield-faded-ui","text":"Parameters for the \"faded\" textfield UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1189,273,1","text":"1189,270,4,96","type":"1189,269,10"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-background-color","text":"Text Field input background-color when focused\n","type":"color","value":"null","src":{"dynamic":"1189,124,44","name":"1189,124,1","text":"1189,122,4,47","type":"1189,121,10","value":"1189,124,52"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-border-color","text":"Text Field input border color when focused\n","type":"string/list","value":"mix(#fff, #157fcc, 15%)","src":{"dynamic":"1189,64,40","name":"1189,64,1","text":"1189,62,4,43","type":"1189,61,10","value":"1189,64,48"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-border-style","text":"Text Field input border style when focused\n","type":"string/list","value":"null","src":{"dynamic":"1189,45,40","name":"1189,45,1","text":"1189,43,4,43","type":"1189,42,10","value":"1189,45,48"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-color","text":"Text Field input color when focused\n","type":"color","value":"null","src":{"dynamic":"1189,15,33","name":"1189,15,1","text":"1189,13,4,36","type":"1189,12,10","value":"1189,15,41"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-underline-color","text":"Text field input underline color when focused\n","type":"color","value":"null","src":{"dynamic":"1189,106,43","name":"1189,106,1","text":"1189,104,4,46","type":"1189,103,10","value":"1189,106,51"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-input-underline-width","text":"Text field input underline width when focused\n","type":"number","value":"null","src":{"dynamic":"1189,88,43","name":"1189,88,1","text":"1189,86,4,46","type":"1189,85,10","value":"1189,88,51"}},{"$type":"property","dynamic":true,"name":"$textfield-focused-placeholder-color","text":"Text Field {@link #placeholder} color when focused\n","type":"color","value":"null","src":{"dynamic":"1189,196,39","name":"1189,196,1","text":"1189,194,4,51","type":"1189,193,10","value":"1189,196,47"}},{"$type":"property","dynamic":true,"name":"$textfield-input-background-color","text":"Text Field input background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1189,118,36","name":"1189,118,1","text":"1189,116,4,34","type":"1189,115,10","value":"1189,118,44"}},{"$type":"property","dynamic":true,"name":"$textfield-input-border-color","text":"Text Field input border color\n","type":"color/list","value":"$neutral-color","src":{"dynamic":"1189,58,32","name":"1189,58,1","text":"1189,56,4,30","type":"1189,55,10","value":"1189,58,40"}},{"$type":"property","dynamic":true,"name":"$textfield-input-border-style","text":"Text Field input border style\n","type":"string/list","value":"solid","src":{"dynamic":"1189,39,32","name":"1189,39,1","text":"1189,37,4,30","type":"1189,36,10","value":"1189,39,40"}},{"$type":"property","dynamic":true,"name":"$textfield-input-border-width","text":"Text Field input border width\n","type":"number/list","value":"1px","src":{"dynamic":"1189,33,32","name":"1189,33,1","text":"1189,31,4,30","type":"1189,30,10","value":"1189,33,40"}},{"$type":"property","dynamic":true,"name":"$textfield-input-color","text":"Text Field input color\n","type":"color","value":"$color","src":{"dynamic":"1189,9,25","name":"1189,9,1","text":"1189,7,4,23","type":"1189,6,10","value":"1189,9,33"}},{"$type":"property","dynamic":true,"name":"$textfield-input-font-family","text":"Text Field input font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1189,184,31","name":"1189,184,1","text":"1189,182,4,29","type":"1189,181,10","value":"1189,184,39"}},{"$type":"property","dynamic":true,"name":"$textfield-input-font-size","text":"Text Field input font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1189,160,29","name":"1189,160,1","text":"1189,158,4,27","type":"1189,157,10","value":"1189,160,37"}},{"$type":"property","dynamic":true,"name":"$textfield-input-font-size-big","text":"Text Field input font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1189,166,33","name":"1189,166,1","text":"1189,164,4,83","type":"1189,163,10","value":"1189,166,41"}},{"$type":"property","dynamic":true,"name":"$textfield-input-font-weight","text":"Text Field input font-weight\n","type":"string/number","value":"$font-weight-normal","src":{"dynamic":"1189,154,31","name":"1189,154,1","text":"1189,152,4,29","type":"1189,151,10","value":"1189,154,39"}},{"$type":"property","dynamic":true,"name":"$textfield-input-line-height","text":"Text Field input line-height\n","type":"number","value":"17px","src":{"dynamic":"1189,172,31","name":"1189,172,1","text":"1189,170,4,29","type":"1189,169,10","value":"1189,172,39"}},{"$type":"property","dynamic":true,"name":"$textfield-input-line-height-big","text":"Text Field input line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"20px","src":{"dynamic":"1189,178,35","name":"1189,178,1","text":"1189,176,4,85","type":"1189,175,10","value":"1189,178,43"}},{"$type":"property","dynamic":true,"name":"$textfield-input-padding","text":"Text Field input padding\n","type":"number/list","value":"3px 6px 2px","src":{"dynamic":"1189,142,27","name":"1189,142,1","text":"1189,140,4,25","type":"1189,139,10","value":"1189,142,35"}},{"$type":"property","dynamic":true,"name":"$textfield-input-padding-big","text":"Text Field input padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"5px 6px","src":{"dynamic":"1189,148,31","name":"1189,148,1","text":"1189,146,4,81","type":"1189,145,10","value":"1189,148,39"}},{"$type":"property","dynamic":true,"name":"$textfield-input-underline-color","text":"Text field input underline color\n","type":"color","value":"null","src":{"dynamic":"1189,100,35","name":"1189,100,1","text":"1189,98,4,33","type":"1189,97,10","value":"1189,100,43"}},{"$type":"property","dynamic":true,"name":"$textfield-input-underline-width","text":"Text field input underline width\n","type":"number","value":"null","src":{"dynamic":"1189,82,35","name":"1189,82,1","text":"1189,80,4,33","type":"1189,79,10","value":"1189,82,43"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-background-color","text":"Text Field input background-color when invalid\n","type":"color","value":"null","src":{"dynamic":"1189,130,44","name":"1189,130,1","text":"1189,128,4,47","type":"1189,127,10","value":"1189,130,52"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-border-color","text":"Text Field input border color when invalid\n","type":"string/list","value":"$alert-color","src":{"dynamic":"1189,70,40","name":"1189,70,1","text":"1189,68,4,43","type":"1189,67,10","value":"1189,70,48"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-border-style","text":"Text Field input border style when invalid\n","type":"string/list","value":"null","src":{"dynamic":"1189,51,40","name":"1189,51,1","text":"1189,49,4,43","type":"1189,48,10","value":"1189,51,48"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-color","text":"Text Field input color when invalid\n","type":"color","value":"null","src":{"dynamic":"1189,21,33","name":"1189,21,1","text":"1189,19,4,36","type":"1189,18,10","value":"1189,21,41"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-underline-color","text":"Text field input underline color when invalid\n","type":"color","value":"null","src":{"dynamic":"1189,112,43","name":"1189,112,1","text":"1189,110,4,46","type":"1189,109,10","value":"1189,112,51"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-input-underline-width","text":"Text field input underline width when invalid\n","type":"number","value":"null","src":{"dynamic":"1189,94,43","name":"1189,94,1","text":"1189,92,4,46","type":"1189,91,10","value":"1189,94,51"}},{"$type":"property","dynamic":true,"name":"$textfield-invalid-placeholder-color","text":"Text Field {@link #placeholder} color when invalid\n","type":"color","value":"null","src":{"dynamic":"1189,202,39","name":"1189,202,1","text":"1189,200,4,51","type":"1189,199,10","value":"1189,202,47"}},{"$type":"property","dynamic":true,"name":"$textfield-placeholder-color","text":"Text Field {@link #placeholder} color\n","type":"color","value":"$neutral-medium-dark-color","src":{"dynamic":"1189,190,31","name":"1189,190,1","text":"1189,188,4,38","type":"1189,187,10","value":"1189,190,39"}},{"$type":"property","name":"$textfield-solo-ui","text":"Parameters for the \"solo\" textfield UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1189,291,1","text":"1189,288,4,95","type":"1189,287,10"}}]}],"src":{"alias":"507,189,0","alternateClassNames":"507,190,0","extends":"507,188,0","name":"1189,2,11","requires":"507,193,0:507,194,0","text":"507,2,4,6327"},"group":"Form Fields","displayName":"Field Text"},{"$type":"class","alias":"widget.textareafield","alternateClassNames":"Ext.form.TextArea","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.TextArea","text":"Creates an HTML textarea field on the page. This is useful whenever you need the user to enter\nlarge amounts of text (i.e. more than a few words). Typically, text entry on mobile devices\nis not a pleasant experience for the user so it's good to limit your use of text areas to only\nthose occasions when free form text is required or alternative input methods like select boxes\nor radio buttons are not possible. Text Areas are usually created inside forms, like this:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [\n        {\n            xtype: 'fieldset',\n            title: 'About you',\n            items: [\n                {\n                    xtype: 'textfield',\n                    label: 'Name',\n                    name: 'name'\n                },\n                {\n                    xtype: 'textareafield',\n                    label: 'Bio',\n                    maxRows: 4,\n                    name: 'bio'\n                }\n            ]\n        }\n    ]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtTextAreaField } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtTextAreaField\n                        label=\"Description\"\n                        width=\"300\"\n                        maxRows={10}\n                    />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n             <ExtFormPanel shadow=\"true\" >\n                <ExtTextAreaField\n                    label=\"Description\"\n                    width=\"300\"\n                    [maxRows]=\"10\"\n                >\n                </ExtTextAreaField>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-textareafield\n           label=\"Description\"\n           width=\"300\"\n           maxRows=\"10\"\n       >\n       </ext-textareafield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-textareafield.component';\n\nexport default class TextAreaFieldComponent {}\n```\n\nIn the example above we're creating a form with a {@link Ext.field.Text text field} for the\nuser's name and a text area for their bio. We used the {@link #maxRows} configuration on the\n text area to tell it to grow to a maximum of 4 rows of text before it starts using a scroll\nbar inside the text area to scroll the text.\n\nWe can also create a text area outside the context of a form, like this:\n\nThis creates two text fields inside a form. Text Fields can also be created outside of a Form,\nlike this:\n\n    Ext.create('Ext.field.TextArea', {\n        label: 'About You',\n        placeHolder: 'Tell us about yourself...'\n    });\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"autoCapitalize","text":"True to set the field's DOM element auto-capitalize attribute to \"on\", false to\nset to \"off\".\n","type":"Boolean","value":"false","src":{"accessor":"508,125,0","inheritdoc":"508,123,12","name":"508,122,17","text":"507,304,12,94","type":"507,303,18","value":"508,125,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"clearable","text":"`true` to show a clear trigger in this field when it has a non-empty value\n","type":"Boolean","value":"false","src":{"accessor":"508,137,0","inheritdoc":"508,135,12","name":"508,134,17","text":"507,271,12,75","type":"507,270,18","value":"508,137,0"}},{"$type":"property","accessor":true,"name":"maxRows","text":"The maximum number of lines made visible by the input.\n","type":"Number","value":"null","src":{"accessor":"508,131,0","name":"508,128,26","text":"508,129,12,55","type":"508,128,18","value":"508,131,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'textareafield'","src":{"inheritdoc":"508,148,8","name":"508,147,18","text":"18,529,8,532","value":"508,150,0"}},{"$type":"property","inheritdoc":true,"name":"tag","text":"The tag name to use for this field's input element. Subclasses should override this\nproperty on their class body.  Not intended for instance-level use.\n","type":"String","value":"'textarea'","src":{"inheritdoc":"508,142,8","name":"508,141,18","text":"494,13,8,152","type":"494,12,19","value":"508,144,0"}}]}],"src":{"alias":"508,116,0","alternateClassNames":"508,118,0","extends":"508,115,0","name":"1146,2,11","text":"508,2,4,3572"},"group":"Form Fields","displayName":"Field Textarea"},{"$type":"class","alias":"widget.timefield","extended":"Ext.field.Picker,Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Picker","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Time","requires":"Ext.field.trigger.Time,Ext.panel.Time,Ext.data.validator.Time","text":"Provides a time input field with a analog time picker and automatic time validation.\n\nThis field recognizes and uses JavaScript Date objects to validate input from {@link #picker}.\nIn addition, it recognizes string values which are parsed according to\nthe {@link #format} config.\nThese may be reconfigured to use time formats appropriate for the user's locale.\n\nExample usage:\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n     fullscreen: true,\n     items: [\n         {\n             xtype: 'fieldset',\n             items: [\n                 {\n                    xtype: 'timefield',\n                    itemId: '123',\n                    label: 'Birthday',\n                    name: 'birthday',\n                    value: '12:00 PM'\n                 }\n             ]\n         }\n     ]\n});\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"locale":true,"name":"altFormats","since":"6.6.0","text":"Multiple date formats separated by \"|\" or an array of date formats\nto try when parsing a user input value and it doesn't match the defined format.\n","type":"String|String[]","value":"'g:ia|' + 'g:iA|' + 'g:i a|' + 'g:i A|' + 'h:i|' + 'g:i|' + 'H:i|' + 'ga|' + 'ha|' + 'gA|' + 'h a|' + 'g a|' + 'g A|' + 'gi|' + 'hi|' + 'gia|' + 'hia|' + 'g|' + 'H|' + 'gi a|' + 'hi a|' + 'giA|' + 'hiA|' + 'gi A|' + 'hi A'","src":{"accessor":"509,70,0","locale":"509,67,12","name":"509,64,35","since":"509,68,19","text":"509,65,12,147","type":"509,64,18","value":"509,70,0"}},{"$type":"property","accessor":true,"locale":true,"name":"format","since":"6.6.0","text":"The format to be used when displaying time in this field. Accepts any valid time\nformat supported by {@link Ext.Date#parse}. The list of supported formats can be\nfound in {@link Ext.Date} documentation.\n\nDefault is to use {@link Ext.Date#defaultTimeFormat} that depends on the chosen\nlocale. For en-US this is `'h:i A'`, e.g. `'03:42 PM'`. To set 24-hour format\nwithout changing locale entirely, use `'H:i'` or similar.\n","type":"String","value":"''","src":{"accessor":"509,61,0","locale":"509,58,12","name":"509,49,26","since":"509,59,19","text":"509,50,12,421","type":"509,49,18","value":"509,61,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","fires":"select","name":"onPickerChange","text":"Called when the picker changes its value.\n","items":[{"$type":"param","name":"picker","text":"The Time picker.\n","type":"Ext.panel.Time","src":{"name":"509,137,32","text":"509,137,39,17","type":"509,137,16"}},{"$type":"param","name":"value","text":"The new value from the time picker.\n","type":"Object","src":{"name":"509,138,24","text":"509,138,30,36","type":"509,138,16"}}],"src":{"access":"509,139,8","fires":"509,146,0","name":"509,141,0","text":"509,136,8,42"}}]}],"src":{"alias":"509,33,0","extends":"509,32,0","name":"509,31,0","requires":"509,36,0:509,37,0:509,38,0","text":"509,2,4,826"},"group":"Form Fields","displayName":"Field Time"},{"$type":"class","alias":"widget.togglefield","alternateClassNames":"Ext.form.Toggle","extended":"Ext.field.SingleSlider,Ext.field.Slider,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.SingleSlider","mixed":"Ext.Mixin,Ext.field.BoxLabelable,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Toggle","requires":"Ext.slider.Toggle","text":"Specialized {@link Ext.field.Slider} with a single thumb which only supports\ntwo {@link #value values}.\n\n## Examples\n\n```javascript\n@example({ framework: 'extjs' })\nExt.Viewport.add({\n    xtype: 'togglefield',\n    name: 'awesome',\n    label: 'Are you awesome?',\n    labelWidth: '40%'\n});\n```\n\nHaving a default value of 'toggled':\n\n```javascript\n@example({ framework: 'extjs' })\nExt.Viewport.add({\n    xtype: 'togglefield',\n    name: 'awesome',\n    value: 1,\n    label: 'Are you awesome?',\n    labelWidth: '40%'\n});\n```\n\nAnd using the {@link #value} {@link #toggle} method:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.Viewport.add([\n    {\n        xtype: 'togglefield',\n        name: 'awesome',\n        value: 1,\n        label: 'Are you awesome?',\n        labelWidth: '40%'\n    },\n    {\n        xtype: 'toolbar',\n        docked: 'top',\n        items: [\n            {\n                xtype: 'button',\n                text: 'Toggle',\n                flex: 1,\n                handler: function() {\n                    Ext.ComponentQuery.query('togglefield')[0].toggle();\n                }\n            }\n        ]\n    }\n]);\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtToggleField } from '@sencha/ext-react';\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtToggleField boxLabel=\"On\" value={true}/>\n                    <ExtToggleField boxLabel=\"Off\" value={false}/>\n                    <ExtToggleField boxLabel=\"Disabled\" disabled />\n                    <ExtToggleField boxLabel=\"Disabled (On)\" disabled value={true} />\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\" >\n                <ExtToggleField boxLabel=\"On\" value=\"true\"></ExtToggleField>\n                <ExtToggleField boxLabel=\"Off\" value=\"false\"></ExtToggleField>\n                <ExtToggleField boxLabel=\"Disabled\" disabled=\"true\" >\n                   </ExtToggleField>\n                <ExtToggleField boxLabel=\"Disabled (On)\" disabled=\"true\"\n                    value=\"true\" ></ExtToggleField>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-togglefield boxLabel=\"On\" value=\"true\"></ext-togglefield>\n       <ext-togglefield boxLabel=\"Off\" value=\"false\"></ext-togglefield>\n       <ext-togglefield boxLabel=\"Disabled\" disabled=\"true\"></ext-togglefield>\n       <ext-togglefield boxLabel=\"Disabled (On)\" disabled=\"true\" value=\"true\"></ext-togglefield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-togglefield.component';\n\nexport default class ToggleFieldComponent {}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"activeLabel","text":"The label to add to the toggle field when it is toggled on. Only available in\nthe Blackberry theme.\n","type":"String","value":"null","src":{"accessor":"510,156,12","name":"510,153,26","text":"510,154,12,100","type":"510,153,18","value":"510,158,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"bodyAlign","text":"\nThe horizontal alignment the contents of this field's body element.\n","type":"'start'/'center'/'end'/'stretch'","value":"'start'","src":{"accessor":"489,96,0","inheritdoc":"510,178,8","name":"510,177,13","text":"489,93,12,69","type":"489,92,18","value":"510,180,0"}},{"$type":"property","accessor":true,"name":"inactiveLabel","text":"The label to add to the toggle field when it is toggled off. Only available in\nthe Blackberry theme.\n","type":"String","value":"null","src":{"accessor":"510,164,12","name":"510,161,26","text":"510,162,12,101","type":"510,161,18","value":"510,166,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"510,137,8","name":"510,136,13","text":"275,104,12,2499","type":"275,103,18","value":"510,139,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"slider","value":"{\n    xtype: 'toggleslider'\n}","src":{"accessor":"510,148,0","inheritdoc":"510,146,12","name":"510,145,17","value":"510,148,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `{@link #cfg!value value}` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    value: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"510,129,8","name":"510,128,13","text":"275,231,12,406","type":"275,230,18","value":"510,131,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.slider.Slider#cfg-value","name":"value","text":"The value(s) of this slider's thumbs. If you pass\na number, it will assume you have just 1 thumb.\n","type":"Number/Number[]","value":"false","src":{"accessor":"510,171,12","inheritdoc":"510,170,12","name":"510,169,17","text":"662,134,41,50:662,135,12,48","type":"662,134,18","value":"510,173,0"}}]},{"$type":"events","items":[{"$type":"event","name":"change","text":"Fires when an option selection has changed.\n\n    Ext.Viewport.add({\n        xtype: 'togglefield',\n        label: 'Event Example',\n        listeners: {\n            change: function(field, newValue, oldValue) {\n                console.log('Value of this toggle has changed:', (newValue) ? 'ON' : 'OFF');\n            }\n        }\n    });\n","items":[{"$type":"param","name":"this","type":"Ext.field.Toggle","src":{"name":"510,202,34","type":"510,202,16"}},{"$type":"param","name":"newValue","text":"the new value of this thumb\n","type":"Number","src":{"name":"510,203,24","text":"510,203,33,28","type":"510,203,16"}},{"$type":"param","name":"oldValue","text":"the old value of this thumb\n","type":"Number","src":{"name":"510,204,24","text":"510,204,33,28","type":"510,204,16"}}],"src":{"name":"510,189,15","text":"510,190,8,335"}},{"$type":"event","hide":true,"name":"drag","src":{"hide":"510,214,7","name":"510,213,14"}},{"$type":"event","hide":true,"name":"dragend","src":{"hide":"510,219,7","name":"510,218,14"}},{"$type":"event","hide":true,"name":"dragstart","src":{"hide":"510,209,7","name":"510,208,14"}}]},{"$type":"methods","items":[{"$type":"method","name":"getRawValue","since":"7.0","text":"Returns the toggled state of the togglefield.\n","items":[{"$type":"return","text":"True if toggled on, else false\n","type":"Boolean","src":{"text":"510,277,26,31","type":"510,277,17"}}],"src":{"name":"510,280,0","since":"510,278,12","text":"510,276,8,46"}},{"$type":"method","chainable":true,"name":"toggle","text":"Toggles the value of this toggle field.\n","items":[{"$type":"return","text":"this\n","type":"Object","src":{"text":"510,266,25,5","type":"510,266,17"}}],"src":{"chainable":"510,272,0","name":"510,268,0","text":"510,265,8,40"}},{"$type":"method","access":"private","name":"updateActiveLabel","items":[{"$type":"param","name":"newActiveLabel","src":{"name":"510,225,0"}},{"$type":"param","name":"oldActiveLabel","src":{"name":"510,225,0"}}],"src":{"access":"510,223,8","name":"510,225,0"}},{"$type":"method","access":"private","name":"updateInactiveLabel","items":[{"$type":"param","name":"newInactiveLabel","src":{"name":"510,231,0"}},{"$type":"param","name":"oldInactiveLabel","src":{"name":"510,231,0"}}],"src":{"access":"510,229,8","name":"510,231,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'togglefield'","src":{"inheritdoc":"510,184,8","name":"510,183,18","text":"18,529,8,532","value":"510,186,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"togglefield-ui","text":"Creates a visual theme for a Toggle Field\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1190,88,20","text":"1190,89,4,109","type":"1190,88,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"togglefield","src":{"access":"1190,92,42","name":"1190,92,21","text":"1190,92,53,35:1190,93,4,61","type":"1190,92,12","value":"1190,92,28"}},{"$type":"param","name":"$padding","text":"Toggle Field padding\n","type":"number/list","src":{"name":"1190,95,25","text":"1190,96,4,22","type":"1190,95,12"}},{"$type":"param","name":"$padding-big","text":"Toggle Field padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1190,98,25","text":"1190,99,4,78","type":"1190,98,12"}},{"$type":"param","name":"$box-label-color","text":"Toggle Field {@link #boxLabel} text color\n","type":"color","src":{"name":"1190,101,19","text":"1190,102,4,43","type":"1190,101,12"}},{"$type":"param","name":"$box-label-font-weight","text":"Toggle Field {@link #boxLabel} font-weight\n","type":"string/number","src":{"name":"1190,104,27","text":"1190,105,4,44","type":"1190,104,12"}},{"$type":"param","name":"$box-label-font-size","text":"Toggle Field {@link #boxLabel} font-size\n","type":"number","src":{"name":"1190,107,20","text":"1190,108,4,42","type":"1190,107,12"}},{"$type":"param","name":"$box-label-font-size-big","text":"Toggle Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1190,110,20","text":"1190,111,4,98","type":"1190,110,12"}},{"$type":"param","name":"$box-label-line-height","text":"Toggle Field {@link #boxLabel} line-height\n","type":"number","src":{"name":"1190,113,20","text":"1190,114,4,44","type":"1190,113,12"}},{"$type":"param","name":"$box-label-line-height-big","text":"Toggle Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1190,116,20","text":"1190,117,4,100","type":"1190,116,12"}},{"$type":"param","name":"$box-label-font-family","text":"Toggle Field {@link #boxLabel} font-family\n","type":"string","src":{"name":"1190,119,20","text":"1190,120,4,44","type":"1190,119,12"}},{"$type":"param","name":"$box-label-padding","text":"Toggle Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1190,122,25","text":"1190,123,4,125","type":"1190,122,12"}},{"$type":"param","name":"$box-label-padding-big","text":"Toggle Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","src":{"name":"1190,126,25","text":"1190,127,4,181","type":"1190,126,12"}},{"$type":"param","name":"$body-width","text":"Toggle Field body width\n","type":"number","src":{"name":"1190,130,20","text":"1190,131,4,25","type":"1190,130,12"}},{"$type":"param","name":"$body-width-big","text":"Toggle Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1190,133,20","text":"1190,134,4,80","type":"1190,133,12"}}],"src":{"name":"1190,136,7","text":"1190,86,4,43"}},{"$type":"method","name":"toggleslider-ui","text":"Creates a visual theme for a toggle slider.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1243,105,20","text":"1243,106,4,109","type":"1243,105,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"toggleslider","src":{"access":"1243,109,43","name":"1243,109,21","text":"1243,109,54,35:1243,110,4,61","type":"1243,109,12","value":"1243,109,28"}},{"$type":"param","name":"$width","text":"The width of the toggle slider\n","type":"number","src":{"name":"1243,112,20","text":"1243,113,4,32","type":"1243,112,12"}},{"$type":"param","name":"$width-big","text":"The width of the toggle slider in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1243,115,20","text":"1243,116,4,88","type":"1243,115,12"}},{"$type":"param","name":"$track-height","text":"The height of the toggle slider track\n","type":"number","src":{"name":"1243,118,20","text":"1243,119,4,39","type":"1243,118,12"}},{"$type":"param","name":"$track-height-big","text":"The height of the toggle slider track in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1243,121,20","text":"1243,122,4,95","type":"1243,121,12"}},{"$type":"param","name":"$track-background-color","text":"The background-color of the toggle slider track\n","type":"color/list","src":{"name":"1243,124,24","text":"1243,125,4,49","type":"1243,124,12"}},{"$type":"param","name":"$track-border-width","text":"The border-width of the toggle slider track\n","type":"number/list","src":{"name":"1243,127,25","text":"1243,128,4,45","type":"1243,127,12"}},{"$type":"param","name":"$track-border-style","text":"The border-style of the toggle slider track\n","type":"string/list","src":{"name":"1243,130,25","text":"1243,131,4,45","type":"1243,130,12"}},{"$type":"param","name":"$track-border-color","text":"The border-color of the toggle slider track\n","type":"color/list","src":{"name":"1243,133,24","text":"1243,134,4,45","type":"1243,133,12"}},{"$type":"param","name":"$track-border-radius","text":"The border-radius of the toggle slider track\n","type":"number","src":{"name":"1243,136,20","text":"1243,137,4,46","type":"1243,136,12"}},{"$type":"param","name":"$track-border-radius-big","text":"The border-radius of the toggle slider track in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1243,139,20","text":"1243,140,4,102","type":"1243,139,12"}},{"$type":"param","name":"$fill-background-color","text":"The background-color of the toggle slider fill element\n","type":"color","src":{"name":"1243,142,19","text":"1243,143,4,56","type":"1243,142,12"}},{"$type":"param","name":"$disabled-fill-background-color","text":"The background-color of the toggle slider fill element when disabled\n","type":"color","src":{"name":"1243,145,19","text":"1243,146,4,70","type":"1243,145,12"}},{"$type":"param","name":"$fill-border-color","text":"The border-color of the toggle slider fill element\n","type":"color","src":{"name":"1243,148,19","text":"1243,149,4,52","type":"1243,148,12"}},{"$type":"param","name":"$disabled-fill-border-color","text":"The border-color of the toggle slider fill element when disabled\n","type":"color","src":{"name":"1243,151,19","text":"1243,152,4,66","type":"1243,151,12"}},{"$type":"param","name":"$disabled-opacity","text":"Opacity of the toggle slider when disabled\n","type":"number","src":{"name":"1243,154,20","text":"1243,155,4,44","type":"1243,154,12"}},{"$type":"param","name":"$thumb-inset","text":"Inset of thumb\n","type":"number","src":{"name":"1243,157,20","text":"1243,158,4,16","type":"1243,157,12"}}],"src":{"name":"1243,162,7","text":"1243,103,4,45"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$togglefield-body-width","text":"Toggle Field body width\n","type":"number","value":"auto","src":{"dynamic":"1190,77,26","name":"1190,77,1","text":"1190,75,4,24","type":"1190,74,10","value":"1190,77,34"}},{"$type":"property","dynamic":true,"name":"$togglefield-body-width-big","text":"Toggle Field body width in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"auto","src":{"dynamic":"1190,83,30","name":"1190,83,1","text":"1190,81,4,80","type":"1190,80,10","value":"1190,83,38"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-color","text":"Toggle Field {@link #boxLabel} text color\n","type":"color","value":"null","src":{"dynamic":"1190,21,31","name":"1190,21,1","text":"1190,19,4,42","type":"1190,18,10","value":"1190,21,39"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-font-family","text":"Toggle Field {@link #boxLabel} font-family\n","type":"string","value":"null","src":{"dynamic":"1190,57,37","name":"1190,57,1","text":"1190,55,4,43","type":"1190,54,10","value":"1190,57,45"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-font-size","text":"Toggle Field {@link #boxLabel} font-size\n","type":"number","value":"null","src":{"dynamic":"1190,33,35","name":"1190,33,1","text":"1190,31,4,41","type":"1190,30,10","value":"1190,33,43"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-font-size-big","text":"Toggle Field {@link #boxLabel} font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1190,39,39","name":"1190,39,1","text":"1190,37,4,97","type":"1190,36,10","value":"1190,39,47"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-font-weight","text":"Toggle Field {@link #boxLabel} font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1190,27,37","name":"1190,27,1","text":"1190,25,4,43","type":"1190,24,10","value":"1190,27,45"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-line-height","text":"Toggle Field {@link #boxLabel} line-height\n","type":"number","value":"null","src":{"dynamic":"1190,45,37","name":"1190,45,1","text":"1190,43,4,43","type":"1190,42,10","value":"1190,45,45"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-line-height-big","text":"Toggle Field {@link #boxLabel} line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1190,51,41","name":"1190,51,1","text":"1190,49,4,99","type":"1190,48,10","value":"1190,51,49"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-padding","text":"Toggle Field {@link #boxLabel} padding\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"null","src":{"dynamic":"1190,64,33","name":"1190,64,1","text":"1190,61,4,124","type":"1190,60,10","value":"1190,64,41"}},{"$type":"property","dynamic":true,"name":"$togglefield-box-label-padding-big","text":"Toggle Field {@link #boxLabel} padding in the {@link Global_CSS#$enable-big big} sizing scheme\nThe padding box will be flipped horizontally when {@link #boxLabelAlign} is `before`\n","type":"number/list","value":"null","src":{"dynamic":"1190,71,37","name":"1190,71,1","text":"1190,68,4,180","type":"1190,67,10","value":"1190,71,45"}},{"$type":"property","dynamic":true,"name":"$togglefield-padding","text":"Toggle Field padding\n","type":"number/list","value":"null","src":{"dynamic":"1190,9,23","name":"1190,9,1","text":"1190,7,4,21","type":"1190,6,10","value":"1190,9,31"}},{"$type":"property","dynamic":true,"name":"$togglefield-padding-big","text":"Toggle Field padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1190,15,27","name":"1190,15,1","text":"1190,13,4,77","type":"1190,12,10","value":"1190,15,35"}},{"$type":"property","dynamic":true,"name":"$toggleslider-disabled-fill-background-color","text":"The background-color of the toggle slider fill element when disabled\n","type":"color","value":"null","src":{"dynamic":"1243,75,47","name":"1243,75,1","text":"1243,73,4,69","type":"1243,72,10","value":"1243,75,55"}},{"$type":"property","dynamic":true,"name":"$toggleslider-disabled-fill-border-color","text":"The border-color of the toggle slider fill element when disabled\n","type":"color","value":"null","src":{"dynamic":"1243,87,43","name":"1243,87,1","text":"1243,85,4,65","type":"1243,84,10","value":"1243,87,51"}},{"$type":"property","dynamic":true,"name":"$toggleslider-disabled-opacity","text":"Opacity of the toggle slider when disabled\n","type":"number","value":"null","src":{"dynamic":"1243,93,33","name":"1243,93,1","text":"1243,91,4,43","type":"1243,90,10","value":"1243,93,41"}},{"$type":"property","dynamic":true,"name":"$toggleslider-fill-background-color","text":"The background-color of the toggle slider fill element\n","type":"color","value":"null","src":{"dynamic":"1243,69,38","name":"1243,69,1","text":"1243,67,4,55","type":"1243,66,10","value":"1243,69,46"}},{"$type":"property","dynamic":true,"name":"$toggleslider-fill-border-color","text":"The border-color of the toggle slider fill element\n","type":"color","value":"null","src":{"dynamic":"1243,81,34","name":"1243,81,1","text":"1243,79,4,51","type":"1243,78,10","value":"1243,81,42"}},{"$type":"property","dynamic":true,"name":"$toggleslider-thumb-inset","text":"Amount of space to inset the toggle thumb from the left and right edge of the track\n","type":"number","value":"null","src":{"dynamic":"1243,99,28","name":"1243,99,1","text":"1243,97,4,84","type":"1243,96,10","value":"1243,99,36"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-background-color","text":"The background-color of the toggle slider track\n","type":"color/list","value":"null","src":{"dynamic":"1243,33,39","name":"1243,33,1","text":"1243,31,4,48","type":"1243,30,10","value":"1243,33,47"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-border-color","text":"The border-color of the toggle slider track\n","type":"color/list","value":"null","src":{"dynamic":"1243,51,35","name":"1243,51,1","text":"1243,49,4,44","type":"1243,48,10","value":"1243,51,43"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-border-radius","text":"The border-radius of the toggle slider track\n","type":"number","value":"null","src":{"dynamic":"1243,57,36","name":"1243,57,1","text":"1243,55,4,45","type":"1243,54,10","value":"1243,57,44"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-border-radius-big","text":"The border-radius of the toggle slider track in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1243,63,40","name":"1243,63,1","text":"1243,61,4,101","type":"1243,60,10","value":"1243,63,48"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-border-style","text":"The border-style of the toggle slider track\n","type":"string/list","value":"null","src":{"dynamic":"1243,45,35","name":"1243,45,1","text":"1243,43,4,44","type":"1243,42,10","value":"1243,45,43"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-border-width","text":"The border-width of the toggle slider track\n","type":"number/list","value":"null","src":{"dynamic":"1243,39,35","name":"1243,39,1","text":"1243,37,4,44","type":"1243,36,10","value":"1243,39,43"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-height","text":"The height of the toggle slider track\n","type":"number","value":"null","src":{"dynamic":"1243,21,29","name":"1243,21,1","text":"1243,19,4,38","type":"1243,18,10","value":"1243,21,37"}},{"$type":"property","dynamic":true,"name":"$toggleslider-track-height-big","text":"The height of the toggle slider track in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1243,27,33","name":"1243,27,1","text":"1243,25,4,94","type":"1243,24,10","value":"1243,27,41"}},{"$type":"property","dynamic":true,"name":"$toggleslider-width","text":"The width of the toggle slider\n","type":"number","value":"26px","src":{"dynamic":"1243,9,22","name":"1243,9,1","text":"1243,7,4,31","type":"1243,6,10","value":"1243,9,30"}},{"$type":"property","dynamic":true,"name":"$toggleslider-width-big","text":"The width of the toggle slider in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"45px","src":{"dynamic":"1243,15,26","name":"1243,15,1","text":"1243,13,4,87","type":"1243,12,10","value":"1243,15,34"}}]}],"src":{"alias":"510,123,0","alternateClassNames":"510,124,0","extends":"510,122,0","name":"1243,2,11","requires":"510,125,0","text":"510,2,4,3506"},"group":"Form Fields","displayName":"Field Toggle"},{"$type":"class","alias":"widget.urlfield","alternateClassNames":"Ext.form.Url","extended":"Ext.field.Text,Ext.field.Input,Ext.field.Field,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.field.Text","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.field.Url","text":"The Url field creates an HTML5 url input and is usually created inside a form.\nBecause it creates an HTML url input field, most browsers will show a specialized\nvirtual keyboard for web address input. Aside from that, the url field is just a normal\ntext field. Here's an example of how to use it in a form:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.form.Panel', {\n    fullscreen: true,\n    items: [\n        {\n            xtype: 'fieldset',\n            title: 'Add Bookmark',\n            items: [\n                {\n                    xtype: 'urlfield',\n                    label: 'Url',\n                    name: 'url'\n                }\n            ]\n        }\n    ]\n});\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtFormPanel, ExtURLField } from '@sencha/ext-react';\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtContainer layout=\"center\">\n                <ExtFormPanel shadow>\n                    <ExtURLField placeholder=\"http://www.domain.com\" label=\"URL\" width=\"200\"/>\n                </ExtFormPanel>\n            </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\" >\n                <ExtURLField\n                    placeholder=\"http://www.domain.com\"\n                    label=\"URL\"\n                    width=\"200\"\n                >\n                </ExtURLField>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-urlfield placeholder=\"http://www.domain.com\" label=\"URL\" width=\"200\"></ext-urlfield>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-urlfield.component';\n\nexport default class URLFieldComponent {}\n```\n\nOr on its own, outside of a form:\n\nExt.create('Ext.field.Url', {\n    label: 'Web address',\n    value: 'http://sencha.com'\n});\n\nBecause url field inherits from {@link Ext.field.Text textfield} it gains all of the\nfunctionality that text fields provide, including getting and setting the value at runtime,\nvalidations and various events that are fired as the user interacts with the component.\nCheck out the {@link Ext.field.Text} docs to see the additional functionality available.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"inheritdoc":true,"name":"autoCapitalize","text":"True to set the field's DOM element auto-capitalize attribute to \"on\", false to\nset to \"off\".\n","type":"Boolean","value":"false","src":{"accessor":"511,104,0","inheritdoc":"511,102,12","name":"511,101,17","text":"507,304,12,94","type":"507,303,18","value":"511,104,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"inputType","text":"The type attribute for input fields -- e.g. text,\npassword, date, url, email, etc.\n","type":"String","value":"'url'","src":{"accessor":"494,24,0","inheritdoc":"511,109,8","name":"511,108,13","text":"494,21,45,50:494,22,12,33","type":"494,21,18","value":"511,111,0"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'urlfield'","src":{"inheritdoc":"511,115,8","name":"511,114,18","text":"18,529,8,532","value":"511,117,0"}}]}],"src":{"alias":"511,96,0","alternateClassNames":"511,97,0","extends":"511,95,0","name":"511,94,0","text":"511,2,4,2943"},"group":"Form Fields","displayName":"Field Url"},{"$type":"class","alias":"widget.fieldset","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.form.Borders,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","mixins":"Ext.form.Borders,Ext.mixin.FieldDefaults","name":"Ext.form.FieldSet","requires":"Ext.Title","text":"A FieldSet is a great way to visually separate elements of a form. It's normally\nused when you have a form with fields that can be divided into groups - for example a\ncustomer's billing details in one fieldset and their shipping address in another. A fieldset\ncan be used inside a form or on its own elsewhere in your app. Fieldsets can optionally have\na title at the top and instructions at the bottom. Here's how we might create a FieldSet\ninside a form:\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create('Ext.form.Panel', {\n        fullscreen: true,\n        items: [\n            {\n                xtype: 'fieldset',\n                title: 'About You',\n                instructions: 'Tell us all about yourself',\n                items: [\n                    {\n                        xtype: 'textfield',\n                        name : 'firstName',\n                        label: 'First Name'\n                    },\n                    {\n                        xtype: 'textfield',\n                        name : 'lastName',\n                        label: 'Last Name'\n                    }\n                ]\n            }\n        ]\n    });\n```\n```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\nimport React from 'react';\nimport { ExtContainer, ExtFieldSet, ExtTextField, ExtFormPanel } from '@sencha/ext-react';\nexport default function FieldSetExample() {\n    return (\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow>\n                <ExtFieldSet\n                   title=\"About You\"\n                   instructions=\"Tell us about yourself.\"\n                   width={300}\n                >\n                    <ExtTextField label=\"First Name\" labelAlign=\"placeholder\"/>\n                    <ExtTextField label=\"Last Name\" labelAlign=\"placeholder\"/>\n                </ExtFieldSet>\n            </ExtFormPanel>\n        </ExtContainer>\n    )\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n        <ExtContainer layout=\"center\">\n            <ExtFormPanel shadow=\"true\">\n                <ExtFieldSet title=\"About You\"\n                      instructions=\"Tell us about yourself.\" width=\"300\">\n                    <ExtTextField label=\"First Name\"\n                          labelAlign=\"placeholder\"></ExtTextField>\n                    <ExtTextField label=\"Last Name\"\n                          labelAlign=\"placeholder\"></ExtTextField>\n                </ExtFieldSet>\n            </ExtFormPanel>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container layout=\"center\">\n   <ext-formpanel shadow=\"true\">\n       <ext-fieldset title=\"About You\" instructions=\"Tell us about yourself.\" width=\"300\">\n           <ext-textfield label=\"First Name\" labelAlign=\"placeholder\"></ext-textfield>\n           <ext-textfield label=\"Last Name\" labelAlign=\"placeholder\"></ext-textfield>\n       </ext-fieldset>\n   </ext-formpanel>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-formpanel.component';\nimport '@sencha/ext-web-components/dist/ext-fieldset.component';\nimport '@sencha/ext-web-components/dist/ext-textfield.component';\n\nexport default class FieldSetComponent {}\n\nAbove we created a {@link Ext.form.Panel form} with a fieldset that contains two text fields.\nIn this case, all of the form fields are in the same fieldset, but for longer forms we may choose\nto use multiple fieldsets. We also configured a {@link #title} and {@link #instructions} to give\nthe user more information on filling out the form if required.\n","items":[{"$type":"configs","items":[{"$type":"property","name":"fieldDefaults","text":"The properties in this object are used as default config values for field instance.\n","type":"Object","src":{"name":"524,161,26","text":"524,162,12,84","type":"524,161,18"}},{"$type":"property","accessor":true,"name":"instructions","text":"Optional fieldset instructions, rendered just below the grouped fields.\n\n## Example\n\n    Ext.create('Ext.form.Fieldset', {\n        fullscreen: true,\n\n        instructions: 'Please enter your email address.',\n\n        items: [{\n            xtype: 'textfield',\n            label: 'Email'\n        }]\n    });\n","type":"String","value":"null","src":{"accessor":"524,156,12","name":"524,140,26","text":"524,141,12,306","type":"524,140,18","value":"524,158,0"}},{"$type":"property","accessor":true,"name":"title","text":"Optional fieldset title, rendered just above the grouped fields.\n\n## Example\n\n    Ext.create('Ext.form.Fieldset', {\n        fullscreen: true,\n\n        title: 'Login',\n\n        items: [{\n            xtype: 'textfield',\n            label: 'Email'\n        }]\n    });\n","type":"String","value":"null","src":{"accessor":"524,135,12","name":"524,119,26","text":"524,120,12,265","type":"524,119,18","value":"524,137,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyInstructions","items":[{"$type":"param","name":"instructions","src":{"name":"524,215,0"}}],"src":{"access":"524,213,8","name":"524,215,0"}},{"$type":"method","access":"private","name":"applyTitle","items":[{"$type":"param","name":"title","src":{"name":"524,173,0"}}],"src":{"access":"524,171,8","name":"524,173,0"}},{"$type":"method","access":"private","name":"getInstructions","src":{"access":"524,242,8","name":"524,244,0"}},{"$type":"method","access":"private","name":"getTitle","src":{"access":"524,200,8","name":"524,202,0"}},{"$type":"method","chainable":true,"name":"updateDisabled","text":"A convenient method to disable all fields in this FieldSet\n","items":[{"$type":"return","text":"This FieldSet\n","type":"Ext.form.FieldSet","src":{"text":"524,256,36,14","type":"524,256,17"}},{"$type":"param","name":"newDisabled","src":{"name":"524,258,0"}}],"src":{"chainable":"524,263,0","name":"524,258,0","text":"524,255,8,59"}},{"$type":"method","access":"private","name":"updateInstructions","items":[{"$type":"param","name":"newInstructions","src":{"name":"524,231,0"}},{"$type":"param","name":"oldInstructions","src":{"name":"524,231,0"}}],"src":{"access":"524,229,8","name":"524,231,0"}},{"$type":"method","access":"private","name":"updateTitle","items":[{"$type":"param","name":"newTitle","src":{"name":"524,189,0"}},{"$type":"param","name":"oldTitle","src":{"name":"524,189,0"}}],"src":{"access":"524,187,8","name":"524,189,0"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$fieldset-border-color","text":"FieldSet border-color\n","type":"color","value":"$neutral-color","src":{"dynamic":"1200,15,25","name":"1200,15,1","text":"1200,13,4,22","type":"1200,12,10","value":"1200,15,33"}},{"$type":"property","dynamic":true,"name":"$fieldset-border-radius","text":"FieldSet border-radius\n","type":"number/list","value":"null","src":{"dynamic":"1200,9,26","name":"1200,9,1","text":"1200,7,4,23","type":"1200,6,10","value":"1200,9,34"}},{"$type":"property","dynamic":true,"name":"$fieldset-border-style","text":"FieldSet border-style\n","type":"style","value":"solid","src":{"dynamic":"1200,27,25","name":"1200,27,1","text":"1200,25,4,22","type":"1200,24,10","value":"1200,27,33"}},{"$type":"property","dynamic":true,"name":"$fieldset-border-width","text":"FieldSet border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1200,21,25","name":"1200,21,1","text":"1200,19,4,22","type":"1200,18,10","value":"1200,21,33"}},{"$type":"property","dynamic":true,"name":"$fieldset-title-color","text":"FieldSet title text color\n","type":"color","value":"$highlight-color","src":{"dynamic":"1200,33,24","name":"1200,33,1","text":"1200,31,4,26","type":"1200,30,10","value":"1200,33,32"}}]}],"src":{"alias":"524,106,0","extends":"524,105,0","mixins":"524,109,0:524,110,0","name":"1200,2,11","requires":"524,114,0","text":"524,2,4,3935"},"group":"Container","displayName":"Form Fieldset"},{"$type":"class","alias":"widget.formpanel","alternateClassNames":"Ext.form.FormPanel","extended":"Ext.field.Panel,Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.calendar.form.AbstractForm,Ext.pivot.plugin.configurator.Form,Ext.pivot.plugin.configurator.Settings,Ext.pivot.plugin.rangeeditor.Panel","extends":"Ext.field.Panel","mixed":"Ext.Mixin,Ext.field.Dirty,Ext.field.Manager,Ext.form.Borders,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.FieldDefaults,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","mixins":"Ext.mixin.FieldDefaults","name":"Ext.form.Panel","text":"The `formpanel` is an extension over `fieldpanel` and, in addition to rendering the\nproper `form` tag\n\npresents a set of form fields and provides convenient ways to load and\nsave data. This component uses an HTML `form` element to contain its fields, unlike\n{@link Ext.field.Panel fieldpanel}. As a `form`, this component provides a `submit`\nmethod that can be used to post field data to a server.\n\nPopulating a `formpanel` is the same as with {@link Ext.field.Panel fieldpanel}. The\nsame method are available for setting data in the form, gather field values and managing\nfield errors.\n\n## Submitting Forms\n\nUsing the {@link Ext.field.Panel fieldpanel} class data can be saved to the server using\nthe {@link Ext.data.Model#method!save save method} of a record. With `formpanel`,\nhowever, you can use its submit method.\n\n     var panel = Ext.create({\n         xtype: 'formpanel',\n         fullscreen: true,\n\n         controller: 'mycontroller',\n\n         buttons: {\n             submit: 'onSubmit'\n         },\n\n         items: [{\n             xtype: 'textfield',\n             name: 'name',\n             label: 'Name'\n         }, {\n             xtype: 'emailfield',\n             name: 'email',\n             label: 'Email'\n         }, {\n             xtype: 'passwordfield',\n             name: 'password',\n             label: 'Password'\n         }]\n     });\n\n     Ext.define('MyController', {\n         extend: 'Ext.app.ViewController',\n         alias: 'controller.mycontroller',\n\n         onSubmit: function () {\n             var form = this.getView();\n\n             form.submit({\n                 url: 'url/to/submit/to',\n                 success: function () {\n                     Ext.Msg.alert('Form submitted successfully!');\n                 }\n             });\n         }\n     });\n\nIn this case we provided the `{@link #cfg!url url}` to submit the form to inside the submit call.\nAlternatively you can just set the {@link #url} config when you create the form. We can\nspecify other parameters (see {@link #method!submit} for details), including callback\nfunctions for success and failure. These functions are used to take some action in your\napp after your data has been saved to the server side.\n\nWhen doing a form submit, each field's value is serialized using the serializer for the\n{@link Ext.data.Model} used when `{@link #cfg!modelValidation modelValidation}` is enabled, or using the serializer\nspecified in the form field's {@link Ext.field.Field#dataType} config.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"enableSubmissionForm","text":"The submission form is generated but never added to the dom. It is a submittable\nversion of your form panel, allowing for fields that are not simple textfields\nto be properly submitted to servers. It will also send values that are easier\nto parse with server side code.\n\nIf this is false we will attempt to subject the raw form inside the form panel.\n","type":"Boolean","value":"true","src":{"accessor":"525,125,0","name":"525,117,27","text":"525,118,12,351","type":"525,117,18","value":"525,125,0"}},{"$type":"property","accessor":true,"name":"enctype","text":"The enctype attribute for the form, specifies how the form should be encoded\nwhen submitting.\n","type":"String","value":"null","src":{"accessor":"525,132,0","name":"525,128,26","text":"525,129,12,94","type":"525,128,18","value":"525,132,0"}},{"$type":"property","name":"fieldDefaults","text":"The properties in this object are used as default config values for field instance.\n","type":"Object","src":{"name":"525,169,26","text":"525,170,12,84","type":"525,169,18"}},{"$type":"property","name":"jsonSubmit","text":"If set to true, the field values are sent as JSON in the request body.\nAll of the field values, plus any additional params configured via\n{@link #baseParams} and/or the `options` to {@link #submit},\nwill be included in the values POSTed in the body of the request.\n","type":"Boolean","src":{"name":"525,174,27","text":"525,175,12,265","type":"525,174,18"}},{"$type":"property","accessor":true,"name":"method","text":"The method which this form will be submitted. `post` or `get`.\n","type":"String","value":"'post'","src":{"accessor":"525,138,0","name":"525,135,26","text":"525,136,12,63","type":"525,135,18","value":"525,138,0"}},{"$type":"property","accessor":true,"name":"multipartDetection","text":"If this is enabled the form will automatically detect the need to use\n'multipart/form-data' during submission.\n","type":"Boolean","value":"true","src":{"accessor":"525,145,0","name":"525,141,27","text":"525,142,12,111","type":"525,141,18","value":"525,145,0"}},{"$type":"property","accessor":true,"name":"standardSubmit","text":"Whether or not we want to perform a standard form submit.\n","type":"Boolean","value":"false","src":{"accessor":"525,151,0","name":"525,148,27","text":"525,149,12,58","type":"525,148,18","value":"525,151,0"}},{"$type":"property","accessor":true,"name":"submitOnAction","text":"When this is set to `true`, the form will automatically submit itself whenever\nthe `action` event fires on a field in this form. The action event usually fires\nwhenever you press go or enter inside a textfield.\n","type":"Object","value":"false","src":{"accessor":"525,159,0","name":"525,154,26","text":"525,155,12,211","type":"525,154,18","value":"525,159,0"}},{"$type":"property","accessor":true,"name":"trackResetOnLoad","text":"If set to true, {@link #reset}() resets to the last loaded or {@link #setValues}\ndata instead of when the form was first created.\n","type":"Boolean","value":"false","src":{"accessor":"525,166,0","name":"525,162,27","text":"525,163,12,130","type":"525,162,18","value":"525,166,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforesubmit","preventable":true,"text":"Fires immediately preceding any Form submit action.\nImplementations may adjust submitted form values or options prior to execution.\nA return value of `false` from this listener will abort the submission\nattempt (regardless of `{@link #cfg!standardSubmit standardSubmit}` configuration).\n","items":[{"$type":"param","name":"this","text":"This FormPanel.\n","type":"Ext.form.Panel","src":{"name":"525,106,32","text":"525,106,37,16","type":"525,106,16"}},{"$type":"param","name":"values","text":"A hash collection of the qualified form values to be sent to\nthe server.\n","type":"Object","src":{"name":"525,107,24","text":"525,107,31,61:525,108,8,12","type":"525,107,16"}},{"$type":"param","name":"options","text":"Additional options (this is only available when\n`{@link #cfg!standardSubmit standardSubmit}` is `false`).\n","type":"Object","src":{"name":"525,109,24","text":"525,109,32,48:525,110,8,30","type":"525,109,16"}},{"$type":"param","name":"e","text":"The event object if the form was submitted via a HTML5\nform submit event.\n","type":"Ext.event.Event","src":{"name":"525,111,33","text":"525,111,35,55:525,112,8,19","type":"525,111,16"}}],"src":{"name":"525,100,15","preventable":"525,101,8","text":"525,102,8,259"}},{"$type":"event","name":"submit","preventable":true,"text":"Fires upon successful (Ajax-based) form submission.\n","items":[{"$type":"param","name":"this","text":"This FormPanel.\n","type":"Ext.form.Panel","src":{"name":"525,94,32","text":"525,94,37,16","type":"525,94,16"}},{"$type":"param","name":"result","text":"The result object as returned by the server.\n","type":"Object","src":{"name":"525,95,24","text":"525,95,31,45","type":"525,95,16"}},{"$type":"param","name":"e","text":"The event object.\n","type":"Ext.event.Event","src":{"name":"525,96,33","text":"525,96,35,18","type":"525,96,16"}}],"src":{"name":"525,91,15","preventable":"525,92,8","text":"525,93,8,52"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyExtraParams","items":[{"$type":"param","name":"options","src":{"name":"525,387,0"}}],"src":{"access":"525,385,12","name":"525,387,0"}},{"$type":"method","access":"private","name":"beforeAjaxSubmit","items":[{"$type":"param","name":"form","src":{"name":"525,404,0"}},{"$type":"param","name":"options","src":{"name":"525,404,0"}},{"$type":"param","name":"successFn","src":{"name":"525,404,0"}},{"$type":"param","name":"failureFn","src":{"name":"525,404,0"}}],"src":{"access":"525,402,12","name":"525,404,0"}},{"$type":"method","access":"private","name":"beforeDirectSubmit","items":[{"$type":"param","name":"api","src":{"name":"525,538,0"}},{"$type":"param","name":"form","src":{"name":"525,538,0"}},{"$type":"param","name":"options","src":{"name":"525,538,0"}},{"$type":"param","name":"successFn","src":{"name":"525,538,0"}},{"$type":"param","name":"failureFn","src":{"name":"525,538,0"}}],"src":{"access":"525,536,12","name":"525,538,0"}},{"$type":"method","access":"private","name":"beforeStandardSubmit","items":[{"$type":"param","name":"form","src":{"name":"525,573,0"}},{"$type":"param","name":"options","src":{"name":"525,573,0"}}],"src":{"access":"525,571,12","name":"525,573,0"}},{"$type":"method","access":"private","name":"createSubmissionForm","items":[{"$type":"param","name":"form","src":{"name":"525,608,0"}},{"$type":"param","name":"values","src":{"name":"525,608,0"}}],"src":{"access":"525,606,12","name":"525,608,0"}},{"$type":"method","access":"private","name":"doBeforeSubmit","items":[{"$type":"param","name":"me","src":{"name":"525,658,0"}},{"$type":"param","name":"formValues","src":{"name":"525,658,0"}},{"$type":"param","name":"options","src":{"name":"525,658,0"}}],"src":{"access":"525,656,12","name":"525,658,0"}},{"$type":"method","access":"private","name":"initialize","src":{"access":"525,197,8","name":"525,199,0"}},{"$type":"method","access":"private","name":"onFieldAction","items":[{"$type":"param","name":"field","src":{"name":"525,241,0"}}],"src":{"access":"525,239,8","name":"525,241,0"}},{"$type":"method","access":"private","name":"onSubmit","items":[{"$type":"param","name":"event","src":{"name":"525,220,0"}}],"src":{"access":"525,218,8","name":"525,220,0"}},{"$type":"method","name":"submit","text":"Performs a Ajax-based submission of form values (if {@link #standardSubmit} is false)\nor otherwise executes a standard HTML Form submit action.\n\n**Notes**\n\n 1. Only the first parameter is implemented. Put all other parameters inside the first\n parameter:\n\n    submit({params: \"\" ,headers: \"\" etc.})\n\n 2. Submit example:\n\n    myForm.submit({\n      url: 'PostMyData/To',\n      method: 'Post',\n      success: function () { Ext.Msg.alert(\"success\"); },\n      failure: function () { Ext.Msg.alert(\"error\"); }\n    });\n\n 3. Parameters and values only submit for a POST and not for a GET.\n","items":[{"$type":"param","name":"options","text":"The configuration when submitting this form.\n\nThe following are the configurations when submitting via Ajax only:\n","type":"Object","items":[{"$type":"property","name":"url","text":"The url for the action (defaults to the form's {@link #url}).\n","type":"String","src":{"name":"525,275,32","text":"525,276,8,63","type":"525,275,16"}},{"$type":"property","name":"method","text":"The form method to use (defaults to the form's {@link #method}, or POST if not defined).\n","type":"String","src":{"name":"525,278,32","text":"525,279,8,90","type":"525,278,16"}},{"$type":"property","name":"headers","text":"Request headers to set for the action.\n","type":"Object","src":{"name":"525,281,32","text":"525,282,8,40","type":"525,281,16"}},{"$type":"property","name":"autoAbort","optional":true,"text":"`true` to abort any pending Ajax request prior to submission.\n__Note:__ Has no effect when `{@link #standardSubmit}` is enabled.\n","type":"Boolean","value":"false","src":{"name":"525,284,34","text":"525,285,8,130","type":"525,284,16","value":"525,284,44"}},{"$type":"property","name":"timeout","text":"The number is seconds the loading will timeout in.\n\nThe following are the configurations when loading via Ajax or Direct:\n","type":"Number","src":{"name":"525,288,32","text":"525,289,8,123","type":"525,288,16"}},{"$type":"property","name":"params","text":"The params to pass when submitting this form (defaults to this forms {@link #baseParams}).\nParameters are encoded as standard HTTP parameters using {@link Ext#urlEncode}.\n","type":"String/Object","src":{"name":"525,293,39","text":"525,294,8,172","type":"525,293,16"}},{"$type":"property","name":"submitDisabled","optional":true,"text":"`true` to submit all fields regardless of disabled state.\n__Note:__ Has no effect when `{@link #standardSubmit}` is enabled.\n","type":"Boolean","value":"false","src":{"name":"525,297,34","text":"525,298,8,126","type":"525,297,16","value":"525,297,49"}},{"$type":"property","name":"waitMsg","optional":true,"text":"If specified, the value which is passed to the loading {@link #masked mask}. See\n{@link #masked} for more information.\n","type":"String/Object","src":{"name":"525,301,40","text":"525,302,8,120","type":"525,301,16"}},{"$type":"property","name":"success","text":"The callback that will be invoked after a successful response. A response is\nsuccessful if a response is received from the server and is a JSON object where the\n`success` property is set to `true`, `{\"success\": true}`.\n\nThe function is passed the following parameters and can be used for submitting via\nAjax or Direct:\n","type":"Function","items":[{"$type":"property","name":"form","text":"The {@link Ext.form.Panel} that requested the action.\n","type":"Ext.form.Panel","src":{"name":"525,313,48","text":"525,314,8,55","type":"525,313,16"}},{"$type":"property","name":"result","text":"The result object returned by the server as a result of the submit request. If the\nsubmit is sent using Ext Direct, this will return the {@link Ext.direct.Event}\ninstance, otherwise will return an Object.\n","type":"Object/Ext.direct.Event","src":{"name":"525,316,57","text":"525,317,8,206","type":"525,316,16"}},{"$type":"property","name":"data","text":"The parsed data returned by the server.\n","type":"Object","src":{"name":"525,321,40","text":"525,322,8,41","type":"525,321,16"}}],"src":{"name":"525,305,34","text":"525,306,8,320","type":"525,305,16"}},{"$type":"property","name":"failure","text":"The callback that will be invoked after a failed transaction attempt.\n\nThe function is passed the following parameters and can be used for submitting via\nAjax or Direct:\n","type":"Function","items":[{"$type":"property","name":"form","text":"The {@link Ext.form.Panel} that requested the submit.\n","type":"Ext.form.Panel","src":{"name":"525,330,48","text":"525,331,8,55","type":"525,330,16"}},{"$type":"property","name":"result","text":"The failed response or result object returned by the server which performed the\noperation.\n","type":"Ext.form.Panel","src":{"name":"525,333,48","text":"525,334,8,92","type":"525,333,16"}}],"src":{"name":"525,324,34","text":"525,325,8,171","type":"525,324,16"}},{"$type":"property","name":"scope","text":"The scope in which to call the callback functions (The `this` reference for the\ncallback functions).\n","type":"Object","src":{"name":"525,337,32","text":"525,338,8,102","type":"525,337,16"}}],"src":{"name":"525,270,24","text":"525,271,8,115","type":"525,270,16"}},{"$type":"param","name":"e","src":{"name":"525,341,15"}},{"$type":"return","text":"The request object if the {@link #standardSubmit}\nconfig is false. If `{@link #cfg!standardSubmit standardSubmit}` is `true`, then the return value is undefined.\n","type":"Ext.data.Connection","src":{"text":"525,343,38,50:525,344,8,84","type":"525,343,17"}}],"src":{"name":"525,346,0","text":"525,249,8,582"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$formpanel-body-background-color","text":"FormPanel body background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1201,9,35","name":"1201,9,1","text":"1201,7,4,32","type":"1201,6,10","value":"1201,9,43"}}]}],"src":{"alias":"525,73,0","alternateClassNames":"525,80,0","extends":"525,72,0","mixins":"525,77,0","name":"1201,2,11","text":"525,2,4,2430"},"group":"Container","displayName":"Form Panel"},{"$type":"class","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.calendar.EventBase,Ext.calendar.header.Base,Ext.calendar.view.Base,Ext.list.Tree,Ext.Progress,Ext.sparkline.Base,Ext.ux.gauge.Gauge,Ext.ux.rating.Picker","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Gadget","text":"\n`{@link Ext.Gadget}` is not actually a class but simply an alternate class name for `{@link Ext.Component}`.\nIt is used primarily for writing cross-toolkit widgets.\n\nIn the classic toolkit, `{@link Ext.Gadget}` is an alternate class name for `{@link Ext.Widget}`. Since\nmost containers do not accept `{@link Ext.Widget}` as `items` in the modern toolkit, this alternate\nname allows gadgets to be used in a cross-toolkit manner.\n","src":{"extends":"415,3,12","name":"415,2,11","text":"415,4,4,389"},"displayName":"Gadget"},{"$type":"class","alias":"widget.grid","extended":"Ext.dataview.List,Ext.dataview.Component,Ext.dataview.Abstract,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.grid.Tree,Ext.pivot.Grid","extends":"Ext.dataview.List","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.Bufferable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.ItemRippler,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","mixins":"Ext.mixin.ConfigProxy","name":"Ext.grid.Grid","requires":"Ext.TitleBar,Ext.grid.NavigationModel,Ext.grid.Row,Ext.grid.column.Column,Ext.grid.column.Date,Ext.grid.column.Template,Ext.grid.menu.*,Ext.grid.HeaderContainer,Ext.grid.selection.*,Ext.grid.plugin.ColumnResizing,Ext.grid.plugin.HeaderReorder","text":"Grids are an excellent way of showing large amounts of tabular data on the client side.\nEssentially a supercharged `<table>`, Grid makes it easy to fetch, sort and filter large\namounts of data.\n\nGrids are composed of two main pieces - a {@link Ext.data.Store Store} full of data and\na set of columns to render.\n\n## A Basic Grid\n\n    var store = Ext.create('Ext.data.Store', {\n        fields: ['name', 'email', 'phone'],\n        data: [\n            { 'name': 'Lisa',  \"email\":\"lisa@simpsons.com\",  \"phone\":\"555-111-1224\"  },\n            { 'name': 'Bart',  \"email\":\"bart@simpsons.com\",  \"phone\":\"555-222-1234\" },\n            { 'name': 'Homer', \"email\":\"home@simpsons.com\",  \"phone\":\"555-222-1244\"  },\n            { 'name': 'Marge', \"email\":\"marge@simpsons.com\", \"phone\":\"555-222-1254\"  }\n        ]\n    });\n\n    Ext.create('Ext.grid.Grid', {\n        title: 'Simpsons',\n\n        store: store,\n\n        columns: [\n            { text: 'Name',  dataIndex: 'name', width: 200 },\n            { text: 'Email', dataIndex: 'email', width: 250 },\n            { text: 'Phone', dataIndex: 'phone', width: 120 }\n        ],\n\n        height: 200,\n        layout: 'fit',\n        fullscreen: true\n    });\n\nThe code above produces a simple grid with three columns. We specified a Store which will\nload JSON data inline. In most apps we would be placing the grid inside another container\nand wouldn't need to provide the {@link #height}, {@link #width} and\n{@link #cfg-fullscreen} options but they are included here to for demonstration.\n\nThe grid we created above will contain a header bar with a title ('Simpsons'), a row of\ncolumn headers directly underneath and finally the grid rows under the headers.\n\n## Columns\n\nBy default, each {@link Ext.grid.column.Column column} is sortable and toggles between\nascending and descending sorting when you click on its header. There are several basic\nconfigs that can be applied to columns to change these behaviors. For example:\n\n    columns: [\n        {\n            text: 'Name',\n            dataIndex: 'name',\n            sortable: false,  // column cannot be sorted\n            width: 250\n        },\n        {\n            text: 'Email',\n            dataIndex: 'email',\n            hidden: true  // column is initially hidden\n        },\n        {\n            text: 'Phone',\n            dataIndex: 'phone',\n            width: 100\n        }\n    ]\n\nWe turned off sorting on the 'Name' column so clicking its header now has no effect. We\nalso made the Email column hidden by default (it can be shown again by using the\n{@link Ext.grid.plugin.ViewOptions ViewOptions} plugin). See the\n{@link Ext.grid.column.Column column class} for more details.\n\nA top-level column definition may contain a `{@link #cfg!columns columns}` configuration. This means that the\nresulting header will be a group header, and will contain the child columns.\n\n## Rows and Cells\n\nGrid extends the `{@link Ext.dataview.List List}` component and connects records in the\nstore to `{@link Ext.grid.Row row components}` for the list's items. The Row component\nutilizes the configs of the grid's {@link Ext.grid.column.Column columns} to create the\nappropriate type of {@link Ext.grid.cell.Base cells}. Essentially, a Row is a container\nfor {@link Ext.Widget Cell widgets}.\n\nFor the most part, configuring a grid is about configuring the columns and their cells.\nThere are several built-in column types to display specific types of data:\n\n - {@link Ext.grid.column.Boolean} for true/false values.\n - {@link Ext.grid.column.Date} for date/time values.\n - {@link Ext.grid.column.Number} for numeric values.\n\nThese columns specify (via their {@link Ext.grid.column.Column#cell cell config}) one\nof these basic cell widget types:\n\n - {@link Ext.grid.cell.Boolean}\n - {@link Ext.grid.cell.Date}\n - {@link Ext.grid.cell.Number}\n\nIn addition to the above basic cell types, there are two other useful cell types to\nknow about:\n\n - {@link Ext.grid.cell.Text} is the base class for the boolean, date and number cell\n   classes. It is useful when a cell contains only text.\n - {@link Ext.grid.cell.Widget} is a cell class that manages a single child item (either\n   a {@link Ext.Component component} or a {@link Ext.Widget widget}). The child item is\n   configured using the `{@link Ext.grid.cell.Widget#widget widget config}`. The most\n   important part of this config is the `{@link #cfg!xtype xtype}` of the child item to create.\n\n## Cells and Binding\n\nOne technique to controll cell content and styling is to use data binding to target\ncell configs like {@link Ext.grid.cell.Base#cls} and {@link Ext.grid.cell.Base#bodyCls}.\nThis is done by assigning a {@link Ext.app.ViewModel viewModel} to each Row like so:\n\n     itemConfig: {\n         viewModel: true  // create default ViewModel for each item (i.e., Row)\n     }\n\nNow that each Row has a ViewModel, cells can bind to the fields of the associated record\nlike so:\n\n     columns: [{\n         ...\n         cell: {\n             bind: {\n                 cls: '{record.someCls}'\n             }\n         }\n     }]\n\nThe \"record\" property in the ViewModel is managed by the Row. As Row instances are\nrecycled due to buffered rendering, the associated record instance simply changes over\ntime.\n\n### Cell Widgets\n\nWhen using {@link Ext.grid.cell.Widget}, the contained widgets can also use binding to\nconfigure themsleves using properties of the associated record.\n\n     columns: [{\n         ...\n         cell: {\n             xtype: 'widgetcell',\n             widget: {\n                 xtype: 'button',\n                 bind: {\n                     text: 'Update {record.firstName}'\n                 }\n             }\n         }\n     }]\n\n### Row ViewModels\n\nIn some cases a custom ViewModel could be useful, for example to provide useful values\nvia {@link Ext.app.ViewModel#formulas formulas}.\n\n     itemConfig: {\n         viewModel: {\n             type: 'rowViewModel'\n         }\n     }\n\n## Renderers and Templates\n\nColumns provide two other mechanisms to format their cell content:\n\n - {@link Ext.grid.column.Column#renderer}\n - {@link Ext.grid.column.Column#tpl}\n\nThese column configs are processed by the {@link Ext.grid.column.Cell default cell type}\nfor a column. These configs have some downsides compared to data binding but are provided\nfor compatibility with previous releases.\n\n - Renderers and templates must update the cell content when _any_ field changes. They\n   cannot assume that only changes to the dataIndex will affect the rendering. Using\n   data binding, only the configs affected by the changed data will be updated.\n - Updates are processed synchronously in response to the record update notification.\n   Contrast to ViewModels which provide a buffered update mechanism.\n - Constructing HTML blocks in code (even in a template) is a common cause of security\n   problems such as XSS attacks.\n\n## Sorting & Filtering\n\nEvery grid is attached to a {@link Ext.data.Store Store}, which provides multi-sort and\nfiltering capabilities. It's easy to set up a grid to be sorted from the start:\n\n    var myGrid = Ext.create('Ext.grid.Panel', {\n        store: {\n            fields: ['name', 'email', 'phone'],\n            sorters: ['name', 'phone']\n        },\n        columns: [\n            { text: 'Name',  dataIndex: 'name' },\n            { text: 'Email', dataIndex: 'email' }\n        ]\n    });\n\nSorting at run time is easily accomplished by simply clicking each column header. If you\nneed to perform sorting on more than one field at run time it's easy to do so by adding\nnew sorters to the store:\n\n    myGrid.store.sort([\n        { property: 'name',  direction: 'ASC' },\n        { property: 'email', direction: 'DESC' }\n    ]);\n\nSee {@link Ext.data.Store} for examples of filtering.\n\n## Plugins\n\nGrid supports addition of extra functionality through plugins:\n\n- {@link Ext.grid.plugin.ViewOptions ViewOptions} - adds the ability to show/hide\n  columns and reorder them.\n\n- {@link Ext.grid.plugin.ColumnResizing ColumnResizing} - allows for the ability to\n  resize columns.\n\n- {@link Ext.grid.plugin.Editable Editable} - editing grid contents one row at a time.\n\n- {@link Ext.grid.plugin.RowOperations RowOperations} - selecting and performing tasks\n  on severalrows at a time (e.g. deleting them).\n\n- {@link Ext.grid.plugin.PagingToolbar PagingToolbar} - adds a toolbar at the bottom of\n  the grid that allows you to quickly navigate to another page of data.\n\n- {@link Ext.grid.plugin.SummaryRow SummaryRow} - adds and pins an additional row to the\n  top of the grid that enables you to display summary data.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"columnLines","optional":true,"text":"Configure as `true` to display lines between grid cells.\n","type":"Boolean","value":"false","src":{"accessor":"527,446,0","name":"527,443,28","text":"527,444,12,57","type":"527,443,18","value":"527,443,40"}},{"$type":"property","accessor":true,"name":"columnMenu","text":"This is a config object which is used by columns in this grid to create their\nheader menus.\n\nThe default column menu contains the following items.\n\n- A \"Sort Ascending\" menu item\n- A \"Sort Descending\" menu item\n- A Columns menu item with each of the columns in a sub-menu of check items\n  that is used to hide or show each column.\n- A \"Group by this field\" menu item to enable grouping.\n- A \"Show in groups\" check menu item to enable/disable grouping.\n\nThese items have {@link #cfg!weight} of `-100`, `-90` and `-80` respectively to\nplace them at the start of the menu.\n\nThis can be configured as `null` to prevent columns from showing a column menu.\n","type":"Object","value":"{\n    xtype: 'menu',\n    weighted: true,\n    align: 'tl-bl?',\n    hideOnParentHide: false,\n    // Persists when owning Column is hidden\n    items: {\n        sortAsc: {\n            xtype: 'gridsortascmenuitem',\n            group: 'sortDir',\n            weight: -100\n        },\n        // Wants to be the first\n        sortDesc: {\n            xtype: 'gridsortdescmenuitem',\n            group: 'sortDir',\n            weight: -90\n        },\n        // Wants to be the second\n        //---------------------------------\n        // Columns menu is inserted here\n        //---------------------------------\n        groupByThis: {\n            xtype: 'gridgroupbythismenuitem',\n            handler: 'column.onGroupByThis',\n            separator: true,\n            weight: -50\n        },\n        showInGroups: {\n            xtype: 'gridshowingroupsmenuitem',\n            handler: 'column.onToggleShowInGroups',\n            weight: -40\n        }\n    }\n}","src":{"accessor":"527,309,0","name":"527,291,26","text":"527,292,12,651","type":"527,291,18","value":"527,311,0"}},{"$type":"property","accessor":true,"name":"columnResize","text":"Set to `false` to disable column resizing within this grid.\n","type":"Boolean","value":"true","src":{"accessor":"527,349,0","name":"527,346,27","text":"527,347,12,60","type":"527,346,18","value":"527,349,0"}},{"$type":"property","accessor":true,"name":"columns","required":true,"text":"An array of column definition objects which define all columns that appear in this grid.\nEach column definition provides the header text for the column, and a definition of where\nthe data for that column comes from.\n\nThis can also be a configuration object for a {Ext.grid.header.Container HeaderContainer}\nwhich may override certain default configurations if necessary. For example, the special\nlayout may be overridden to use a simpler layout, or one can set default values shared\nby all columns:\n\n     columns: {\n         items: [\n             {\n                 text: \"Column A\"\n                 dataIndex: \"field_A\",\n                 width: 200\n             },{\n                 text: \"Column B\",\n                 dataIndex: \"field_B\",\n                 width: 150\n             },\n             ...\n         ]\n     }\n","type":"Ext.grid.column.Column[]","value":"null","src":{"accessor":"527,288,0","name":"527,262,44","required":"527,262,53","text":"527,263,12,821","type":"527,262,18","value":"527,288,0"}},{"$type":"property","accessor":true,"name":"columnsMenuItem","text":"The config object for the grid's column hide/show menu\n","type":"Ext.grid.menu.Columns","value":"{\n    xtype: 'gridcolumnsmenu',\n    weight: -80,\n    separator: true\n}","src":{"accessor":"527,433,0","name":"527,430,41","text":"527,431,12,55","type":"527,430,18","value":"527,435,0"}},{"$type":"property","accessor":true,"name":"enableColumnMove","text":"Set to `false` to disable column reorder.\n\n**Note**: if `gridviewoptions` plugin is enabled on grids gets\nprecedence over `{@link #cfg!enableColumnMove enableColumnMove}` for touch supported device.\n","type":"Boolean","value":"true","src":{"accessor":"527,370,0","name":"527,364,27","text":"527,365,12,169","type":"527,364,18","value":"527,370,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"groupHeader","text":"This config is used to configure a header to display above each group in a\n{@link #grouped grouped} list. One of the more common uses of this config\nis to set the {@link Ext.dataview.ItemHeader#cfg!tpl tpl}.\n\n     groupHeader: {\n         tpl: 'Group: {name}'\n     }\n","type":"Object/Ext.dataview.ItemHeader","value":"{\n    xtype: 'rowheader'\n}","src":{"accessor":"453,561,0","inheritdoc":"527,483,8","name":"527,482,13","text":"453,551,12,267","type":"453,550,18","value":"527,485,0"}},{"$type":"property","accessor":true,"name":"hideHeaders","since":"6.0.1","text":"`true` to hide the grid column headers.\n","type":"Boolean","value":"false","src":{"accessor":"527,361,0","name":"527,356,27","since":"527,359,19","text":"527,357,12,41","type":"527,356,18","value":"527,361,0"}},{"$type":"property","access":"private","accessor":true,"name":"hideScrollbar","type":"Boolean","value":"null","src":{"access":"527,375,12","accessor":"527,377,0","name":"527,373,27","type":"527,373,18","value":"527,377,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"infinite","text":"Set to `true` to if this list should anticipate too many rows to render to the\nDOM at one time. When set to `true`, only a fixed number of rows is rendered at\nonce, depending on the `{@link #cfg!height height}` or `{@link #cfg!maxHeight maxHeight}` of the list.\n\nWhen using this mode in an auto-height situation (where the `list` should be\nthe height of its items), a `{@link #cfg!maxHeight maxHeight}` setting is required. This is due to\nthe fact that the rendered items are absolutely positioned. As such they do not\ndirectly contribute to the list's height.\n\nWhen `{@link #cfg!maxHeight maxHeight}` is set, however, an infinite list uses that setting to decide\nhow many items to render **and** will set an appropriate height on its innermost\nelement, thereby allowing the list to achieve the proper height.\n\nNote that this configuration can not be dynamically changed after the list has\ninstantiated.\n","type":"Boolean","value":"true","src":{"accessor":"453,608,0","inheritdoc":"527,491,8","name":"527,490,13","text":"453,592,12,815","type":"453,591,18","value":"527,493,0"}},{"$type":"property","accessor":true,"name":"itemConfig","text":"The object is used to configure the {@link Ext.grid.Row rows) created by this Grid.\n\nAn `{@link #cfg!xtype xtype}` property may be included to specify a user-supplied subclass of\n{@link Ext.grid.Row}.\n\nSee the {@link Ext.grid.row#cfg!body} and {@link Ext.grid.row#cfg!expandedField}\nconfigs on the {@link Ext.grid.RowRow class} to easily add extra content to grid\nrows.\n\nBe aware that if you specify a {@link Ext.grid.row#cfg!body row body}, you must\nconfigure the owning grid with `{@link #variableHeights}: true`.\n","type":"Object/Ext.grid.Row","value":"{\n    xtype: 'gridrow'\n}","src":{"accessor":"444,90,0","name":"527,464,35","text":"527,465,8,497","type":"527,464,14","value":"527,477,0"}},{"$type":"property","accessor":true,"hide":true,"name":"itemsFocusable","text":"Grid Rows are not focusable. Cells are focusable.\n","value":"false","src":{"accessor":"527,383,0","hide":"527,380,12","name":"527,383,0","text":"527,381,12,50","value":"527,383,0"}},{"$type":"property","accessor":true,"name":"multiColumnSort","text":"Configure as `true` to have columns retain their sorted state after other\ncolumns have been clicked upon to sort.\n\nAs subsequent columns are clicked upon, they become the new primary sort key.\n\nClicking on an already sorted column which is *not* the primary sort key does\nnot toggle its direction. Analogous to bringing a window to the top by\nclicking it, this makes that column's field the primary sort key. Subsequent\nclicks then toggle it.\n\nClicking on a primary key column toggles `ASC` -> `DESC` -> no sorter.\n\nThe column sorting menu items may be used to toggle the direction without\naffecting the sorter priority.\n\nThe maximum number of sorters allowed in a Store is configurable via its\nunderlying data collection. See {@link Ext.util.Collection#multiSortLimit}\n","type":"Boolean","value":"false","src":{"accessor":"527,427,0","name":"527,408,27","text":"527,409,12,770","type":"527,408,18","value":"527,427,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"pinnedHeader","text":"A config object for the pinned header. Only applicable when {@link #pinHeaders}\nand {@link #grouped} are `true`.\n","type":"Object","value":"{\n    xtype: 'rowheader'\n}","src":{"accessor":"453,680,0","inheritdoc":"527,500,8","name":"527,499,13","text":"453,677,12,113","type":"453,676,18","value":"527,502,0"}},{"$type":"property","name":"reserveScrollbar","optional":true,"text":"*only meaningful on platforms which has space-consuming scroll bars*\n\nConfigure as `true` to leave space for a scrollbar to appear even if the\ncontent does not overflow.\n\nThis is useful for trees which may expand and collapse causing visual\nflickering when scrollbars appear or disappear.\n","type":"Boolean","value":"false","src":{"name":"527,528,32","text":"527,529,16,289","type":"527,528,22","value":"527,528,49"}},{"$type":"property","accessor":true,"name":"rowNumbers","optional":true,"text":"Configure as `true` to a {@link Ext.grid.column.RowNumberer row numberer}\ncolumn which gravitates to the start of the grid.\n\nMay be a {@link Ext.grid.column.RowNumberer} configuration object. For\ninstance to set the column title use:\n\n    rowNumbers: {\n        text: 'Index'\n    }\n","type":"Boolean/Object","value":"false","src":{"accessor":"527,460,0","name":"527,449,35","text":"527,450,12,281","type":"527,449,18","value":"527,449,46"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"scrollable","text":"Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or `null`) to disable scrolling - this is the default.\n- `{@link #cfg!x x}` or `horizontal` to enable horizontal scrolling only\n- `{@link #cfg!y y}` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a `{@link Ext.scroll.Scroller}` if\nif advanced configuration is needed.\n\nThe getter for this config returns the {@link Ext.scroll.Scroller Scroller}\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n","type":"Boolean/String/Object","value":"true","src":{"accessor":"410,422,12","inheritdoc":"527,508,8","name":"527,507,13","text":"410,406,12,685","type":"410,405,18","value":"527,510,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"scrollToTopOnRefresh","text":"Scroll the DataView to the top when the DataView is refreshed.\n","type":"Boolean","value":"false","src":{"accessor":"440,354,12","inheritdoc":"527,514,8","name":"527,513,13","text":"440,353,12,63","type":"440,352,18","value":"527,516,0"}},{"$type":"property","accessor":true,"name":"selectable","text":"A configuration object which allows passing of configuration options to create or\nreconfigure a {@link Ext.grid.selection.Model selection model}.\n\nThe following options control what can be selected:\n\n - {@link Ext.grid.selection.Model#cfg!cells cells}\n - {@link Ext.grid.selection.Model#cfg!columns columns}\n - {@link Ext.grid.selection.Model#cfg!rows rows}\n\nThese options control how selections can be made:\n\n - {@link Ext.grid.selection.Model#cfg!checkbox checkbox}\n - {@link Ext.grid.selection.Model#cf!deselectable deselectable}\n - {@link Ext.grid.selection.Model#cfg!drag drag}\n - {@link Ext.grid.selection.Model#cfg!extensible extensible}\n - {@link Ext.grid.selection.Model#cfg!mode mode}\n - {@link Ext.grid.selection.Model#cfg!reducible reducible}\n","type":"Ext.grid.selection.Model","src":{"accessor":"440,481,0","name":"527,542,40","text":"527,543,8,755","type":"527,542,14"}},{"$type":"property","accessor":true,"name":"sortable","text":"Configure as `false` to disable column sorting via clicking the header and via\nthe Sorting menu items.\n","type":"Boolean","value":"true","src":{"accessor":"527,405,0","name":"527,401,27","text":"527,402,12,103","type":"527,401,18","value":"527,405,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"striped","text":"Set this to `true` if you want the items in this DataView to be zebra striped.\nalternating their background color.\nOnly applicable if the stylesheet provides styling for alternate items.\n\nBy default the stylesheet does not provide styling for DataView items, but it\ncan be enabled by setting the `{@link #cfg!ui ui}` to `'basic'`.\n\nLists and Grids provide default styling for striped items\n","type":"Boolean","value":"true","src":{"accessor":"444,156,0","inheritdoc":"527,520,8","name":"527,519,13","text":"444,147,12,374","type":"444,146,18","value":"527,522,0"}},{"$type":"property","accessor":true,"name":"title","text":"The title that will be displayed in the TitleBar at the top of this Grid.\n","type":"String","value":"''","src":{"accessor":"527,389,0","name":"527,386,26","text":"527,387,12,74","type":"527,386,18","value":"527,389,0"}},{"$type":"property","accessor":true,"name":"titleBar","text":"The TitleBar.\n","type":"Object","value":"{\n    xtype: 'titlebar',\n    docked: 'top'\n}","src":{"accessor":"527,395,0","name":"527,392,26","text":"527,393,12,14","type":"527,392,18","value":"527,395,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforecomplete","since":"7.0","text":"Fires after a change has been made to the field, but before the change is reflected in the\nunderlying field.  Saving the change to the field can be canceled by returning false from\nthe handler of this event. Note that if the value has not changed and ignoreNoChange = true,\nthe editing will still end but this event will not fire since no edit actually occurred.\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,660,28","type":"527,660,16"}},{"$type":"param","name":"value","text":"The current field value\n","type":"Object","src":{"name":"527,661,24","text":"527,661,30,24","type":"527,661,16"}},{"$type":"param","name":"startValue","text":"The original field value\n","type":"Object","src":{"name":"527,662,24","text":"527,662,35,25","type":"527,662,16"}},{"$type":"param","name":"The","text":"location where actionable mode was successfully started\n","type":"Ext.grid.Location","src":{"name":"527,663,35","text":"527,663,39,56","type":"527,663,16"}}],"src":{"name":"527,655,15","since":"527,664,15","text":"527,656,8,363"}},{"$type":"event","name":"beforeedit","text":"Fires before row editing is triggered. Return `false` from event handler to prevent\nthe editing.\n\nThis event is only fired if the {@link Ext.grid.rowedit.Plugin rowedit} plugin is\nconfigured on the grid.\n","items":[{"$type":"param","name":"sender","type":"Ext.grid.Grid","src":{"name":"588,38,31","type":"588,38,16"}},{"$type":"param","name":"location","text":"The editing location.\n","type":"Ext.grid.Location","items":[{"$type":"property","name":"editor","text":"The editor component.\n","type":"Ext.grid.rowedit.RowEditor","src":{"name":"588,40,53","text":"588,40,60,22","type":"588,40,16"}}],"src":{"name":"588,39,35","text":"588,39,44,22","type":"588,39,16"}}],"src":{"name":"588,31,15","text":"588,32,8,205"}},{"$type":"event","name":"beforeselectionextend","text":"An event fired when an extension block is extended\nusing a drag gesture. Only fired when the grid's\n`{@link Ext.grid.Grid.selectable #cfg!selectable}` is configured with the\n{@link Ext.grid.selection.Model#extensible extensible} config.\n","items":[{"$type":"param","name":"grid","text":"The owning grid.\n","type":"Ext.grid.Grid","src":{"name":"591,237,31","text":"591,237,36,17","type":"591,237,16"}},{"$type":"param","name":"An","text":"object which encapsulates a contiguous\nselection block.\n","type":"Ext.dataview.selection.Selection","src":{"name":"591,238,50","text":"591,238,53,39:591,239,8,17","type":"591,238,16"}},{"$type":"param","name":"extension","text":"An object describing the type and size of extension.\n","type":"Object","items":[{"$type":"property","name":"type","text":"`\"rows\"` or `\"columns\"`\n","type":"String","src":{"name":"591,241,34","text":"591,241,39,24","type":"591,241,16"}},{"$type":"property","name":"start","text":"The start (top left) cell of the\nextension area.\n","type":"Ext.grid.Location","src":{"name":"591,242,45","text":"591,242,51,33:591,243,8,16","type":"591,242,16"}},{"$type":"property","name":"end","text":"The end (bottom right) cell of the\nextension area.\n","type":"Ext.grid.Location","src":{"name":"591,244,45","text":"591,244,49,35:591,245,8,16","type":"591,244,16"}},{"$type":"property","name":"columns","optional":true,"text":"The number of columns extended (-ve means on\nthe left side).\n","type":"number","src":{"name":"591,246,35","text":"591,246,44,45:591,247,8,16","type":"591,246,16"}},{"$type":"property","name":"rows","optional":true,"text":"The number of rows extended (-ve means on the top\nside).\n","type":"number","src":{"name":"591,248,35","text":"591,248,41,50:591,249,8,7","type":"591,248,16"}}],"src":{"name":"591,240,24","text":"591,240,34,53","type":"591,240,16"}}],"src":{"name":"591,232,15","text":"591,232,37,51:591,233,8,187"}},{"$type":"event","name":"beforestartedit","since":"7.0","text":"Fires when editing is initiated, but before the value changes.  Editing can be canceled by\nreturning false from the handler of this event.\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,637,28","type":"527,637,16"}},{"$type":"param","name":"boundEl","text":"The underlying element bound to this editor\n","type":"Ext.dom.Element","src":{"name":"527,638,33","text":"527,638,41,44","type":"527,638,16"}},{"$type":"param","name":"value","text":"The field value being set\n","type":"Object","src":{"name":"527,639,24","text":"527,639,30,26","type":"527,639,16"}},{"$type":"param","name":"The","text":"location where actionable mode was successfully started\n","type":"Ext.grid.Location","src":{"name":"527,640,35","text":"527,640,39,56","type":"527,640,16"}}],"src":{"name":"527,634,15","since":"527,641,15","text":"527,635,8,139"}},{"$type":"event","name":"canceledit","since":"7.0","text":"Fires after editing has been canceled and the editor's value has been reset.\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,681,28","type":"527,681,16"}},{"$type":"param","name":"value","text":"The user-entered field value that was discarded\n","type":"Object","src":{"name":"527,682,24","text":"527,682,30,48","type":"527,682,16"}},{"$type":"param","name":"startValue","text":"The original field value that was set back into the editor after\ncancel\n","type":"Object","src":{"name":"527,683,24","text":"527,683,35,65:527,684,8,7","type":"527,683,16"}}],"src":{"name":"527,679,15","since":"527,685,15","text":"527,680,8,77"}},{"$type":"event","name":"canceledit","text":"Fires when the user started editing but then cancelled the edit.\n\nThis event is only fired if the {@link Ext.grid.rowedit.Plugin rowedit} plugin is\nconfigured on the grid.\n","items":[{"$type":"param","name":"sender","type":"Ext.grid.Grid","src":{"name":"588,105,31","type":"588,105,16"}},{"$type":"param","name":"location","text":"The editing location.\n","type":"Ext.grid.Location","items":[{"$type":"property","name":"editor","text":"The editor component.\n","type":"Ext.grid.rowedit.RowEditor","src":{"name":"588,107,53","text":"588,107,60,22","type":"588,107,16"}}],"src":{"name":"588,106,35","text":"588,106,44,22","type":"588,106,16"}}],"src":{"name":"588,99,15","text":"588,100,8,173"}},{"$type":"event","name":"cellselection","text":"Fires when cell selection is being used and cells are selected or deselected.\n","items":[{"$type":"param","name":"grid","text":"this Grid\n","type":"Ext.grid.Grid","src":{"name":"527,620,31","text":"527,620,36,10","type":"527,620,16"}},{"$type":"param","name":"selection","text":"An object which encapsulates the\nselected cell range(s).\n","type":"Ext.grid.selection.Rows","src":{"name":"527,621,41","text":"527,621,51,33:527,622,8,24","type":"527,621,16"}}],"src":{"name":"527,618,15","text":"527,619,8,78"}},{"$type":"event","name":"columnadd","text":"Fires whenever a column is added to the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,565,31","text":"527,565,36,19","type":"527,565,16"}},{"$type":"param","name":"column","text":"The added column.\n","type":"Ext.grid.column.Column","src":{"name":"527,566,40","text":"527,566,47,18","type":"527,566,16"}},{"$type":"param","name":"index","text":"The index of the added column.\n","type":"Number","src":{"name":"527,567,24","text":"527,567,30,31","type":"527,567,16"}}],"src":{"name":"527,563,15","text":"527,564,8,46"}},{"$type":"event","name":"columnhide","text":"Fires whenever a column is hidden in the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,596,31","text":"527,596,36,19","type":"527,596,16"}},{"$type":"param","name":"column","text":"The shown column.\n","type":"Ext.grid.column.Column","src":{"name":"527,597,40","text":"527,597,47,18","type":"527,597,16"}}],"src":{"name":"527,594,15","text":"527,595,8,47"}},{"$type":"event","name":"columnmenucreated","text":"Fired when a column first creates its column menu. This is to allow plugins\nto access and manipulate the column menu.\n\nThere will be the two sort items, and a column hide/show item with a child menu of\ncheckboxes. After this, developers may add custom enu items.\n\nMenu items may be configured with a `{@link #cfg!weight weight}` config, and those with the lowest weight\ngravitate to the top.\n\nThe sort ascending, sort descending, and hide columns items have weight -3, -2, and -1\n","items":[{"$type":"param","name":"grid","text":"This Grid\n","type":"Ext.grid.Grid","src":{"name":"551,957,31","text":"551,957,36,10","type":"551,957,16"}},{"$type":"param","name":"column","text":"The column creating the menu\n","type":"Ext.grid.Column","src":{"name":"551,958,33","text":"551,958,40,29","type":"551,958,16"}},{"$type":"param","name":"menu","text":"The column's new menu\n","type":"Ext.menu.Menu","src":{"name":"551,959,31","text":"551,959,36,22","type":"551,959,16"}}],"src":{"name":"551,945,15","text":"551,947,8,460"}},{"$type":"event","name":"columnmove","text":"Fires whenever a column is moved in the grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,573,31","text":"527,573,36,19","type":"527,573,16"}},{"$type":"param","name":"column","text":"The moved column.\n","type":"Ext.grid.column.Column","src":{"name":"527,574,40","text":"527,574,47,18","type":"527,574,16"}},{"$type":"param","name":"fromIndex","text":"The index the column was moved from.\n","type":"Number","src":{"name":"527,575,24","text":"527,575,34,37","type":"527,575,16"}},{"$type":"param","name":"toIndex","text":"The index the column was moved to.\n","type":"Number","src":{"name":"527,576,24","text":"527,576,32,35","type":"527,576,16"}}],"src":{"name":"527,571,15","text":"527,572,8,46"}},{"$type":"event","name":"columnremove","text":"Fires whenever a column is removed from the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,582,31","text":"527,582,36,19","type":"527,582,16"}},{"$type":"param","name":"column","text":"The removed column.\n","type":"Ext.grid.column.Column","src":{"name":"527,583,40","text":"527,583,47,20","type":"527,583,16"}}],"src":{"name":"527,580,15","text":"527,581,8,50"}},{"$type":"event","name":"columnresize","text":"Fires whenever a column is resized in the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,603,31","text":"527,603,36,19","type":"527,603,16"}},{"$type":"param","name":"column","text":"The resized column.\n","type":"Ext.grid.column.Column","src":{"name":"527,604,40","text":"527,604,47,20","type":"527,604,16"}},{"$type":"param","name":"width","text":"The new column width.\n","type":"Number","src":{"name":"527,605,24","text":"527,605,30,22","type":"527,605,16"}}],"src":{"name":"527,601,15","text":"527,602,8,48"}},{"$type":"event","name":"columnselection","text":"Fires when column selection is being used and columns are selected or deselected.\n","items":[{"$type":"param","name":"grid","text":"this Grid\n","type":"Ext.grid.Grid","src":{"name":"527,628,31","text":"527,628,36,10","type":"527,628,16"}},{"$type":"param","name":"selection","text":"An object which encapsulates the\nselected columns.\n","type":"Ext.grid.selection.Columns","src":{"name":"527,629,44","text":"527,629,54,33:527,630,8,18","type":"527,629,16"}}],"src":{"name":"527,626,15","text":"527,627,8,82"}},{"$type":"event","name":"columnshow","text":"Fires whenever a column is shown in the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,589,31","text":"527,589,36,19","type":"527,589,16"}},{"$type":"param","name":"column","text":"The shown column.\n","type":"Ext.grid.column.Column","src":{"name":"527,590,40","text":"527,590,47,18","type":"527,590,16"}}],"src":{"name":"527,587,15","text":"527,588,8,46"}},{"$type":"event","name":"columnsort","text":"Fires whenever a column is sorted in the Grid.\n","items":[{"$type":"param","name":"this","text":"The Grid instance.\n","type":"Ext.grid.Grid","src":{"name":"527,611,31","text":"527,611,36,19","type":"527,611,16"}},{"$type":"param","name":"column","text":"The sorted column.\n","type":"Ext.grid.column.Column","src":{"name":"527,612,40","text":"527,612,47,19","type":"527,612,16"}},{"$type":"param","name":"direction","text":"The direction of the sort on this Column. Either 'asc'\nor 'desc'.\n","type":"String","src":{"name":"527,613,24","text":"527,613,34,55:527,614,8,11","type":"527,613,16"}}],"src":{"name":"527,609,15","text":"527,610,8,47"}},{"$type":"event","name":"complete","since":"7.0","text":"Fires after editing is complete and any changed value has been written to the underlying\nfield.\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,671,28","type":"527,671,16"}},{"$type":"param","name":"value","text":"The current field value\n","type":"Object","src":{"name":"527,672,24","text":"527,672,30,24","type":"527,672,16"}},{"$type":"param","name":"startValue","text":"The original field value\n","type":"Object","src":{"name":"527,673,24","text":"527,673,35,25","type":"527,673,16"}},{"$type":"param","name":"The","text":"location where actionable mode was successfully started\n","type":"Ext.grid.Location","src":{"name":"527,674,35","text":"527,674,39,56","type":"527,674,16"}}],"src":{"name":"527,668,15","since":"527,675,15","text":"527,669,8,96"}},{"$type":"event","name":"edit","text":"Fires after editing.\n\nThis event is only fired if the {@link Ext.grid.rowedit.Plugin rowedit} plugin is\nconfigured on the grid.\n\nUsage example:\n\n     {\n         xtype: 'grid',\n         plugins: 'rowedit',\n\n         listeners: {\n             edit: function(grid, location) {\n                 // commit the changes right after editing finished\n                 location.record.commit();\n             }\n         }\n     }\n","items":[{"$type":"param","name":"sender","type":"Ext.grid.Grid","src":{"name":"588,65,31","type":"588,65,16"}},{"$type":"param","name":"location","text":"The editing location.\n","type":"Ext.grid.Location","items":[{"$type":"property","name":"editor","text":"The editor component.\n","type":"Ext.grid.rowedit.RowEditor","src":{"name":"588,67,53","text":"588,67,60,22","type":"588,67,16"}}],"src":{"name":"588,66,35","text":"588,66,44,22","type":"588,66,16"}}],"src":{"name":"588,45,15","text":"588,46,8,419"}},{"$type":"event","name":"selectionextenderdrag","text":"An event fired when an extension block is dragged to encompass\na new range. Only fired when the grid's `{@link Ext.grid.Grid.selectable #cfg!selectable}`\nis configured with the {@link Ext.grid.selection.Model#extensible extensible} config.\n","items":[{"$type":"param","name":"grid","text":"The owning grid.\n","type":"Ext.grid.Grid","src":{"name":"591,257,31","text":"591,257,36,17","type":"591,257,16"}},{"$type":"param","name":"An","text":"object which encapsulates a contiguous\nselection block.\n","type":"Ext.dataview.selection.Selection","src":{"name":"591,258,50","text":"591,258,53,39:591,259,8,17","type":"591,258,16"}},{"$type":"param","name":"extension","text":"An object describing the type and size of extension.\n","type":"Object","items":[{"$type":"property","name":"type","text":"`\"rows\"` or `\"columns\"`\n","type":"String","src":{"name":"591,261,34","text":"591,261,39,24","type":"591,261,16"}},{"$type":"property","name":"overCell","text":"The grid cell over which the mouse is being dragged.\n","type":"HTMLElement","src":{"name":"591,262,39","text":"591,262,48,53","type":"591,262,16"}},{"$type":"property","name":"start","text":"The start (top left) cell of the extension area.\n","type":"Ext.grid.Location","src":{"name":"591,263,45","text":"591,263,51,49","type":"591,263,16"}},{"$type":"property","name":"end","text":"The end (bottom right) cell of the extension area.\n","type":"Ext.grid.Location","src":{"name":"591,264,45","text":"591,264,49,51","type":"591,264,16"}},{"$type":"property","name":"columns","optional":true,"text":"The number of columns extended (-ve means on the\nleft side).\n","type":"number","src":{"name":"591,265,35","text":"591,265,44,49:591,266,8,12","type":"591,265,16"}},{"$type":"property","name":"rows","optional":true,"text":"The number of rows extended (-ve means on the top side).\n","type":"number","src":{"name":"591,267,35","text":"591,267,41,57","type":"591,267,16"}}],"src":{"name":"591,260,24","text":"591,260,34,53","type":"591,260,16"}}],"src":{"name":"591,254,15","text":"591,254,37,63:591,255,8,177"}},{"$type":"event","name":"specialkey","since":"7.0","text":"Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed. You can\ncheck\n{@link Ext.event.Event#getKey} to determine which key was pressed.\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,693,28","type":"527,693,16"}},{"$type":"param","name":"field","text":"The field attached to this editor\n","type":"Ext.form.field.Field","src":{"name":"527,694,38","text":"527,694,44,34","type":"527,694,16"}},{"$type":"param","name":"event","text":"The event object\n","type":"Ext.event.Event","src":{"name":"527,695,33","text":"527,695,39,17","type":"527,695,16"}}],"src":{"name":"527,689,15","since":"527,696,15","text":"527,690,8,166"}},{"$type":"event","name":"startedit","since":"7.0","text":"Fires when this editor is displayed\n","items":[{"$type":"param","name":"editor","type":"Ext.Editor","src":{"name":"527,647,28","type":"527,647,16"}},{"$type":"param","name":"boundEl","text":"The underlying element bound to this editor\n","type":"Ext.dom.Element","src":{"name":"527,648,33","text":"527,648,41,44","type":"527,648,16"}},{"$type":"param","name":"value","text":"The starting field value\n","type":"Object","src":{"name":"527,649,24","text":"527,649,30,25","type":"527,649,16"}},{"$type":"param","name":"The","text":"location where actionable mode was successfully started\n","type":"Ext.grid.Location","src":{"name":"527,650,35","text":"527,650,39,56","type":"527,650,16"}}],"src":{"name":"527,645,15","since":"527,651,15","text":"527,646,8,36"}},{"$type":"event","name":"validateedit","text":"Fires after editing, but before the value is set in the record. Return `false`\nfrom the event handler to prevent the change.\n\nThis event is only fired if the {@link Ext.grid.rowedit.Plugin rowedit} plugin is\nconfigured on the grid.\n\n     {\n         xtype: 'grid',\n         plugins: 'rowedit',\n\n         listeners: {\n             edit: function(grid, location) {\n                 var changes = location.editor.getChanges();\n\n                 // validate the fields affected in changes...\n             }\n         }\n     }\n","items":[{"$type":"param","name":"sender","type":"Ext.grid.Grid","src":{"name":"588,92,31","type":"588,92,16"}},{"$type":"param","name":"location","text":"The editing location.\n","type":"Ext.grid.Location","items":[{"$type":"property","name":"editor","text":"The editor component.\n","type":"Ext.grid.rowedit.RowEditor","src":{"name":"588,94,53","text":"588,94,60,22","type":"588,94,16"}}],"src":{"name":"588,93,35","text":"588,93,44,22","type":"588,93,16"}}],"src":{"name":"588,72,15","text":"588,73,8,521"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"generateSelectorFunctions","text":"We MUST use our own cells as delegates for grid-based events.\nCell events will not work without this. The event system would not\ncarry cell information if we don't delegate onto our cells.\n","src":{"access":"527,1192,12","name":"527,1197,0","text":"527,1193,12,189"}},{"$type":"method","name":"getColumns","text":"Get columns using a selector to filter which columns\nto return.\n","items":[{"$type":"param","name":"selector","text":"If the selector is a `String`, columns will be found using\n{@link Ext.ComponentQuery}. If the selector is a `Function`,\n{@link Ext.Array#filter} will be used to filter the columns.\nIf no selector is provided, all columns will be returned.\n","type":"String/Function","src":{"name":"527,828,33","text":"527,829,8,239","type":"527,828,16"}},{"$type":"return","type":"Array","src":{"type":"527,833,17"}}],"src":{"name":"527,835,0","text":"527,825,8,65"}},{"$type":"method","access":"private","name":"getSelection","text":"Returns the grid's selection if {@link Ext.grid.selection.Model#cfg!mode mode} is single\n","items":[{"$type":"return","text":"returns selected record if selectable is rows\n","type":"Ext.data.Model","src":{"text":"527,1626,37,46","type":"527,1626,21"}}],"src":{"access":"527,1129,-1","name":"527,1624,20","text":"527,1625,12,89"}},{"$type":"method","name":"mapToCell","since":"6.5.0","text":"Converts the given parameter to a cell.\n","items":[{"$type":"param","name":"value","text":"The\nvalue. Can be an event or an element to find the cell via the DOM. Otherwise, a record or\nrow can be passed. If this occurs, the column parameter also needs to be passed.\n","type":"HTMLElement/Ext.event.Event/Ext.dom.Element/Ext.data.Model/Ext.grid.Row","src":{"name":"527,862,89","text":"527,862,95,4:527,863,8,171","type":"527,862,16"}},{"$type":"param","name":"column","optional":true,"text":"The column. Needed if the first parameter is a\nmodel or a row.\n","type":"Ext.grid.column.Column","src":{"name":"527,865,41","text":"527,865,49,47:527,866,8,16","type":"527,865,16"}},{"$type":"return","text":"The cell, if it can be found.\n","type":"Ext.grid.cell.Base","src":{"text":"527,867,37,30","type":"527,867,17"}}],"src":{"name":"527,871,0","since":"527,869,15","text":"527,861,8,40"}},{"$type":"method","name":"mapToRowBody","since":"6.5.0","text":"Converts the given parameter to a row body.\n","items":[{"$type":"param","name":"value","text":"The\nvalue.\nCan be an event or an element to find the row body via the DOM. Otherwise, a record or row\ncan be passed.\n","type":"Ext.event.Event/Ext.dom.Element/HTMLElement/Ext.data.Model/Ext.grid.Row","src":{"name":"527,912,89","text":"527,912,95,4:527,913,8,113","type":"527,912,16"}},{"$type":"return","text":"The row body, if it can be found.\n","type":"Ext.grid.RowBody","src":{"text":"527,916,35,34","type":"527,916,17"}}],"src":{"name":"527,920,0","since":"527,918,15","text":"527,911,8,44"}},{"$type":"method","access":"protected","name":"registerActionable","text":"This method is for use by plugins which require the grid to enter actionable mode\nto focus in-cell elements.\n\nAn example of this can be found in the {@link Ext.grid.plugin.CellEditing cell editing}\nplugin.\n\nActionable plugins have an `{@link Ext.grid.plugin.CellEditing#activateCell activateCell}`\nmethod which will be called whenever the application wants to enter actionable mode\non a certain cell. A {@link Ext.grid.Location grid location} object will be passed.\n\nThe `activateCell` method must return an {@link Ext.grid.Location} if it accepts\ncontrol, indicating in its {@link Ext.grid.Location#element element} setting\nexactly where focus has moved to.\n\nActionable plugins may also expose a `{@link #cfg!triggerEvent triggerEvent}` config which is the name of an\nevent to be used to trigger actioning that plugin, in addition fo the ARIA standard\nmethod of the user pressing `F2` or `ENTER` when focused on a cell.\n","items":[{"$type":"param","name":"actionable","text":"A plugin which creates or manipulates in-cell focusable\nelements.\n","type":"Object","src":{"name":"527,958,24","text":"527,958,35,56:527,959,8,10","type":"527,958,16"}}],"src":{"access":"527,939,8","name":"527,961,0","text":"527,940,8,896"}},{"$type":"method","access":"protected","name":"unregisterActionable","text":"This method is for use by plugins which require the grid to enter actionable mode\nto focus in-cell elements. See {@link #method!registerActionable}.\n","items":[{"$type":"param","name":"actionable","text":"The actionable plugin to unregister.\n","type":"Object","src":{"name":"527,970,24","text":"527,970,35,37","type":"527,970,16"}}],"src":{"access":"527,966,8","name":"527,972,0","text":"527,967,8,150"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'grid'","src":{"inheritdoc":"527,709,8","name":"527,708,18","text":"18,529,8,532","value":"527,711,0"}},{"$type":"property","access":"private","name":"selectionModel","optional":true,"readonly":true,"text":"The selection model type to create. Defaults to `'grid'` for grids.\n","type":"String","value":"grid","src":{"access":"527,700,8","name":"527,702,28","readonly":"527,701,8","text":"527,703,8,68","type":"527,702,19","value":"527,702,43"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"grid-ui","text":"Creates a visual theme for a Grid.\n","items":[{"$type":"param","name":"$ui","type":"string","src":{"name":"1202,21,20","type":"1202,21,12"}},{"$type":"param","name":"$resize-marker-background-color","type":"color","src":{"name":"1202,22,19","type":"1202,22,12"}},{"$type":"param","name":"$resize-marker-width","text":"\nThe name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"number","src":{"name":"1202,23,20","text":"1202,24,4,110","type":"1202,23,12"}}],"src":{"name":"1202,29,7","text":"1202,19,4,36"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$grid-resize-marker-background-color","text":"background-color for the resize indicator that displays when resizing columns in the grid\n","type":"color","value":"$neutral-dark-color","src":{"dynamic":"1202,10,39","name":"1202,10,1","text":"1202,8,4,90","type":"1202,7,10","value":"1202,10,47"}},{"$type":"property","dynamic":true,"name":"$grid-resize-marker-width","text":"Width of the resize indicator that displays when resizing columns in the grid\n","type":"number","value":"1px","src":{"dynamic":"1202,16,28","name":"1202,16,1","text":"1202,14,4,78","type":"1202,13,10","value":"1202,16,36"}}]}],"src":{"alias":"527,234,0","extends":"527,233,0","mixins":"527,253,0","name":"1202,2,11","requires":"527,239,0:527,240,0:527,241,0:527,242,0:527,243,0:527,244,0:527,245,0:527,246,0:527,247,0:527,248,0:527,249,0","text":"527,2,4,8509"},"group":"Grids, List & Trees","displayName":"Grid"},{"$type":"class","alias":"widget.lockedgrid","alternateClassNames":"Ext.grid.LockedGrid","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","name":"Ext.grid.locked.Grid","requires":"Ext.layout.Box,Ext.layout.Fit,Ext.grid.Grid","text":"The `lockedgrid` component manages one or more child `grid`s that independently scroll\nin the horizontal axis but are vertically synchronized. The end-user can, using column\nmenus or drag-drop, control which of these {@link #cfg!regions regions} contain which\ncolumns.\n\n## Locked Regions\n\nThe `lockedgrid` always has a `{@link #method!center center}` {@link Ext.grid.locked.Region region} and by\ndefault a `{@link #cfg!left left}` and `{@link #cfg!right right}` region. These regions are derivatives of `{@link Ext.panel.Panel}`\n(to allow them to be resized and collapsed) and contain normal `grid` with a subset of\nthe overall set of `{@link #cfg!columns columns}`. All keys in the `{@link #cfg!regions regions}` config object are valid values\nfor a {@link Ext.grid.column.Column column}'s `locked` config. The values of each of\nthe properties of the `{@link #cfg!regions regions}` config are configurations for the locked region itself.\n\nThe layout of the locked regions is a simple `hbox` with the `{@link #method!center center}` assigned `flex:1`\nand the non-center regions assigned a width based on the columns contained in that\nregion. The order of items in the container is determined by the `{@link #cfg!weight weight}` assigned to\neach region. Regions to the left of center have negative `{@link #cfg!weight weight}` values, while regions\nto the right of center have positive `{@link #cfg!weight weight}` values. This distinction is important\nprimarily to determine the side of the region on which to display the resizer as well\nas setting the direction of collapse for the region.\n\n## Config and Event Delegation\n\nThe `lockedgrid` mimics the config properties and events fired by a normal `grid`. It\ndoes this in some cases by delegating configs to each child grid. The `{@link #cfg!regions regions}` config\nshould be used to listen to events or configure a child grid independently when this\nisn't desired.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"columnMenu","text":"This is a config object which is used by columns in this grid to create their\nheader menus.\n\nThe following column menu contains the following items.\n\n- Default column menu items {@link Ext.grid.Grid grid}\n- \"Region\" menu item to provide locking sub-menu options\n\nThis can be configured as `null` to prevent columns from showing a column menu.\n","type":"Object","value":"{\n    items: {\n        region: {\n            text: 'Locked',\n            iconCls: 'fi-lock',\n            menu: {}\n        }\n    }\n}","src":{"accessor":"565,58,0","name":"565,47,26","text":"565,48,12,343","type":"565,47,18","value":"565,58,0"}},{"$type":"property","accessor":true,"name":"columns","required":true,"text":"An array of column definition objects which define all columns that appear in this grid.\nEach column definition provides the header text for the column, and a definition of where\nthe data for that column comes from.\nColumn definition can also define the locked property\n\nThis can also be a configuration object for a {Ext.grid.header.Container HeaderContainer}\nwhich may override certain default configurations if necessary. For example, the special\nlayout may be overridden to use a simpler layout, or one can set default values shared\nby all columns:\n\n     columns: {\n         items: [\n             {\n                 text: \"Column A\"\n                 dataIndex: \"field_A\",\n                 locked: true,\n                 width: 200\n             },{\n                 text: \"Column B\",\n                 dataIndex: \"field_B\",\n                 width: 150\n             },\n             ...\n         ]\n     }\n","type":"Ext.grid.column.Column[]","value":"null","src":{"accessor":"565,97,0","name":"565,69,44","required":"565,69,53","text":"565,70,12,906","type":"565,69,18","value":"565,97,0"}},{"$type":"property","accessor":true,"name":"defaultLockedRegion","text":"This config determines which region corresponds to `locked: true` on a column.\n","type":"String","value":"'left'","src":{"accessor":"565,103,0","name":"565,100,26","text":"565,101,12,79","type":"565,100,18","value":"565,103,0"}},{"$type":"property","accessor":true,"name":"enableColumnMove","text":"Set to `false` to disable header reorder within this grid.\n","type":"Boolean","value":"true","src":{"accessor":"565,212,0","name":"565,209,27","text":"565,210,12,59","type":"565,209,18","value":"565,212,0"}},{"$type":"property","accessor":true,"name":"gridDefaults","text":"This config is applied to the child `grid` in all regions.\n","type":"Object","value":"null","src":{"accessor":"565,109,0","name":"565,106,26","text":"565,107,12,59","type":"565,106,18","value":"565,109,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.dataview.List#cfg!grouped","name":"grouped","text":"Set to `false` turn off all grouping.\nThis setting is only meaningful if the underlying `{@link #cfg!store store}` has a `grouper`.\n","type":"Boolean","value":"true","src":{"accessor":"565,218,0","inheritdoc":"565,216,12","name":"565,215,27","text":"453,522,12,113","type":"565,215,18","value":"565,218,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.grid.Grid#cfg!hideHeaders","name":"hideHeaders","text":"`true` to hide the grid column headers.\n","type":"Boolean","value":"false","src":{"accessor":"565,115,0","inheritdoc":"565,113,12","name":"565,112,27","text":"527,357,12,41","type":"565,112,18","value":"565,115,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.grid.Grid#cfg!itemConfig","name":"itemConfig","text":"The object is used to configure the {@link Ext.grid.Row rows) created by this Grid.\n\nAn `{@link #cfg!xtype xtype}` property may be included to specify a user-supplied subclass of\n{@link Ext.grid.Row}.\n\nSee the {@link Ext.grid.row#cfg!body} and {@link Ext.grid.row#cfg!expandedField}\nconfigs on the {@link Ext.grid.RowRow class} to easily add extra content to grid\nrows.\n\nBe aware that if you specify a {@link Ext.grid.row#cfg!body row body}, you must\nconfigure the owning grid with `{@link #variableHeights}: true`.\n","type":"Object","value":"{}","src":{"accessor":"565,121,0","inheritdoc":"565,119,12","name":"565,118,26","text":"527,465,8,497","type":"565,118,18","value":"565,121,0"}},{"$type":"property","accessor":true,"name":"leftGridDefaults","text":"This config is applied to the child `grid` in all left-side regions (those of\nnegative `{@link #cfg!weight weight}`)\n","type":"Object","value":"{\n    locked: true,\n    menuItem: {\n        iconCls: 'fi-chevron-left'\n    }\n}","src":{"accessor":"565,128,0","name":"565,124,26","text":"565,125,12,97","type":"565,124,18","value":"565,128,0"}},{"$type":"property","accessor":true,"name":"regions","text":"This config determines the set of possible locked regions. Each key name in this\nobject denotes a named region (for example, \"left\", \"right\" and \"center\"). While\nthe set of names is not fixed, meaning a `lockedgrid` can have more than these\nthree regions, there must always be a \"center\" region. The center regions cannot\nbe hidden or collapsed or emptied of all columns.\n\nThe values of each property in this object are configuration objects for the\n{@link Ext.grid.locked.Region region}. The ordering of grids is determined by\nthe `{@link #cfg!weight weight}` config. Negative values are \"left\" regions, while positive values\nare \"right\" regions. The `menuLabel` is used in the column menu to allow the user\nto place columns into the region.\n\nTo add an additional left region:\n\n     xtype: 'lockedgrid',\n     regions: {\n         left2: {\n             menuLabel: 'Locked (leftmost)',\n             weight: -20   // to the left of the standard \"left\" region\n         }\n     }\n","type":"Object","value":"{\n    left: {\n        menuItem: {\n            text: 'Locked (Left)'\n        },\n        weight: -10\n    },\n    center: {\n        flex: 1,\n        menuItem: {\n            text: 'Unlocked',\n            iconCls: 'fi-unlock'\n        },\n        weight: 0\n    },\n    right: {\n        menuItem: {\n            text: 'Locked (Right)'\n        },\n        weight: 10\n    }\n}","src":{"accessor":"565,160,0","name":"565,137,26","text":"565,138,12,954","type":"565,137,18","value":"565,160,0"}},{"$type":"property","accessor":true,"name":"rightGridDefaults","text":"This config is applied to the child `grid` in all right-side regions (those of\npositive `{@link #cfg!weight weight}`)\n","type":"Object","value":"{\n    locked: true,\n    menuItem: {\n        iconCls: 'fi-chevron-right'\n    }\n}","src":{"accessor":"565,188,0","name":"565,184,26","text":"565,185,12,98","type":"565,184,18","value":"565,188,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.grid.Grid#cfg!store","name":"store","text":"Can be either a Store instance or a configuration object that will be turned\ninto a Store. The Store is used to populate the set of items that will be\nrendered in the DataView. See the DataView intro documentation for more\ninformation about the relationship between Store and DataView.\n","type":"Ext.data.Store/Object/String","value":"null","src":{"accessor":"565,200,0","inheritdoc":"565,198,12","name":"565,197,48","text":"440,509,12,286","type":"565,197,18","value":"565,200,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.grid.Grid#cfg!variableHeights","name":"variableHeights","text":"Set to `true` if the items in this list do not all have the same height. This\nis `false` by default to avoid measure each row to determine its height.\n","type":"Boolean","value":"false","src":{"accessor":"565,206,0","inheritdoc":"565,204,12","name":"565,203,27","text":"453,727,12,151","type":"565,203,18","value":"565,206,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"lockedgrid-ui","text":"Creates a visual theme for a locked grid.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1214,26,20","text":"1214,27,4,109","type":"1214,26,12"}},{"$type":"param","name":"$region-separator-color","text":"Locked region separator color.\n","type":"color","src":{"name":"1214,30,19","text":"1214,31,4,32","type":"1214,30,12"}},{"$type":"param","name":"$region-separator-width","text":"Locked region separator width.\n","type":"number","src":{"name":"1214,33,20","text":"1214,34,4,32","type":"1214,33,12"}},{"$type":"param","name":"$region-separator-style","text":"Locked region separator style.\n","type":"string","src":{"name":"1214,36,20","text":"1214,37,4,31","type":"1214,36,12"}}],"src":{"name":"1214,39,7","text":"1214,24,4,43"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$lockedgrid-region-separator-color","text":"The locked region separator color.\n","type":"color","value":"$base-color","src":{"dynamic":"1214,9,37","name":"1214,9,1","text":"1214,7,4,35","type":"1214,6,10","value":"1214,9,45"}},{"$type":"property","dynamic":true,"name":"$lockedgrid-region-separator-style","text":"The locked region separator style.\n","type":"string","value":"solid","src":{"dynamic":"1214,21,37","name":"1214,21,1","text":"1214,19,4,35","type":"1214,18,10","value":"1214,21,45"}},{"$type":"property","dynamic":true,"name":"$lockedgrid-region-separator-width","text":"The locked region separator width.\n","type":"number","value":"2px","src":{"dynamic":"1214,15,37","name":"1214,15,1","text":"1214,13,4,35","type":"1214,12,10","value":"1214,15,45"}}]}],"src":{"alias":"565,33,0","alternateClassNames":"565,34,0","extends":"565,32,0","name":"1214,2,11","requires":"565,38,0:565,39,0:565,40,0","text":"565,2,4,1683"},"group":"Grids, List & Trees","displayName":"Grid Locked Grid"},{"$type":"class","alias":"widget.image,widget.img","alternateClassNames":"Ext.Image","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Img","text":"This is a simple way to add an image of any size to your application and have it participate in\nthe layout system like any other component. This component typically takes between 1 and 3\nconfigurations - a {@link #src}, and optionally a {@link #height} and a {@link #width}:\n\n```javascript\n@example({ framework: 'extjs' })\nvar img = Ext.create('Ext.Img', {\n    src: 'http://www.sencha.com/assets/images/sencha-avatar-64x64.png',\n    height: 64,\n    width: 64\n});\nExt.Viewport.add(img);\n```\n\nIt's also easy to add an image into a panel or other container using its xtype:\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Panel', {\n    fullscreen: true,\n    layout: 'hbox',\n    items: [\n        {\n            xtype: 'image',\n            src: 'http://www.sencha.com/assets/images/sencha-avatar-64x64.png',\n            flex: 1\n        },\n        {\n            xtype: 'panel',\n            flex: 2,\n            html: 'Sencha Inc.<br/>1700 Seaport Boulevard Suite 120, Redwood City, CA'\n        }\n    ]\n});\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-panel shadow=\"true\" layout=\"fit\">\n    <ext-image\n        width=\"64\"\n        height=\"64\"\n        src=\"http://www.sencha.com/assets/images/sencha-avatar-64x64.png\"\n    >\n    </ext-image>\n</ext-panel>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-panel.component';\nimport '@sencha/ext-web-components/dist/ext-image.component';\n\nexport default class ImageFieldComponent {}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtPanel, ExtImage } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtPanel shadow layout=\"fit\">\n                <ExtImage\n                    height=\"64\"\n                    width=\"64\"\n                    src=\"http://www.sencha.com/assets/images/sencha-avatar-64x64.png\"\n                />\n            </ExtPanel>\n        );\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n             <ExtPanel shadow=\"true\" layout=\"fit\">\n                 <ExtImage\n                     height=\"64\"\n                     width=\"64\"\n                     src=\"http://www.sencha.com/assets/images/sencha-avatar-64x64.png\"\n                 ></ExtImage>\n             </ExtPanel>\n             `\n })\n export class AppComponent {\n\n }\n```\n\nHere we created a panel which contains an image (a profile picture in this case) and a text area\nto allow the user to enter profile information about themselves. In this case we used an\n{@link Ext.layout.HBox hbox layout} and flexed the image to take up one third of the width and\nthe text area to take two thirds of the width. See the {@link Ext.layout.HBox hbox docs} for\nmore information on flexing items.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"backgroundCls","text":"The CSS class to be used when {@link #mode} is set to\n'background'\n","type":"String","value":"Ext.baseCSSPrefix + 'img-background'","src":{"accessor":"416,147,12","name":"416,145,26","text":"416,145,40,54:416,146,12,13","type":"416,145,18","value":"416,149,0"}},{"$type":"property","accessor":true,"name":"imageCls","text":"The CSS class to be used when {@link #mode} is not set to\n'background'\n","type":"String","value":"Ext.baseCSSPrefix + 'img-image'","src":{"accessor":"416,140,12","name":"416,138,26","text":"416,138,35,58:416,139,12,13","type":"416,138,18","value":"416,142,0"}},{"$type":"property","accessor":true,"name":"mode","text":"If set to 'background', uses a background-image CSS property instead\nof an `<img>` tag to display the image.\n","type":"String","value":"'background'","src":{"accessor":"416,155,0","name":"416,152,26","text":"416,152,31,69:416,153,12,40","type":"416,152,18","value":"416,155,0"}},{"$type":"property","accessor":true,"name":"src","text":"The source of this image. See {@link Ext#resolveResource} for\ndetails on locating application resources.\n","type":"String","value":"null","src":{"accessor":"416,133,12","name":"416,131,26","text":"416,131,30,62:416,132,12,43","type":"416,131,18","value":"416,135,0"}}]},{"$type":"events","items":[{"$type":"event","name":"error","text":"Fires if an error occured when trying to load the image\n","items":[{"$type":"param","name":"this","text":"The Image instance\n","type":"Ext.Img","src":{"name":"416,125,25","text":"416,125,30,19","type":"416,125,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"416,126,33","text":"416,126,35,17","type":"416,126,16"}}],"src":{"name":"416,123,15","text":"416,124,8,56"}},{"$type":"event","name":"load","text":"Fires when the image is loaded\n","items":[{"$type":"param","name":"this","text":"The Image instance\n","type":"Ext.Img","src":{"name":"416,118,25","text":"416,118,30,19","type":"416,118,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"416,119,33","text":"416,119,35,17","type":"416,119,16"}}],"src":{"name":"416,116,15","text":"416,117,8,31"}},{"$type":"event","name":"tap","text":"Fires whenever the component is tapped\n","items":[{"$type":"param","name":"this","text":"The Image instance\n","type":"Ext.Img","src":{"name":"416,111,25","text":"416,111,30,19","type":"416,111,16"}},{"$type":"param","name":"e","text":"The event object\n","type":"Ext.event.Event","src":{"name":"416,112,33","text":"416,112,35,17","type":"416,112,16"}}],"src":{"name":"416,109,15","text":"416,110,8,39"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"updateSrc","items":[{"$type":"param","name":"newSrc","src":{"name":"416,240,0"}}],"src":{"access":"416,238,8","name":"416,240,0"}}]}],"src":{"alias":"416,105,0:416,105,0","alternateClassNames":"416,106,0","extends":"416,104,0","name":"1109,2,11","text":"416,2,4,3118"},"group":"Other Components","displayName":"Img"},{"$type":"class","alias":"widget.label","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Label","text":"A simple label component which allows you to insert content using {@link #html} configuration.\n\n    @example\n    Ext.Viewport.add({\n        xtype: 'label',\n        html: 'My label!'\n    });\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"html","text":"The label of this component.\n","type":"String","src":{"accessor":"410,480,12","name":"418,15,22","text":"418,16,8,29","type":"418,15,14"}}]}],"src":{"alias":"418,12,0","extends":"418,11,0","name":"418,10,0","text":"418,2,4,190"},"group":"Form Fields","displayName":"Label"},{"$type":"class","alias":"widget.treelist","extended":"Ext.Gadget,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Gadget,Object","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.ItemRippler,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","mixins":"Ext.mixin.ItemRippler","name":"Ext.list.Tree","package":"core","requires":"Ext.list.RootTreeItem","since":"6.0.0","text":"A lightweight component to display data in a simple tree structure using a\n{@link Ext.data.TreeStore}.\n\nSimple Treelist using inline data:\n\n    @example\n    Ext.create({\n        xtype: 'treelist',\n        store: {\n            root: {\n            expanded: true,\n                children: [{\n                    text: 'detention',\n                    leaf: true,\n                    iconCls: 'x-fa fa-frown-o'\n                }, {\n                    text: 'homework',\n                    expanded: true,\n                    iconCls: 'x-fa fa-folder',\n                    children: [{\n                        text: 'book report',\n                        leaf: true,\n                        iconCls: 'x-fa fa-book'\n                    }, {\n                        text: 'algebra',\n                        leaf: true,\n                        iconCls: 'x-fa fa-graduation-cap'\n                    }]\n                }, {\n                    text: 'buy lottery tickets',\n                    leaf: true,\n                    iconCls: 'x-fa fa-usd'\n                }]\n            }\n        },\n        renderTo: Ext.getBody()\n    });\n\nTo collapse the Treelist for use in a smaller navigation view see {@link #micro}.\nParent Treelist node expansion may be refined using the {@link #singleExpand} and\n{@link #expanderOnly} config options.  Treelist nodes will be selected when clicked /\ntapped excluding clicks on the expander unless {@link #selectOnExpander} is set to\n`true`.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"defaults","optional":true,"text":"The default configuration for the widgets created for tree items.\n","type":"Object","value":"{\n    xtype: 'treelistitem'\n}","items":[{"$type":"property","name":"xtype","optional":true,"text":"The type of item to create. By default, items are\n`{@link Ext.list.TreeItem treelistitem}` instances. This can be customized but this\n`{@link #cfg!xtype xtype}` must reference a class that ultimately derives from the\n`{@link Ext.list.AbstractTreeItem}` base class.\n","type":"String","value":"\"treelistitem\"","src":{"name":"272,126,36","text":"272,127,12,246","type":"272,126,18","value":"272,126,42"}}],"src":{"accessor":"272,132,0","name":"272,123,27","text":"272,124,12,67","type":"272,123,18","value":"272,132,0"}},{"$type":"property","accessor":true,"name":"expanderFirst","text":"`true` to display the expander to the left of the item text.\n`false` to display the expander to the right of the item text.\n","type":"Boolean","value":"true","src":{"accessor":"272,103,0","name":"272,99,27","text":"272,100,12,124","type":"272,99,18","value":"272,103,0"}},{"$type":"property","accessor":true,"name":"expanderOnly","text":"`true` to expand only on the click of the expander element. Setting this to\n`false` will allow expansion on click of any part of the element.\n","type":"Boolean","value":"true","src":{"accessor":"272,110,0","name":"272,106,27","text":"272,107,12,142","type":"272,106,18","value":"272,110,0"}},{"$type":"property","accessor":true,"name":"floatLeafItems","text":"`true` to allow the popout to show on leaf items on click/tap. This is the same popout\n(menu) non-leaf items show their child items in. `false` to prevent the popout\nfrom showing for leaf items.\n","type":"Boolean","value":"false","src":{"accessor":"272,120,0","name":"272,115,27","text":"272,116,12,195","type":"272,115,18","value":"272,120,0"}},{"$type":"property","accessor":true,"name":"highlightPath","text":"Set as `true` to highlight all items on the path to the currently selected\nnode.\n","type":"Boolean","value":"null","src":{"accessor":"272,141,0","name":"272,141,0","text":"272,138,12,81","type":"272,137,18","value":"272,141,0"}},{"$type":"property","accessor":true,"name":"indent","optional":true,"text":"\nThe number of pixels to offset each level of tree nodes.\n","type":"Number","value":"null","src":{"accessor":"272,150,0","name":"272,146,27","text":"272,147,12,58","type":"272,146,18","value":"272,146,34"}},{"$type":"property","accessor":true,"name":"micro","text":"\nSet to `true` to collapse the Treelist UI to display only the\n{@link Ext.data.NodeInterface#cfg-iconCls icons} of the root nodes.  Hovering\nthe cursor (or tapping on a touch-enabled device) shows the child nodes beside\nthe icon.\n","type":"Boolean","value":"false","src":{"accessor":"272,160,0","name":"272,160,0","text":"272,154,12,230","type":"272,153,18","value":"272,160,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"publishes","text":"One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the `{@link #cfg-reference}` to determine the name of the data\nobject to place in the `ViewModel`. If `{@link #cfg!reference reference}` is not set then this config\nis ignored.\n\nBy using this config and `{@link #cfg-reference}` you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize {@link #publishState}\nif the property has a  setter method. Let's use\n{@link Ext.form.Labelable#setFieldLabel setFieldLabel} as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,185,0","inheritdoc":"272,213,8","name":"272,212,13","text":"275,104,12,2499","type":"275,103,18","value":"272,215,0"}},{"$type":"property","accessor":true,"name":"selection","text":"\nThe current selected node or its ID.\n","type":"Ext.data.TreeModel/Number/String","value":"null","src":{"accessor":"272,169,0","name":"272,165,52","text":"272,166,12,38","type":"272,165,18","value":"272,169,0"}},{"$type":"property","accessor":true,"name":"selectOnExpander","text":"`true` to select the node when clicking the expander.\n","type":"Boolean","value":"false","src":{"accessor":"272,175,0","name":"272,172,27","text":"272,173,12,54","type":"272,172,18","value":"272,175,0"}},{"$type":"property","accessor":true,"name":"singleExpand","optional":true,"text":"`true` if only 1 node per branch may be expanded.\n","type":"Boolean","value":"false","src":{"accessor":"272,181,0","name":"272,178,28","text":"272,179,12,50","type":"272,178,18","value":"272,178,41"}},{"$type":"property","accessor":true,"name":"store","text":"The data source to which this component is bound.\n","type":"String/Object/Ext.data.TreeStore","value":"null","src":{"accessor":"272,187,0","name":"272,184,52","text":"272,185,12,50","type":"272,184,18","value":"272,187,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"twoWayBindable","text":"This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `value` is a key added by form fields. The\nform of this config is the same as `{@link #cfg!publishes}`.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n","type":"String/String[]/Object","value":"{\n    selection: 1\n}","src":{"accessor":"275,239,0","inheritdoc":"272,205,8","name":"272,204,13","text":"275,231,12,406","type":"275,230,18","value":"272,207,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"ui","text":"The ui or uis to be used on this Component\n\nWhen a ui is configured, CSS class names are added to the {@link #element}, created\nby appending the ui name(s) to each {@link #classCls} and/or {@link #baseCls}.\n","type":"String/String[]","value":"null","src":{"accessor":"272,193,0","inheritdoc":"272,191,12","name":"272,190,17","text":"18,385,38,43:18,386,12,164","type":"18,385,18","value":"272,193,0"}}]},{"$type":"events","items":[{"$type":"event","name":"itemclick","since":"6.0.1","items":[{"$type":"param","name":"sender","text":"The `treelist` that fired this event.\n","type":"Ext.list.Tree","src":{"name":"270,441,35","text":"270,441,42,38","type":"270,441,20"}},{"$type":"param","name":"info","type":"Object","items":[{"$type":"property","name":"event","text":"The DOM event that precipitated this\nevent.\n","type":"Ext.event.Event","src":{"name":"270,444,42","text":"270,444,48,37:270,445,12,7","type":"270,444,20"}},{"$type":"property","name":"item","text":"The tree node that was clicked.\n","type":"Ext.list.AbstractTreeItem","src":{"name":"270,446,52","text":"270,446,57,32","type":"270,446,20"}},{"$type":"property","name":"tree","text":"The `treelist` that fired this event.\n","type":"Ext.list.Tree","src":{"name":"270,447,40","text":"270,447,45,38","type":"270,447,20"}},{"$type":"property","name":"select","text":"On input this is value is the result of the\n  {@link #isSelectionEvent} method. On return from event handlers (assuming a\n  `false` return does not cancel things) this property is used to determine\n  if the clicked node should be selected.\n","type":"Boolean","src":{"name":"270,448,34","text":"270,448,41,44:270,449,12,196","type":"270,448,20"}},{"$type":"property","name":"toggle","text":"On input this is value is the result of the\n  {@link #isToggleEvent} method. On return from event handlers (assuming a\n  `false` return does not cancel things) this property is used to determine\n  if the clicked node's expand/collapse state should be toggled.\n","type":"Boolean","src":{"name":"270,452,34","text":"270,452,41,44:270,453,12,217","type":"270,452,20"}}],"src":{"name":"270,443,28","type":"270,443,20"}}],"src":{"name":"270,438,19","since":"270,457,19"}},{"$type":"event","name":"selectionchange","text":"This event fires when {@link Ext.list.Tree#selection} changes\n","items":[{"$type":"param","name":"treelist","text":"The component firing this event.\n","type":"Ext.list.Tree","src":{"name":"272,199,31","text":"272,199,40,33","type":"272,199,16"}},{"$type":"param","name":"record","text":"The currently selected node.\n","type":"Ext.data.TreeModel","src":{"name":"272,200,36","text":"272,200,43,29","type":"272,200,16"}}],"src":{"name":"272,197,15","text":"272,198,8,62"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"createItem","text":"Create a new list item.\n","items":[{"$type":"param","name":"node","text":"The node backing the item.\n","type":"Ext.data.TreeModel","src":{"name":"272,473,40","text":"272,473,45,27","type":"272,473,20"}},{"$type":"param","name":"parent","text":"The parent item.\n","type":"Ext.list.AbstractTreeItem","src":{"name":"272,474,47","text":"272,474,54,17","type":"272,474,20"}},{"$type":"return","text":"The list item.\n","type":"Ext.list.AbstractTreeItem","src":{"text":"272,475,48,15","type":"272,475,21"}}],"src":{"access":"272,477,12","name":"272,479,0","text":"272,472,12,24"}},{"$type":"method","access":"private","name":"createRootItem","text":"Create a root item for this list.\n","items":[{"$type":"param","name":"root","text":"The root node.\n","type":"Ext.data.TreeModel","src":{"name":"272,511,40","text":"272,511,45,15","type":"272,511,20"}}],"src":{"access":"272,513,12","name":"272,515,0","text":"272,510,12,34"}},{"$type":"method","name":"getItem","text":"Get a child {@link Ext.list.AbstractTreeItem item} by node.\n","items":[{"$type":"param","name":"node","text":"The node.\n","type":"Ext.data.TreeModel","src":{"name":"272,422,36","text":"272,422,41,10","type":"272,422,16"}},{"$type":"return","text":"The item. `null` if not found.\n","type":"Ext.list.AbstractTreeItem","src":{"text":"272,423,44,31","type":"272,423,17"}}],"src":{"name":"272,425,0","text":"272,421,8,60"}},{"$type":"method","name":"getItemConfig","template":true,"text":"This method is called to populate and return a config object for new nodes. This\ncan be overridden by derived classes to manipulate properties or `{@link #cfg!xtype xtype}` of the\nreturned object. Upon return, the object is passed to `{@link Ext#method!create}` and the\nreference is stored as part of this tree.\n\nThe base class implementation will apply any configured `{@link #defaults}` to the\nobject it returns.\n","items":[{"$type":"param","name":"node","text":"The node backing the item.\n","type":"Ext.data.TreeModel","src":{"name":"272,445,36","text":"272,445,41,27","type":"272,445,16"}},{"$type":"param","name":"parent","text":"The parent item. This is never `null` but\nmay be an instance of `{@link Ext.list.RootTreeItem}`.\n","type":"Ext.list.AbstractTreeItem","src":{"name":"272,446,43","text":"272,446,50,42:272,447,8,55","type":"272,446,16"}},{"$type":"return","text":"The config object to pass to `{@link Ext#method!create}` for the item.\n","type":"Object","src":{"text":"272,448,25,71","type":"272,448,17"}}],"src":{"name":"272,451,0","template":"272,449,8","text":"272,437,8,397"}},{"$type":"method","access":"private","name":"onClick","text":"Handles when this element is clicked.\n","items":[{"$type":"param","name":"e","text":"The event.\n","type":"Ext.event.Event","src":{"name":"272,619,37","text":"272,619,39,11","type":"272,619,20"}}],"src":{"access":"272,621,12","name":"272,623,0","text":"272,618,12,38"}},{"$type":"method","access":"private","name":"onNodeAppend","text":"Handles a node being appended to a parent.\n","items":[{"$type":"param","name":"parentNode","text":"The parent node.\n","type":"Ext.data.TreeModel","src":{"name":"272,665,40","text":"272,665,51,17","type":"272,665,20"}},{"$type":"param","name":"node","text":"The appended node.\n","type":"Ext.data.TreeModel","src":{"name":"272,666,40","text":"272,666,45,19","type":"272,666,20"}}],"src":{"access":"272,668,12","name":"272,670,0","text":"272,664,12,43"}},{"$type":"method","access":"private","name":"onNodeCollapse","text":"Handles when a node collapses.\n","items":[{"$type":"param","name":"node","text":"The node.\n","type":"Ext.data.TreeModel","src":{"name":"272,685,40","text":"272,685,45,10","type":"272,685,20"}}],"src":{"access":"272,687,12","name":"272,689,0","text":"272,684,12,31"}},{"$type":"method","access":"private","name":"onNodeExpand","text":"Handles when a node expands.\n","items":[{"$type":"param","name":"node","text":"The node.\n","type":"Ext.data.TreeModel","src":{"name":"272,699,40","text":"272,699,45,10","type":"272,699,20"}}],"src":{"access":"272,701,12","name":"272,703,0","text":"272,698,12,29"}},{"$type":"method","access":"private","name":"onNodeInsert","text":"Handles a node being inserted into a parent.\n","items":[{"$type":"param","name":"parentNode","text":"The parent node.\n","type":"Ext.data.TreeModel","src":{"name":"272,731,40","text":"272,731,51,17","type":"272,731,20"}},{"$type":"param","name":"node","text":"The inserted node.\n","type":"Ext.data.TreeModel","src":{"name":"272,732,40","text":"272,732,45,19","type":"272,732,20"}},{"$type":"param","name":"refNode","text":"The node this was inserted before.\n","type":"Ext.data.TreeModel","src":{"name":"272,733,40","text":"272,733,48,35","type":"272,733,20"}}],"src":{"access":"272,735,12","name":"272,737,0","text":"272,730,12,45"}},{"$type":"method","access":"private","name":"onNodeRemove","text":"Handles a node being removed from a parent.\n","items":[{"$type":"param","name":"parentNode","text":"The parent node.\n","type":"Ext.data.TreeModel","src":{"name":"272,747,40","text":"272,747,51,17","type":"272,747,20"}},{"$type":"param","name":"node","text":"The removed node.\n","type":"Ext.data.TreeModel","src":{"name":"272,748,40","text":"272,748,45,18","type":"272,748,20"}},{"$type":"param","name":"isMove","text":"`true` if this node is moving inside the tree.\n","type":"Boolean","src":{"name":"272,749,29","text":"272,749,36,47","type":"272,749,20"}}],"src":{"access":"272,751,12","name":"272,753,0","text":"272,746,12,44"}},{"$type":"method","access":"private","name":"onNodeUpdate","text":"Handles when a node updates.\n","items":[{"$type":"param","name":"store","text":"The store.\n","type":"Ext.data.TreeStore","src":{"name":"272,770,40","text":"272,770,46,11","type":"272,770,20"}},{"$type":"param","name":"node","text":"The node.\n","type":"Ext.data.TreeModel","src":{"name":"272,771,40","text":"272,771,45,10","type":"272,771,20"}},{"$type":"param","name":"type","text":"The update type.\n","type":"String","src":{"name":"272,772,28","text":"272,772,33,17","type":"272,772,20"}},{"$type":"param","name":"modifiedFieldNames","text":"The modified field names, if known.\n","type":"String[]","src":{"name":"272,773,30","text":"272,773,49,36","type":"272,773,20"}}],"src":{"access":"272,775,12","name":"272,777,0","text":"272,769,12,29"}},{"$type":"method","access":"private","name":"onRefresh","text":"Handles before a root node loads\n","items":[{"$type":"param","name":"store","text":"The store.\n","type":"Ext.data.TreeStore","src":{"name":"272,787,40","text":"272,787,46,11","type":"272,787,20"}}],"src":{"access":"272,788,12","name":"272,790,0","text":"272,786,12,33"}},{"$type":"method","access":"private","fires":"refresh","name":"onRootChange","text":"Handles when the root node in the tree changes.\n","items":[{"$type":"param","name":"root","text":"The root.\n","type":"Ext.data.TreeModel","src":{"name":"272,799,40","text":"272,799,45,10","type":"272,799,20"}}],"src":{"access":"272,801,12","fires":"272,813,0","name":"272,803,0","text":"272,798,12,48"}},{"$type":"method","access":"private","name":"onToolStripClick","text":"Handles when the toolstrip has a click.\n","items":[{"$type":"param","name":"e","text":"The event.\n","type":"Ext.event.Event","src":{"name":"272,855,37","text":"272,855,39,11","type":"272,855,20"}}],"src":{"access":"272,857,12","name":"272,859,0","text":"272,854,12,40"}},{"$type":"method","access":"private","name":"onToolStripMouseOver","text":"Handles when the toolstrip has a mouseover.\n","items":[{"$type":"param","name":"e","text":"The event.\n","type":"Ext.event.Event","src":{"name":"272,880,37","text":"272,880,39,11","type":"272,880,20"}}],"src":{"access":"272,882,12","name":"272,884,0","text":"272,879,12,44"}},{"$type":"method","access":"private","name":"removeItem","text":"Removes a list item.\n","items":[{"$type":"param","name":"node","text":"The node backing the item.\n","type":"Ext.data.TreeModel","src":{"name":"272,818,40","text":"272,818,45,27","type":"272,818,20"}}],"src":{"access":"272,820,12","name":"272,822,0","text":"272,817,12,21"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'store'","src":{"inheritdoc":"272,221,8","name":"272,220,18","text":"275,272,8,373","type":"275,271,19","value":"272,223,0"}},{"$type":"property","inheritdoc":true,"name":"element","text":"A configuration object for Ext.Element.create() that is used to create the Element\ntemplate.  Subclasses should avoid overriding this property and instead add elements\nusing {@link #template}.\n\nSupports all the standard options of a Ext.Element.create() config and adds 3\nadditional options:\n\n1. `{@link #cfg!reference reference}` - this option specifies a name for Element references.  These\nreferences names become properties of the Widget instance and refer to Ext.Element\ninstances that were created using the template:\n\n         element: {\n             reference: 'element',\n             children: [{\n                 reference: 'innerElement'\n             }]\n         }\n\nAfter construction of a widget the reference elements are accessible as follows:\n\n    var foo = new FooWidget(),\n        innerEl = foo.innerElement; // an Ext.Element that wraps the innerElement\n\nThe reference attribute is optional, but all Widgets must have a `'element'`\nreference on some element within the template (usually the outermost one).\n\n2. `{@link #cfg!listeners listeners}` - a standard listeners object as specified by {@link Ext.mixin.Observable}.\n\n         element: {\n             reference: 'element',\n             listeners: {\n                 click: 'onClick'\n             },\n             children: [{\n                 reference: 'innerElement',\n                 listeners: {\n                     click: 'onInnerClick'\n                 }\n             }]\n         }\n\nSince listeners cannot be attached without an Ext.Element reference the `{@link #cfg!reference reference}`\nproperty MUST be specified in order to use `{@link #cfg!listeners listeners}`.\n\nThe Widget instance is used as the scope for all listeners specified in this way,\nso it is invalid to use the `scope` option in the `{@link #cfg!listeners listeners}` config since it will\nalways be overwritten using `this`.\n\n3. `uiCls` - a suffix to be appended to the ui-specific CSS class for each `{@link #ui}`\nfor this widget.  These ui classes are constructed by appending the `{@link #cfg!ui ui}` to each\n`{@link #classCls}` or `{@link #baseCls}` for the widget.  As such, `uiCls` should\nnever be used on the main `{@link #property!element element}` reference, as its `uiCls` is computed automatically.\n\nFor example, assume a widget is defined with a `{@link #cfg!ui ui}` of `'alt action'` and a\n`uiCls` of `'inner-el'` on its `innerElement` reference element:\n\n         Ext.define('Doodad', {\n             extend: 'Ext.Widget',\n             xtype: 'doodad',\n\n             classCls: 'x-doodad',\n\n             ui: 'alt action',\n\n             element: {\n                 reference: 'element',\n\n                 children: [{\n                     reference: 'innerElement',\n                     cls: 'x-inner-el',\n                     uiCls: 'inner-el'\n                 }]\n             }\n         });\n\nThis would result in the following markup when rendered:\n\n    <div class=\"x-doodad x-doodad-alt x-doodad-action\">\n        <div class=\"x-inner-el x-doodad-inner-el x-doodad-alt-inner-el x-doodad-action-inner-el\"></div>\n    </div>\n\nThese additional classes can be used to style the reference element for a particular\nui; however, use of `uiCls` is not typically necessary or recommended.  Reference\nelements should usually be styled using simple descendant selectors:\n\n    .x-doodad-alt .x-inner-el {\n        color: red;\n    }\n\nWhen there is a possibility that widgets can be nested it is best to use direct\nchild selectors to avoid the possibility of selecting all descendants instead\nof just the reference element for the intended widget:\n\n    .x-doodad-alt > .x-inner-el {\n        color: red;\n    }\n\nOnly use `uiCls` when there is a possibility of nesting, AND there may be a variable\nnumber of elements between the main `{@link #property!element element}` and the reference element in question.\nFor example, Ext.Container with docked items has a different number of elements\nin between its `{@link #property!element element}` and its `bodyElement` than a Container without docked items\nbecause of the wrapping elements that are dynamically added to support docking.\nTo ensure it does not style all descendants it must use a `uiCls` to style its\n`bodyElement`:\n\n    .x-container-alt-body-el {\n        background: #fff;\n    }\n\nNote that when `uiCls` is specified it also adds a class name that does not contain\nthe `{@link #cfg!ui ui}` using just the `{@link #property!classCls classCls}` and/or `{@link #property!baseCls baseCls}` as the prefix.  This class name\ncan be used for base-level styling that does not relate to any particular UI:\n\n    .x-container-body-el {\n        position: relative;\n    }\n","type":"Object","value":"{\n    reference: 'element',\n    cls: Ext.baseCSSPrefix + 'treelist ' + Ext.baseCSSPrefix + 'unselectable',\n    listeners: {\n        click: 'onClick',\n        touchstart: 'onTouchStart',\n        touchend: 'onTouchEnd',\n        mouseenter: 'onMouseEnter',\n        mouseleave: 'onMouseLeave',\n        mouseover: 'onMouseOver'\n    },\n    children: [\n        {\n            reference: 'toolsElement',\n            cls: Ext.baseCSSPrefix + 'treelist-toolstrip',\n            listeners: {\n                click: 'onToolStripClick',\n                mouseover: 'onToolStripMouseOver'\n            }\n        }\n    ]\n}","src":{"inheritdoc":"272,69,8","name":"272,68,18","text":"18,87,8,4364","type":"18,86,19","value":"272,71,0"}}]}],"src":{"alias":"272,50,0","extends":"272,49,0:??","mixins":"272,53,0","name":"692,2,11","requires":"272,57,0","since":"272,46,11","text":"272,2,4,1468"},"group":"Other Components","displayName":"List Tree"},{"$type":"class","access":"private","alias":"widget.media","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.Audio,Ext.Video","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Media","text":"Provides a base class for audio/visual controls. Should not be used directly.\n\nPlease see the {@link Ext.Audio} and {@link Ext.Video} classes for more information.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"autoPause","text":"Will automatically pause the media when the container is deactivated.\n","type":"Boolean","value":"true","src":{"accessor":"421,94,12","name":"421,92,27","text":"421,93,12,70","type":"421,92,18","value":"421,96,0"}},{"$type":"property","accessor":true,"name":"autoResume","text":"Will automatically start playing the media when the container is activated.\n","type":"Boolean","value":"false","src":{"accessor":"421,87,12","name":"421,85,27","text":"421,86,12,76","type":"421,85,18","value":"421,89,0"}},{"$type":"property","accessor":true,"name":"controls","text":"Set this to `false` to turn off the native media controls.\n","type":"Boolean","value":"true","src":{"accessor":"421,80,12","name":"421,78,27","text":"421,79,12,59","type":"421,78,18","value":"421,82,0"}},{"$type":"property","accessor":true,"deprecatedMessage":"Please use {@link #controls} instead.\n","deprecatedVersion":"6.5","name":"enableControls","text":"Set this to `false` to turn off the native media controls.\n","type":"Boolean","value":"true","src":{"accessor":"421,72,12","deprecatedMessage":"421,73,12","deprecatedVersion":"421,73,12","name":"421,70,27","text":"421,71,12,59","type":"421,70,18","value":"421,75,0"}},{"$type":"property","accessor":true,"name":"loop","text":"Will loop the media forever.\n","type":"Boolean","value":"false","src":{"accessor":"421,108,12","name":"421,106,27","text":"421,107,12,29","type":"421,106,18","value":"421,110,0"}},{"$type":"property","accessor":true,"name":"media","text":"A reference to the underlying audio/video element.\n","type":"Ext.Element","value":"null","src":{"accessor":"421,115,12","name":"421,113,31","text":"421,114,12,51","type":"421,113,18","value":"421,117,0"}},{"$type":"property","accessor":true,"name":"muted","text":"Whether or not the media is muted. This will also set the volume to zero.\n","type":"Boolean","value":"false","src":{"accessor":"421,129,12","name":"421,127,27","text":"421,128,12,74","type":"421,127,18","value":"421,131,0"}},{"$type":"property","accessor":true,"name":"preload","text":"Will begin preloading the media immediately.\n","type":"Boolean","value":"true","src":{"accessor":"421,101,12","name":"421,99,27","text":"421,100,12,45","type":"421,99,18","value":"421,103,0"}},{"$type":"property","accessor":true,"name":"url","text":"Location of the media to play.\n","type":"String","value":"''","src":{"accessor":"421,65,12","name":"421,63,26","text":"421,64,12,31","type":"421,63,18","value":"421,67,0"}},{"$type":"property","accessor":true,"name":"volume","text":"The volume of the media from 0.0 to 1.0.\n","type":"Number","value":"1","src":{"accessor":"421,122,12","name":"421,120,26","text":"421,121,12,41","type":"421,120,18","value":"421,124,0"}}]},{"$type":"events","items":[{"$type":"event","name":"ended","text":"Fires whenever the media playback has ended.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,27,27","type":"421,27,16"}},{"$type":"param","name":"time","text":"The time at which the media ended at in seconds.\n","type":"Number","src":{"name":"421,28,24","text":"421,28,29,49","type":"421,28,16"}}],"src":{"name":"421,25,15","text":"421,26,8,45"}},{"$type":"event","name":"mutedchange","text":"Fires whenever the muted status is changed.\nThe volumechange event will also fire after the `{@link #event!mutedchange mutedchange}` event fires.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,50,27","type":"421,50,16"}},{"$type":"param","name":"muted","text":"The muted status.\n","type":"Boolean","src":{"name":"421,51,25","text":"421,51,31,18","type":"421,51,16"}}],"src":{"name":"421,47,15","text":"421,48,8,119"}},{"$type":"event","name":"pause","text":"Fires whenever the media is paused.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,20,27","type":"421,20,16"}},{"$type":"param","name":"time","text":"The time at which the media was paused at in seconds.\n","type":"Number","src":{"name":"421,21,24","text":"421,21,29,54","type":"421,21,16"}}],"src":{"name":"421,18,15","text":"421,19,8,36"}},{"$type":"event","name":"play","text":"Fires whenever the media is played.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,14,27","type":"421,14,16"}}],"src":{"name":"421,12,15","text":"421,13,8,36"}},{"$type":"event","name":"stop","text":"Fires whenever the media is stopped.\nThe `pause` event will also fire after the `stop` event if the media is currently playing.\nThe `{@link #event!timeupdate timeupdate}` event will also fire after the `stop` event regardless of playing status.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,36,27","type":"421,36,16"}}],"src":{"name":"421,32,15","text":"421,33,8,219"}},{"$type":"event","name":"timeupdate","text":"Fires when the media is playing every 15 to 250ms.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,57,27","type":"421,57,16"}},{"$type":"param","name":"time","text":"The current time in seconds.\n","type":"Number","src":{"name":"421,58,24","text":"421,58,29,29","type":"421,58,16"}}],"src":{"name":"421,55,15","text":"421,56,8,51"}},{"$type":"event","name":"volumechange","text":"Fires whenever the volume is changed.\n","items":[{"$type":"param","name":"this","type":"Ext.Media","src":{"name":"421,42,27","type":"421,42,16"}},{"$type":"param","name":"volume","text":"The volume level from 0 to 1.\n","type":"Number","src":{"name":"421,43,24","text":"421,43,31,30","type":"421,43,16"}}],"src":{"name":"421,40,15","text":"421,41,8,38"}}]},{"$type":"methods","items":[{"$type":"method","name":"getCurrentTime","text":"Returns the current time of the media, in seconds.\n","items":[{"$type":"return","type":"Number","src":{"type":"421,334,17"}}],"src":{"name":"421,336,0","text":"421,333,8,51"}},{"$type":"method","name":"getDuration","text":"Returns the duration of the media, in seconds.\n","items":[{"$type":"return","type":"Number","src":{"type":"421,353,17"}}],"src":{"name":"421,355,0","text":"421,352,8,47"}},{"$type":"method","name":"isPlaying","text":"Returns if the media is currently playing.\n","items":[{"$type":"return","text":"playing `true` if the media is playing.\n","type":"Boolean","src":{"text":"421,198,26,40","type":"421,198,17"}}],"src":{"name":"421,200,0","text":"421,197,8,43"}},{"$type":"method","access":"private","name":"onActivate","src":{"access":"421,205,8","name":"421,207,0"}},{"$type":"method","access":"private","name":"onDeactivate","src":{"access":"421,216,8","name":"421,218,0"}},{"$type":"method","name":"pause","text":"Pauses media playback.\n","src":{"name":"421,285,0","text":"421,283,8,23"}},{"$type":"method","name":"play","text":"Starts or resumes media playback.\n","src":{"name":"421,271,0","text":"421,269,8,34"}},{"$type":"method","name":"setCurrentTime","text":"Set the current time of the media.\n","items":[{"$type":"param","name":"time","text":"The time, in seconds.\n","type":"Number","src":{"name":"421,342,24","text":"421,342,29,22","type":"421,342,16"}},{"$type":"return","type":"Number","src":{"type":"421,343,17"}}],"src":{"name":"421,345,0","text":"421,341,8,35"}},{"$type":"method","fires":"stop","name":"stop","text":"Stops media playback and returns to the beginning.\n","src":{"fires":"421,312,0","name":"421,308,0","text":"421,306,8,51"}},{"$type":"method","name":"toggle","text":"Toggles the media playback state.\n","src":{"name":"421,296,0","text":"421,294,8,34"}},{"$type":"method","name":"updateEnableControls","text":"Updates the controls of the video element.\n","items":[{"$type":"param","name":"enableControls","src":{"name":"421,250,0"}}],"src":{"name":"421,250,0","text":"421,248,8,43"}},{"$type":"method","name":"updateLoop","text":"Updates the loop setting of the media element.\n","items":[{"$type":"param","name":"loop","type":"Boolean","src":{"name":"421,262,25","type":"421,262,16"}}],"src":{"name":"421,264,0","text":"421,261,8,47"}},{"$type":"method","access":"private","fires":"mutedchange","name":"updateMuted","items":[{"$type":"param","name":"muted","src":{"name":"421,326,0"}}],"src":{"access":"421,324,8","fires":"421,327,0","name":"421,326,0"}},{"$type":"method","name":"updateUrl","text":"Sets the URL of the media element. If the media element already exists, it is update the src\nattribute of the element. If it is currently playing, it will start the new video.\n","items":[{"$type":"param","name":"newUrl","src":{"name":"421,230,0"}}],"src":{"name":"421,230,0","text":"421,227,8,176"}},{"$type":"method","access":"private","name":"updateVolume","items":[{"$type":"param","name":"volume","src":{"name":"421,319,0"}}],"src":{"access":"421,317,8","name":"421,319,0"}}]}],"src":{"access":"421,5,4","alias":"421,9,0","extends":"421,8,0","name":"421,7,0","text":"421,2,4,164"},"displayName":"Media"},{"$type":"class","alias":"widget.menu","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","name":"Ext.menu.Menu","requires":"Ext.menu.Item,Ext.menu.Manager,Ext.layout.VBox","since":"6.5.0","text":"A menu object. This is the container to which you may add {@link Ext.menu.Item menu items}.\n\nMenus may contain either {@link Ext.menu.Item menu items}, or general\n{@link Ext.Component Components}. Menus may also contain docked items because it\nextends {@link Ext.Panel}.\n\nBy default, Menus are absolutely positioned, floated Components. By configuring a\nMenu with `{@link #cfg-floated}: false`, a Menu may be used as a child of a\n{@link Ext.Container Container}.\n\n```javascript\n @example({ framework: 'extjs' })\n    var mainPanel = Ext.create('Ext.Panel', {\n        fullscreen: true,\n\n        items: {\n            xtype: 'menu',\n            floated: false,\n            docked: 'left',\n            items: [{\n                text: 'regular item 1'\n            },{\n                text: 'regular item 2'\n            },{\n                text: 'regular item 3'\n            }]\n        }\n    });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtButton, ExtContainer, ExtMenu, ExtMenuItem } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n           <ExtContainer>\n               <ExtButton text=\"Menu\">\n                   <ExtMenu rel=\"menu\" >\n                       <ExtMenuItem text=\"Mobile\" name=\"ui-type\" />\n                       <ExtMenuItem text=\"Desktop\" name=\"ui-type\"/>\n                   </ExtMenu>\n               </ExtButton>\n           </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n@Component({\n    selector: 'app-root',\n    styles: [``],\n    template: `\n        <ExtContainer>\n            <ExtButton text=\"Menu\">\n                <ExtMenu rel=\"menu\" >\n                    <ExtMenuItem text=\"Mobile\" name=\"ui-type\" ></ExtMenuItem>\n                    <ExtMenuItem text=\"Desktop\" name=\"ui-type\"></ExtMenuItem>\n                </ExtMenu>\n            </ExtButton>\n        </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n@example({tab: 1})\n<ext-container>\n   <ext-button text=\"Menu\">\n       <ext-menu rel=\"menu\" >\n           <ext-menuitem text=\"Mobile\" name=\"ui-type\"></ext-menuitem>\n           <ext-menuitem text=\"Desktop\" name=\"ui-type\"></ext-menuitem>\n       </ext-menu>\n   </ext-button>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-button.component';\nimport '@sencha/ext-web-components/dist/ext-menu.component';\nimport '@sencha/ext-web-components/dist/ext-menuitem.component';\n\nexport default class MenuComponent {}\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"align","type":"String","value":"'tl-bl?'","src":{"accessor":"623,113,0","name":"623,111,26","type":"623,111,18","value":"623,113,0"}},{"$type":"property","name":"allowOtherMenus","text":"True to allow multiple menus to be displayed at the same time.\n","type":"Boolean","value":"false","src":{"name":"623,191,23","text":"623,192,8,63","type":"623,191,14","value":"623,194,0"}},{"$type":"property","accessor":true,"name":"autoHide","optional":true,"text":"`false` to prevent the menu from auto-hiding when focus moves elsewhere\n","type":"Boolean","value":"true","src":{"accessor":"623,137,0","name":"623,134,28","text":"623,135,12,72","type":"623,134,18","value":"623,134,37"}},{"$type":"property","accessor":true,"name":"groups","text":"This object is a dictionary of {@link Ext.menu.RadioItem#cfg!group radio group}\nkeys and {@link Ext.menu.RadioItem#cfg!value values}. This map is maintained by\nthe individual radio items in this menu but can also be useful for data binding.\n\nFor example:\n\n     @example\n     Ext.Viewport.add({\n         xtype: 'container',\n         items: [{\n             xtype: 'button',\n             bind: 'Call {menuGroups.option}',\n\n             viewModel: {\n                 data: {\n                     menuGroups: {\n                         option: 'home'\n                     }\n                 }\n             },\n\n             menu: {\n                 bind: {\n                     groups: '{menuGroups}'\n                 },\n                 items: [{\n                     text: 'Home',\n                     group: 'option',\n                     value: 'home'\n                 }, {\n                     text: 'Work',\n                     group: 'option',\n                     value: 'work'\n                 }, {\n                     text: 'Mobile',\n                     group: 'option',\n                     value: 'mobile'\n                 }]\n             }\n         }]\n     });\n\nThe presence of the `group` property in the configuration of the above\n{@link Ext.menu.Menu menu} causes the menu to create a\n{@link Ext.menu.RadioItem RadioItem} instances.\n","type":"Object","value":"null","src":{"accessor":"623,187,0","name":"623,140,26","text":"623,141,12,1345","type":"623,140,18","value":"623,187,0"}},{"$type":"property","name":"ignoreParentClicks","text":"True to ignore clicks on any item in this menu that is a parent item (displays a submenu)\nso that the submenu is not dismissed when clicking the parent item.\n","type":"Boolean","value":"false","src":{"name":"623,197,23","text":"623,198,8,158","type":"623,197,14","value":"623,201,0"}},{"$type":"property","accessor":true,"name":"indented","text":"By default menu items reserve space at their start for an icon.  Set indented\nto `false` to remove this space.  This behavior can be overridden at the level\nof an individual menu item using the item's {@link Ext.menu.Item#indented} config.\nItems that are not {@link Ext.menu.Item Menu Items} can provide an `{@link #cfg!indented indented}`\nproperty in their initial config object to control their indentation behavior.\n\nWhen set to `false` no vertical `{@link #cfg!separator separator}` will be shown.\n","type":"Boolean","value":"true","src":{"accessor":"623,125,0","name":"623,116,27","text":"623,117,12,457","type":"623,116,18","value":"623,125,0"}},{"$type":"property","name":"mouseLeaveDelay","text":"The delay in ms as to how long the framework should wait before firing a mouseleave event.\nThis allows submenus not to be collapsed while hovering other menu items.\n","type":"Number","value":"50","src":{"name":"623,204,22","text":"623,205,8,165","type":"623,204,14","value":"623,208,0"}},{"$type":"property","accessor":true,"name":"separator","optional":true,"text":"True to show a vertical icon separator line between the icons and the menu text.\n","type":"Boolean","value":"false","src":{"accessor":"623,131,0","name":"623,128,28","text":"623,129,12,81","type":"623,128,18","value":"623,128,38"}}]},{"$type":"events","items":[{"$type":"event","name":"groupchange","since":"6.5.1","text":"Fires when a child {@link Ext.menu.RadioItem radio item} in a menu\n{@link Ext.menu.RadioItem#cfg!group group} changes {@link Ext.menu.RadioItem#cfg!checked}\nstate, and the group's value therefore changes.\n\nThe value changes to the {@link Ext.menu.RadioItem#cfg!value} of the sole checked\nmember of the group, or `null` if all members have become\n{@link Ext.menu.RadioItem#cfg!allowUncheck unchecked}.\n","items":[{"$type":"param","name":"menu","text":"The menu firing this event.\n","type":"Ext.menu.Menu","src":{"name":"623,268,31","text":"623,268,36,28","type":"623,268,16"}},{"$type":"param","name":"groupName","text":"The name of the group of items.\n","type":"String","src":{"name":"623,269,24","text":"623,269,34,32","type":"623,269,16"}},{"$type":"param","name":"newValue","text":"The new value of the group.\n","type":"Object","src":{"name":"623,270,24","text":"623,270,33,28","type":"623,270,16"}},{"$type":"param","name":"oldValue","text":"The old value of the group.\n","type":"Object","src":{"name":"623,271,24","text":"623,271,33,28","type":"623,271,16"}}],"src":{"name":"623,259,15","since":"623,272,15","text":"623,260,8,402"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"getItemFromEvent","text":"Gets the immediate child component which the passed event took place within\n","items":[{"$type":"param","name":"e","src":{"name":"623,735,0"}}],"src":{"access":"623,465,-1","name":"623,735,0","text":"623,733,12,76"}},{"$type":"method","access":"private","name":"handleItemOver","text":"Handle the delayed consequences of pointer over a child menu.\nAlso called on touch start.\n","items":[{"$type":"param","name":"e","src":{"name":"623,717,0"}},{"$type":"param","name":"item","src":{"name":"623,717,0"}}],"src":{"access":"623,465,-1","name":"623,717,0","text":"623,714,12,90"}},{"$type":"method","access":"private","fires":"mouseenter,mouseover","name":"onMouseOver","text":"Handle either pointer moving over the menu's element, or, on\ntouch capable devices, a touch start on the menu's element.\n","items":[{"$type":"param","name":"e","src":{"name":"623,659,0"}}],"src":{"access":"623,465,-1","fires":"623,706,0:623,709,0","name":"623,659,0","text":"623,656,12,121"}}]},{"$type":"properties","items":[{"$type":"property","name":"isMenu","text":"`true` in this class to identify an object as an instantiated Menu, or subclass thereof.\n","type":"Boolean","value":"true","src":{"name":"623,104,28","text":"623,105,8,89","type":"623,104,19","value":"623,107,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"menu-ui","text":"Creates a visual theme for a Menu.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1222,593,20","text":"1222,594,4,109","type":"1222,593,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"menu","src":{"access":"1222,597,35","name":"1222,597,21","text":"1222,597,46,35:1222,598,4,61","type":"1222,597,12","value":"1222,597,28"}},{"$type":"param","access":"protected","name":"$header-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the header component.  For use by UI mixins of derived classes.\n","type":"String","value":"menuheader","src":{"access":"1222,600,48","name":"1222,600,21","text":"1222,600,59,35:1222,601,4,86","type":"1222,600,12","value":"1222,600,35"}},{"$type":"param","access":"protected","name":"$title-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the title component.  For use by UI mixins of derived classes.\n","type":"String","value":"menutitle","src":{"access":"1222,603,46","name":"1222,603,21","text":"1222,603,57,35:1222,604,4,85","type":"1222,603,12","value":"1222,603,34"}},{"$type":"param","access":"protected","name":"$tool-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for tools.  For use by UI mixins of derived classes.\n","type":"String","value":"menutool","src":{"access":"1222,606,44","name":"1222,606,21","text":"1222,606,55,35:1222,607,4,71","type":"1222,606,12","value":"1222,606,33"}},{"$type":"param","name":"$background-color","text":"Menu background-color\n","type":"color","src":{"name":"1222,609,19","text":"1222,610,4,23","type":"1222,609,12"}},{"$type":"param","name":"$border-color","text":"Menu border-color\n","type":"color/list","src":{"name":"1222,612,24","text":"1222,613,4,19","type":"1222,612,12"}},{"$type":"param","name":"$border-width","text":"Menu border-width\n","type":"number/list","src":{"name":"1222,615,25","text":"1222,616,4,19","type":"1222,615,12"}},{"$type":"param","name":"$border-style","text":"Menu border-style\n","type":"string/list","src":{"name":"1222,618,25","text":"1222,619,4,19","type":"1222,618,12"}},{"$type":"param","name":"$border-radius","text":"Menu border-radius\n","type":"number/list","src":{"name":"1222,621,25","text":"1222,622,4,20","type":"1222,621,12"}},{"$type":"param","name":"$border-radius-big","text":"Menu border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1222,624,25","text":"1222,625,4,76","type":"1222,624,12"}},{"$type":"param","name":"$body-background-color","text":"Menu body background-color\n","type":"color","src":{"name":"1222,627,19","text":"1222,628,4,28","type":"1222,627,12"}},{"$type":"param","name":"$body-color","text":"Menu body text color\n","type":"color","src":{"name":"1222,630,19","text":"1222,631,4,22","type":"1222,630,12"}},{"$type":"param","name":"$body-border-color","text":"Menu body border-color\n","type":"color","src":{"name":"1222,633,19","text":"1222,634,4,24","type":"1222,633,12"}},{"$type":"param","name":"$body-border-width","text":"Menu body border-width\n","type":"number/list","src":{"name":"1222,636,25","text":"1222,637,4,24","type":"1222,636,12"}},{"$type":"param","name":"$body-border-style","text":"Menu body border-style\n","type":"number/list","src":{"name":"1222,639,25","text":"1222,640,4,24","type":"1222,639,12"}},{"$type":"param","name":"$body-font-weight","text":"Menu body font-weight\n","type":"string/number","src":{"name":"1222,642,27","text":"1222,643,4,23","type":"1222,642,12"}},{"$type":"param","name":"$body-font-size","text":"Menu body font-size\n","type":"number","src":{"name":"1222,645,20","text":"1222,646,4,21","type":"1222,645,12"}},{"$type":"param","name":"$body-font-size-big","text":"Menu body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,648,20","text":"1222,649,4,77","type":"1222,648,12"}},{"$type":"param","name":"$body-line-height","text":"Menu body line-height\n","type":"number","src":{"name":"1222,651,20","text":"1222,652,4,23","type":"1222,651,12"}},{"$type":"param","name":"$body-line-height-big","text":"Menu body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,654,20","text":"1222,655,4,79","type":"1222,654,12"}},{"$type":"param","name":"$body-font-family","text":"Menu body font-family\n","type":"string","src":{"name":"1222,657,20","text":"1222,658,4,23","type":"1222,657,12"}},{"$type":"param","name":"$body-padding","text":"Menu body padding\n","type":"number/list","src":{"name":"1222,660,25","text":"1222,661,4,19","type":"1222,660,12"}},{"$type":"param","name":"$body-padding-big","text":"Menu body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1222,663,25","text":"1222,664,4,75","type":"1222,663,12"}},{"$type":"param","name":"$header-background-color","text":"Menu Header background-color\n","type":"color","src":{"name":"1222,666,19","text":"1222,667,4,30","type":"1222,666,12"}},{"$type":"param","name":"$header-background-gradient","text":"Menu Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1222,669,25","text":"1222,670,4,148","type":"1222,669,12"}},{"$type":"param","name":"$header-color","text":"Menu Header text color\n","type":"color","src":{"name":"1222,673,19","text":"1222,674,4,24","type":"1222,673,12"}},{"$type":"param","name":"$header-border-color","text":"Menu Header border-color\n","type":"color/list","src":{"name":"1222,676,24","text":"1222,677,4,26","type":"1222,676,12"}},{"$type":"param","name":"$header-border-width","text":"Menu Header border-width\n","type":"number/list","src":{"name":"1222,679,25","text":"1222,680,4,26","type":"1222,679,12"}},{"$type":"param","name":"$header-border-style","text":"Menu Header border-style\n","type":"string/list","src":{"name":"1222,682,25","text":"1222,683,4,26","type":"1222,682,12"}},{"$type":"param","name":"$header-font-weight","text":"Menu Header font-weight\n","type":"string/number","src":{"name":"1222,685,27","text":"1222,686,4,25","type":"1222,685,12"}},{"$type":"param","name":"$header-font-size","text":"Menu Header font-size\n","type":"number","src":{"name":"1222,688,20","text":"1222,689,4,23","type":"1222,688,12"}},{"$type":"param","name":"$header-font-size-big","text":"Menu Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,691,20","text":"1222,692,4,79","type":"1222,691,12"}},{"$type":"param","name":"$header-line-height","text":"Menu Header line-height\n","type":"number","src":{"name":"1222,694,20","text":"1222,695,4,25","type":"1222,694,12"}},{"$type":"param","name":"$header-line-height-big","text":"Menu Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,697,20","text":"1222,698,4,81","type":"1222,697,12"}},{"$type":"param","name":"$header-font-family","text":"Menu Header font-family\n","type":"string","src":{"name":"1222,700,20","text":"1222,701,4,25","type":"1222,700,12"}},{"$type":"param","name":"$header-padding","text":"Menu Header padding\n","type":"number/list","src":{"name":"1222,703,25","text":"1222,704,4,21","type":"1222,703,12"}},{"$type":"param","name":"$header-padding-big","text":"Menu Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1222,706,25","text":"1222,707,4,77","type":"1222,706,12"}},{"$type":"param","name":"$header-title-padding","text":"Menu Header Title padding\n","type":"number/list","src":{"name":"1222,709,25","text":"1222,710,4,27","type":"1222,709,12"}},{"$type":"param","name":"$header-title-padding-big","text":"Menu Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1222,712,25","text":"1222,713,4,83","type":"1222,712,12"}},{"$type":"param","name":"$header-title-opacity","text":"Menu Header Title opacity\n","type":"number/list","src":{"name":"1222,715,25","text":"1222,716,4,27","type":"1222,715,12"}},{"$type":"param","name":"$header-shadow","text":"Menu Header Shadow\n","type":"shadow","src":{"name":"1222,718,20","text":"1222,719,4,20","type":"1222,718,12"}},{"$type":"param","name":"$header-z-index","text":"Z-Index for the Menu Header, should be used with shadows to raise header above content\n","type":"number","src":{"name":"1222,721,20","text":"1222,722,4,88","type":"1222,721,12"}},{"$type":"param","name":"$header-min-height","text":"Menu Header min-height\n","type":"number","src":{"name":"1222,724,20","text":"1222,725,4,24","type":"1222,724,12"}},{"$type":"param","name":"$header-min-height-big","text":"Menu Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,727,20","text":"1222,728,4,80","type":"1222,727,12"}},{"$type":"param","name":"$header-icon-color","text":"Menu Header icon color.\n","type":"color","src":{"name":"1222,730,19","text":"1222,731,4,25","type":"1222,730,12"}},{"$type":"param","name":"$header-icon-size","text":"Menu Header icon size\n","type":"number","src":{"name":"1222,733,20","text":"1222,734,4,23","type":"1222,733,12"}},{"$type":"param","name":"$header-icon-size-big","text":"Menu Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,736,20","text":"1222,737,4,79","type":"1222,736,12"}},{"$type":"param","name":"$header-icon-font-size","text":"Menu Header icon font-size.  Used for configuring the size of font icons\n","type":"number","src":{"name":"1222,739,20","text":"1222,740,4,74","type":"1222,739,12"}},{"$type":"param","name":"$header-icon-font-size-big","text":"Menu Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,742,20","text":"1222,743,4,84","type":"1222,742,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing","text":"The space between the Menu Header icon and text when the icon is horizontally aligned\n","type":"number","src":{"name":"1222,745,20","text":"1222,746,4,87","type":"1222,745,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing-big","text":"The space between the Menu Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,748,20","text":"1222,749,4,143","type":"1222,748,12"}},{"$type":"param","name":"$header-icon-vertical-spacing","text":"The space between the Menu Header icon and text when the icon is vertically aligned\n","type":"number","src":{"name":"1222,752,20","text":"1222,753,4,85","type":"1222,752,12"}},{"$type":"param","name":"$header-icon-vertical-spacing-big","text":"The space between the Menu Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,755,20","text":"1222,756,4,141","type":"1222,755,12"}},{"$type":"param","name":"$header-icon-opacity","text":"Menu Header icon opacity\n","type":"number","src":{"name":"1222,759,20","text":"1222,760,4,26","type":"1222,759,12"}},{"$type":"param","name":"$tool-color","text":"Menu Tool color\n","type":"color","src":{"name":"1222,762,19","text":"1222,763,4,17","type":"1222,762,12"}},{"$type":"param","name":"$tool-hovered-color","text":"Menu Tool color when hovered\n","type":"number","src":{"name":"1222,765,20","text":"1222,766,4,30","type":"1222,765,12"}},{"$type":"param","name":"$tool-pressed-color","text":"Menu Tool color when pressed\n","type":"number","src":{"name":"1222,768,20","text":"1222,769,4,30","type":"1222,768,12"}},{"$type":"param","name":"$tool-disabled-color","text":"Menu Tool color when disabled\n","type":"number","src":{"name":"1222,771,20","text":"1222,772,4,31","type":"1222,771,12"}},{"$type":"param","name":"$tool-background-color","text":"Menu Tool background-color\n","type":"color","src":{"name":"1222,774,19","text":"1222,775,4,28","type":"1222,774,12"}},{"$type":"param","name":"$tool-hovered-background-color","text":"Menu Tool background-color when hovered\n","type":"number","src":{"name":"1222,777,20","text":"1222,778,4,41","type":"1222,777,12"}},{"$type":"param","name":"$tool-pressed-background-color","text":"Menu Tool background-color when pressed\n","type":"number","src":{"name":"1222,780,20","text":"1222,781,4,41","type":"1222,780,12"}},{"$type":"param","name":"$tool-disabled-background-color","text":"Menu Tool background-color when disabled\n","type":"number","src":{"name":"1222,783,20","text":"1222,784,4,42","type":"1222,783,12"}},{"$type":"param","name":"$tool-opacity","text":"Menu Tool opacity\n","type":"number","src":{"name":"1222,786,20","text":"1222,787,4,19","type":"1222,786,12"}},{"$type":"param","name":"$tool-hovered-opacity","text":"Menu Tool opacity when hovered\n","type":"number","src":{"name":"1222,789,20","text":"1222,790,4,32","type":"1222,789,12"}},{"$type":"param","name":"$tool-pressed-opacity","text":"Menu Tool opacity when pressed\n","type":"number","src":{"name":"1222,792,20","text":"1222,793,4,32","type":"1222,792,12"}},{"$type":"param","name":"$tool-disabled-opacity","text":"Menu Tool opacity when disabled\n","type":"number","src":{"name":"1222,795,20","text":"1222,796,4,33","type":"1222,795,12"}},{"$type":"param","name":"$tool-border-radius","text":"Menu Tool border radius\n","type":"number","src":{"name":"1222,798,20","text":"1222,799,4,25","type":"1222,798,12"}},{"$type":"param","name":"$tool-border-radius-big","text":"Menu Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,801,20","text":"1222,802,4,81","type":"1222,801,12"}},{"$type":"param","name":"$tool-size","text":"Menu Tool size\n","type":"number","src":{"name":"1222,804,20","text":"1222,805,4,16","type":"1222,804,12"}},{"$type":"param","name":"$tool-size-big","text":"Menu Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,807,20","text":"1222,808,4,72","type":"1222,807,12"}},{"$type":"param","name":"$tool-font-size","text":"Menu Tool font-size\n","type":"number","src":{"name":"1222,810,20","text":"1222,811,4,21","type":"1222,810,12"}},{"$type":"param","name":"$tool-font-size-big","text":"Menu Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,813,20","text":"1222,814,4,77","type":"1222,813,12"}},{"$type":"param","name":"$tool-spacing","text":"The space between Menu Tools\n","type":"number","src":{"name":"1222,816,20","text":"1222,817,4,30","type":"1222,816,12"}},{"$type":"param","name":"$tool-spacing-big","text":"The space between Menu Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1222,819,20","text":"1222,820,4,86","type":"1222,819,12"}},{"$type":"param","name":"$tool-cursor","text":"Menu Tool cursor\n","type":"string","src":{"name":"1222,822,20","text":"1222,823,4,18","type":"1222,822,12"}},{"$type":"param","name":"$tool-disabled-cursor","text":"Menu Tool cursor when disabled\n","type":"string","src":{"name":"1222,825,20","text":"1222,826,4,32","type":"1222,825,12"}},{"$type":"param","name":"$tool-focused-outline-width","text":"Menu Tool outline width when focused\n","type":"number","src":{"name":"1222,828,20","text":"1222,829,4,38","type":"1222,828,12"}},{"$type":"param","name":"$tool-focused-outline-style","text":"Menu Tool outline style when focused\n","type":"string","src":{"name":"1222,831,20","text":"1222,832,4,38","type":"1222,831,12"}},{"$type":"param","name":"$tool-focused-outline-color","text":"Menu Tool outline color when focused\n","type":"color","src":{"name":"1222,834,19","text":"1222,835,4,38","type":"1222,834,12"}},{"$type":"param","name":"$tool-focused-outline-offset","text":"Menu Tool outline offset when focused\n","type":"number","src":{"name":"1222,837,20","text":"1222,838,4,39","type":"1222,837,12"}},{"$type":"param","name":"$anchor-border-color","text":"Menu anchor border-color\n","type":"color","src":{"name":"1222,840,19","text":"1222,841,4,26","type":"1222,840,12"}},{"$type":"param","name":"$anchor-background-color","text":"Menu anchor background-color\n","type":"color","src":{"name":"1222,843,19","text":"1222,844,4,30","type":"1222,843,12"}},{"$type":"param","name":"$anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","src":{"name":"1222,846,20","text":"1222,847,4,54","type":"1222,846,12"}},{"$type":"param","name":"$anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","src":{"name":"1222,849,20","text":"1222,850,4,54","type":"1222,849,12"}},{"$type":"param","name":"$anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","src":{"name":"1222,852,20","text":"1222,853,4,98","type":"1222,852,12"}},{"$type":"param","name":"$manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","src":{"name":"1222,856,20","text":"1222,857,4,66","type":"1222,856,12"}},{"$type":"param","name":"$icon-column-width","text":"Space reserved for Menu Item {@link Ext.menu.Item#icon icons}.\nIcons are horizontally centered within this space.\n","type":"number","src":{"name":"1222,859,20","text":"1222,860,4,115","type":"1222,859,12"}},{"$type":"param","name":"$icon-column-width-big","text":"Space reserved for Menu Item {@link Ext.menu.Item#icon icons}\nin the {@link Global_CSS#$enable-big big} sizing scheme.\nIcons are horizontally centered within this space.\n","type":"number","src":{"name":"1222,863,20","text":"1222,864,4,171","type":"1222,863,12"}},{"$type":"param","name":"$text-spacing","text":"The space between Menu Item text and the Menu's edge when not {@link #indented} or the\nspace between the text and the vertical {@link #separator}, if present.\nCan be a single numeric value, or a list of 2 values representing the left and right spacing.\n","type":"number/list","src":{"name":"1222,868,25","text":"1222,869,4,254","type":"1222,868,12"}},{"$type":"param","name":"$text-spacing-big","text":"The space, in the {@link Global_CSS#$enable-big big} sizing scheme, between Menu Item\ntext and the Menu's edge when not {@link #indented} or the space between the text and\nthe vertical {@link #separator}, if present.\nCan be a single numeric value, or a list of 2 values representing the left and right spacing.\n","type":"number/list","src":{"name":"1222,873,25","text":"1222,874,4,312","type":"1222,873,12"}},{"$type":"param","name":"$separator-width","text":"Menu {@link #separator} width\n","type":"number","src":{"name":"1222,879,20","text":"1222,880,4,31","type":"1222,879,12"}},{"$type":"param","name":"$separator-border-width","text":"Menu {@link #separator} border-width\n","type":"number","src":{"name":"1222,882,20","text":"1222,883,4,38","type":"1222,882,12"}},{"$type":"param","name":"$separator-border-style","text":"Menu {@link #separator} border-style\n","type":"string","src":{"name":"1222,885,20","text":"1222,886,4,38","type":"1222,885,12"}},{"$type":"param","name":"$separator-border-color","text":"Menu {@link #separator} border-color\n","type":"color","src":{"name":"1222,888,19","text":"1222,889,4,38","type":"1222,888,12"}},{"$type":"param","name":"$separator-background-color","text":"Menu {@link #separator} background-color\n","type":"color","src":{"name":"1222,891,19","text":"1222,892,4,42","type":"1222,891,12"}},{"$type":"param","name":"$component-margin","text":"The margin of child components that are not {@link Ext.menu.Item Menu Items}\n","type":"number/list","src":{"name":"1222,894,25","text":"1222,895,4,78","type":"1222,894,12"}},{"$type":"param","name":"$component-margin-big","text":"The margin of child components that are not {@link Ext.menu.Item Menu Items}\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1222,897,25","text":"1222,898,4,133","type":"1222,897,12"}}],"src":{"name":"1222,901,7","text":"1222,591,4,36"}}]},{"$type":"static-methods","items":[{"$type":"method","name":"create","static":true,"text":"Returns a {@link Ext.menu.Menu} object\n","items":[{"$type":"param","name":"menu","text":"An array of menu item configs,\nor a Menu config that will be used to generate and return a new Menu.\n","type":"Object/Object[]","src":{"name":"623,777,37","text":"623,777,42,31:623,778,12,70","type":"623,777,20"}},{"$type":"param","name":"config","optional":true,"text":"A configuration to use when creating the menu.\n","type":"Object","src":{"name":"623,779,29","text":"623,779,37,47","type":"623,779,20"}},{"$type":"return","type":"Ext.menu.Menu","src":{"type":"623,780,21"}}],"src":{"name":"623,782,0","static":"623,774,-1","text":"623,776,12,39"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$menu-anchor-background-color","text":"Menu anchor background-color\n","type":"color","value":"null","src":{"dynamic":"1222,474,32","name":"1222,474,1","text":"1222,472,4,29","type":"1222,471,10","value":"1222,474,40"}},{"$type":"property","dynamic":true,"name":"$menu-anchor-border-color","text":"Menu anchor border-color\n","type":"color","value":"null","src":{"dynamic":"1222,468,28","name":"1222,468,1","text":"1222,466,4,25","type":"1222,465,10","value":"1222,468,36"}},{"$type":"property","dynamic":true,"name":"$menu-anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","value":"null","src":{"dynamic":"1222,480,22","name":"1222,480,1","text":"1222,478,4,53","type":"1222,477,10","value":"1222,480,30"}},{"$type":"property","dynamic":true,"name":"$menu-anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","value":"null","src":{"dynamic":"1222,493,22","name":"1222,493,1","text":"1222,490,4,97","type":"1222,489,10","value":"1222,493,30"}},{"$type":"property","dynamic":true,"name":"$menu-anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","value":"null","src":{"dynamic":"1222,486,21","name":"1222,486,1","text":"1222,484,4,53","type":"1222,483,10","value":"1222,486,29"}},{"$type":"property","dynamic":true,"name":"$menu-background-color","text":"Menu background-color\n","type":"color/list","value":"null","src":{"dynamic":"1222,9,25","name":"1222,9,1","text":"1222,7,4,22","type":"1222,6,10","value":"1222,9,33"}},{"$type":"property","dynamic":true,"name":"$menu-body-background-color","text":"Menu body background-color\n","type":"color","value":"$menu-background-color","src":{"dynamic":"1222,45,30","name":"1222,45,1","text":"1222,43,4,27","type":"1222,42,10","value":"1222,45,38"}},{"$type":"property","dynamic":true,"name":"$menu-body-border-color","text":"Menu body border-color\n","type":"color","value":"$menu-border-color","src":{"dynamic":"1222,57,26","name":"1222,57,1","text":"1222,55,4,23","type":"1222,54,10","value":"1222,57,34"}},{"$type":"property","dynamic":true,"name":"$menu-body-border-style","text":"Menu body border-style\n","type":"number/list","value":"null","src":{"dynamic":"1222,69,26","name":"1222,69,1","text":"1222,67,4,23","type":"1222,66,10","value":"1222,69,34"}},{"$type":"property","dynamic":true,"name":"$menu-body-border-width","text":"Menu body border-width\n","type":"number/list","value":"$menu-border-width","src":{"dynamic":"1222,63,26","name":"1222,63,1","text":"1222,61,4,23","type":"1222,60,10","value":"1222,63,34"}},{"$type":"property","dynamic":true,"name":"$menu-body-color","text":"Menu body text color\n","type":"color","value":"null","src":{"dynamic":"1222,51,19","name":"1222,51,1","text":"1222,49,4,21","type":"1222,48,10","value":"1222,51,27"}},{"$type":"property","dynamic":true,"name":"$menu-body-font-family","text":"Menu body font-family\n","type":"string","value":"null","src":{"dynamic":"1222,105,25","name":"1222,105,1","text":"1222,103,4,22","type":"1222,102,10","value":"1222,105,33"}},{"$type":"property","dynamic":true,"name":"$menu-body-font-size","text":"Menu body font-size\n","type":"number","value":"null","src":{"dynamic":"1222,81,23","name":"1222,81,1","text":"1222,79,4,20","type":"1222,78,10","value":"1222,81,31"}},{"$type":"property","dynamic":true,"name":"$menu-body-font-size-big","text":"Menu body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,87,27","name":"1222,87,1","text":"1222,85,4,76","type":"1222,84,10","value":"1222,87,35"}},{"$type":"property","dynamic":true,"name":"$menu-body-font-weight","text":"Menu body font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1222,75,25","name":"1222,75,1","text":"1222,73,4,22","type":"1222,72,10","value":"1222,75,33"}},{"$type":"property","dynamic":true,"name":"$menu-body-line-height","text":"Menu body line-height\n","type":"number","value":"null","src":{"dynamic":"1222,93,25","name":"1222,93,1","text":"1222,91,4,22","type":"1222,90,10","value":"1222,93,33"}},{"$type":"property","dynamic":true,"name":"$menu-body-line-height-big","text":"Menu body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,99,29","name":"1222,99,1","text":"1222,97,4,78","type":"1222,96,10","value":"1222,99,37"}},{"$type":"property","dynamic":true,"name":"$menu-body-padding","text":"Menu body padding\n","type":"number/list","value":"null","src":{"dynamic":"1222,111,21","name":"1222,111,1","text":"1222,109,4,18","type":"1222,108,10","value":"1222,111,29"}},{"$type":"property","dynamic":true,"name":"$menu-body-padding-big","text":"Menu body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1222,117,25","name":"1222,117,1","text":"1222,115,4,74","type":"1222,114,10","value":"1222,117,33"}},{"$type":"property","dynamic":true,"name":"$menu-border-color","text":"Menu border-color\n","type":"color/list","value":"$neutral-color","src":{"dynamic":"1222,15,21","name":"1222,15,1","text":"1222,13,4,18","type":"1222,12,10","value":"1222,15,29"}},{"$type":"property","dynamic":true,"name":"$menu-border-radius","text":"Menu border-radius\n","type":"number/list","value":"null","src":{"dynamic":"1222,33,22","name":"1222,33,1","text":"1222,31,4,19","type":"1222,30,10","value":"1222,33,30"}},{"$type":"property","dynamic":true,"name":"$menu-border-radius-big","text":"Menu border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"$menu-border-radius","src":{"dynamic":"1222,39,26","name":"1222,39,1","text":"1222,37,4,75","type":"1222,36,10","value":"1222,39,34"}},{"$type":"property","dynamic":true,"name":"$menu-border-style","text":"Menu border-style\n","type":"string/list","value":"null","src":{"dynamic":"1222,27,21","name":"1222,27,1","text":"1222,25,4,18","type":"1222,24,10","value":"1222,27,29"}},{"$type":"property","dynamic":true,"name":"$menu-border-width","text":"Menu border-width\n","type":"number/list","value":"null","src":{"dynamic":"1222,21,21","name":"1222,21,1","text":"1222,19,4,18","type":"1222,18,10","value":"1222,21,29"}},{"$type":"property","dynamic":true,"name":"$menu-component-margin","text":"The margin of child components that are not {@link Ext.menu.Item Menu Items}\n","type":"number/list","value":"2px $menu-text-spacing","src":{"dynamic":"1222,567,25","name":"1222,567,1","text":"1222,565,4,77","type":"1222,564,10","value":"1222,567,33"}},{"$type":"property","dynamic":true,"name":"$menu-component-margin-big","text":"The margin of child components that are not {@link Ext.menu.Item Menu Items}\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"3px $menu-text-spacing-big","src":{"dynamic":"1222,574,29","name":"1222,574,1","text":"1222,571,4,133","type":"1222,570,10","value":"1222,574,37"}},{"$type":"property","dynamic":true,"name":"$menu-component-textfield-vertical-spacing","text":"The vertical spacing of child components that are {@link Ext.field.Text}\n","type":"number/list","value":"8px","src":{"dynamic":"1222,580,45","name":"1222,580,1","text":"1222,578,4,73","type":"1222,577,10","value":"1222,580,53"}},{"$type":"property","dynamic":true,"name":"$menu-component-textfield-vertical-spacing-big","text":"The vertical spacing of child components that are {@link Ext.field.Text}\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"10px","src":{"dynamic":"1222,587,49","name":"1222,587,1","text":"1222,584,4,129","type":"1222,583,10","value":"1222,587,57"}},{"$type":"property","dynamic":true,"name":"$menu-header-background-color","text":"Menu Header background-color\n","type":"color","value":"null","src":{"dynamic":"1222,123,32","name":"1222,123,1","text":"1222,121,4,29","type":"1222,120,10","value":"1222,123,40"}},{"$type":"property","dynamic":true,"name":"$menu-header-background-gradient","text":"Menu Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1222,130,35","name":"1222,130,1","text":"1222,127,4,147","type":"1222,126,10","value":"1222,130,43"}},{"$type":"property","dynamic":true,"name":"$menu-header-border-color","text":"Menu Header border-color\n","type":"color/list","value":"$menu-border-color","src":{"dynamic":"1222,142,28","name":"1222,142,1","text":"1222,140,4,25","type":"1222,139,10","value":"1222,142,36"}},{"$type":"property","dynamic":true,"name":"$menu-header-border-style","text":"Menu Header border-style\n","type":"string/list","value":"null","src":{"dynamic":"1222,154,28","name":"1222,154,1","text":"1222,152,4,25","type":"1222,151,10","value":"1222,154,36"}},{"$type":"property","dynamic":true,"name":"$menu-header-border-width","text":"Menu Header border-width\n","type":"number/list","value":"$menu-border-width","src":{"dynamic":"1222,148,28","name":"1222,148,1","text":"1222,146,4,25","type":"1222,145,10","value":"1222,148,36"}},{"$type":"property","dynamic":true,"name":"$menu-header-color","text":"Menu Header text color\n","type":"color","value":"null","src":{"dynamic":"1222,136,21","name":"1222,136,1","text":"1222,134,4,23","type":"1222,133,10","value":"1222,136,29"}},{"$type":"property","dynamic":true,"name":"$menu-header-font-family","text":"Menu Header font-family\n","type":"string","value":"null","src":{"dynamic":"1222,190,27","name":"1222,190,1","text":"1222,188,4,24","type":"1222,187,10","value":"1222,190,35"}},{"$type":"property","dynamic":true,"name":"$menu-header-font-size","text":"Menu Header font-size\n","type":"number","value":"null","src":{"dynamic":"1222,166,25","name":"1222,166,1","text":"1222,164,4,22","type":"1222,163,10","value":"1222,166,33"}},{"$type":"property","dynamic":true,"name":"$menu-header-font-size-big","text":"Menu Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,172,29","name":"1222,172,1","text":"1222,170,4,78","type":"1222,169,10","value":"1222,172,37"}},{"$type":"property","dynamic":true,"name":"$menu-header-font-weight","text":"Menu Header font-weight\n","type":"string/number","value":"null","src":{"dynamic":"1222,160,27","name":"1222,160,1","text":"1222,158,4,24","type":"1222,157,10","value":"1222,160,35"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-color","text":"Menu Header icon color.\n","type":"color","value":"null","src":{"dynamic":"1222,250,26","name":"1222,250,1","text":"1222,248,4,24","type":"1222,247,10","value":"1222,250,34"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-font-size","text":"Menu Header icon font-size.  Used for configuring the size of font icons\n","type":"number","value":"null","src":{"dynamic":"1222,268,30","name":"1222,268,1","text":"1222,266,4,73","type":"1222,265,10","value":"1222,268,38"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-font-size-big","text":"Menu Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,274,34","name":"1222,274,1","text":"1222,272,4,83","type":"1222,271,10","value":"1222,274,42"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-horizontal-spacing","text":"The space between the Menu Header icon and text when the icon is horizontally aligned\n","type":"number","value":"null","src":{"dynamic":"1222,280,39","name":"1222,280,1","text":"1222,278,4,86","type":"1222,277,10","value":"1222,280,47"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-horizontal-spacing-big","text":"The space between the Menu Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,287,43","name":"1222,287,1","text":"1222,284,4,142","type":"1222,283,10","value":"1222,287,51"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-opacity","text":"Menu Header icon opacity\n","type":"number","value":"null","src":{"dynamic":"1222,306,28","name":"1222,306,1","text":"1222,304,4,25","type":"1222,303,10","value":"1222,306,36"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-size","text":"Menu Header icon size\n","type":"number","value":"null","src":{"dynamic":"1222,256,25","name":"1222,256,1","text":"1222,254,4,22","type":"1222,253,10","value":"1222,256,33"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-size-big","text":"Menu Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,262,29","name":"1222,262,1","text":"1222,260,4,78","type":"1222,259,10","value":"1222,262,37"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-vertical-spacing","text":"The space between the Menu Header icon and text when the icon is vertically aligned\n","type":"number","value":"null","src":{"dynamic":"1222,293,37","name":"1222,293,1","text":"1222,291,4,84","type":"1222,290,10","value":"1222,293,45"}},{"$type":"property","dynamic":true,"name":"$menu-header-icon-vertical-spacing-big","text":"The space between the Menu Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,300,41","name":"1222,300,1","text":"1222,297,4,140","type":"1222,296,10","value":"1222,300,49"}},{"$type":"property","dynamic":true,"name":"$menu-header-line-height","text":"Menu Header line-height\n","type":"number","value":"null","src":{"dynamic":"1222,178,27","name":"1222,178,1","text":"1222,176,4,24","type":"1222,175,10","value":"1222,178,35"}},{"$type":"property","dynamic":true,"name":"$menu-header-line-height-big","text":"Menu Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,184,31","name":"1222,184,1","text":"1222,182,4,80","type":"1222,181,10","value":"1222,184,39"}},{"$type":"property","dynamic":true,"name":"$menu-header-min-height","text":"Menu Header min-height\n","type":"number","value":"null","src":{"dynamic":"1222,238,26","name":"1222,238,1","text":"1222,236,4,23","type":"1222,235,10","value":"1222,238,34"}},{"$type":"property","dynamic":true,"name":"$menu-header-min-height-big","text":"Menu Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,244,30","name":"1222,244,1","text":"1222,242,4,79","type":"1222,241,10","value":"1222,244,38"}},{"$type":"property","dynamic":true,"name":"$menu-header-padding","text":"Menu Header padding\n","type":"number/list","value":"null","src":{"dynamic":"1222,196,23","name":"1222,196,1","text":"1222,194,4,20","type":"1222,193,10","value":"1222,196,31"}},{"$type":"property","dynamic":true,"name":"$menu-header-padding-big","text":"Menu Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1222,202,27","name":"1222,202,1","text":"1222,200,4,76","type":"1222,199,10","value":"1222,202,35"}},{"$type":"property","dynamic":true,"name":"$menu-header-shadow","text":"Menu Header Shadow\n","type":"shadow","value":"null","src":{"dynamic":"1222,226,22","name":"1222,226,1","text":"1222,224,4,19","type":"1222,223,10","value":"1222,226,30"}},{"$type":"property","dynamic":true,"name":"$menu-header-title-opacity","text":"Menu Header Title opacity\n","type":"number","value":"null","src":{"dynamic":"1222,220,29","name":"1222,220,1","text":"1222,218,4,26","type":"1222,217,10","value":"1222,220,37"}},{"$type":"property","dynamic":true,"name":"$menu-header-title-padding","text":"Menu Header Title padding\n","type":"number/list","value":"null","src":{"dynamic":"1222,208,29","name":"1222,208,1","text":"1222,206,4,26","type":"1222,205,10","value":"1222,208,37"}},{"$type":"property","dynamic":true,"name":"$menu-header-title-padding-big","text":"Menu Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1222,214,33","name":"1222,214,1","text":"1222,212,4,82","type":"1222,211,10","value":"1222,214,41"}},{"$type":"property","dynamic":true,"name":"$menu-header-z-index","text":"Z-Index for the Menu Header, should be used with shadows to raise header above content\n","type":"number","value":"null","src":{"dynamic":"1222,232,23","name":"1222,232,1","text":"1222,230,4,87","type":"1222,229,10","value":"1222,232,31"}},{"$type":"property","dynamic":true,"name":"$menu-icon-column-width","text":"Space reserved for Menu Item {@link Ext.menu.Item#icon icons}.\nIcons are horizontally centered within this space.\n","type":"number","value":"30px","src":{"dynamic":"1222,506,26","name":"1222,506,1","text":"1222,503,4,114","type":"1222,502,10","value":"1222,506,34"}},{"$type":"property","dynamic":true,"name":"$menu-icon-column-width-big","text":"Space reserved for Menu Item {@link Ext.menu.Item#icon icons}\nin the {@link Global_CSS#$enable-big big} sizing scheme.\nIcons are horizontally centered within this space.\n","type":"number","value":"40px","src":{"dynamic":"1222,514,30","name":"1222,514,1","text":"1222,510,4,170","type":"1222,509,10","value":"1222,514,38"}},{"$type":"property","dynamic":true,"name":"$menu-manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","value":"$panel-manage-borders","src":{"dynamic":"1222,499,23","name":"1222,499,1","text":"1222,497,4,65","type":"1222,496,10","value":"1222,499,31"}},{"$type":"property","dynamic":true,"name":"$menu-separator-background-color","text":"Menu {@link #separator} background-color\n","type":"color","value":"null","src":{"dynamic":"1222,561,35","name":"1222,561,1","text":"1222,559,4,41","type":"1222,558,10","value":"1222,561,43"}},{"$type":"property","dynamic":true,"name":"$menu-separator-border-color","text":"Menu {@link #separator} border-color\n","type":"color","value":"$neutral-color","src":{"dynamic":"1222,555,31","name":"1222,555,1","text":"1222,553,4,37","type":"1222,552,10","value":"1222,555,39"}},{"$type":"property","dynamic":true,"name":"$menu-separator-border-style","text":"Menu {@link #separator} border-style\n","type":"string","value":"solid","src":{"dynamic":"1222,549,31","name":"1222,549,1","text":"1222,547,4,37","type":"1222,546,10","value":"1222,549,39"}},{"$type":"property","dynamic":true,"name":"$menu-separator-border-width","text":"Menu {@link #separator} border-width\n","type":"number","value":"0 0 0 $menu-separator-width","src":{"dynamic":"1222,543,31","name":"1222,543,1","text":"1222,541,4,37","type":"1222,540,10","value":"1222,543,39"}},{"$type":"property","dynamic":true,"name":"$menu-separator-width","text":"Menu {@link #separator} width\n","type":"number","value":"1px","src":{"dynamic":"1222,537,24","name":"1222,537,1","text":"1222,535,4,30","type":"1222,534,10","value":"1222,537,32"}},{"$type":"property","dynamic":true,"name":"$menu-text-spacing","text":"The space between Menu Item text and the Menu's edge when not {@link #indented} or the\nspace between the text and the vertical {@link #separator}, if present.\nCan be a single numeric value, or a list of 2 values representing the left and right spacing.\n","type":"number/list","value":"8px","src":{"dynamic":"1222,522,21","name":"1222,522,1","text":"1222,518,4,253","type":"1222,517,10","value":"1222,522,29"}},{"$type":"property","dynamic":true,"name":"$menu-text-spacing-big","text":"The space, in the {@link Global_CSS#$enable-big big} sizing scheme, between Menu Item\ntext and the Menu's edge when not {@link #indented} or the space between the text and\nthe vertical {@link #separator}, if present.\nCan be a single numeric value, or a list of 2 values representing the left and right spacing.\n","type":"number/list","value":"10px","src":{"dynamic":"1222,531,25","name":"1222,531,1","text":"1222,526,4,311","type":"1222,525,10","value":"1222,531,33"}},{"$type":"property","dynamic":true,"name":"$menu-tool-background-color","text":"Menu Tool background-color\n","type":"color","value":"null","src":{"dynamic":"1222,336,30","name":"1222,336,1","text":"1222,334,4,27","type":"1222,333,10","value":"1222,336,38"}},{"$type":"property","dynamic":true,"name":"$menu-tool-border-radius","text":"Menu Tool border radius\n","type":"number","value":"null","src":{"dynamic":"1222,384,27","name":"1222,384,1","text":"1222,382,4,24","type":"1222,381,10","value":"1222,384,35"}},{"$type":"property","dynamic":true,"name":"$menu-tool-border-radius-big","text":"Menu Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,390,31","name":"1222,390,1","text":"1222,388,4,80","type":"1222,387,10","value":"1222,390,39"}},{"$type":"property","dynamic":true,"name":"$menu-tool-color","text":"Menu Tool color\n","type":"color","value":"null","src":{"dynamic":"1222,312,19","name":"1222,312,1","text":"1222,310,4,16","type":"1222,309,10","value":"1222,312,27"}},{"$type":"property","dynamic":true,"name":"$menu-tool-cursor","text":"Menu Tool cursor\n","type":"string","value":"null","src":{"dynamic":"1222,432,20","name":"1222,432,1","text":"1222,430,4,17","type":"1222,429,10","value":"1222,432,28"}},{"$type":"property","dynamic":true,"name":"$menu-tool-disabled-background-color","text":"Menu Tool background-color when disabled\n","type":"number","value":"null","src":{"dynamic":"1222,354,39","name":"1222,354,1","text":"1222,352,4,41","type":"1222,351,10","value":"1222,354,47"}},{"$type":"property","dynamic":true,"name":"$menu-tool-disabled-color","text":"Menu Tool color when disabled\n","type":"number","value":"null","src":{"dynamic":"1222,330,28","name":"1222,330,1","text":"1222,328,4,30","type":"1222,327,10","value":"1222,330,36"}},{"$type":"property","dynamic":true,"name":"$menu-tool-disabled-cursor","text":"Menu Tool cursor when disabled\n","type":"string","value":"null","src":{"dynamic":"1222,438,29","name":"1222,438,1","text":"1222,436,4,31","type":"1222,435,10","value":"1222,438,37"}},{"$type":"property","dynamic":true,"name":"$menu-tool-disabled-opacity","text":"Menu Tool opacity when disabled\n","type":"number","value":"null","src":{"dynamic":"1222,378,30","name":"1222,378,1","text":"1222,376,4,32","type":"1222,375,10","value":"1222,378,38"}},{"$type":"property","dynamic":true,"name":"$menu-tool-focused-outline-color","text":"Menu Tool outline color when focused\n","type":"color","value":"null","src":{"dynamic":"1222,456,35","name":"1222,456,1","text":"1222,454,4,37","type":"1222,453,10","value":"1222,456,43"}},{"$type":"property","dynamic":true,"name":"$menu-tool-focused-outline-offset","text":"Menu Tool outline offset when focused\n","type":"number","value":"null","src":{"dynamic":"1222,462,36","name":"1222,462,1","text":"1222,460,4,38","type":"1222,459,10","value":"1222,462,44"}},{"$type":"property","dynamic":true,"name":"$menu-tool-focused-outline-style","text":"Menu Tool outline style when focused\n","type":"string","value":"null","src":{"dynamic":"1222,450,35","name":"1222,450,1","text":"1222,448,4,37","type":"1222,447,10","value":"1222,450,43"}},{"$type":"property","dynamic":true,"name":"$menu-tool-focused-outline-width","text":"Menu Tool outline width when focused\n","type":"number","value":"null","src":{"dynamic":"1222,444,35","name":"1222,444,1","text":"1222,442,4,37","type":"1222,441,10","value":"1222,444,43"}},{"$type":"property","dynamic":true,"name":"$menu-tool-font-size","text":"Menu Tool font-size\n","type":"number","value":"null","src":{"dynamic":"1222,408,23","name":"1222,408,1","text":"1222,406,4,20","type":"1222,405,10","value":"1222,408,31"}},{"$type":"property","dynamic":true,"name":"$menu-tool-font-size-big","text":"Menu Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,414,27","name":"1222,414,1","text":"1222,412,4,76","type":"1222,411,10","value":"1222,414,35"}},{"$type":"property","dynamic":true,"name":"$menu-tool-hovered-background-color","text":"Menu Tool background-color when hovered\n","type":"number","value":"null","src":{"dynamic":"1222,342,38","name":"1222,342,1","text":"1222,340,4,40","type":"1222,339,10","value":"1222,342,46"}},{"$type":"property","dynamic":true,"name":"$menu-tool-hovered-color","text":"Menu Tool color when hovered\n","type":"number","value":"null","src":{"dynamic":"1222,318,27","name":"1222,318,1","text":"1222,316,4,29","type":"1222,315,10","value":"1222,318,35"}},{"$type":"property","dynamic":true,"name":"$menu-tool-hovered-opacity","text":"Menu Tool opacity when hovered\n","type":"number","value":"null","src":{"dynamic":"1222,366,29","name":"1222,366,1","text":"1222,364,4,31","type":"1222,363,10","value":"1222,366,37"}},{"$type":"property","dynamic":true,"name":"$menu-tool-opacity","text":"Menu Tool opacity\n","type":"number","value":"null","src":{"dynamic":"1222,360,21","name":"1222,360,1","text":"1222,358,4,18","type":"1222,357,10","value":"1222,360,29"}},{"$type":"property","dynamic":true,"name":"$menu-tool-pressed-background-color","text":"Menu Tool background-color when pressed\n","type":"number","value":"null","src":{"dynamic":"1222,348,38","name":"1222,348,1","text":"1222,346,4,40","type":"1222,345,10","value":"1222,348,46"}},{"$type":"property","dynamic":true,"name":"$menu-tool-pressed-color","text":"Menu Tool color when pressed\n","type":"number","value":"null","src":{"dynamic":"1222,324,27","name":"1222,324,1","text":"1222,322,4,29","type":"1222,321,10","value":"1222,324,35"}},{"$type":"property","dynamic":true,"name":"$menu-tool-pressed-opacity","text":"Menu Tool opacity when pressed\n","type":"number","value":"null","src":{"dynamic":"1222,372,29","name":"1222,372,1","text":"1222,370,4,31","type":"1222,369,10","value":"1222,372,37"}},{"$type":"property","dynamic":true,"name":"$menu-tool-size","text":"Menu Tool size\n","type":"number","value":"null","src":{"dynamic":"1222,396,18","name":"1222,396,1","text":"1222,394,4,15","type":"1222,393,10","value":"1222,396,26"}},{"$type":"property","dynamic":true,"name":"$menu-tool-size-big","text":"Menu Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,402,22","name":"1222,402,1","text":"1222,400,4,71","type":"1222,399,10","value":"1222,402,30"}},{"$type":"property","dynamic":true,"name":"$menu-tool-spacing","text":"The space between Menu Tools\n","type":"number","value":"null","src":{"dynamic":"1222,420,21","name":"1222,420,1","text":"1222,418,4,29","type":"1222,417,10","value":"1222,420,29"}},{"$type":"property","dynamic":true,"name":"$menu-tool-spacing-big","text":"The space between Menu Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1222,426,25","name":"1222,426,1","text":"1222,424,4,85","type":"1222,423,10","value":"1222,426,33"}}]}],"src":{"alias":"623,95,0","extends":"623,94,0","name":"1222,2,11","requires":"623,98,0:623,99,0:623,100,0","since":"623,91,11","text":"623,2,4,2888"},"group":"Other Components","displayName":"Menu"},{"$type":"class","alias":"widget.panel","alternateClassNames":"Ext.panel.Panel","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.Sheet,Ext.field.Panel,Ext.calendar.panel.AbstractBase,Ext.calendar.panel.AbstractPanel,Ext.tip.ToolTip,Ext.Dialog,Ext.grid.locked.Grid,Ext.grid.locked.Region,Ext.grid.rowedit.Bar,Ext.menu.Menu,Ext.panel.Accordion,Ext.panel.Date,Ext.panel.Time,Ext.picker.Tablet,Ext.pivot.d3.AbstractContainer,Ext.pivot.plugin.configurator.Container,Ext.pivot.plugin.configurator.Panel,Ext.ux.colorpick.Selector","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","mixins":"Ext.panel.Buttons,Ext.mixin.Toolable","name":"Ext.Panel","override":"Ext.Panel","requires":"Ext.layout.Box,Ext.Toolbar","text":" Panels are {@link Ext.Container containers} with an optional\n {@link Ext.panel.Header header} that can be positioned using the\n {@link #cfg-headerPosition headerPosition} config option.\n\n Panels add extra functionality by providing various options for configuring a header\n that is docked inside the panel.  Setting any of the following panel config options\n will automatically create a header:\n - {@link #cfg-title title}\n - {@link #cfg-iconCls iconCls}\n - {@link #cfg-icon icon}\n - {@link #cfg-tools tools}\n - {@link #cfg-closable closable}\n\n It is also possible to configure the header directly using the {@link #header}\n configuration. See {@link Ext.panel.Header} for more information.\n\n ### Simple Panel Example (with body text / html)\n\n Usually, Panels are used as constituents within an\n {@link Ext.app.Application application}, in which case, they\n would be used as child items of {@link Ext.Container Containers}, and would themselves\n use {@link Ext.Component Ext.Components} as child {@link #cfg-items items}. However,\n to illustrate simply rendering a Panel into the document, here's how to do it:\n\n ```javascript\n @example({ framework: 'extjs' })\n     Ext.create({\n         xtype: 'panel',\n         title: 'Panel Title',\n         iconCls: 'x-fa fa-html5',\n         height: 400,\n         width: 400,\n         bodyPadding: 12,\n         html: 'Sample HTML text',\n         renderTo: Ext.getBody()\n     });\n ```\n\n ### Panel Example (with child items)\n\n Panels are, by virtue of their inheritance from {@link Ext.Container}, capable of\n being configured with a {@link Ext.Container#layout layout}, and containing child\n {@link Ext.Component Components}.\n\n ```javascript\n @example({ framework: 'extjs' })\n     Ext.create({\n         xtype: 'panel',\n         bodyPadding: true, // don't want content to crunch against the borders\n         width: 300,\n         title: 'Filters',\n         items: [{\n             xtype: 'datefield',\n             label: 'Start date'\n         }, {\n             xtype: 'datefield',\n             label: 'End date'\n         }],\n         renderTo: Ext.getBody()\n     });\n ```\n\n Panel also provides built-in {@link #cfg-collapsible collapsible, expandable}, and\n {@link #cfg-closable closable} behavior. Panels can be easily dropped into any\n {@link Ext.Container Container} or layout, and the layout and rendering pipeline\n is {@link Ext.Container#method-add completely managed by the framework}.\n\n ### Floating Panels\n\n Panels are also useful as Overlays - containers that float over your application.\n If configured with `{@link #cfg-anchor anchor}` set to `true`, when you\n {@link #method-showBy showBy} another component, there will be an anchor arrow\n pointing to the reference component.\n\n ```javascript\n @example({ framework: 'extjs' })\n     var panel = Ext.create({\n         xtype: 'panel',\n         title: 'Floated',\n         bodyPadding: true,\n         html: 'context panel text',\n         // the panel will be hidden until shown\n         floated: true,\n         // adds the close tool in the panel header\n         closable: true,\n         // hides, rather than destroys the closed panel\n         closeAction: 'hide',\n         anchor: true\n     });\n\n     Ext.create({\n         xtype: 'button',\n         text: 'Show Popup',\n         margin: 20,\n         // shows the floated panel next to the button\n         handler: function () {\n             panel.showBy(this, 'tl-bl');\n         },\n         renderTo: Ext.getBody()\n     });\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react';\n import { ExtContainer, ExtPanel, ExtButton } from '@sencha/ext-react';\n Ext.require('Ext.Toast');\n\n export default class MyExample extends Component {\n \t    render() {\n \t        function toolHandler(owner, tool) {\n \t            Ext.toast(`You clicked ${tool.config.type}`);\n\t        }\n\t        return (\n\t            <ExtContainer>\n\t                <ExtPanel\n\t                    shadow\n\t                    title=\"Panel\"\n\t                    height={300}\n\t                    width={500}\n\t                    tools={[\n\t                        { type: 'minimize', handler: toolHandler },\n\t                        { type: 'refresh', handler: toolHandler },\n\t                        { type: 'save', handler: toolHandler },\n\t                        { type: 'search', handler: toolHandler },\n\t                        { type: 'close', handler: toolHandler }\n\t                    ]}\n\t                >\n\t                    <p>Panel Body</p>\n\t                </ExtPanel>\n\t                <ExtButton ui=\"action\" handler={() => this.modal.cmp.show()}\n                       margin=\"20 0 0 0\" text=\"Show Modal\"/>\n\t                <ExtPanel\n\t                    ref={modal => this.modal = modal}\n\t                    title=\"Floated Panel\"\n\t                    modal\n\t                    floated\n\t                    centered\n\t                    hideOnMaskTap\n\t                    width={Ext.filterPlatform('ie10') ? '100%' :\n                            (Ext.os.deviceType == 'Phone') ? 260 : 400}\n\t                    maxHeight={Ext.filterPlatform('ie10') ? '30%' :\n                          (Ext.os.deviceType == 'Phone') ? 220 : 400}\n\t                    showAnimation={{\n\t                        type: 'popIn',\n\t                        duration: 250,\n\t                        easing: 'ease-out'\n\t                    }}\n\t                    hideAnimation={{\n\t                        type: 'popOut',\n\t                        duration: 250,\n\t                        easing: 'ease-out'\n\t                    }}\n\t                >\n\t                    <p>\n\t                        This is a modal, centered and floated panel.\n                          hideOnMaskTap is true by default so we can tap anywhere\n                          outside the overlay to hide it.\n                      </p>\n\t                </ExtPanel>\n\t            </ExtContainer>\n\t        )\n\t    }\n\t}\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n declare var Ext: any;\n import {Component} from '@angular/core';\n Ext.require('Ext.Toast');\n\n @Component({\n\t\t  selector: 'app-component',\n\t\t  template: `<ExtContainer>\n\t\t    <ExtPanel\n\t\t        [shadow]=\"true\"\n\t\t        title=\"Panel\"\n\t\t        [height]=\"300\"\n\t\t        [width]=\"500\"\n\t\t        (ready)=\"this.onMainPanelReady($event)\"\n\t\t        [html]= \"'<p>Panel Body</p>'\"\n\t\t    >\n\t\t    </ExtPanel>\n\t\t    <ExtButton [ui]=\"'action'\" (tap)=\"modalClick()\"\n              margin=\"20 0 0 0\" text=\"Show Modal\">\n        </ExtButton>\n\t\t    <ExtPanel\n\t\t        title=\"Floated Panel\"\n\t\t        [modal]=\"true\"\n\t\t        [floated]=\"true\"\n\t\t        [centered]=\"true\"\n\t\t        hideOnMaskTap=\"true\"\n\t\t        [width]=\"400\"\n\t\t        maxHeight=\"400\"\n\t\t        (ready)=\"this.onModalPanelReady($event)\"\n\t\t        [showAnimation]=\"{\n\t\t        type: 'popIn',\n\t\t        duration: 250,\n\t\t        easing: 'ease-out'\n\t\t        }\"\n\t\t        [hideAnimation]=\"{\n\t\t        type: 'popOut',\n\t\t        duration: 250,\n\t\t        easing: 'ease-out'\n\t\t        }\"\n\t\t        [html]=\"'<p>This is a modal, centered and floated panel.\n              hideOnMaskTap is true by default so we can tap anywhere\n              outside the overlay to hide it.</p>'\"\n\t\t    >\n\t\t    </ExtPanel>\n\t\t  </ExtContainer>`,\n\t\t  styles: [``]\n\t\t})\n\n\t\t  export class AppComponent  {\n\t\t  mainPanel:any;\n\t\t  modalPanelCmp:any;\n\t\t  toolHandler = (owner, tool) => {\n\t\t     Ext.toast(`You clicked ${tool.config.type}`);\n\t\t  }\n\n\t\t  onMainPanelReady = (event) => {\n\t\t    this.mainPanel = event.detail.cmp;\n\t\t    this.mainPanel.setTools([\n\t\t      { type: \"minimize\", handler: this.toolHandler.bind(this) },\n\t\t      { type: \"refresh\", handler: this.toolHandler.bind(this) },\n\t\t      { type: \"save\", handler: this.toolHandler.bind(this) },\n\t\t      { type: \"search\", handler: this.toolHandler.bind(this) },\n\t\t      { type: \"close\", handler: this.toolHandler.bind(this) }\n\t\t    ]);\n\t\t  }\n\n\t\t  onModalPanelReady = (event) => {\n\t\t    this.modalPanelCmp = event.detail.cmp;\n\t\t  }\n\n\t\t  modalClick = (owner, tool) => {\n\t\t    this.modalPanelCmp.show();\n\t\t  }\n\t\t}\n ```\n ```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-container>\n    <ext-panel\n        shadow=\"true\"\n        title=\"Panel\"\n        height=\"300\"\n        width=\"500\"\n        onready=\"mainPanel.onMainPanelReady\"\n    >\n        <p>Panel Body</p>\n    </ext-panel>\n    <ext-button ui=\"action\" ontap=\"mainPanel.modalClick\"\n      margin=\"20 0 0 0\" text=\"Show Modal\"></ext-button>\n    <ext-panel\n        title=\"Floated Panel\"\n        modal=\"true\"\n        floated=\"true\"\n        centered=\"true\"\n        hideOnMaskTap=\"true\"\n        width=\"400\"\n        maxHeight=\"400\"\n        onready=\"mainPanel.onModalPanelReady\"\n        showAnimation='{\n             \"type\": \"popIn\",\n             \"duration\": 250,\n             \"easing\": \"ease-out\"\n        }'\n        hideAnimation='{\n             \"type\": \"popOut\",\n             \"duration\": 250,\n             \"easing\": \"ease-out\"\n        }'\n    >\n        <p>This is a modal, centered and floated panel.\n          hideOnMaskTap is true by default so\n          we can tap anywhere outside the overlay to hide it.</p>\n    </ext-panel>\n </ext-container>\n ```\n ```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-container.component';\n import '@sencha/ext-web-components/dist/ext-button.component';\n import '@sencha/ext-web-components/dist/ext-panel.component';\n\n Ext.require('Ext.Toast');\n\n export default class MainPanelComponent {\n   toolHandler = (owner, tool) => {\n      Ext.toast(`You clicked ${tool.config.type}`);\n   }\n\n   onMainPanelReady = (event) => {\n       this.mainPanel = event.detail.cmp;\n       this.mainPanel.setTools([\n          { type: \"minimize\", handler: this.toolHandler.bind(this) },\n          { type: \"refresh\", handler: this.toolHandler.bind(this) },\n          { type: \"save\", handler: this.toolHandler.bind(this) },\n          { type: \"search\", handler: this.toolHandler.bind(this) },\n          { type: \"close\", handler: this.toolHandler.bind(this) }\n       ]);\n   }\n\n   onModalPanelReady = (event) => {\n      this.modalPanelCmp = event.detail.cmp;\n   }\n\n   modalClick = (owner, tool) => {\n      this.modalPanelCmp.show();\n   }\n }\n window.mainPanel = new MainPanelComponent();\n ```\n\n **Note:** By default, the `{@link #cfg-closable close}` header tool _destroys_ the\n Panel resulting in removal of the Panel and the destruction of any descendant\n Components. This makes the Panel object, and all its descendants **unusable**. To\n enable the close tool to simply _hide_ a Panel for later re-use, configure the Panel\n with `{@link #closeAction closeAction}: 'hide'`.\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"anchor","optional":true,"text":"Configure `true` to show an anchor element pointing to the target component\nwhen this Panel is floating and {@link #showBy shown by} another component.\n","type":"Boolean","value":"false","src":{"accessor":"423,400,0","name":"423,396,28","text":"423,397,12,152","type":"423,396,18","value":"423,396,35"}},{"$type":"property","access":"private","accessor":true,"name":"anchorPosition","text":"Set the anchor position.\n","type":"String","value":"null","src":{"access":"423,406,12","accessor":"423,408,0","name":"423,403,26","text":"423,404,12,26","type":"423,403,18","value":"423,408,0"}},{"$type":"property","accessor":true,"name":"bbar","since":"6.5.0","text":"Convenience config. Short for 'Bottom Bar'.\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        bbar: [{\n            xtype: 'button',\n            text : 'Button 1'\n        }]\n    });\n```\n\nis equivalent to\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        items: [{\n            xtype: 'toolbar',\n            docked: 'bottom',\n            items: [{\n                xtype: 'button',\n                text: 'Button 1'\n            }]\n        }]\n    });\n```\n","type":"Object/Object[]","value":"null","src":{"accessor":"423,467,0","name":"423,428,35","since":"423,465,19","text":"423,429,12,696","type":"423,428,18","value":"423,467,0"}},{"$type":"property","accessor":true,"name":"bodyBorder","text":"Controls the border style of the panel body using the following values:\n\n- `true` to enable the border around the panel body (as defined by the theme)\nNote that even when enabled, the bodyBorder is only visible when there are\ndocked items around the edges of the panel.  Where the bodyBorder touches the\npanel's outer border it is automatically collapsed into a single border.\n\n- `false` to disable the body border\n\n- `null` - use the value of {@link #cfg-border border} as the value for\n`{@link #cfg!bodyBorder bodyBorder}`\n","type":"Boolean","value":"null","src":{"accessor":"423,623,0","name":"423,610,27","text":"423,611,12,501","type":"423,610,18","value":"423,623,0"}},{"$type":"property","accessor":true,"name":"bodyPadding","text":"A shortcut for setting a padding style on the body element. The value can\neither be a number to be applied to all sides, or a normal CSS string\ndescribing padding.\n\n    bodyPadding: 5 // 5px padding on all sides\n\n    bodyPadding: '10 20' // 10px top and bottom padding - 20px side padding\n\n*See the {@link Ext.dom.Element#static-method-unitizeBox unitizeBox} method\nfor more information on what string values are valid*\n","type":"Number/Boolean/String","value":"null","src":{"accessor":"423,638,0","name":"423,626,41","text":"423,627,12,420","type":"423,626,18","value":"423,638,0"}},{"$type":"property","accessor":"w","name":"bodyStyle","since":"6.5.0","text":"Custom CSS styles to be applied to the panel's body element, which can be\nsupplied as a valid CSS style string or an object containing style property\nname/value pairs.\n\nFor example, these two formats are interpreted to be equivalent:\n\n    bodyStyle: 'background:#ffc; padding:10px;'\n\n    bodyStyle: {\n        background: '#ffc',\n        padding: '10px'\n    }\n","type":"String/Object","value":"null","src":{"accessor":"423,655,12","name":"423,641,33","since":"423,656,19","text":"423,642,12,360","type":"423,641,18","value":"423,658,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"border","text":"Enables or disables bordering on this component.\nThe following values are accepted:\n\n- `null` or `true (default): Do nothing and allow the border to be specified\nby the theme.\n- `false`: suppress the default border provided by the theme.\n\nPlease note that enabling bordering via this config will not add a `border-color`\nor `border-style` CSS property to the component; you provide the `border-color`\nand `border-style` via CSS rule or {@link #style} configuration\n(if not already provide by the theme).\n\n## Using {@link #style}:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        style: 'border: 1px solid blue;'\n        // ...\n    });\n\n## Using CSS:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        cls: 'my-component'\n        // ...\n    });\n\nAnd your CSS file:\n\n    .my-component {\n        border: 1px solid red;\n    }\n","type":"Boolean","value":"false","src":{"accessor":"423,607,0","inheritdoc":"423,605,12","name":"423,604,17","text":"18,258,34,49:18,259,12,870","type":"18,258,18","value":"423,607,0"}},{"$type":"property","name":"buttons","since":"6.5.0","text":" The buttons for this panel to be displayed in the `{@link #cfg!buttonToolbar buttonToolbar}` as a keyed\n object (or array) of button configuration objects.\n\n```javascript\n @example({ framework: 'extjs' })\n     Ext.create({\n         xtype: 'panel',\n         html: 'hello world',\n         padding: 20,\n         buttons: {\n            ok: {text: 'OK', handler: 'onOK'}\n         }\n     });\n ```\n\n For buttons that are defined in `{@link #cfg!standardButtons standardButtons}` (such as `'ok'`), there is a\n more convenient short-hand for this config:\n\n ```javascript\n @example({ framework: 'extjs' })\n     Ext.create({\n         fullscreen: true,\n         xtype: 'panel',\n         html: 'hello world',\n         padding: 20,\n         buttons: {\n            ok: 'onOK',\n            cancel: 'onCancel'\n         }\n     });\n ```\n\n The {@link #minButtonWidth} is used as the default\n {@link Ext.Button#minWidth minWidth} for the buttons in the buttons toolbar.\n","type":"Object/Ext.Button[]","src":{"name":"423,661,39","since":"423,696,19","text":"423,662,11,894","type":"423,661,18"}},{"$type":"property","accessor":true,"name":"buttonToolbar","since":"6.5.0","text":"Configure the toolbar that holds the `{@link #cfg!buttons buttons}` inside.\n","type":"Object/Ext.Toolbar","value":"{\n    xtype: 'toolbar',\n    itemId: 'buttonToolbar',\n    docked: 'bottom',\n    defaultType: 'button',\n    weighted: true,\n    ui: 'footer',\n    defaultButtonUI: 'action',\n    layout: {\n        type: 'box',\n        vertical: false,\n        pack: 'center'\n    }\n}","src":{"accessor":"423,704,0","name":"423,700,38","since":"423,702,19","text":"423,701,12,55","type":"423,700,18","value":"423,704,0"}},{"$type":"property","accessor":true,"name":"closable","text":"True to display the 'close' tool button and allow the user to close the panel\nor false to hide the button and disallow closing the window.\n\nBy default, when close is requested by clicking the close button in the\nheader, the {@link #method-close} method will be called. This will\n_{@link Ext.Component#method-destroy destroy}_ the Panel and its content\nmeaning that it may not be reused.\n\nTo make closing a Panel _hide_ the Panel so that it may be reused, set\n{@link #closeAction} to 'hide'.\n","type":"Boolean","value":"null","src":{"accessor":"423,423,0","name":"423,411,27","text":"423,412,12,491","type":"423,411,18","value":"423,423,0"}},{"$type":"property","accessor":true,"name":"closeAction","text":"The action to take when the close header tool is clicked:\n\n- **`'{@link #method-destroy}'`** :\n\n  {@link #method-remove remove} the window from the DOM and\n  {@link Ext.Component#method-destroy destroy} it and all descendant Components.\n  The window will **not** be available to be redisplayed via the\n  {@link #method-show} method.\n\n- **`'{@link #method-hide}'`** :\n\n  {@link #method-hide} the window by setting visibility to hidden and applying\n  negative offsets. The window will be available to be redisplayed via the\n  {@link #method-show} method.\n\n**Note:** This behavior has changed! setting *does* affect the {@link #method-close}\nmethod which will invoke the appropriate closeAction.\n","type":"String","value":"'destroy'","src":{"accessor":"423,740,0","name":"423,721,26","text":"423,722,12,693","type":"423,721,18","value":"423,740,0"}},{"$type":"property","accessor":true,"locale":true,"name":"closeToolText","text":"Text to be announced by screen readers when the **close**\n{@link Ext.Tool tool} is focused.  Will also be set as the close tool's\n{@link Ext.Tool#cfg-tooltip tooltip} text.\n\n**Note:** Applicable when the panel is {@link #closable}: true\n","type":"String","value":"'Close panel'","src":{"accessor":"423,751,0","locale":"423,749,12","name":"423,743,26","text":"423,744,12,237","type":"423,743,18","value":"423,751,0"}},{"$type":"property","accessor":true,"name":"collapsed","text":"`true` to start collapsed.\n","type":"Boolean","value":"null","src":{"accessor":"634,12,0","name":"634,9,27","text":"634,10,12,27","type":"634,9,18","value":"634,12,0"}},{"$type":"property","accessor":true,"name":"collapsible","since":"6.5.0","text":"A configuration for a {@link Ext.panel.Collapser Collapser}.\n\nTrue to make the panel collapsible and have an expand/collapse toggle Tool added\ninto the header tool button area.\n\nYou can also set `{@link #cfg!top top}`/`{@link #cfg!right right}`/`{@link #cfg!bottom bottom}`/`{@link #cfg!left left}` to directly specify the collapse\ndirection.\n\n**IMPORTANT**: To use this config, the application must require the following\nclass:\n\n     requires: [\n         'Ext.panel.Collapser'\n     ]\n","type":"'top'/'right'/'bottom'/'left'/Boolean/Object","value":"null","src":{"accessor":"634,33,0","name":"634,15,64","since":"634,31,19","text":"634,16,12,412","type":"634,15,18","value":"634,33,0"}},{"$type":"property","accessor":true,"name":"header","text":"Pass as `false` to prevent a header from being created.\n\nYou may also assign a header with a config object (optionally containing an\n`{@link #cfg!xtype xtype}`) to custom-configure your panel's header.\n\nSee {@link Ext.panel.Header} for all the options that may be specified here.\n","type":"Boolean/Object","value":"null","src":{"accessor":"423,363,0","name":"423,355,34","text":"423,356,12,261","type":"423,355,18","value":"423,363,0"}},{"$type":"property","accessor":true,"name":"headerPosition","since":"6.5.0","text":"The position of the header. Ignored if no {@link #cfg-header} is created.\n","type":"'top'/'right'/'bottom'/'left'","value":"'top'","src":{"accessor":"423,352,0","name":"423,347,49","since":"423,350,19","text":"423,348,12,75","type":"423,347,18","value":"423,352,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.panel.Header#cfg-icon","name":"icon","text":"Path to an image to use as an icon.\n\nFor instructions on how you can use icon fonts including those distributed in\nthe SDK see {@link #iconCls}.\n","type":"String","value":"null","src":{"accessor":"423,369,0","inheritdoc":"423,367,12","name":"423,366,17","text":"637,21,12,145","type":"637,20,18","value":"423,369,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.panel.Header#cfg-iconAlign","name":"iconAlign","optional":true,"text":"The side of the title to render the icon.\n","type":"'top'/'right'/'bottom'/'left'","value":"'left'","src":{"accessor":"423,381,0","inheritdoc":"423,379,12","name":"423,378,18","text":"637,31,12,42","type":"637,30,18","value":"423,378,28"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.panel.Header#cfg-iconCls","name":"iconCls","text":"One or more space separated CSS classes to be applied to the icon element.\nThe CSS rule(s) applied should specify a background image to be used as the\nicon.\n\nAn example of specifying a custom icon class would be something like:\n\n    // specify the property in the config for the class:\n    iconCls: 'my-home-icon'\n\n    // css rule specifying the background image to be used as the icon image:\n    .my-home-icon {\n        background-image: url(../images/my-home-icon.gif) !important;\n    }\n\nIn addition to specifying your own classes, you can use the font icons\nprovided in the SDK using the following syntax:\n\n    // using Font Awesome\n    iconCls: 'x-fa fa-home'\n\n    // using Pictos\n    iconCls: 'pictos pictos-home'\n\nDepending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:\n\n - [Font Awesome icons](http://fortawesome.github.io/Font-Awesome/cheatsheet/)\n - [Pictos icons](../guides/core_concepts/font_ext.html)\n - [Theming Guide](../guides/core_concepts/theming.html)\n","type":"String","value":"null","src":{"accessor":"423,375,0","inheritdoc":"423,373,12","name":"423,372,17","text":"637,39,12,1089","type":"637,37,18","value":"423,375,0"}},{"$type":"property","accessor":true,"name":"lbar","since":"6.5.0","text":"Convenience config. Short for 'Left Bar' (left-docked, vertical toolbar).\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        lbar: [{\n            xtype: 'button',\n            text : 'Button 1'\n        }]\n    });\n```\n\nis equivalent to\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        items: [{\n            xtype: 'toolbar',\n            docked: 'left',\n            items: [{\n                xtype: 'button',\n                text: 'Button 1'\n            }]\n        }]\n    });\n```\n","type":"Object/Object[]","value":"null","src":{"accessor":"423,511,0","name":"423,472,35","since":"423,509,19","text":"423,473,12,724","type":"423,472,18","value":"423,511,0"}},{"$type":"property","inheritdoc":true,"name":"manageBorders","text":"`true` to enable border management of docked items.  When enabled, borders of docked\nitems will collapse where they meet to avoid duplicated borders.\n","type":"Boolean","value":"true","src":{"inheritdoc":"423,772,8","name":"423,771,13","text":"411,450,8,150","type":"411,448,14","value":"423,774,0"}},{"$type":"property","accessor":true,"name":"rbar","since":"6.5.0","text":"Convenience config. Short for 'Right Bar' (right-docked, vertical toolbar).\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        rbar: [{\n            xtype: 'button',\n            text : 'Button 1'\n        }]\n    });\n```\n\nis equivalent to\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        items: [{\n            xtype: 'toolbar',\n            docked: 'right',\n            items: [{\n                xtype: 'button',\n                text: 'Button 1'\n            }]\n        }]\n    });\n```\n","type":"Object/Object[]","value":"null","src":{"accessor":"423,555,0","name":"423,516,35","since":"423,553,19","text":"423,517,12,727","type":"423,516,18","value":"423,555,0"}},{"$type":"property","accessor":true,"name":"resizable","optional":true,"since":"6.5.0","text":"A configuration for a {@link Ext.panel.Resizer Resizer}.\n\n**IMPORTANT**: To use this config, the application must require the following\nclass:\n\n     requires: [\n         'Ext.panel.Resizer'\n     ]\n","type":"Object","value":"null","src":{"accessor":"638,21,0","name":"638,9,27","since":"638,19,19","text":"638,10,12,198","type":"638,9,18","value":"638,21,0"}},{"$type":"property","accessor":true,"name":"tbar","since":"6.5.0","text":"Convenience config. Short for 'Top Bar'.\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        tbar: [{\n            xtype: 'button',\n            text : 'Button 1'\n        }]\n    });\n```\n\nis equivalent to\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create({\n        xtype: 'panel',\n        fullscreen: true,\n        html: 'hello world',\n        padding: 20,\n        items: [{\n            xtype: 'toolbar',\n            docked: 'top',\n            items: [{\n                xtype: 'button',\n                text: 'Button 1'\n            }]\n        }]\n    });\n```\n","type":"Object/Object[]","value":"null","src":{"accessor":"423,599,0","name":"423,560,35","since":"423,597,19","text":"423,561,12,690","type":"423,560,18","value":"423,599,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.panel.Header#cfg-title","name":"title","text":"The title text or config object for the {@link Ext.panel.Title Title} component.\n","type":"String/Ext.panel.Title","value":"null","src":{"accessor":"423,387,0","inheritdoc":"423,385,12","name":"423,384,17","text":"637,93,12,81","type":"637,92,18","value":"423,387,0"}},{"$type":"property","accessor":true,"inheritdoc":"Ext.panel.Header#cfg-titleAlign","name":"titleAlign","optional":true,"text":"The alignment of the title text within the available space between the\nicon and the tools.\n","type":"'left'/'center'/'right'","value":"'left'","src":{"accessor":"423,393,0","inheritdoc":"423,391,12","name":"423,390,18","text":"637,100,12,91","type":"637,99,18","value":"423,390,29"}},{"$type":"property","accessor":true,"name":"titleCollapse","since":"7.0","text":"`true` to allow expanding and collapsing the panel (when `{@link #collapsible} = true`)\nby clicking anywhere in the header bar, `false` to allow it only by clicking to tool\nbutton.\n","type":"Boolean","value":"null","src":{"accessor":"634,42,0","name":"634,36,27","since":"634,40,19","text":"634,37,12,181","type":"634,36,18","value":"634,42,0"}}]},{"$type":"events","items":[{"$type":"event","name":"beforecollapse","since":"6.5.0","text":"Fires before collapse starts. Return `false` to cancel collapse.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,48,33","type":"634,48,16"}}],"src":{"name":"634,46,15","since":"634,50,15","text":"634,47,8,65"}},{"$type":"event","name":"beforeexpand","since":"6.5.0","text":"Fires before expand starts. Return `false` to cancel expand.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,56,33","type":"634,56,16"}}],"src":{"name":"634,54,15","since":"634,58,15","text":"634,55,8,61"}},{"$type":"event","name":"beforeresizedragstart","since":"6.5.0","text":"Fires before resize starts. Return `false` to cancel dragging.\n","items":[{"$type":"param","name":"this","type":"Ext.Panel","src":{"name":"638,27,27","type":"638,27,16"}},{"$type":"param","name":"context","type":"Object","items":[{"$type":"property","name":"edge","text":"The edge being resized.\n","type":"String","src":{"name":"638,29,32","text":"638,29,37,24","type":"638,29,16"}},{"$type":"property","name":"event","text":"The event.\n","type":"Ext.event.Event","src":{"name":"638,30,41","text":"638,30,47,11","type":"638,30,16"}}],"src":{"name":"638,28,24","type":"638,28,16"}}],"src":{"name":"638,25,15","since":"638,32,15","text":"638,26,8,63"}},{"$type":"event","name":"collapse","since":"6.5.0","text":"Fires when the collapse starts.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,64,33","type":"634,64,16"}}],"src":{"name":"634,62,15","since":"634,66,15","text":"634,63,8,32"}},{"$type":"event","name":"drawerhide","since":"6.5.0","text":"Fires then the {@link Ext.panel.Collapser#cfg-drawer drawer} hides.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,73,33","type":"634,73,16"}}],"src":{"name":"634,70,15","since":"634,74,15","text":"634,71,8,69"}},{"$type":"event","name":"drawershow","since":"6.5.0","text":"Fires then the {@link Ext.panel.Collapser#cfg-drawer drawer} shows.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,81,33","type":"634,81,16"}}],"src":{"name":"634,78,15","since":"634,82,15","text":"634,79,8,69"}},{"$type":"event","name":"expand","since":"6.5.0","text":"Fires when the expand starts.\n","items":[{"$type":"param","name":"this","type":"Ext.panel.Panel","src":{"name":"634,88,33","type":"634,88,16"}}],"src":{"name":"634,86,15","since":"634,90,15","text":"634,87,8,30"}},{"$type":"event","name":"resizedrag","since":"6.5.0","text":"Fires for each tick while a drag is active.\n","items":[{"$type":"param","name":"this","type":"Ext.Panel","src":{"name":"638,49,27","type":"638,49,16"}},{"$type":"param","name":"context","type":"Object","items":[{"$type":"property","name":"edge","text":"The edge being resized.\n","type":"String","src":{"name":"638,51,32","text":"638,51,37,24","type":"638,51,16"}},{"$type":"property","name":"event","text":"The event.\n","type":"Ext.event.Event","src":{"name":"638,52,41","text":"638,52,47,11","type":"638,52,16"}},{"$type":"property","name":"width","text":"The current resized width in pixels.\n","type":"Number","src":{"name":"638,53,32","text":"638,53,38,37","type":"638,53,16"}},{"$type":"property","name":"height","text":"The current resized height in pixels.\n","type":"Number","src":{"name":"638,54,32","text":"638,54,39,38","type":"638,54,16"}}],"src":{"name":"638,50,24","type":"638,50,16"}}],"src":{"name":"638,47,15","since":"638,56,15","text":"638,48,8,44"}},{"$type":"event","name":"resizedragcancel","since":"6.5.0","text":"Fires when the drag resize is cancelled.\n","items":[{"$type":"param","name":"this","type":"Ext.Panel","src":{"name":"638,75,27","type":"638,75,16"}},{"$type":"param","name":"context","type":"Object","items":[{"$type":"property","name":"edge","text":"The edge being resized.\n","type":"String","src":{"name":"638,77,32","text":"638,77,37,24","type":"638,77,16"}},{"$type":"property","name":"event","text":"The event.\n","type":"Ext.event.Event","src":{"name":"638,78,41","text":"638,78,47,11","type":"638,78,16"}}],"src":{"name":"638,76,24","type":"638,76,16"}}],"src":{"name":"638,73,15","since":"638,80,15","text":"638,74,8,41"}},{"$type":"event","name":"resizedragend","since":"6.5.0","text":"Fires when the drag resize is complete.\n","items":[{"$type":"param","name":"this","type":"Ext.Panel","src":{"name":"638,62,27","type":"638,62,16"}},{"$type":"param","name":"context","type":"Object","items":[{"$type":"property","name":"edge","text":"The edge being resized.\n","type":"String","src":{"name":"638,64,32","text":"638,64,37,24","type":"638,64,16"}},{"$type":"property","name":"event","text":"The event.\n","type":"Ext.event.Event","src":{"name":"638,65,41","text":"638,65,47,11","type":"638,65,16"}},{"$type":"property","name":"width","text":"The final resized width in pixels.\n","type":"Number","src":{"name":"638,66,32","text":"638,66,38,35","type":"638,66,16"}},{"$type":"property","name":"height","text":"The final resized height in pixels.\n","type":"Number","src":{"name":"638,67,32","text":"638,67,39,36","type":"638,67,16"}}],"src":{"name":"638,63,24","type":"638,63,16"}}],"src":{"name":"638,60,15","since":"638,69,15","text":"638,61,8,40"}},{"$type":"event","name":"resizedragstart","since":"6.5.0","text":"Fires when the resize starts.\n","items":[{"$type":"param","name":"this","type":"Ext.Panel","src":{"name":"638,38,27","type":"638,38,16"}},{"$type":"param","name":"context","type":"Object","items":[{"$type":"property","name":"edge","text":"The edge being resized.\n","type":"String","src":{"name":"638,40,32","text":"638,40,37,24","type":"638,40,16"}},{"$type":"property","name":"event","text":"The event.\n","type":"Ext.event.Event","src":{"name":"638,41,41","text":"638,41,47,11","type":"638,41,16"}}],"src":{"name":"638,39,24","type":"638,39,16"}}],"src":{"name":"638,36,15","since":"638,43,15","text":"638,37,8,30"}}]},{"$type":"methods","items":[{"$type":"method","chainable":true,"name":"addBodyCls","text":"Adds a CSS class to the body element. If not rendered, the class will be added\nwhen the panel is rendered.\n","items":[{"$type":"param","name":"cls","text":"The class to add\n","type":"String","src":{"name":"423,809,24","text":"423,809,28,17","type":"423,809,16"}},{"$type":"return","text":"this\n","type":"Ext.Panel","src":{"text":"423,810,28,5","type":"423,810,17"}}],"src":{"chainable":"423,815,0","name":"423,812,0","text":"423,807,8,107"}},{"$type":"method","name":"addTool","text":"Add tools to this panel {@link Ext.panel.Header header}\n\n    panel.addTool({\n        type: 'gear',\n        handler: function () {\n            // ....\n        }\n    });\n\n    panel.addTool([{\n        type: 'gear',\n        handler: 'viewControllerGearMethod'\n    }, {\n        type: 'save',\n        handler: 'viewControllerSaveMethod'\n    }]);\n\nBy default the tools will be accessible via keyboard, with the exception of\nautomatically added collapse/expand and close tools.\n\nIf you implement keyboard equivalents of your tools' actions elsewhere and do not\nwant the tools to participate in keyboard navigation, you can make them\npresentational instead:\n\n    panel.addTool({\n        type: 'mytool',\n        focusable: false,\n        ariaRole: 'presentation'\n        // ...\n    });\n","items":[{"$type":"param","name":"tool","text":"The tool or tools to add.\n","type":"Object/Object[]/Ext.Tool/Ext.Tool[]","src":{"name":"423,897,53","text":"423,897,58,26","type":"423,897,16"}}],"src":{"name":"423,899,0","text":"423,866,8,777"}},{"$type":"method","fires":"beforeclose,close","name":"close","text":"Closes this panel as described by the `{@link #cfg!closeAction closeAction}`.\n","src":{"fires":"423,994,0:423,999,0","name":"423,989,0","text":"423,987,8,53"}},{"$type":"method","inheritdoc":"Ext.panel.Collapser#method-collapse","name":"collapse","text":"Collapses the panel body so that the body becomes hidden. Fires the\n{@link Ext.Panel#beforecollapse} event which will cancel the collapse action\nif it returns false.\n\nIt also fires the {@link Ext.Panel#collapse} event after the panel body is collapsed.\n","items":[{"$type":"param","name":"animation","text":"The animation to execute. This setting overrides\nany {@link #cfg-animation} configuration. Do not pass a value to use the values configured\non the class.\n","type":"Boolean/Object","src":{"name":"634,117,0","text":"633,201,44,49:633,202,8,106","type":"633,201,16"}},{"$type":"return","text":"A promise that resolves when the collapse completes.\n","type":"Ext.Promise","src":{"text":"633,205,30,53","type":"633,205,17"}}],"src":{"inheritdoc":"634,115,8","name":"634,114,16","text":"633,195,8,254"}},{"$type":"method","inheritdoc":"Ext.panel.Collapser#method-expand","name":"expand","text":"Expands the panel body so that it becomes visible. Fires the {@link Ext.Panel#beforeexpand}\nevent which will cancel the expand action if it returns false.\n\nIt also fires the {@link Ext.Panel#expand} event after the panel is expanded.\n","items":[{"$type":"param","name":"animation","text":"The animation to execute. This setting overrides\nany {@link #cfg-animation} configuration. Do not pass a value to use the values configured\non the class.\n","type":"Boolean/Object","src":{"name":"634,125,0","text":"633,217,44,49:633,218,8,106","type":"633,217,16"}},{"$type":"return","text":"A promise that resolves when the expand completes.\n","type":"Ext.Promise","src":{"text":"633,221,30,51","type":"633,221,17"}}],"src":{"inheritdoc":"634,123,8","name":"634,122,16","text":"633,212,8,235"}},{"$type":"method","chainable":true,"name":"removeBodyCls","text":"Removes a CSS class from the body element\n","items":[{"$type":"param","name":"cls","text":"The class to remove\n","type":"String","src":{"name":"423,820,24","text":"423,820,28,20","type":"423,820,16"}},{"$type":"return","text":"this\n","type":"Ext.Panel","src":{"text":"423,821,28,5","type":"423,821,17"}}],"src":{"chainable":"423,826,0","name":"423,823,0","text":"423,819,8,42"}},{"$type":"method","inheritdoc":"Ext.panel.Collapser#method-toggleCollapsed","name":"toggleCollapsed","text":"Set the collapsed state of the panel.\n","items":[{"$type":"param","name":"collapsed","text":"The collapsed state.\n","type":"Boolean","src":{"name":"634,152,0","text":"633,369,35,21","type":"633,369,16"}},{"$type":"param","name":"animation","src":{"name":"634,152,0"}},{"$type":"return","text":"A promise that resolves when the collapse/expand completes.\n","type":"Ext.Promise","src":{"text":"633,373,30,60","type":"633,373,17"}}],"src":{"inheritdoc":"634,150,8","name":"634,149,16","text":"633,368,8,38"}}]},{"$type":"properties","items":[{"$type":"property","inheritdoc":true,"name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"Ext.baseCSSPrefix + 'panel'","src":{"inheritdoc":"423,756,8","name":"423,755,18","text":"18,529,8,532","value":"423,758,0"}},{"$type":"property","inheritdoc":true,"name":"defaultBindProperty","text":"This property is used to determine the property of a `{@link #cfg!bind bind}` config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n`{@link #cfg!bind bind}` config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe `{@link #property!defaultBindProperty defaultBindProperty}` is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n","type":"String","value":"'title'","src":{"inheritdoc":"423,341,8","name":"423,340,18","text":"275,272,8,373","type":"275,271,19","value":"423,343,0"}},{"$type":"property","name":"hasCollapsible","since":"6.5.0","text":"`true` if this panel has the collapsible override added.\n","type":"Boolean","value":"true","src":{"name":"634,94,28","since":"634,97,15","text":"634,95,8,58","type":"634,94,19","value":"634,99,0"}},{"$type":"property","name":"hasResizable","since":"6.5.0","text":"`true` if this panel has the resizable override added.\n","type":"Boolean","value":"true","src":{"name":"638,84,29","since":"638,87,16","text":"638,85,9,56","type":"638,84,20","value":"638,89,0"}},{"$type":"property","inheritdoc":true,"name":"template","text":"An array of child elements to use as the children of the main element in the {@link\n#element} template.  Only used if \"children\" are not specified explicitly in the\n{@link #element} template.\n","type":"Array","value":"[\n    {\n        reference: 'bodyWrapElement',\n        cls: Ext.baseCSSPrefix + 'body-wrap-el',\n        uiCls: 'body-wrap-el',\n        children: [\n            {\n                reference: 'bodyElement',\n                cls: Ext.baseCSSPrefix + 'body-el',\n                uiCls: 'body-el'\n            }\n        ]\n    }\n]","src":{"inheritdoc":"423,780,8","name":"423,779,18","text":"18,511,8,192","type":"18,510,19","value":"423,782,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"panel-ui","text":"Creates a visual theme for a Panel.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1159,536,20","text":"1159,537,4,109","type":"1159,536,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"panel","src":{"access":"1159,540,36","name":"1159,540,21","text":"1159,540,47,35:1159,541,4,61","type":"1159,540,12","value":"1159,540,28"}},{"$type":"param","access":"protected","name":"$header-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the header component.  For use by UI mixins of derived classes.\n","type":"String","value":"panelheader","src":{"access":"1159,543,49","name":"1159,543,21","text":"1159,543,60,35:1159,544,4,86","type":"1159,543,12","value":"1159,543,35"}},{"$type":"param","access":"protected","name":"$title-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for the title component.  For use by UI mixins of derived classes.\n","type":"String","value":"paneltitle","src":{"access":"1159,546,47","name":"1159,546,21","text":"1159,546,58,35:1159,547,4,85","type":"1159,546,12","value":"1159,546,34"}},{"$type":"param","access":"protected","name":"$tool-xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors for tools.  For use by UI mixins of derived classes.\n","type":"String","value":"paneltool","src":{"access":"1159,549,45","name":"1159,549,21","text":"1159,549,56,35:1159,550,4,71","type":"1159,549,12","value":"1159,549,33"}},{"$type":"param","name":"$background-color","text":"Panel background-color\n","type":"color","src":{"name":"1159,552,19","text":"1159,553,4,24","type":"1159,552,12"}},{"$type":"param","name":"$border-color","text":"Panel border-color\n","type":"color/list","src":{"name":"1159,555,24","text":"1159,556,4,20","type":"1159,555,12"}},{"$type":"param","name":"$border-width","text":"Panel border-width\n","type":"number/list","src":{"name":"1159,558,25","text":"1159,559,4,20","type":"1159,558,12"}},{"$type":"param","name":"$border-style","text":"Panel border-style\n","type":"string/list","src":{"name":"1159,561,25","text":"1159,562,4,20","type":"1159,561,12"}},{"$type":"param","name":"$border-radius","text":"Panel border-radius\n","type":"number/list","src":{"name":"1159,564,25","text":"1159,565,4,21","type":"1159,564,12"}},{"$type":"param","name":"$border-radius-big","text":"Panel border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1159,567,25","text":"1159,568,4,77","type":"1159,567,12"}},{"$type":"param","name":"$body-background-color","text":"Panel body background-color\n","type":"color","src":{"name":"1159,570,19","text":"1159,571,4,29","type":"1159,570,12"}},{"$type":"param","name":"$body-color","text":"Panel body text color\n","type":"color","src":{"name":"1159,573,19","text":"1159,574,4,23","type":"1159,573,12"}},{"$type":"param","name":"$body-border-color","text":"Panel body border-color\n","type":"color","src":{"name":"1159,576,19","text":"1159,577,4,25","type":"1159,576,12"}},{"$type":"param","name":"$body-border-width","text":"Panel body border-width\n","type":"number/list","src":{"name":"1159,579,25","text":"1159,580,4,25","type":"1159,579,12"}},{"$type":"param","name":"$body-border-style","text":"Panel body border-style\n","type":"number/list","src":{"name":"1159,582,25","text":"1159,583,4,25","type":"1159,582,12"}},{"$type":"param","name":"$body-font-weight","text":"Panel body font-weight\n","type":"string/number","src":{"name":"1159,585,27","text":"1159,586,4,24","type":"1159,585,12"}},{"$type":"param","name":"$body-font-size","text":"Panel body font-size\n","type":"number","src":{"name":"1159,588,20","text":"1159,589,4,22","type":"1159,588,12"}},{"$type":"param","name":"$body-font-size-big","text":"Panel body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,591,20","text":"1159,592,4,78","type":"1159,591,12"}},{"$type":"param","name":"$body-line-height","text":"Panel body line-height\n","type":"number","src":{"name":"1159,594,20","text":"1159,595,4,24","type":"1159,594,12"}},{"$type":"param","name":"$body-line-height-big","text":"Panel body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,597,20","text":"1159,598,4,80","type":"1159,597,12"}},{"$type":"param","name":"$body-font-family","text":"Panel body font-family\n","type":"string","src":{"name":"1159,600,20","text":"1159,601,4,24","type":"1159,600,12"}},{"$type":"param","name":"$body-padding","text":"Panel body padding\n","type":"number/list","src":{"name":"1159,603,25","text":"1159,604,4,20","type":"1159,603,12"}},{"$type":"param","name":"$body-padding-big","text":"Panel body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1159,606,25","text":"1159,607,4,76","type":"1159,606,12"}},{"$type":"param","name":"$header-background-color","text":"Panel Header background-color\n","type":"color","src":{"name":"1159,609,19","text":"1159,610,4,31","type":"1159,609,12"}},{"$type":"param","name":"$header-background-gradient","text":"Panel Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1159,612,25","text":"1159,613,4,149","type":"1159,612,12"}},{"$type":"param","name":"$header-color","text":"Panel Header text color\n","type":"color","src":{"name":"1159,616,19","text":"1159,617,4,25","type":"1159,616,12"}},{"$type":"param","name":"$header-border-color","text":"Panel Header border-color\n","type":"color/list","src":{"name":"1159,619,24","text":"1159,620,4,27","type":"1159,619,12"}},{"$type":"param","name":"$header-border-width","text":"Panel Header border-width\n","type":"number/list","src":{"name":"1159,622,25","text":"1159,623,4,27","type":"1159,622,12"}},{"$type":"param","name":"$header-border-style","text":"Panel Header border-style\n","type":"string/list","src":{"name":"1159,625,25","text":"1159,626,4,27","type":"1159,625,12"}},{"$type":"param","name":"$header-font-weight","text":"Panel Header font-weight\n","type":"string/number","src":{"name":"1159,628,27","text":"1159,629,4,26","type":"1159,628,12"}},{"$type":"param","name":"$header-font-size","text":"Panel Header font-size\n","type":"number","src":{"name":"1159,631,20","text":"1159,632,4,24","type":"1159,631,12"}},{"$type":"param","name":"$header-font-size-big","text":"Panel Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,634,20","text":"1159,635,4,80","type":"1159,634,12"}},{"$type":"param","name":"$header-line-height","text":"Panel Header line-height\n","type":"number","src":{"name":"1159,637,20","text":"1159,638,4,26","type":"1159,637,12"}},{"$type":"param","name":"$header-line-height-big","text":"Panel Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,640,20","text":"1159,641,4,82","type":"1159,640,12"}},{"$type":"param","name":"$header-font-family","text":"Panel Header font-family\n","type":"string","src":{"name":"1159,643,20","text":"1159,644,4,26","type":"1159,643,12"}},{"$type":"param","name":"$header-padding","text":"Panel Header padding\n","type":"number/list","src":{"name":"1159,646,25","text":"1159,647,4,22","type":"1159,646,12"}},{"$type":"param","name":"$header-padding-big","text":"Panel Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1159,649,25","text":"1159,650,4,78","type":"1159,649,12"}},{"$type":"param","name":"$header-title-padding","text":"Panel Header Title padding\n","type":"number/list","src":{"name":"1159,652,25","text":"1159,653,4,28","type":"1159,652,12"}},{"$type":"param","name":"$header-title-padding-big","text":"Panel Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1159,655,25","text":"1159,656,4,84","type":"1159,655,12"}},{"$type":"param","name":"$header-title-opacity","text":"Panel Header Title opacity\n","type":"number","src":{"name":"1159,658,20","text":"1159,659,4,28","type":"1159,658,12"}},{"$type":"param","name":"$header-shadow","text":"Panel Header Shadow\n","type":"shadow","src":{"name":"1159,661,20","text":"1159,662,4,21","type":"1159,661,12"}},{"$type":"param","name":"$header-z-index","text":"Z-Index for the Panel Header, should be used with shadows to raise header above content\n","type":"number","src":{"name":"1159,664,20","text":"1159,665,4,89","type":"1159,664,12"}},{"$type":"param","name":"$header-min-height","text":"Panel Header min-height\n","type":"number","src":{"name":"1159,667,20","text":"1159,668,4,25","type":"1159,667,12"}},{"$type":"param","name":"$header-min-height-big","text":"Panel Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,670,20","text":"1159,671,4,81","type":"1159,670,12"}},{"$type":"param","name":"$header-icon-color","text":"Panel Header icon color.\n","type":"color","src":{"name":"1159,673,19","text":"1159,674,4,26","type":"1159,673,12"}},{"$type":"param","name":"$header-icon-size","text":"Panel Header icon size\n","type":"number","src":{"name":"1159,676,20","text":"1159,677,4,24","type":"1159,676,12"}},{"$type":"param","name":"$header-icon-size-big","text":"Panel Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,679,20","text":"1159,680,4,80","type":"1159,679,12"}},{"$type":"param","name":"$header-icon-font-size","text":"Panel Header icon font-size.  Used for configuring the size of font icons\n","type":"number","src":{"name":"1159,682,20","text":"1159,683,4,75","type":"1159,682,12"}},{"$type":"param","name":"$header-icon-font-size-big","text":"Panel Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,685,20","text":"1159,686,4,85","type":"1159,685,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing","text":"The space between the Panel Header icon and text when the icon is horizontally aligned\n","type":"number","src":{"name":"1159,688,20","text":"1159,689,4,88","type":"1159,688,12"}},{"$type":"param","name":"$header-icon-horizontal-spacing-big","text":"The space between the Panel Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,691,20","text":"1159,692,4,144","type":"1159,691,12"}},{"$type":"param","name":"$header-icon-vertical-spacing","text":"The space between the Panel Header icon and text when the icon is vertically aligned\n","type":"number","src":{"name":"1159,695,20","text":"1159,696,4,86","type":"1159,695,12"}},{"$type":"param","name":"$header-icon-vertical-spacing-big","text":"The space between the Panel Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,698,20","text":"1159,699,4,142","type":"1159,698,12"}},{"$type":"param","name":"$header-icon-opacity","text":"Panel Header icon opacity\n","type":"number","src":{"name":"1159,702,20","text":"1159,703,4,27","type":"1159,702,12"}},{"$type":"param","name":"$tool-color","text":"Panel Tool color\n","type":"color","src":{"name":"1159,705,19","text":"1159,706,4,18","type":"1159,705,12"}},{"$type":"param","name":"$tool-hovered-color","text":"Panel Tool color when hovered\n","type":"number","src":{"name":"1159,708,20","text":"1159,709,4,31","type":"1159,708,12"}},{"$type":"param","name":"$tool-pressed-color","text":"Panel Tool color when pressed\n","type":"number","src":{"name":"1159,711,20","text":"1159,712,4,31","type":"1159,711,12"}},{"$type":"param","name":"$tool-disabled-color","text":"Panel Tool color when disabled\n","type":"number","src":{"name":"1159,714,20","text":"1159,715,4,32","type":"1159,714,12"}},{"$type":"param","name":"$tool-background-color","text":"Panel Tool background-color\n","type":"color","src":{"name":"1159,717,19","text":"1159,718,4,29","type":"1159,717,12"}},{"$type":"param","name":"$tool-hovered-background-color","text":"Panel Tool background-color when hovered\n","type":"number","src":{"name":"1159,720,20","text":"1159,721,4,42","type":"1159,720,12"}},{"$type":"param","name":"$tool-pressed-background-color","text":"Panel Tool background-color when pressed\n","type":"number","src":{"name":"1159,723,20","text":"1159,724,4,42","type":"1159,723,12"}},{"$type":"param","name":"$tool-disabled-background-color","text":"Panel Tool background-color when disabled\n","type":"number","src":{"name":"1159,726,20","text":"1159,727,4,43","type":"1159,726,12"}},{"$type":"param","name":"$tool-opacity","text":"Panel Tool opacity\n","type":"number","src":{"name":"1159,729,20","text":"1159,730,4,20","type":"1159,729,12"}},{"$type":"param","name":"$tool-hovered-opacity","text":"Panel Tool opacity when hovered\n","type":"number","src":{"name":"1159,732,20","text":"1159,733,4,33","type":"1159,732,12"}},{"$type":"param","name":"$tool-pressed-opacity","text":"Panel Tool opacity when pressed\n","type":"number","src":{"name":"1159,735,20","text":"1159,736,4,33","type":"1159,735,12"}},{"$type":"param","name":"$tool-disabled-opacity","text":"Panel Tool opacity when disabled\n","type":"number","src":{"name":"1159,738,20","text":"1159,739,4,34","type":"1159,738,12"}},{"$type":"param","name":"$tool-border-radius","text":"Panel Tool border radius\n","type":"number","src":{"name":"1159,741,20","text":"1159,742,4,26","type":"1159,741,12"}},{"$type":"param","name":"$tool-border-radius-big","text":"Panel Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,744,20","text":"1159,745,4,82","type":"1159,744,12"}},{"$type":"param","name":"$tool-size","text":"Panel Tool size\n","type":"number","src":{"name":"1159,747,20","text":"1159,748,4,17","type":"1159,747,12"}},{"$type":"param","name":"$tool-size-big","text":"Panel Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,750,20","text":"1159,751,4,73","type":"1159,750,12"}},{"$type":"param","name":"$tool-font-size","text":"Panel Tool font-size\n","type":"number","src":{"name":"1159,753,20","text":"1159,754,4,22","type":"1159,753,12"}},{"$type":"param","name":"$tool-font-size-big","text":"Panel Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,756,20","text":"1159,757,4,78","type":"1159,756,12"}},{"$type":"param","name":"$tool-spacing","text":"The space between Panel Tools\n","type":"number","src":{"name":"1159,759,20","text":"1159,760,4,31","type":"1159,759,12"}},{"$type":"param","name":"$tool-spacing-big","text":"The space between Panel Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1159,762,20","text":"1159,763,4,87","type":"1159,762,12"}},{"$type":"param","name":"$tool-cursor","text":"Panel Tool cursor\n","type":"string","src":{"name":"1159,765,20","text":"1159,766,4,19","type":"1159,765,12"}},{"$type":"param","name":"$tool-disabled-cursor","text":"Panel Tool cursor when disabled\n","type":"string","src":{"name":"1159,768,20","text":"1159,769,4,33","type":"1159,768,12"}},{"$type":"param","name":"$tool-focused-outline-width","text":"Panel Tool outline width when focused\n","type":"number","src":{"name":"1159,771,20","text":"1159,772,4,39","type":"1159,771,12"}},{"$type":"param","name":"$tool-focused-outline-style","text":"Panel Tool outline style when focused\n","type":"string","src":{"name":"1159,774,20","text":"1159,775,4,39","type":"1159,774,12"}},{"$type":"param","name":"$tool-focused-outline-color","text":"Panel Tool outline color when focused\n","type":"color","src":{"name":"1159,777,19","text":"1159,778,4,39","type":"1159,777,12"}},{"$type":"param","name":"$tool-focused-outline-offset","text":"Panel Tool outline offset when focused\n","type":"number","src":{"name":"1159,780,20","text":"1159,781,4,40","type":"1159,780,12"}},{"$type":"param","name":"$anchor-border-color","text":"Panel anchor border-color\n","type":"color","src":{"name":"1159,783,19","text":"1159,784,4,27","type":"1159,783,12"}},{"$type":"param","name":"$anchor-background-color","text":"Panel anchor background-color\n","type":"color","src":{"name":"1159,786,19","text":"1159,787,4,31","type":"1159,786,12"}},{"$type":"param","name":"$anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","src":{"name":"1159,789,20","text":"1159,790,4,54","type":"1159,789,12"}},{"$type":"param","name":"$anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","src":{"name":"1159,792,20","text":"1159,793,4,54","type":"1159,792,12"}},{"$type":"param","name":"$anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","src":{"name":"1159,795,20","text":"1159,796,4,98","type":"1159,795,12"}},{"$type":"param","name":"$manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","src":{"name":"1159,799,20","text":"1159,800,4,65","type":"1159,799,12"}}],"src":{"name":"1159,802,7","text":"1159,534,4,37"}}]},{"$type":"vars","items":[{"$type":"property","name":"$panel-accordion-ui","text":"Parameters for the \"accordion\" panel UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1159,523,1","text":"1159,520,4,96","type":"1159,519,10"}},{"$type":"property","dynamic":true,"name":"$panel-anchor-background-color","text":"Panel anchor background-color\n","type":"color","value":"$panel-body-background-color","src":{"dynamic":"1159,474,33","name":"1159,474,1","text":"1159,472,4,30","type":"1159,471,10","value":"1159,474,41"}},{"$type":"property","dynamic":true,"name":"$panel-anchor-border-color","text":"Panel anchor border-color\n","type":"color","value":"$panel-border-color","src":{"dynamic":"1159,468,29","name":"1159,468,1","text":"1159,466,4,26","type":"1159,465,10","value":"1159,468,37"}},{"$type":"property","dynamic":true,"name":"$panel-anchor-height","text":"The height (in all orientations) of the anchor arrow\n","type":"number","value":"10px","src":{"dynamic":"1159,480,23","name":"1159,480,1","text":"1159,478,4,53","type":"1159,477,10","value":"1159,480,31"}},{"$type":"property","dynamic":true,"name":"$panel-anchor-margin","text":"The extra spacing beyond the tip of the anchor arrow to prevent the pointer touching\nthe target;\n","type":"number","value":"1px","src":{"dynamic":"1159,493,23","name":"1159,493,1","text":"1159,490,4,97","type":"1159,489,10","value":"1159,493,31"}},{"$type":"property","dynamic":true,"name":"$panel-anchor-width","text":"The width (in all orientations) of the anchor arrow.\n","type":"number","value":"20px","src":{"dynamic":"1159,486,22","name":"1159,486,1","text":"1159,484,4,53","type":"1159,483,10","value":"1159,486,30"}},{"$type":"property","dynamic":true,"name":"$panel-background-color","text":"Panel background-color\n","type":"color","value":"null","src":{"dynamic":"1159,9,26","name":"1159,9,1","text":"1159,7,4,23","type":"1159,6,10","value":"1159,9,34"}},{"$type":"property","dynamic":true,"name":"$panel-body-background-color","text":"Panel body background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1159,45,31","name":"1159,45,1","text":"1159,43,4,28","type":"1159,42,10","value":"1159,45,39"}},{"$type":"property","dynamic":true,"name":"$panel-body-border-color","text":"Panel body border-color\n","type":"color","value":"$neutral-medium-dark-color","src":{"dynamic":"1159,57,27","name":"1159,57,1","text":"1159,55,4,24","type":"1159,54,10","value":"1159,57,35"}},{"$type":"property","dynamic":true,"name":"$panel-body-border-style","text":"Panel body border-style\n","type":"number/list","value":"solid","src":{"dynamic":"1159,69,27","name":"1159,69,1","text":"1159,67,4,24","type":"1159,66,10","value":"1159,69,35"}},{"$type":"property","dynamic":true,"name":"$panel-body-border-width","text":"Panel body border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1159,63,27","name":"1159,63,1","text":"1159,61,4,24","type":"1159,60,10","value":"1159,63,35"}},{"$type":"property","dynamic":true,"name":"$panel-body-color","text":"Panel body text color\n","type":"color","value":"$color","src":{"dynamic":"1159,51,20","name":"1159,51,1","text":"1159,49,4,22","type":"1159,48,10","value":"1159,51,28"}},{"$type":"property","dynamic":true,"name":"$panel-body-font-family","text":"Panel body font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1159,105,26","name":"1159,105,1","text":"1159,103,4,23","type":"1159,102,10","value":"1159,105,34"}},{"$type":"property","dynamic":true,"name":"$panel-body-font-size","text":"Panel body font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1159,81,24","name":"1159,81,1","text":"1159,79,4,21","type":"1159,78,10","value":"1159,81,32"}},{"$type":"property","dynamic":true,"name":"$panel-body-font-size-big","text":"Panel body font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1159,87,28","name":"1159,87,1","text":"1159,85,4,77","type":"1159,84,10","value":"1159,87,36"}},{"$type":"property","dynamic":true,"name":"$panel-body-font-weight","text":"Panel body font-weight\n","type":"string/number","value":"$font-weight-normal","src":{"dynamic":"1159,75,26","name":"1159,75,1","text":"1159,73,4,23","type":"1159,72,10","value":"1159,75,34"}},{"$type":"property","dynamic":true,"name":"$panel-body-line-height","text":"Panel body line-height\n","type":"number","value":"$line-height","src":{"dynamic":"1159,93,26","name":"1159,93,1","text":"1159,91,4,23","type":"1159,90,10","value":"1159,93,34"}},{"$type":"property","dynamic":true,"name":"$panel-body-line-height-big","text":"Panel body line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$panel-body-line-height","src":{"dynamic":"1159,99,30","name":"1159,99,1","text":"1159,97,4,79","type":"1159,96,10","value":"1159,99,38"}},{"$type":"property","dynamic":true,"name":"$panel-body-padding","text":"Panel body padding\n","type":"number/list","value":"null","src":{"dynamic":"1159,111,22","name":"1159,111,1","text":"1159,109,4,19","type":"1159,108,10","value":"1159,111,30"}},{"$type":"property","dynamic":true,"name":"$panel-body-padding-big","text":"Panel body padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"null","src":{"dynamic":"1159,117,26","name":"1159,117,1","text":"1159,115,4,75","type":"1159,114,10","value":"1159,117,34"}},{"$type":"property","dynamic":true,"name":"$panel-border-color","text":"Panel border-color\n","type":"color/list","value":"$base-color","src":{"dynamic":"1159,15,22","name":"1159,15,1","text":"1159,13,4,19","type":"1159,12,10","value":"1159,15,30"}},{"$type":"property","dynamic":true,"name":"$panel-border-radius","text":"Panel border-radius\n","type":"number/list","value":"null","src":{"dynamic":"1159,33,23","name":"1159,33,1","text":"1159,31,4,20","type":"1159,30,10","value":"1159,33,31"}},{"$type":"property","dynamic":true,"name":"$panel-border-radius-big","text":"Panel border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"$panel-border-radius","src":{"dynamic":"1159,39,27","name":"1159,39,1","text":"1159,37,4,76","type":"1159,36,10","value":"1159,39,35"}},{"$type":"property","dynamic":true,"name":"$panel-border-style","text":"Panel border-style\n","type":"string/list","value":"solid","src":{"dynamic":"1159,27,22","name":"1159,27,1","text":"1159,25,4,19","type":"1159,24,10","value":"1159,27,30"}},{"$type":"property","dynamic":true,"name":"$panel-border-width","text":"Panel border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1159,21,22","name":"1159,21,1","text":"1159,19,4,19","type":"1159,18,10","value":"1159,21,30"}},{"$type":"property","dynamic":true,"name":"$panel-header-background-color","text":"Panel Header background-color\n","type":"color","value":"$base-color","src":{"dynamic":"1159,123,33","name":"1159,123,1","text":"1159,121,4,30","type":"1159,120,10","value":"1159,123,41"}},{"$type":"property","dynamic":true,"name":"$panel-header-background-gradient","text":"Panel Header background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1159,130,36","name":"1159,130,1","text":"1159,127,4,148","type":"1159,126,10","value":"1159,130,44"}},{"$type":"property","dynamic":true,"name":"$panel-header-border-color","text":"Panel Header border-color\n","type":"color/list","value":"$panel-border-color","src":{"dynamic":"1159,142,29","name":"1159,142,1","text":"1159,140,4,26","type":"1159,139,10","value":"1159,142,37"}},{"$type":"property","dynamic":true,"name":"$panel-header-border-style","text":"Panel Header border-style\n","type":"string/list","value":"solid","src":{"dynamic":"1159,154,29","name":"1159,154,1","text":"1159,152,4,26","type":"1159,151,10","value":"1159,154,37"}},{"$type":"property","dynamic":true,"name":"$panel-header-border-width","text":"Panel Header border-width\n","type":"number/list","value":"$panel-border-width","src":{"dynamic":"1159,148,29","name":"1159,148,1","text":"1159,146,4,26","type":"1159,145,10","value":"1159,148,37"}},{"$type":"property","dynamic":true,"name":"$panel-header-color","text":"Panel Header text color\n","type":"color","value":"#fff","src":{"dynamic":"1159,136,22","name":"1159,136,1","text":"1159,134,4,24","type":"1159,133,10","value":"1159,136,30"}},{"$type":"property","dynamic":true,"name":"$panel-header-font-family","text":"Panel Header font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1159,190,28","name":"1159,190,1","text":"1159,188,4,25","type":"1159,187,10","value":"1159,190,36"}},{"$type":"property","dynamic":true,"name":"$panel-header-font-size","text":"Panel Header font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1159,166,26","name":"1159,166,1","text":"1159,164,4,23","type":"1159,163,10","value":"1159,166,34"}},{"$type":"property","dynamic":true,"name":"$panel-header-font-size-big","text":"Panel Header font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1159,172,30","name":"1159,172,1","text":"1159,170,4,79","type":"1159,169,10","value":"1159,172,38"}},{"$type":"property","dynamic":true,"name":"$panel-header-font-weight","text":"Panel Header font-weight\n","type":"string/number","value":"$font-weight-bold","src":{"dynamic":"1159,160,28","name":"1159,160,1","text":"1159,158,4,25","type":"1159,157,10","value":"1159,160,36"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-color","text":"Panel Header icon color.\n","type":"color","value":"rgba($panel-header-color, .5)","src":{"dynamic":"1159,250,27","name":"1159,250,1","text":"1159,248,4,25","type":"1159,247,10","value":"1159,250,35"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-font-size","text":"Panel Header icon font-size.  Used for configuring the size of font icons\n","type":"number","value":"null","src":{"dynamic":"1159,268,31","name":"1159,268,1","text":"1159,266,4,74","type":"1159,265,10","value":"1159,268,39"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-font-size-big","text":"Panel Header icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1159,274,35","name":"1159,274,1","text":"1159,272,4,84","type":"1159,271,10","value":"1159,274,43"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-horizontal-spacing","text":"The space between the Panel Header icon and text when the icon is horizontally aligned\n","type":"number","value":"6px","src":{"dynamic":"1159,280,40","name":"1159,280,1","text":"1159,278,4,87","type":"1159,277,10","value":"1159,280,48"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-horizontal-spacing-big","text":"The space between the Panel Header icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1159,287,44","name":"1159,287,1","text":"1159,284,4,143","type":"1159,283,10","value":"1159,287,52"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-opacity","text":"Panel Header icon opacity\n","type":"number","value":"null","src":{"dynamic":"1159,306,29","name":"1159,306,1","text":"1159,304,4,26","type":"1159,303,10","value":"1159,306,37"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-size","text":"Panel Header icon size\n","type":"number","value":"$panel-header-line-height","src":{"dynamic":"1159,256,26","name":"1159,256,1","text":"1159,254,4,23","type":"1159,253,10","value":"1159,256,34"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-size-big","text":"Panel Header icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$panel-header-line-height-big","src":{"dynamic":"1159,262,30","name":"1159,262,1","text":"1159,260,4,79","type":"1159,259,10","value":"1159,262,38"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-vertical-spacing","text":"The space between the Panel Header icon and text when the icon is vertically aligned\n","type":"number","value":"2px","src":{"dynamic":"1159,293,38","name":"1159,293,1","text":"1159,291,4,85","type":"1159,290,10","value":"1159,293,46"}},{"$type":"property","dynamic":true,"name":"$panel-header-icon-vertical-spacing-big","text":"The space between the Panel Header icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"2px","src":{"dynamic":"1159,300,42","name":"1159,300,1","text":"1159,297,4,141","type":"1159,296,10","value":"1159,300,50"}},{"$type":"property","dynamic":true,"name":"$panel-header-line-height","text":"Panel Header line-height\n","type":"number","value":"16px","src":{"dynamic":"1159,178,28","name":"1159,178,1","text":"1159,176,4,25","type":"1159,175,10","value":"1159,178,36"}},{"$type":"property","dynamic":true,"name":"$panel-header-line-height-big","text":"Panel Header line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"24px","src":{"dynamic":"1159,184,32","name":"1159,184,1","text":"1159,182,4,81","type":"1159,181,10","value":"1159,184,40"}},{"$type":"property","dynamic":true,"name":"$panel-header-min-height","text":"Panel Header min-height\n","type":"number","value":"36px","src":{"dynamic":"1159,238,27","name":"1159,238,1","text":"1159,236,4,24","type":"1159,235,10","value":"1159,238,35"}},{"$type":"property","dynamic":true,"name":"$panel-header-min-height-big","text":"Panel Header min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"44px","src":{"dynamic":"1159,244,31","name":"1159,244,1","text":"1159,242,4,80","type":"1159,241,10","value":"1159,244,39"}},{"$type":"property","dynamic":true,"name":"$panel-header-padding","text":"Panel Header padding\n","type":"number/list","value":"0 10px","src":{"dynamic":"1159,196,24","name":"1159,196,1","text":"1159,194,4,21","type":"1159,193,10","value":"1159,196,32"}},{"$type":"property","dynamic":true,"name":"$panel-header-padding-big","text":"Panel Header padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"0 15px","src":{"dynamic":"1159,202,28","name":"1159,202,1","text":"1159,200,4,77","type":"1159,199,10","value":"1159,202,36"}},{"$type":"property","dynamic":true,"name":"$panel-header-shadow","text":"Panel Header Shadow\n","type":"shadow","value":"null","src":{"dynamic":"1159,226,23","name":"1159,226,1","text":"1159,224,4,20","type":"1159,223,10","value":"1159,226,31"}},{"$type":"property","dynamic":true,"name":"$panel-header-title-opacity","text":"Panel Header Title opacity.\n","type":"number","value":"null","src":{"dynamic":"1159,220,30","name":"1159,220,1","text":"1159,218,4,28","type":"1159,217,10","value":"1159,220,38"}},{"$type":"property","dynamic":true,"name":"$panel-header-title-padding","text":"Panel Header Title padding\n","type":"number/list","value":"7px 0","src":{"dynamic":"1159,208,30","name":"1159,208,1","text":"1159,206,4,27","type":"1159,205,10","value":"1159,208,38"}},{"$type":"property","dynamic":true,"name":"$panel-header-title-padding-big","text":"Panel Header Title padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"9px 0","src":{"dynamic":"1159,214,34","name":"1159,214,1","text":"1159,212,4,83","type":"1159,211,10","value":"1159,214,42"}},{"$type":"property","dynamic":true,"name":"$panel-header-z-index","text":"Z-Index for the Panel Header, should be used with shadows to raise header above content\n","type":"number","value":"null","src":{"dynamic":"1159,232,24","name":"1159,232,1","text":"1159,230,4,88","type":"1159,229,10","value":"1159,232,32"}},{"$type":"property","name":"$panel-light-ui","text":"Parameters for the \"light\" panel UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1159,506,1","text":"1159,503,4,92","type":"1159,502,10"}},{"$type":"property","dynamic":true,"name":"$panel-manage-borders","text":"`true` to include {@link #manageBorders border management} rules\n","type":"string","value":"true","src":{"dynamic":"1159,499,24","name":"1159,499,1","text":"1159,497,4,65","type":"1159,496,10","value":"1159,499,32"}},{"$type":"property","dynamic":true,"name":"$panel-tool-background-color","text":"Panel Tool background-color\n","type":"color","value":"null","src":{"dynamic":"1159,336,31","name":"1159,336,1","text":"1159,334,4,28","type":"1159,333,10","value":"1159,336,39"}},{"$type":"property","dynamic":true,"name":"$panel-tool-border-radius","text":"Panel Tool border radius\n","type":"number","value":"null","src":{"dynamic":"1159,384,28","name":"1159,384,1","text":"1159,382,4,25","type":"1159,381,10","value":"1159,384,36"}},{"$type":"property","dynamic":true,"name":"$panel-tool-border-radius-big","text":"Panel Tool border radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1159,390,32","name":"1159,390,1","text":"1159,388,4,81","type":"1159,387,10","value":"1159,390,40"}},{"$type":"property","dynamic":true,"name":"$panel-tool-color","text":"Panel Tool color\n","type":"color","value":"$panel-header-color","src":{"dynamic":"1159,312,20","name":"1159,312,1","text":"1159,310,4,17","type":"1159,309,10","value":"1159,312,28"}},{"$type":"property","dynamic":true,"name":"$panel-tool-cursor","text":"Panel Tool cursor\n","type":"string","value":"null","src":{"dynamic":"1159,432,21","name":"1159,432,1","text":"1159,430,4,18","type":"1159,429,10","value":"1159,432,29"}},{"$type":"property","dynamic":true,"name":"$panel-tool-disabled-background-color","text":"Panel Tool background-color when disabled\n","type":"number","value":"null","src":{"dynamic":"1159,354,40","name":"1159,354,1","text":"1159,352,4,42","type":"1159,351,10","value":"1159,354,48"}},{"$type":"property","dynamic":true,"name":"$panel-tool-disabled-color","text":"Panel Tool color when disabled\n","type":"number","value":"null","src":{"dynamic":"1159,330,29","name":"1159,330,1","text":"1159,328,4,31","type":"1159,327,10","value":"1159,330,37"}},{"$type":"property","dynamic":true,"name":"$panel-tool-disabled-cursor","text":"Panel Tool cursor when disabled\n","type":"string","value":"null","src":{"dynamic":"1159,438,30","name":"1159,438,1","text":"1159,436,4,32","type":"1159,435,10","value":"1159,438,38"}},{"$type":"property","dynamic":true,"name":"$panel-tool-disabled-opacity","text":"Panel Tool opacity when disabled\n","type":"number","value":"null","src":{"dynamic":"1159,378,31","name":"1159,378,1","text":"1159,376,4,33","type":"1159,375,10","value":"1159,378,39"}},{"$type":"property","dynamic":true,"name":"$panel-tool-focused-outline-color","text":"Panel Tool outline color when focused\n","type":"color","value":"$panel-header-color","src":{"dynamic":"1159,456,36","name":"1159,456,1","text":"1159,454,4,38","type":"1159,453,10","value":"1159,456,44"}},{"$type":"property","dynamic":true,"name":"$panel-tool-focused-outline-offset","text":"Panel Tool outline offset when focused\n","type":"number","value":"null","src":{"dynamic":"1159,462,37","name":"1159,462,1","text":"1159,460,4,39","type":"1159,459,10","value":"1159,462,45"}},{"$type":"property","dynamic":true,"name":"$panel-tool-focused-outline-style","text":"Panel Tool outline style when focused\n","type":"string","value":"null","src":{"dynamic":"1159,450,36","name":"1159,450,1","text":"1159,448,4,38","type":"1159,447,10","value":"1159,450,44"}},{"$type":"property","dynamic":true,"name":"$panel-tool-focused-outline-width","text":"Panel Tool outline width when focused\n","type":"number","value":"null","src":{"dynamic":"1159,444,36","name":"1159,444,1","text":"1159,442,4,38","type":"1159,441,10","value":"1159,444,44"}},{"$type":"property","dynamic":true,"name":"$panel-tool-font-size","text":"Panel Tool font-size\n","type":"number","value":"$panel-tool-size","src":{"dynamic":"1159,408,24","name":"1159,408,1","text":"1159,406,4,21","type":"1159,405,10","value":"1159,408,32"}},{"$type":"property","dynamic":true,"name":"$panel-tool-font-size-big","text":"Panel Tool font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$panel-tool-size-big","src":{"dynamic":"1159,414,28","name":"1159,414,1","text":"1159,412,4,77","type":"1159,411,10","value":"1159,414,36"}},{"$type":"property","dynamic":true,"name":"$panel-tool-hovered-background-color","text":"Panel Tool background-color when hovered\n","type":"number","value":"null","src":{"dynamic":"1159,342,39","name":"1159,342,1","text":"1159,340,4,41","type":"1159,339,10","value":"1159,342,47"}},{"$type":"property","dynamic":true,"name":"$panel-tool-hovered-color","text":"Panel Tool color when hovered\n","type":"number","value":"null","src":{"dynamic":"1159,318,28","name":"1159,318,1","text":"1159,316,4,30","type":"1159,315,10","value":"1159,318,36"}},{"$type":"property","dynamic":true,"name":"$panel-tool-hovered-opacity","text":"Panel Tool opacity when hovered\n","type":"number","value":".6","src":{"dynamic":"1159,366,30","name":"1159,366,1","text":"1159,364,4,32","type":"1159,363,10","value":"1159,366,38"}},{"$type":"property","dynamic":true,"name":"$panel-tool-opacity","text":"Panel Tool opacity\n","type":"number","value":".5","src":{"dynamic":"1159,360,22","name":"1159,360,1","text":"1159,358,4,19","type":"1159,357,10","value":"1159,360,30"}},{"$type":"property","dynamic":true,"name":"$panel-tool-pressed-background-color","text":"Panel Tool background-color when pressed\n","type":"number","value":"null","src":{"dynamic":"1159,348,39","name":"1159,348,1","text":"1159,346,4,41","type":"1159,345,10","value":"1159,348,47"}},{"$type":"property","dynamic":true,"name":"$panel-tool-pressed-color","text":"Panel Tool color when pressed\n","type":"number","value":"null","src":{"dynamic":"1159,324,28","name":"1159,324,1","text":"1159,322,4,30","type":"1159,321,10","value":"1159,324,36"}},{"$type":"property","dynamic":true,"name":"$panel-tool-pressed-opacity","text":"Panel Tool opacity when pressed\n","type":"number","value":".7","src":{"dynamic":"1159,372,30","name":"1159,372,1","text":"1159,370,4,32","type":"1159,369,10","value":"1159,372,38"}},{"$type":"property","dynamic":true,"name":"$panel-tool-size","text":"Panel Tool size\n","type":"number","value":"null","src":{"dynamic":"1159,396,19","name":"1159,396,1","text":"1159,394,4,16","type":"1159,393,10","value":"1159,396,27"}},{"$type":"property","dynamic":true,"name":"$panel-tool-size-big","text":"Panel Tool size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1159,402,23","name":"1159,402,1","text":"1159,400,4,72","type":"1159,399,10","value":"1159,402,31"}},{"$type":"property","dynamic":true,"name":"$panel-tool-spacing","text":"The space between Panel Tools\n","type":"number","value":"null","src":{"dynamic":"1159,420,22","name":"1159,420,1","text":"1159,418,4,30","type":"1159,417,10","value":"1159,420,30"}},{"$type":"property","dynamic":true,"name":"$panel-tool-spacing-big","text":"The space between Panel Tools in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1159,426,26","name":"1159,426,1","text":"1159,424,4,86","type":"1159,423,10","value":"1159,426,34"}}]}],"src":{"alias":"423,325,0","alternateClassNames":"423,326,0","extends":"423,324,0","mixins":"423,330,0:423,331,0","name":"1159,2,11","override":"638,5,0","requires":"423,335,0:423,336,0","text":"423,2,3,10774"},"group":"Container","displayName":"Panel"},{"$type":"class","alias":"widget.accordion","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.Bufferable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","mixins":"Ext.mixin.Bufferable","name":"Ext.panel.Accordion","requires":"Ext.layout.VBox,Ext.panel.Collapser","since":"7.0","text":" This container manages child panels in an expandable accordion style. By default, only\n one child panel can be expanded at a time. Set {@link #openable} to a different value\n to allow multiple panels to be expanded.\n\n Note: Only `{@link Ext.Panel}` and its subclasses will be explicitly managed. All other items\n will be treated normally.\n\n ```javascript\n @example({ framework: 'extjs' })\n Ext.create({\n     xtype: 'accordion',\n     title: 'Accordion',\n     fullscreen: true,\n\n     defaults: {\n         // applied to each contained panel\n         xtype: 'panel',\n         bodyPadding: 10\n     },\n\n     openable: 2,\n\n     items: [{\n         title: 'Panel 1',\n         html: 'Panel content!'\n     }, {\n         title: 'Panel 2',\n         html: 'Panel content!'\n     }, {\n         title: 'Panel 3',\n         html: 'Panel content!'\n     }]\n });\n ```\n ```javascript\n @example({framework: 'ext-react', packages:['ext-react']})\n import React, { Component } from 'react'\n import { ExtAccordion, ExtPanel } from '@sencha/ext-react';\n\n\texport default class MyExample extends Component {\n\t   render() {\n\t       return (\n\t            <ExtAccordion\n\t                title=\"Accordion\"\n\t                fullscreen=\"true\"\n\t                openable=\"2\"\n\t            >\n\t                <ExtPanel\n\t                    bodyPadding=\"10\"\n\t                    title=\"Panel 1\"\n\t                    html=\"Panel Content!\"\n\t                >\n\t                </ExtPanel>\n\t                <ExtPanel\n\t                    bodyPadding=\"10\"\n\t                    title=\"Panel 2\"\n\t                    html=\"Panel Content!\"\n\t                >\n\t                </ExtPanel>\n\t                <ExtPanel\n\t                    bodyPadding=\"10\"\n\t                    title=\"Panel 3\"\n\t                    html=\"Panel Content!\"\n \t                >\n\t                </ExtPanel>\n\t           </ExtAccordion>\n\t        )\n\t    }\n\t}\n ```\n ```javascript\n @example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core';\n import {ExtPanel, ExtAccordion} from '@sencha/ext-react';\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [``],\n     template: `\n         <ExtAccordion\n             title=\"Accordion\"\n             fullscreen=\"true\"\n             openable=\"2\"\n         >\n             <ExtPanel\n                 bodyPadding=\"10\"\n                 title=\"Panel 1\"\n                 html=\"Panel Content!\"\n             >\n             </ExtPanel>\n             <ExtPanel\n                 bodyPadding=\"10\"\n                 title=\"Panel 2\"\n                 html=\"Panel Content!\"\n             >\n             </ExtPanel>\n             <ExtPanel\n                 bodyPadding=\"10\"\n                 title=\"Panel 3\"\n                 html=\"Panel Content!\"\n             >\n             </ExtPanel>\n          </ExtAccordion>\n     `\n })\n export class AppComponent {}\n ```\n ```html\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-accordion\n     title=\"Accordion\"\n     fullscreen=\"true\"\n     openable=\"2\"\n >\n     <ext-panel\n         bodyPadding=\"10\"\n         title=\"Panel 1\"\n         html=\"Panel Content!\"\n     >\n     </ext-panel>\n     <ext-panel\n         bodyPadding=\"10\"\n         title=\"Panel 2\"\n         html=\"Panel Content!\"\n     >\n     </ext-panel>\n     <ext-panel\n         bodyPadding=\"10\"\n         title=\"Panel 3\"\n         html=\"Panel Content!\"\n     >\n     </ext-panel>\n </ext-accordion>\n ```\n ```javascript\n @example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\n import '@sencha/ext-web-components/dist/ext-accordion.component';\n import '@sencha/ext-web-components/dist/ext-panel.component';\n\n export default class AccordionComponent {}\n ```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"defaultPanelUI","text":"The default {@link Ext.Widget#cfg!ui ui} to assign to collapsible panels.\n","type":"String","value":"'accordion'","src":{"accessor":"631,165,0","name":"631,162,26","text":"631,163,12,74","type":"631,162,18","value":"631,165,0"}},{"$type":"property","accessor":true,"name":"expandedFirst","text":"Set to `true` to move a panel to the first position in the container when it\nis expanded.\n","type":"Boolean","value":"false","src":{"accessor":"631,172,0","name":"631,168,27","text":"631,169,12,90","type":"631,168,18","value":"631,172,0"}},{"$type":"property","accessor":true,"name":"openable","text":"Limits the number simultaneously expanded (open) child panels.\n","type":"Number","value":"1","src":{"accessor":"631,178,0","name":"631,175,26","text":"631,176,12,63","type":"631,175,18","value":"631,178,0"}}]}],"src":{"alias":"631,149,0","extends":"631,148,0","mixins":"631,152,0","name":"631,147,0","requires":"631,156,0:631,157,0","since":"631,145,11","text":"631,2,3,3718"},"group":"Container","displayName":"Panel Accordion"},{"$type":"class","alias":"widget.timepanel","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.ConfigProxy,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","mixins":"Ext.mixin.ConfigProxy","name":"Ext.panel.Time","since":"6.6.0","text":"This component presents a time selection view with different interaction modes\ndepending on the device and configuration options. Default time view is analog\nclock face.\n\nTime panel is mostly used as a picker by {@link Ext.field.Time} but can also be\ncreated and used directly.\n\n\nExample usage:\n\n```javascript\n@example({ framework: 'extjs' })\n     Ext.create('Ext.form.Panel', {\n          fullscreen: true,\n          items: [\n              {\n                  xtype: 'timepanel',\n                  shadow: true\n              }\n          ]\n      });\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport { ExtContainer, ExtTimePanel } from '@sencha/ext-react';\nimport React, { Component } from 'react';\nexport default class TimeExample extends Component {\n    render() {\n        return (\n           <ExtContainer padding={10} layout={'auto'}>\n              <ExtTimePanel shadow/>\n           </ExtContainer>\n        )\n    }\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [``],\n    template: `\n       <ExtContainer [padding]=\"10\" [layout]=\"'auto'\">\n           <ExtTimePanel shadow=\"true\"></ExtTimePanel>\n       </ExtContainer>\n    `\n})\nexport class AppComponent {}\n```\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container padding={10} layout='{\"auto\"}'>\n   <ext-timepanel shadow></ext-timepanel>\n </ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 2 })\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-timepanel.component';\n\nexport default class TimeComponent {}\n","items":[{"$type":"configs","items":[{"$type":"property","name":"alignPMInside","text":"Default false.\n","type":"Boolean","src":{"name":"640,169,35","text":"640,170,20,15","type":"640,169,26"}},{"$type":"property","name":"autoAdvance","optional":true,"text":"If `true`, time panel will automatically advance to minutes after\nselecting an hour value. Setting this to `false` will disable this\nbehavior, and switching from hours to minutes will have to be done\nmanually via Time panel header.\n","type":"Boolean","value":"true","src":{"name":"640,93,36","text":"640,94,20,232","type":"640,93,26","value":"640,93,48"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"buttonAlign","text":"The alignment of any buttons added to this panel. Valid values are 'right',\n'left' and 'center'\n","type":"String","value":"'center'","src":{"accessor":"632,23,0","inheritdoc":"640,143,20","name":"640,142,34","text":"632,19,16,96","type":"640,142,26","value":"632,18,43"}},{"$type":"property","name":"confirmable","optional":true,"text":"When set to `true`, Time panel will have OK and Cancel buttons in\na toolbar docked to the bottom of the Panel, and user will need to\nconfirm selection by activating OK button.\nWhen set to `false`, Time panel will not have OK and Cancel buttons\nand selection will be confirmed automatically when minutes are\nselected.\n","type":"Boolean","value":"false","src":{"name":"640,110,36","text":"640,111,20,317","type":"640,110,26","value":"640,110,48"}},{"$type":"property","name":"declineHandler","optional":true,"text":"This function, if provided, will be called when user has activated\nCancel button (only if {@link #confirmable} is `true`).\n","type":"Function","src":{"name":"640,129,37","text":"640,130,20,123","type":"640,129,26"}},{"$type":"property","name":"defaultButtons","text":"Configuration of the buttons to add to the Time panel if\n{@link #confirmable} is set to `true`.\n\nDefault is to provide OK and Cancel buttons.\n","type":"Object","src":{"name":"640,147,34","text":"640,148,20,142","type":"640,147,26"}},{"$type":"property","name":"handler","optional":true,"text":"This function, if provided, will be called when Time selection\nis confirmed by activating OK button (if {@link #confirmable} is `true`),\nor selecting minutes.\n","type":"Function","src":{"name":"640,121,37","text":"640,122,20,159","type":"640,121,26"}},{"$type":"property","name":"hourDisplayFormat","since":"7.0","text":"Accepted values are `G` or `H`\nDefault G\nSee {@link Ext.Date} for details.\n","type":"string","src":{"name":"640,175,35","since":"640,179,28","text":"640,176,21,75","type":"640,175,27"}},{"$type":"property","name":"meridiem","text":"Defaults to true for 12 hour format for Time Panel.\n","type":"Boolean","src":{"name":"640,163,35","text":"640,164,20,52","type":"640,163,26"}},{"$type":"property","access":"private","name":"mode","optional":true,"text":"Default mode for Time Panel. values can be 'hour' or 'minute'\n","type":"String","value":"hour","src":{"access":"640,157,20","name":"640,156,35","text":"640,158,20,62","type":"640,156,26","value":"640,156,40"}},{"$type":"property","name":"scope","optional":true,"text":"The scope in which {@link #handler} function will be called.\n","type":"Object","value":"'this'","src":{"name":"640,136,35","text":"640,137,20,61","type":"640,136,26","value":"640,136,41"}},{"$type":"property","name":"value","optional":true,"text":"Time value for the panel. If not set, current time will be displayed.\n","type":"Date","src":{"name":"640,87,33","text":"640,88,20,70","type":"640,87,26"}},{"$type":"property","name":"vertical","optional":true,"text":"When `true`, Time header will be at the top of the Time panel.\nWhen `false`, Time header will be at the left side of the Time panel.\nWhen `auto`, Time header will be set based on the orientation of the device.\n","type":"Boolean","value":"true","src":{"name":"640,102,36","text":"640,103,20,210","type":"640,102,26","value":"640,102,45"}}]}],"src":{"alias":"640,71,0","extends":"640,70,0","mixins":"640,74,0","name":"640,69,0","since":"640,9,11","text":"640,2,4,279:640,10,4,1547:640,67,2,2"},"group":"Container","displayName":"Panel Time"},{"$type":"class","alias":"widget.sheet","extended":"Ext.Panel,Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.ActionSheet,Ext.picker.Picker,Ext.Toast","extends":"Ext.Panel","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.mixin.Toolable,Ext.panel.Buttons,Ext.state.Stateful","name":"Ext.Sheet","requires":"Ext.viewport.Viewport,Ext.Mask,Ext.fx.Animation","text":"A floated panel which animates in and out from the side of the screen when shown.\nUsed as the base class for {@link Ext.ActionSheet Action Sheets} and\n{@link Ext.picker.Picker Pickers}\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"evented":true,"name":"centered","text":"Whether or not this component is absolutely centered inside its container.\n","type":"Boolean","value":"true","src":{"accessor":"426,95,8","evented":"426,96,8","name":"426,93,23","text":"426,94,8,75","type":"426,93,14","value":"426,98,0"}},{"$type":"property","accessor":true,"name":"cover","text":"Set to true to display the menu using cover style. The menu will be shown over\nthe Viewport from the specified side.  By default, the menu will be modal,\ndisplaying a mask over the rest of the Viewport, and the user may tap on the\nmask to dismiss the menu.\n","type":"Boolean","value":"null","src":{"accessor":"426,43,0","name":"426,37,27","text":"426,38,12,257","type":"426,37,18","value":"426,43,0"}},{"$type":"property","accessor":true,"name":"enter","text":"The viewport side used as the enter point when shown.\nApplies to sliding animation effects only.\n","type":"'top'/'bottom'/'left'/'right'","value":"'bottom'","src":{"accessor":"426,66,0","name":"426,62,49","text":"426,63,12,97","type":"426,62,18","value":"426,66,0"}},{"$type":"property","accessor":true,"name":"exit","text":"The viewport side used as the exit point when hidden.\nApplies to sliding animation effects only.\n","type":"'top'/'bottom'/'left'/'right'","value":"'bottom'","src":{"accessor":"426,73,0","name":"426,69,49","text":"426,70,12,97","type":"426,69,18","value":"426,73,0"}},{"$type":"property","accessor":true,"name":"reveal","text":"Set to true to display the menu using reveal style. The Viewport will slide up,\ndown, left or right to make room for the menu to be seen.\n","type":"Boolean","value":"null","src":{"accessor":"426,34,0","name":"426,30,27","text":"426,31,12,138","type":"426,30,18","value":"426,34,0"}},{"$type":"property","accessor":true,"name":"side","text":"The side of the viewport where the menu will be positioned.\n","type":"\"left\"/\"right\"/\"top\"/\"bottom\"","value":"null","src":{"accessor":"426,49,0","name":"426,49,0","text":"426,47,12,60","type":"426,46,18","value":"426,49,0"}},{"$type":"property","accessor":true,"name":"stretchX","text":"`true` to stretch this sheet horizontally.\n","type":"Boolean","value":"null","src":{"accessor":"426,54,0","name":"426,52,27","text":"426,52,36,43","type":"426,52,18","value":"426,54,0"}},{"$type":"property","accessor":true,"name":"stretchY","text":"`true` to stretch this sheet vertically.\n","type":"Boolean","value":"null","src":{"accessor":"426,59,0","name":"426,57,27","text":"426,57,36,41","type":"426,57,18","value":"426,59,0"}}]},{"$type":"properties","items":[{"$type":"property","hide":true,"name":"hidden","value":"true","src":{"hide":"426,24,8","name":"426,26,0","value":"426,26,0"}},{"$type":"property","hide":true,"name":"isViewportMenu","value":"false","src":{"hide":"426,18,8","name":"426,20,0","value":"426,20,0"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$sheet-background-color","text":"Sheet background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1161,9,26","name":"1161,9,1","text":"1161,7,4,23","type":"1161,6,10","value":"1161,9,34"}},{"$type":"property","dynamic":true,"name":"$sheet-border-color","text":"Sheet border-color\n","type":"color","value":"$neutral-color","src":{"dynamic":"1161,15,22","name":"1161,15,1","text":"1161,13,4,19","type":"1161,12,10","value":"1161,15,30"}},{"$type":"property","dynamic":true,"name":"$sheet-border-style","text":"Sheet border-style\n","type":"number","value":"$panel-border-style","src":{"dynamic":"1161,27,22","name":"1161,27,1","text":"1161,25,4,19","type":"1161,24,10","value":"1161,27,30"}},{"$type":"property","dynamic":true,"name":"$sheet-border-width","text":"Sheet border-width\n","type":"number","value":"$panel-border-width","src":{"dynamic":"1161,21,22","name":"1161,21,1","text":"1161,19,4,19","type":"1161,18,10","value":"1161,21,30"}},{"$type":"property","dynamic":true,"name":"$sheet-button-spacing","text":"Space between vertically aligned sheet buttons\n","type":"number","value":"6px","src":{"dynamic":"1161,33,24","name":"1161,33,1","text":"1161,31,4,47","type":"1161,30,10","value":"1161,33,32"}},{"$type":"property","dynamic":true,"name":"$sheet-padding","text":"Sheet padding\n","type":"number","value":"null","src":{"dynamic":"1161,39,17","name":"1161,39,1","text":"1161,37,4,14","type":"1161,36,10","value":"1161,39,25"}}]}],"src":{"alias":"426,9,0","extends":"426,7,0","name":"1161,2,11","requires":"426,12,0:426,13,0:426,14,0","text":"426,2,4,185"},"group":"Container","displayName":"Sheet"},{"$type":"class","alias":"widget.spacer","extended":"Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Component","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Spacer","text":"The {@link Ext.Spacer} component is generally used to put space between items in\n{@link Ext.Toolbar} components.\n## Examples\n\nBy default the {@link #flex} configuration is set to 1:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    items: [\n        {\n            xtype : 'toolbar',\n            docked: 'top',\n            items: [\n                {\n                    xtype: 'button',\n                    text : 'Button One'\n                },\n                {\n                    xtype: 'spacer'\n                },\n                {\n                    xtype: 'button',\n                    text : 'Button Two'\n                }\n            ]\n        }\n    ]\n});\n```\n\nAlternatively you can just set the {@link #width} configuration which will get the\n{@link Ext.Spacer} a fixed width:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    layout: {\n        type: 'vbox',\n        pack: 'center',\n        align: 'stretch'\n    },\n    items: [\n        {\n            xtype : 'toolbar',\n            docked: 'top',\n            items: [\n                {\n                    xtype: 'button',\n                    text : 'Button One'\n                },\n                {\n                    xtype: 'spacer',\n                    width: 50\n                },\n                {\n                    xtype: 'button',\n                    text : 'Button Two'\n                }\n            ]\n        },\n        {\n            xtype: 'container',\n            items: [\n                {\n                    xtype: 'button',\n                    text : 'Change Ext.Spacer width',\n                    handler: function() {\n                        //get the spacer using ComponentQuery\n                        var spacer = Ext.ComponentQuery.query('spacer')[0],\n                            from = 10,\n                            to = 250;\n\n                        //set the width to a random number\n                        spacer.setWidth(Math.floor(Math.random() * (to - from + 1) + from));\n                    }\n                }\n            ]\n        }\n    ]\n});\n```\n\nYou can also insert multiple {@link Ext.Spacer}'s:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.Container', {\n    fullscreen: true,\n    items: [\n        {\n            xtype : 'toolbar',\n            docked: 'top',\n            items: [\n                {\n                    xtype: 'button',\n                    text : 'Button One'\n                },\n                {\n                    xtype: 'spacer'\n                },\n                {\n                    xtype: 'button',\n                    text : 'Button Two'\n                },\n                {\n                    xtype: 'spacer',\n                    width: 20\n                },\n                {\n                    xtype: 'button',\n                    text : 'Button Three'\n                }\n            ]\n        }\n    ]\n});\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"flex","text":"The flex value of this spacer. This defaults to 1, if no width has been set.\n","type":"Number","src":{"accessor":"427,131,12","name":"427,129,26","text":"427,130,12,77","type":"427,129,18"}},{"$type":"property","accessor":true,"name":"width","text":"The width of this spacer. If this is set, the value of {@link #flex} will be ignored.\n","type":"Number","src":{"accessor":"427,137,12","name":"427,135,26","text":"427,136,12,86","type":"427,135,18"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"constructor","items":[{"$type":"param","name":"config","src":{"name":"427,144,0"}}],"src":{"access":"427,142,8","name":"427,144,0"}}]}],"src":{"alias":"427,125,0","extends":"427,124,0","name":"427,123,0","text":"427,2,4,2962"},"group":"Other Components","displayName":"Spacer"},{"$type":"class","alias":"widget.splitbutton","extended":"Ext.Button,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Button","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.SplitButton","requires":"Ext.menu.Menu","text":"A split button that provides a built-in dropdown arrow that can fire an event separately from\nthe default click event of the button. Typically this would be used to display a dropdown menu\nthat provides additional options to the primary button action, but any custom handler can\nprovide the arrowclick implementation.  Example usage:\n\n```javascript\n@example({ framework: 'extjs' })\n// display a dropdown menu:\nExt.create('Ext.SplitButton', {\n    renderTo: Ext.getBody(),\n    text: 'Options',\n    // handle a click on the button itself\n    handler: function() {\n        alert(\"The button was clicked\");\n    },\n    menu: new Ext.menu.Menu({\n        items: [\n            // these will render as dropdown menu items when the arrow is clicked:\n            {text: 'Item 1', handler: function(){ alert(\"Item 1 clicked\"); }},\n            {text: 'Item 2', handler: function(){ alert(\"Item 2 clicked\"); }}\n        ]\n    })\n});\n```\n\nProvide custom handling to the split button when the dropdown arrow is clicked:\n\n    Ext.create('Ext.SplitButton', {\n        renderTo: 'button-ct',\n        text: 'Options',\n        handler: optionsHandler,\n        arrowHandler: myCustomHandler\n    });\n\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-container padding=\"10\" layout=\"vbox\">\n    <ext-splitbutton\n         text=\"SplitButton\"\n         ontap=\"splitbutton.sayHello\"\n         ui=\"action alt\"\n         iconCls=\"x-fa fa-heart\"\n         margin=\"10\"\n         onready=\"splitbutton.splitButtonReady\"\n     >\n     </ext-splitbutton>\n</ext-container>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\n\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-splitbutton.component';\n\nexport default class SplitButtonComponent {\n     splitButtonReady = (event) => {\n         const splitButtonCmp = event.detail.cmp;\n         splitButtonCmp.setMenu([{\n             text: \"Menu Item 1\",\n             handler: () => { alert(\"Item 1 clicked\"); }\n         }, {\n             text: \"Menu Item 2\",\n             handler: () => {alert(\"Item 2 clicked\"); }\n         }]);\n     }\n\n     sayHello = () => {\n         alert(\"Hello! The button was clicked\");\n     }\n}\n\nwindow.splitbutton = new SplitButtonComponent();\n```\n\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtContainer, ExtSplitButton } from '@sencha/ext-react';\n\nexport default class SplitButtonExample extends Component {\n\n    render() {\n        return (\n            <ExtContainer padding=\"10\" layout=\"vbox\">\n                <ExtSplitButton\n                    text=\"SplitButton\"\n                    handler={this.sayHello}\n                    ui=\"action alt\"\n                    iconCls=\"x-fa fa-heart\"\n                    {...menuProps} margin=\"10\"\n                />\n            </ExtContainer>\n        )\n    }\n    sayHello = () => {\n        alert(\"Hello! The button was clicked\");\n    }\n}\nconst menuProps ={\n    menu: [{\n        text: 'Menu Item 1',\n        handler: function(){ alert(\"Item 1 clicked\"); }\n    }, {\n        text: 'Menu Item 2',\n        handler: function(){ alert(\"Item 2 clicked\"); }\n    }]\n}\n```\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n             <ExtContainer padding=\"10\" layout=\"vbox\">\n                 <ExtSplitButton\n                     text=\"SplitButton\"\n                     [handler]=\"this.sayHello\"\n                     ui=\"action alt\"\n                     iconCls=\"x-fa fa-heart\"\n                     margin=\"10\"\n                     [menu]=\"this.menu\"\n                  ></ExtSplitButton>\n             </ExtContainer>\n             `\n })\n export class AppComponent {\n\n     sayHello = () => {\n         alert(\"Hello! The button was clicked\");\n     }\n\n     menu = [{\n         text: 'Menu Item 1',\n         handler: function(){ alert(\"Item 1 clicked\"); }\n     }, {\n         text: 'Menu Item 2',\n         handler: function(){ alert(\"Item 2 clicked\"); }\n     }];\n }\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"controllable":true,"name":"arrowHandler","type":"Function","value":"null","items":[{"$type":"property","name":"button","text":"This Button.\n","type":"Ext.SplitButton","src":{"name":"428,170,48","text":"428,170,55,13","type":"428,170,18"}},{"$type":"property","name":"e","text":"The triggering event.\nThe handler function to run when the Button is tapped on.\n","type":"Ext.event.Event","src":{"name":"428,171,48","text":"428,171,50,22:428,172,12,58","type":"428,171,18"}}],"src":{"accessor":"428,175,0","controllable":"428,173,12","name":"428,169,28","type":"428,169,18","value":"428,175,0"}}]},{"$type":"events","items":[{"$type":"event","name":"arrowclick","text":"Fires when this button's arrow is clicked.\n","items":[{"$type":"param","name":"this","type":"Ext.SplitButton","src":{"name":"428,163,33","type":"428,163,16"}},{"$type":"param","name":"e","text":"The click event.\n","type":"Event","src":{"name":"428,164,23","text":"428,164,25,17","type":"428,164,16"}}],"src":{"name":"428,161,15","text":"428,162,8,43"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","fires":"arrowclick","name":"doTap","items":[{"$type":"param","name":"me","src":{"name":"428,238,0"}},{"$type":"param","name":"e","src":{"name":"428,238,0"}}],"src":{"access":"428,236,8","fires":"428,256,0","name":"428,238,0"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"arrowCls","value":"'split'","src":{"access":"428,179,8","name":"428,181,0","value":"428,181,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","access":"private","name":"splitButton-alt-invert-ui","text":"alt uis + decline/confirm have some magic to swap foreground and background colors.\nthis creates a \"alt decline\" and \"alt confirm\".\n","items":[{"$type":"param","name":"$ui","src":{"name":"1162,1448,34"}},{"$type":"param","name":"$background-color","optional":true,"value":"map_get($ui","src":{"name":"1162,1449,5"}}],"src":{"access":"1162,1446,4","name":"1162,1448,7","text":"1162,1444,4,132"}},{"$type":"method","name":"splitButton-ui","text":"Creates a visual theme for a SplitButton.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1162,583,20","text":"1162,584,4,109","type":"1162,583,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"splitButton","src":{"access":"1162,587,42","name":"1162,587,21","text":"1162,587,53,35:1162,588,4,61","type":"1162,587,12","value":"1162,587,28"}},{"$type":"param","name":"$background-color","text":"splitButton background-color\n","type":"color","src":{"name":"1162,590,19","text":"1162,591,4,30","type":"1162,590,12"}},{"$type":"param","name":"$hovered-background-color","text":"splitButton background-color when hovered\n","type":"color","src":{"name":"1162,593,19","text":"1162,594,4,43","type":"1162,593,12"}},{"$type":"param","name":"$pressed-background-color","text":"splitButton background-color when pressed\n","type":"color","src":{"name":"1162,596,19","text":"1162,597,4,43","type":"1162,596,12"}},{"$type":"param","name":"$focused-background-color","text":"splitButton background-color when focused\n","type":"color","src":{"name":"1162,599,19","text":"1162,600,4,43","type":"1162,599,12"}},{"$type":"param","name":"$disabled-background-color","text":"splitButton background-color when disabled\n","type":"color","src":{"name":"1162,602,19","text":"1162,603,4,44","type":"1162,602,12"}},{"$type":"param","name":"$box-shadow","text":"splitButton box-shadow\n","type":"list","src":{"name":"1162,605,18","text":"1162,606,4,24","type":"1162,605,12"}},{"$type":"param","name":"$hovered-box-shadow","text":"splitButton box-shadow when hovered\n","type":"list","src":{"name":"1162,608,18","text":"1162,609,4,37","type":"1162,608,12"}},{"$type":"param","name":"$pressed-box-shadow","text":"splitButton box-shadow when pressed\n","type":"list","src":{"name":"1162,611,18","text":"1162,612,4,37","type":"1162,611,12"}},{"$type":"param","name":"$focused-box-shadow","text":"splitButton box-shadow when focused\n","type":"list","src":{"name":"1162,614,18","text":"1162,615,4,37","type":"1162,614,12"}},{"$type":"param","name":"$disabled-box-shadow","text":"splitButton box-shadow when disabled\n","type":"list","src":{"name":"1162,617,18","text":"1162,618,4,38","type":"1162,617,12"}},{"$type":"param","name":"$box-shadow-transition","text":"The transition for the splitButton's box-shadow\n","type":"list","src":{"name":"1162,620,18","text":"1162,621,4,49","type":"1162,620,12"}},{"$type":"param","name":"$background-gradient","text":"splitButton background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1162,623,25","text":"1162,624,4,148","type":"1162,623,12"}},{"$type":"param","name":"$hovered-background-gradient","text":"splitButton background-gradient when hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1162,627,25","text":"1162,628,4,161","type":"1162,627,12"}},{"$type":"param","name":"$pressed-background-gradient","text":"splitButton background-gradient when pressed.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1162,631,25","text":"1162,632,4,161","type":"1162,631,12"}},{"$type":"param","name":"$focused-background-gradient","text":"splitButton background-gradient when focused.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1162,635,25","text":"1162,636,4,161","type":"1162,635,12"}},{"$type":"param","name":"$disabled-background-gradient","text":"splitButton background-gradient when disabled.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1162,639,25","text":"1162,640,4,162","type":"1162,639,12"}},{"$type":"param","name":"$color","text":"splitButton text color\n","type":"color","src":{"name":"1162,643,19","text":"1162,644,4,24","type":"1162,643,12"}},{"$type":"param","name":"$hovered-color","text":"splitButton text color when hovered\n","type":"color","src":{"name":"1162,646,19","text":"1162,647,4,37","type":"1162,646,12"}},{"$type":"param","name":"$pressed-color","text":"splitButton text color when pressed\n","type":"color","src":{"name":"1162,649,19","text":"1162,650,4,37","type":"1162,649,12"}},{"$type":"param","name":"$focused-color","text":"splitButton text color when focused\n","type":"color","src":{"name":"1162,652,19","text":"1162,653,4,37","type":"1162,652,12"}},{"$type":"param","name":"$disabled-color","text":"splitButton color when disabled\n","type":"color","src":{"name":"1162,655,19","text":"1162,656,4,33","type":"1162,655,12"}},{"$type":"param","name":"$border-color","text":"splitButton border-color\n","type":"color/list","src":{"name":"1162,658,24","text":"1162,659,4,26","type":"1162,658,12"}},{"$type":"param","name":"$hovered-border-color","text":"splitButton border-color when hovered\n","type":"color/list","src":{"name":"1162,661,24","text":"1162,662,4,39","type":"1162,661,12"}},{"$type":"param","name":"$pressed-border-color","text":"splitButton border-color when pressed\n","type":"color/list","src":{"name":"1162,664,24","text":"1162,665,4,39","type":"1162,664,12"}},{"$type":"param","name":"$focused-border-color","text":"splitButton border-color when focused\n","type":"color/list","src":{"name":"1162,667,24","text":"1162,668,4,39","type":"1162,667,12"}},{"$type":"param","name":"$disabled-border-color","text":"splitButton border-color when disabled\n","type":"color/list","src":{"name":"1162,670,24","text":"1162,671,4,40","type":"1162,670,12"}},{"$type":"param","name":"$focused-outline-color","text":"splitButton focus outline color\n","type":"color","src":{"name":"1162,673,19","text":"1162,674,4,33","type":"1162,673,12"}},{"$type":"param","name":"$focused-outline-style","text":"splitButton focus outline style\n","type":"string","src":{"name":"1162,676,20","text":"1162,677,4,33","type":"1162,676,12"}},{"$type":"param","name":"$focused-outline-width","text":"splitButton focus outline width\n","type":"number","src":{"name":"1162,679,20","text":"1162,680,4,33","type":"1162,679,12"}},{"$type":"param","name":"$focused-outline-offset","text":"splitButton focus outline offset\n","type":"number","src":{"name":"1162,682,20","text":"1162,683,4,34","type":"1162,682,12"}},{"$type":"param","name":"$border-width","text":"splitButton border-width\n","type":"number/list","src":{"name":"1162,685,25","text":"1162,686,4,26","type":"1162,685,12"}},{"$type":"param","name":"$border-style","text":"splitButton border-style\n","type":"string/list","src":{"name":"1162,688,25","text":"1162,689,4,26","type":"1162,688,12"}},{"$type":"param","name":"$border-radius","text":"splitButton border-radius\n","type":"number","src":{"name":"1162,691,20","text":"1162,692,4,27","type":"1162,691,12"}},{"$type":"param","name":"$border-radius-big","text":"splitButton border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,694,20","text":"1162,695,4,83","type":"1162,694,12"}},{"$type":"param","name":"$font-weight","text":"splitButton font-weight\n","type":"string/number","src":{"name":"1162,697,27","text":"1162,698,4,25","type":"1162,697,12"}},{"$type":"param","name":"$font-size","text":"splitButton font-size\n","type":"number","src":{"name":"1162,700,20","text":"1162,701,4,23","type":"1162,700,12"}},{"$type":"param","name":"$font-size-big","text":"splitButton font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,703,20","text":"1162,704,4,79","type":"1162,703,12"}},{"$type":"param","name":"$line-height","text":"splitButton line-height\n","type":"number","src":{"name":"1162,706,20","text":"1162,707,4,25","type":"1162,706,12"}},{"$type":"param","name":"$line-height-big","text":"splitButton line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,709,20","text":"1162,710,4,81","type":"1162,709,12"}},{"$type":"param","name":"$font-family","text":"splitButton font-family\n","type":"string","src":{"name":"1162,712,20","text":"1162,713,4,25","type":"1162,712,12"}},{"$type":"param","name":"$text-transform","text":"splitButton text-transform\n","type":"string","src":{"name":"1162,715,20","text":"1162,716,4,28","type":"1162,715,12"}},{"$type":"param","name":"$text-transform-big","text":"splitButton text-transform in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"string","src":{"name":"1162,718,20","text":"1162,719,4,84","type":"1162,718,12"}},{"$type":"param","name":"$padding","text":"splitButton padding\n","type":"number/list","src":{"name":"1162,721,25","text":"1162,722,4,21","type":"1162,721,12"}},{"$type":"param","name":"$padding-big","text":"splitButton padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1162,724,25","text":"1162,725,4,77","type":"1162,724,12"}},{"$type":"param","name":"$icon-only-padding","text":"splitButton padding when an icon is present without text\n","type":"number/list","src":{"name":"1162,727,25","text":"1162,728,4,58","type":"1162,727,12"}},{"$type":"param","name":"$icon-only-padding-big","text":"splitButton padding when an icon is present without text in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1162,730,25","text":"1162,731,4,114","type":"1162,730,12"}},{"$type":"param","name":"$icon-color","text":"splitButton icon color.\n","type":"color","src":{"name":"1162,733,19","text":"1162,734,4,25","type":"1162,733,12"}},{"$type":"param","name":"$hovered-icon-color","text":"splitButton icon color when hovered.\n","type":"color","src":{"name":"1162,736,19","text":"1162,737,4,38","type":"1162,736,12"}},{"$type":"param","name":"$pressed-icon-color","text":"splitButton icon color when pressed.\n","type":"color","src":{"name":"1162,739,19","text":"1162,740,4,38","type":"1162,739,12"}},{"$type":"param","name":"$focused-icon-color","text":"splitButton icon color when focused\n","type":"color","src":{"name":"1162,742,19","text":"1162,743,4,37","type":"1162,742,12"}},{"$type":"param","name":"$disabled-icon-color","text":"splitButton icon color when disabled\n","type":"color","src":{"name":"1162,745,19","text":"1162,746,4,38","type":"1162,745,12"}},{"$type":"param","name":"$icon-size","text":"splitButton icon size.\n","type":"number","src":{"name":"1162,748,20","text":"1162,749,4,24","type":"1162,748,12"}},{"$type":"param","name":"$icon-size-big","text":"splitButton icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,751,20","text":"1162,752,4,79","type":"1162,751,12"}},{"$type":"param","name":"$icon-font-size","text":"splitButton icon font-size\n","type":"number","src":{"name":"1162,754,20","text":"1162,755,4,28","type":"1162,754,12"}},{"$type":"param","name":"$icon-font-size-big","text":"splitButton icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,757,20","text":"1162,758,4,84","type":"1162,757,12"}},{"$type":"param","name":"$icon-horizontal-spacing","text":"The space between the splitButton icon and text when the icon is horizontally aligned\n","type":"number","src":{"name":"1162,760,20","text":"1162,761,4,87","type":"1162,760,12"}},{"$type":"param","name":"$icon-horizontal-spacing-big","text":"The space between the splitButton icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,763,20","text":"1162,764,4,143","type":"1162,763,12"}},{"$type":"param","name":"$icon-vertical-spacing","text":"The space between the splitButton icon and text when the icon is vertically aligned\n","type":"number","src":{"name":"1162,767,20","text":"1162,768,4,85","type":"1162,767,12"}},{"$type":"param","name":"$icon-vertical-spacing-big","text":"The space between the splitButton icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,770,20","text":"1162,771,4,141","type":"1162,770,12"}},{"$type":"param","name":"$disabled-opacity","text":"splitButton opacity when disabled\n","type":"number","src":{"name":"1162,774,20","text":"1162,775,4,35","type":"1162,774,12"}},{"$type":"param","name":"$arrow-icon","text":"splitButton arrow icon\n","type":"string","src":{"name":"1162,777,20","text":"1162,778,4,24","type":"1162,777,12"}},{"$type":"param","name":"$arrow-icon-color","text":"splitButton arrow icon color\n","type":"color","src":{"name":"1162,780,19","text":"1162,781,4,30","type":"1162,780,12"}},{"$type":"param","name":"$hovered-arrow-icon-color","text":"splitButton arrow icon color when hovered\n","type":"color","src":{"name":"1162,783,19","text":"1162,784,4,43","type":"1162,783,12"}},{"$type":"param","name":"$pressed-arrow-icon-color","text":"splitButton arrow icon color when pressed\n","type":"color","src":{"name":"1162,786,19","text":"1162,787,4,43","type":"1162,786,12"}},{"$type":"param","name":"$focused-arrow-icon-color","text":"splitButton arrow icon color when focused\n","type":"color","src":{"name":"1162,789,19","text":"1162,790,4,43","type":"1162,789,12"}},{"$type":"param","name":"$disabled-arrow-icon-color","text":"splitButton arrow icon color when disabled\n","type":"color","src":{"name":"1162,792,19","text":"1162,793,4,44","type":"1162,792,12"}},{"$type":"param","name":"$arrow-icon-size","text":"splitButton arrow icon size\n","type":"number","src":{"name":"1162,795,20","text":"1162,796,4,29","type":"1162,795,12"}},{"$type":"param","name":"$arrow-icon-size-big","text":"splitButton arrow icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,798,20","text":"1162,799,4,85","type":"1162,798,12"}},{"$type":"param","name":"$arrow-icon-font-size","text":"splitButton arrow icon font-size\n","type":"number","src":{"name":"1162,801,20","text":"1162,802,4,34","type":"1162,801,12"}},{"$type":"param","name":"$arrow-icon-font-size-big","text":"splitButton arrow icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,804,20","text":"1162,805,4,90","type":"1162,804,12"}},{"$type":"param","name":"$arrow-horizontal-spacing","text":"The space between the splitButton arrow and text when {@link #arrowAlign} is `'right'`\n","type":"number","src":{"name":"1162,807,20","text":"1162,808,4,88","type":"1162,807,12"}},{"$type":"param","name":"$arrow-horizontal-spacing-big","text":"The space between the splitButton arrow and text when {@link #arrowAlign} is `'right'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,810,20","text":"1162,811,4,144","type":"1162,810,12"}},{"$type":"param","name":"$arrow-vertical-spacing","text":"The space between the splitButton arrow and text when {@link #arrowAlign} is `'bottom'`\n","type":"number","src":{"name":"1162,814,20","text":"1162,815,4,89","type":"1162,814,12"}},{"$type":"param","name":"$arrow-vertical-spacing-big","text":"The space between the splitButton arrow and text when {@link #arrowAlign} is `'bottom'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1162,817,20","text":"1162,818,4,145","type":"1162,817,12"}},{"$type":"param","name":"$derive-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,821,22","text":"1162,822,4,9","type":"1162,821,12","value":"1162,821,37"}},{"$type":"param","name":"$derive-border-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,824,22","text":"1162,825,4,9","type":"1162,824,12","value":"1162,824,44"}},{"$type":"param","name":"$derive-outline-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,827,22","text":"1162,828,4,9","type":"1162,827,12","value":"1162,827,45"}},{"$type":"param","name":"$derive-background-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,830,22","text":"1162,831,4,9","type":"1162,830,12","value":"1162,830,48"}},{"$type":"param","name":"$derive-background-gradients","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,833,22","text":"1162,834,4,9","type":"1162,833,12","value":"1162,833,51"}},{"$type":"param","name":"$derive-icon-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,836,22","text":"1162,837,4,9","type":"1162,836,12","value":"1162,836,42"}},{"$type":"param","name":"$derive-arrow-colors","optional":true,"text":"Private\n","type":"boolean","value":"true","src":{"name":"1162,839,22","text":"1162,840,4,8","type":"1162,839,12","value":"1162,839,43"}}],"src":{"name":"1162,842,7","text":"1162,581,4,43"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$enable-inverted-alt-splitButton","text":"Determines if styles are added to invert text and background colors for\nconfirm & decline buttons UIs when combined with the 'alt' UI\n","type":"boolean","value":"false","src":{"dynamic":"1162,16,35","name":"1162,16,1","text":"1162,13,4,134","type":"1162,12,10","value":"1162,16,43"}},{"$type":"property","name":"$splitButton-action-ui","text":"Parameters for the \"action\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,490,1","text":"1162,487,4,99","type":"1162,486,10"}},{"$type":"property","name":"$splitButton-alt-ui","text":"Parameters for the \"alt\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,499,1","text":"1162,496,4,96","type":"1162,495,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-bottom-vertical-padding","text":"Split Button arrow element vertical padding when arrow {@link #arrowAlign} is `'bottom'`\n","type":"number","value":"5px","src":{"dynamic":"1162,483,45","name":"1162,483,1","text":"1162,481,4,89","type":"1162,480,10","value":"1162,483,53"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-horizontal-padding","text":"Split Button arrow element horizontal padding\n","type":"number","value":"3px","src":{"dynamic":"1162,477,40","name":"1162,477,1","text":"1162,475,4,46","type":"1162,474,10","value":"1162,477,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-horizontal-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\n","type":"number","value":"3px","src":{"dynamic":"1162,439,40","name":"1162,439,1","text":"1162,437,4,82","type":"1162,436,10","value":"1162,439,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-horizontal-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'right'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1162,446,44","name":"1162,446,1","text":"1162,443,4,138","type":"1162,442,10","value":"1162,446,52"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon","text":"Split Button arrow icon\n","type":"string","value":"$fa-var-caret-down","src":{"dynamic":"1162,379,26","name":"1162,379,1","text":"1162,377,4,24","type":"1162,376,10","value":"1162,379,34"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon-color","text":"Split Button arrow icon color\n","type":"color","value":"$splitButton-color","src":{"dynamic":"1162,385,32","name":"1162,385,1","text":"1162,383,4,30","type":"1162,382,10","value":"1162,385,40"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon-font-size","text":"Split Button arrow icon font-size\n","type":"number","value":"null","src":{"dynamic":"1162,427,36","name":"1162,427,1","text":"1162,425,4,34","type":"1162,424,10","value":"1162,427,44"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon-font-size-big","text":"Split Button arrow icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1162,433,40","name":"1162,433,1","text":"1162,431,4,90","type":"1162,430,10","value":"1162,433,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon-size","text":"Split Button arrow icon size\n","type":"number","value":"$splitButton-line-height","src":{"dynamic":"1162,415,31","name":"1162,415,1","text":"1162,413,4,29","type":"1162,412,10","value":"1162,415,39"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-icon-size-big","text":"Split Button arrow icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$splitButton-line-height-big","src":{"dynamic":"1162,421,35","name":"1162,421,1","text":"1162,419,4,85","type":"1162,418,10","value":"1162,421,43"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-vertical-spacing","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\n","type":"number","value":"null","src":{"dynamic":"1162,452,38","name":"1162,452,1","text":"1162,450,4,83","type":"1162,449,10","value":"1162,452,46"}},{"$type":"property","dynamic":true,"name":"$splitButton-arrow-vertical-spacing-big","text":"The space between the button arrow and text when {@link #arrowAlign} is `'bottom'`\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1162,459,42","name":"1162,459,1","text":"1162,456,4,139","type":"1162,455,10","value":"1162,459,50"}},{"$type":"property","dynamic":true,"name":"$splitButton-background-color","text":"Split Button background-color\n","type":"color","value":"$neutral-light-color","src":{"dynamic":"1162,9,32","name":"1162,9,1","text":"1162,7,4,30","type":"1162,6,10","value":"1162,9,40"}},{"$type":"property","dynamic":true,"name":"$splitButton-background-gradient","text":"Split Button background-gradient.  Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-background-gradient($splitButton-background-color)","src":{"dynamic":"1162,79,35","name":"1162,79,1","text":"1162,76,4,148","type":"1162,75,10","value":"1162,79,43"}},{"$type":"property","dynamic":true,"name":"$splitButton-border-color","text":"Split Button border-color\n","type":"color/list","value":"button-border-color($splitButton-background-color)","src":{"dynamic":"1162,143,28","name":"1162,143,1","text":"1162,141,4,26","type":"1162,140,10","value":"1162,143,36"}},{"$type":"property","dynamic":true,"name":"$splitButton-border-radius","text":"Split Button border-radius\n","type":"number","value":"3px","src":{"dynamic":"1162,209,29","name":"1162,209,1","text":"1162,207,4,27","type":"1162,206,10","value":"1162,209,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-border-radius-big","text":"Split Button border-radius in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"3px","src":{"dynamic":"1162,215,33","name":"1162,215,1","text":"1162,213,4,83","type":"1162,212,10","value":"1162,215,41"}},{"$type":"property","dynamic":true,"name":"$splitButton-border-style","text":"Split Button border-style\n","type":"string/list","value":"solid","src":{"dynamic":"1162,203,28","name":"1162,203,1","text":"1162,201,4,26","type":"1162,200,10","value":"1162,203,36"}},{"$type":"property","dynamic":true,"name":"$splitButton-border-width","text":"Split Button border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1162,197,28","name":"1162,197,1","text":"1162,195,4,26","type":"1162,194,10","value":"1162,197,36"}},{"$type":"property","dynamic":true,"name":"$splitButton-bottom-vertical-padding","text":"Split Button vertical padding when {@link #arrowAlign} is `'bottom'`\n","type":"number","value":"10px","src":{"dynamic":"1162,471,39","name":"1162,471,1","text":"1162,469,4,69","type":"1162,468,10","value":"1162,471,47"}},{"$type":"property","dynamic":true,"name":"$splitButton-box-shadow","text":"Split Button box-shadow\n","type":"list","value":"null","src":{"dynamic":"1162,47,26","name":"1162,47,1","text":"1162,45,4,24","type":"1162,44,10","value":"1162,47,34"}},{"$type":"property","dynamic":true,"name":"$splitButton-color","text":"Split Button text color\n","type":"color","value":"button-color($splitButton-background-color)","src":{"dynamic":"1162,113,21","name":"1162,113,1","text":"1162,111,4,24","type":"1162,110,10","value":"1162,113,29"}},{"$type":"property","name":"$splitButton-confirm-ui","text":"Parameters for the \"confirm\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,511,1","text":"1162,508,4,100","type":"1162,507,10"}},{"$type":"property","name":"$splitButton-decline-ui","text":"Parameters for the \"decline\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,520,1","text":"1162,517,4,100","type":"1162,516,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-arrow-icon-color","text":"Split Button arrow icon color when disabled\n","type":"color","value":"$splitButton-disabled-icon-color","src":{"dynamic":"1162,409,41","name":"1162,409,1","text":"1162,407,4,44","type":"1162,406,10","value":"1162,409,49"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-background-color","text":"Split Button background-color when disabled\n","type":"color","value":"button-disabled-background-color($splitButton-background-color)","src":{"dynamic":"1162,40,41","name":"1162,40,1","text":"1162,38,4,44","type":"1162,37,10","value":"1162,40,49"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-background-gradient","text":"Split Button background-gradient when disabled.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-disabled-background-gradient($splitButton-disabled-background-color)","src":{"dynamic":"1162,107,44","name":"1162,107,1","text":"1162,104,4,162","type":"1162,103,10","value":"1162,107,52"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-border-color","text":"Split Button border-color when disabled\n","type":"color/list","value":"button-disabled-border-color($splitButton-disabled-background-color)","src":{"dynamic":"1162,167,37","name":"1162,167,1","text":"1162,165,4,40","type":"1162,164,10","value":"1162,167,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-box-shadow","text":"Split Button box-shadow when disabled\n","type":"list","value":"null","src":{"dynamic":"1162,72,35","name":"1162,72,1","text":"1162,70,4,38","type":"1162,69,10","value":"1162,72,43"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-color","text":"Split Button color when disabled\n","type":"color","value":"button-disabled-color($splitButton-disabled-background-color)","src":{"dynamic":"1162,137,30","name":"1162,137,1","text":"1162,135,4,33","type":"1162,134,10","value":"1162,137,38"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-icon-color","text":"Split Button icon color when disabled\n","type":"color","value":"$splitButton-disabled-color","src":{"dynamic":"1162,317,35","name":"1162,317,1","text":"1162,315,4,38","type":"1162,314,10","value":"1162,317,43"}},{"$type":"property","dynamic":true,"name":"$splitButton-disabled-opacity","text":"Split Button opacity when disabled\n","type":"number","value":".5","src":{"dynamic":"1162,373,32","name":"1162,373,1","text":"1162,371,4,35","type":"1162,370,10","value":"1162,373,40"}},{"$type":"property","name":"$splitButton-flat-ui","text":"Parameters for the \"flat\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,549,1","text":"1162,546,4,97","type":"1162,545,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-arrow-icon-color","text":"Split Button arrow icon color when focused\n","type":"color","value":"$splitButton-focused-icon-color","src":{"dynamic":"1162,403,40","name":"1162,403,1","text":"1162,401,4,43","type":"1162,400,10","value":"1162,403,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-background-color","text":"Split Button background-color when focused\n","type":"color","value":"button-focused-background-color($splitButton-background-color)","src":{"dynamic":"1162,34,40","name":"1162,34,1","text":"1162,32,4,43","type":"1162,31,10","value":"1162,34,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-background-gradient","text":"Split Button background-gradient when focused.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-focused-background-gradient($splitButton-focused-background-color)","src":{"dynamic":"1162,100,43","name":"1162,100,1","text":"1162,97,4,161","type":"1162,96,10","value":"1162,100,51"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-border-color","text":"Split Button border-color when focused\n","type":"color/list","value":"button-focused-border-color($splitButton-focused-background-color)","src":{"dynamic":"1162,161,36","name":"1162,161,1","text":"1162,159,4,39","type":"1162,158,10","value":"1162,161,44"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-box-shadow","text":"Split Button box-shadow when focused\n","type":"list","value":"null","src":{"dynamic":"1162,66,34","name":"1162,66,1","text":"1162,64,4,37","type":"1162,63,10","value":"1162,66,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-color","text":"Split Button text color when focused\n","type":"color","value":"button-focused-color($splitButton-focused-background-color, $splitButton-color)","src":{"dynamic":"1162,131,29","name":"1162,131,1","text":"1162,129,4,37","type":"1162,128,10","value":"1162,131,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-icon-color","text":"Split Button icon color when focused\n","type":"color","value":"$splitButton-focused-color","src":{"dynamic":"1162,311,34","name":"1162,311,1","text":"1162,309,4,37","type":"1162,308,10","value":"1162,311,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-outline-color","text":"Split Button focus outline color\n","type":"color","value":"button-focused-outline-color($splitButton-background-color, $splitButton-focused-color)","src":{"dynamic":"1162,173,37","name":"1162,173,1","text":"1162,171,4,33","type":"1162,170,10","value":"1162,173,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-outline-offset","text":"Split Button focus outline offset\n","type":"number","value":"-2px","src":{"dynamic":"1162,191,38","name":"1162,191,1","text":"1162,189,4,34","type":"1162,188,10","value":"1162,191,46"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-outline-style","text":"Split Button focus outline style\n","type":"string","value":"solid","src":{"dynamic":"1162,179,37","name":"1162,179,1","text":"1162,177,4,33","type":"1162,176,10","value":"1162,179,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-focused-outline-width","text":"Split Button focus outline width\n","type":"number","value":"1px","src":{"dynamic":"1162,185,37","name":"1162,185,1","text":"1162,183,4,33","type":"1162,182,10","value":"1162,185,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-font-family","text":"Split Button font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1162,251,27","name":"1162,251,1","text":"1162,249,4,25","type":"1162,248,10","value":"1162,251,35"}},{"$type":"property","dynamic":true,"name":"$splitButton-font-size","text":"Split Button font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1162,227,25","name":"1162,227,1","text":"1162,225,4,23","type":"1162,224,10","value":"1162,227,33"}},{"$type":"property","dynamic":true,"name":"$splitButton-font-size-big","text":"Split Button font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1162,233,29","name":"1162,233,1","text":"1162,231,4,79","type":"1162,230,10","value":"1162,233,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-font-weight","text":"Split Button font-weight\n","type":"string/number","value":"$font-weight-bold","src":{"dynamic":"1162,221,27","name":"1162,221,1","text":"1162,219,4,25","type":"1162,218,10","value":"1162,221,35"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-arrow-icon-color","text":"Split Button arrow icon color when hovered\n","type":"color","value":"$splitButton-hovered-icon-color","src":{"dynamic":"1162,391,40","name":"1162,391,1","text":"1162,389,4,43","type":"1162,388,10","value":"1162,391,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-background-color","text":"Split Button background-color when hovered\n","type":"color","value":"button-hovered-background-color($splitButton-background-color)","src":{"dynamic":"1162,22,40","name":"1162,22,1","text":"1162,20,4,43","type":"1162,19,10","value":"1162,22,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-background-gradient","text":"Split Button background-gradient when hovered.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-hovered-background-gradient($splitButton-hovered-background-color)","src":{"dynamic":"1162,86,43","name":"1162,86,1","text":"1162,83,4,161","type":"1162,82,10","value":"1162,86,51"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-border-color","text":"Split Button border-color when hovered\n","type":"color/list","value":"button-hovered-border-color($splitButton-hovered-background-color)","src":{"dynamic":"1162,149,36","name":"1162,149,1","text":"1162,147,4,39","type":"1162,146,10","value":"1162,149,44"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-box-shadow","text":"Split Button box-shadow when hovered\n","type":"list","value":"null","src":{"dynamic":"1162,53,34","name":"1162,53,1","text":"1162,51,4,37","type":"1162,50,10","value":"1162,53,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-color","text":"Split Button text color when hovered\n","type":"color","value":"button-hovered-color($splitButton-hovered-background-color, $splitButton-color)","src":{"dynamic":"1162,119,29","name":"1162,119,1","text":"1162,117,4,37","type":"1162,116,10","value":"1162,119,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-hovered-icon-color","text":"Split Button icon color when hovered.\n","type":"color","value":"$splitButton-hovered-color","src":{"dynamic":"1162,299,34","name":"1162,299,1","text":"1162,297,4,38","type":"1162,296,10","value":"1162,299,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-color","text":"Split Button icon color.\n","type":"color","value":"$splitButton-color","src":{"dynamic":"1162,293,26","name":"1162,293,1","text":"1162,291,4,25","type":"1162,290,10","value":"1162,293,34"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-font-size","text":"Split Button icon font-size\n","type":"number","value":"null","src":{"dynamic":"1162,335,30","name":"1162,335,1","text":"1162,333,4,28","type":"1162,332,10","value":"1162,335,38"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-font-size-big","text":"Split Button icon font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1162,341,34","name":"1162,341,1","text":"1162,339,4,84","type":"1162,338,10","value":"1162,341,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-horizontal-spacing","text":"The space between the button icon and text when the icon is horizontally aligned\n","type":"number","value":"5px","src":{"dynamic":"1162,347,39","name":"1162,347,1","text":"1162,345,4,81","type":"1162,344,10","value":"1162,347,47"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-horizontal-spacing-big","text":"The space between the button icon and text when the icon is horizontally aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1162,354,43","name":"1162,354,1","text":"1162,351,4,137","type":"1162,350,10","value":"1162,354,51"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-only-padding","text":"Split Button padding when an icon is present without text\n","type":"number/list","value":"nth($splitButton-padding, 1)","src":{"dynamic":"1162,281,33","name":"1162,281,1","text":"1162,279,4,58","type":"1162,278,10","value":"1162,281,41"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-only-padding-big","text":"Split Button padding when an icon is present without text in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"nth($splitButton-padding-big, 1)","src":{"dynamic":"1162,287,37","name":"1162,287,1","text":"1162,285,4,114","type":"1162,284,10","value":"1162,287,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-size","text":"Split Button icon size.\n","type":"number","value":"$splitButton-line-height","src":{"dynamic":"1162,323,25","name":"1162,323,1","text":"1162,321,4,24","type":"1162,320,10","value":"1162,323,33"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-size-big","text":"Split Button icon size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$splitButton-line-height-big","src":{"dynamic":"1162,329,29","name":"1162,329,1","text":"1162,327,4,79","type":"1162,326,10","value":"1162,329,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-vertical-spacing","text":"The space between the button icon and text when the icon is vertically aligned\n","type":"number","value":"2px","src":{"dynamic":"1162,360,37","name":"1162,360,1","text":"1162,358,4,79","type":"1162,357,10","value":"1162,360,45"}},{"$type":"property","dynamic":true,"name":"$splitButton-icon-vertical-spacing-big","text":"The space between the button icon and text when the icon is vertically aligned\nin the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"3px","src":{"dynamic":"1162,367,41","name":"1162,367,1","text":"1162,364,4,135","type":"1162,363,10","value":"1162,367,49"}},{"$type":"property","dynamic":true,"name":"$splitButton-Inner-padding","text":"Split Button padding\n","type":"number","value":"14px","src":{"dynamic":"1162,465,29","name":"1162,465,1","text":"1162,463,4,21","type":"1162,462,10","value":"1162,465,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-line-height","text":"Split Button line-height\n","type":"number","value":"16px","src":{"dynamic":"1162,239,27","name":"1162,239,1","text":"1162,237,4,25","type":"1162,236,10","value":"1162,239,35"}},{"$type":"property","dynamic":true,"name":"$splitButton-line-height-big","text":"Split Button line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"20px","src":{"dynamic":"1162,245,31","name":"1162,245,1","text":"1162,243,4,81","type":"1162,242,10","value":"1162,245,39"}},{"$type":"property","dynamic":true,"name":"$splitButton-padding","text":"Split Button padding\n","type":"number/list","value":"3px 8px","src":{"dynamic":"1162,269,23","name":"1162,269,1","text":"1162,267,4,21","type":"1162,266,10","value":"1162,269,31"}},{"$type":"property","dynamic":true,"name":"$splitButton-padding-big","text":"Split Button padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"5px 10px","src":{"dynamic":"1162,275,27","name":"1162,275,1","text":"1162,273,4,77","type":"1162,272,10","value":"1162,275,35"}},{"$type":"property","name":"$splitButton-plain-ui","text":"Parameters for the \"plain\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,559,1","text":"1162,556,4,98","type":"1162,555,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-arrow-icon-color","text":"Split Button arrow icon color when pressed\n","type":"color","value":"$splitButton-pressed-icon-color","src":{"dynamic":"1162,397,40","name":"1162,397,1","text":"1162,395,4,43","type":"1162,394,10","value":"1162,397,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-background-color","text":"Split Button background-color when pressed\n","type":"color","value":"button-pressed-background-color($splitButton-background-color)","src":{"dynamic":"1162,28,40","name":"1162,28,1","text":"1162,26,4,43","type":"1162,25,10","value":"1162,28,48"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-background-gradient","text":"Split Button background-gradient when pressed.  Can be either the name of a gradient\ndefined by {@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"button-pressed-background-gradient($splitButton-pressed-background-color)","src":{"dynamic":"1162,93,43","name":"1162,93,1","text":"1162,90,4,161","type":"1162,89,10","value":"1162,93,51"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-border-color","text":"Split Button border-color when pressed\n","type":"color/list","value":"button-pressed-border-color($splitButton-pressed-background-color)","src":{"dynamic":"1162,155,36","name":"1162,155,1","text":"1162,153,4,39","type":"1162,152,10","value":"1162,155,44"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-box-shadow","text":"Split Button box-shadow when pressed\n","type":"list","value":"null","src":{"dynamic":"1162,60,34","name":"1162,60,1","text":"1162,58,4,37","type":"1162,57,10","value":"1162,60,42"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-color","text":"Split Button text color when pressed\n","type":"color","value":"button-pressed-color($splitButton-pressed-background-color, $splitButton-color)","src":{"dynamic":"1162,125,29","name":"1162,125,1","text":"1162,123,4,37","type":"1162,122,10","value":"1162,125,37"}},{"$type":"property","dynamic":true,"name":"$splitButton-pressed-icon-color","text":"Split Button icon color when pressed.\n","type":"color","value":"$splitButton-pressed-color","src":{"dynamic":"1162,305,34","name":"1162,305,1","text":"1162,303,4,38","type":"1162,302,10","value":"1162,305,42"}},{"$type":"property","name":"$splitButton-raised-ui","text":"Parameters for the \"raised\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,576,1","text":"1162,573,4,99","type":"1162,572,10"}},{"$type":"property","name":"$splitButton-round-ui","text":"Parameters for the \"round\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,529,1","text":"1162,526,4,98","type":"1162,525,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-segmented-ui","text":"Parameters for the \"segmented\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","value":"null","src":{"dynamic":"1162,569,28","name":"1162,569,1","text":"1162,566,4,102","type":"1162,565,10","value":"1162,569,36"}},{"$type":"property","name":"$splitButton-square-ui","text":"Parameters for the \"square\" splitButton UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1162,539,1","text":"1162,536,4,99","type":"1162,535,10"}},{"$type":"property","dynamic":true,"name":"$splitButton-text-transform","text":"Split Button text-transform\n","type":"string","value":"null","src":{"dynamic":"1162,257,30","name":"1162,257,1","text":"1162,255,4,28","type":"1162,254,10","value":"1162,257,38"}},{"$type":"property","dynamic":true,"name":"$splitButton-text-transform-big","text":"Split Button text-transform in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"string","value":"$splitButton-text-transform","src":{"dynamic":"1162,263,34","name":"1162,263,1","text":"1162,261,4,84","type":"1162,260,10","value":"1162,263,42"}}]}],"src":{"alias":"428,150,0","extends":"428,149,0","name":"1162,2,11","requires":"428,153,0","text":"428,2,4,4249"},"group":"Form Fields","displayName":"Splitbutton"},{"$type":"class","alias":"widget.tabpanel","alternateClassNames":"Ext.TabPanel","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.tab.Panel","requires":"Ext.layout.Card,Ext.tab.Bar,Ext.tab.Tab","text":"Tab Panels are a great way to allow the user to switch between several\npages that are all full screen. Each\nComponent in the Tab Panel gets its own Tab, which shows the Component when tapped on.\nTabs can be positioned at the top or the bottom of the Tab Panel,\nand can optionally accept title and icon configurations\n(see {@link Ext.Button#iconCls iconCls} for additional information).\n\nHere's how we can set up a simple Tab Panel with tabs at the bottom.\nUse the controls at the top left of the example\nto toggle between code mode and live preview mode\n(you can also edit the code and see your changes in the live\npreview):\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.TabPanel', {\n    fullscreen: true,\n    tabBarPosition: 'bottom',\n\n    items: [\n        {\n            title: 'Home',\n            iconCls: 'home',\n            html: 'Home Screen'\n        },\n        {\n            title: 'Contact',\n            iconCls: 'user',\n            html: 'Contact Screen'\n        }\n    ]\n});\n```\nOne tab was created for each of the {@link Ext.Panel panels} defined in the items array.\nEach tab automatically uses the title and icon defined on the item configuration,\nand switches to that item when tapped on. We can also position\nthe tab bar at the top, which makes our Tab Panel look like this:\n\n```javascript\n@example({ framework: 'extjs' })\nExt.create('Ext.TabPanel', {\n    fullscreen: true,\n\n    items: [\n        {\n            title: 'Home',\n            html: 'Home Screen'\n        },\n        {\n            title: 'Contact',\n            html: 'Contact Screen'\n        }\n    ]\n});\n```\n\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n <ext-tabpanel\n  flex=\"1\"\n  shadow=\"true\"\n  height=\"100%\"\n  defaults='{\"cls\": \"card\",\"layout\": \"center\"}'\n >\n     <ext-panel title=\"Tab 1\" layout=\"center\">\n         <ext-container\n             flex=\"1\"\n             html=\"By default, tabs are aligned to the top of a view.\"\n         >\n         </ext-container>\n     </ext-panel>\n     <ext-panel flex=\"1\" title=\"Tab 2\" layout=\"center\">\n         <ext-container\n           flex=\"1\"\n           html=\n             \"A TabPanel can use different animations by setting <code>layout.animation.</code>\"\n         >\n         </ext-container>\n     </ext-panel>\n     <ext-panel title=\"Tab 3\" layout=\"center\">\n         <ext-container cls=\"action\" html=\"User tapped Tab 3\"></ext-container>\n     </ext-panel>\n </ext-tabpanel>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\nimport '@sencha/ext-web-components/dist/ext-container.component';\nimport '@sencha/ext-web-components/dist/ext-tabpanel.component';\n\nexport default class PanelComponent {}\n```\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react'\nimport { ExtContainer, ExtTabPanel } from '@sencha/ext-react';\n\nexport default class MyExample extends Component {\n    render() {\n        return (\n            <ExtTabPanel>\n                <ExtContainer title=\"Tab 1\">\n                    This is content for Tab 1!\n                </ExtContainer>\n                <ExtContainer title=\"Tab 2\">\n                    This is content for Tab 2!\n                </ExtContainer>\n                <ExtContainer title=\"Tab 3\">\n                    This is content for Tab 3!\n                </ExtContainer>\n            </ExtTabPanel>\n        )\n    }\n}\n```\n\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\nimport { Component } from '@angular/core'\ndeclare var Ext: any;\n\n@Component({\n    selector: 'app-root-1',\n    styles: [`\n            `],\n    template: `\n            <ExtTabPanel shadow=\"true\">\n                <ExtContainer [title]=\"'Tab 1'\">\n                    This is content for Tab 1!\n                </ExtContainer>\n                <ExtContainer [title]=\"'Tab 2'\">\n                    This is content for Tab 2!\n                </ExtContainer>\n                <ExtContainer [title]=\"'Tab 3'\">\n                    This is content for Tab 3!\n                </ExtContainer>\n            </ExtTabPanel>\n            `\n})\nexport class AppComponent {\n}\n```\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"autoOrientAnimation","text":"Determines whether the slide animation should be automatically oriented depending on the\nTabBar position. When position is 'top' or 'bottom' it will slide left and when\nposition is 'left' or 'right' it will slide up\n","type":"Boolean","value":"null","src":{"accessor":"670,164,12","name":"670,160,27","text":"670,161,12,216","type":"670,160,18","value":"670,166,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"cls","text":"The CSS class to add to this widget's element, in\naddition to the {@link #baseCls}. In many cases, this property will be specified\nby the derived widget class. See {@link #userCls} for adding additional CSS\nclasses to widget instances (such as items in a {@link Ext.Container}).\n","type":"String/String[]","value":"Ext.baseCSSPrefix + 'tabpanel'","src":{"accessor":"670,206,0","inheritdoc":"670,204,12","name":"670,203,17","text":"18,215,39,50:18,216,12,229","type":"18,215,18","value":"670,206,0"}},{"$type":"property","accessor":true,"inheritdoc":true,"name":"layout","text":"Configuration for this Container's layout. Example:\n\n    @example\n    Ext.create({\n        xtype: 'container',\n        layout: {\n            type: 'hbox',\n            align: 'middle'\n        },\n        items: [{\n            xtype: 'panel',\n            flex: 1,\n            bodyStyle: {\n                background: \"#000\",\n                color:\"#fff\"\n            }\n        }, {\n           xtype: 'panel',\n           flex: 2,\n           bodyStyle: {\n               background: \"#f00\",\n               color:\"#fff\"\n           }\n        }]\n    });\n","type":"Object/String","value":"{\n    type: 'card',\n    animation: {\n        type: 'slide'\n    }\n}","src":{"accessor":"670,195,0","inheritdoc":"670,193,12","name":"670,192,17","text":"411,231,40,52:411,232,12,493","type":"411,231,18","value":"670,195,0"}},{"$type":"property","name":"scroll","type":"Boolean/String/Object","src":{"name":"670,215,41","type":"670,215,18"}},{"$type":"property","accessor":true,"hide":true,"name":"scrollable","type":"Boolean/String/Object","src":{"accessor":"670,210,12","hide":"670,211,12","name":"670,209,41","type":"670,209,18"}},{"$type":"property","accessor":true,"name":"tabBar","text":"An Ext.tab.Bar configuration.\n","type":"Object","value":"true","src":{"accessor":"670,171,12","name":"670,169,26","text":"670,170,12,30","type":"670,169,18","value":"670,173,0"}},{"$type":"property","accessor":true,"name":"tabBarPosition","text":"The docked position for the {@link #tabBar} instance.\nPossible values are 'top', 'bottom', 'left' and 'right'.\n","type":"String","value":"'top'","src":{"accessor":"670,179,12","name":"670,176,26","text":"670,177,12,111","type":"670,176,18","value":"670,181,0"}},{"$type":"property","accessor":true,"name":"tabRotation","text":"Specifies tab rotation. Possible values are 'default', 'left',\n'none', 'right'.\n","type":"String","value":"\"default\"","src":{"accessor":"670,187,12","name":"670,184,26","text":"670,185,12,80","type":"670,184,18","value":"670,189,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyScrollable","text":"Tab panels should not be scrollable. Instead, you should add scrollable to any item that\nyou want to scroll.\n","items":[{"$type":"return","type":"Boolean","src":{"type":"670,247,0"}}],"src":{"access":"670,244,8","name":"670,246,0","text":"670,242,8,109"}},{"$type":"method","access":"private","name":"applyTabBar","text":"Creates a new {@link Ext.tab.Bar} instance using {@link Ext#factory}.\n","items":[{"$type":"param","name":"config","type":"Object","src":{"name":"670,326,24","type":"670,326,16"}},{"$type":"return","type":"Object","src":{"type":"670,327,17"}}],"src":{"access":"670,328,8","name":"670,330,0","text":"670,325,8,70"}},{"$type":"method","name":"doTabChange","text":"Updates this container with the new active item.\n","items":[{"$type":"param","name":"tabBar","type":"Object","src":{"name":"670,310,24","type":"670,310,16"}},{"$type":"param","name":"newTab","type":"Object","src":{"name":"670,311,24","type":"670,311,16"}},{"$type":"return","type":"Boolean","src":{"type":"670,312,17"}}],"src":{"name":"670,314,0","text":"670,309,8,49"}},{"$type":"method","access":"private","name":"onItemDisabledChange","text":"If an item gets enabled/disabled and it has an tab, we should also enable/disable that tab\n","items":[{"$type":"param","name":"item","src":{"name":"670,507,0"}},{"$type":"param","name":"newDisabled","src":{"name":"670,507,0"}}],"src":{"access":"670,505,8","name":"670,507,0","text":"670,504,8,91"}},{"$type":"method","access":"private","disable":"2125","name":"updateActiveItem","items":[{"$type":"param","name":"newActiveItem","src":{"name":"670,276,0"}},{"$type":"param","name":"oldActiveItem","src":{"name":"670,276,0"}}],"src":{"access":"670,274,8","disable":"670,291,0","name":"670,276,0"}},{"$type":"method","access":"private","name":"updateTabBar","text":"Adds the new {@link Ext.tab.Bar} instance into this container.\n","items":[{"$type":"param","name":"tabBar","src":{"name":"670,363,0"}},{"$type":"param","name":"oldTabBar","src":{"name":"670,363,0"}}],"src":{"access":"670,361,8","name":"670,363,0","text":"670,360,8,63"}},{"$type":"method","access":"private","name":"updateTabBarPosition","text":"Updates the docked position of the {@link #tabBar}.\n","items":[{"$type":"param","name":"position","src":{"name":"670,400,0"}}],"src":{"access":"670,398,8","name":"670,400,0","text":"670,397,8,52"}},{"$type":"method","name":"updateUi","text":"Updates the Ui for this component and the {@link #tabBar}.\n","items":[{"$type":"param","name":"ui","src":{"name":"670,261,0"}},{"$type":"param","name":"oldUi","src":{"name":"670,261,0"}}],"src":{"name":"670,261,0","text":"670,259,8,59"}}]}],"src":{"alias":"670,147,0","alternateClassNames":"670,148,0","extends":"670,146,0","name":"670,145,0","requires":"670,152,0:670,153,0:670,154,0","text":"670,2,4,4171"},"group":"Container","displayName":"Tab Panel"},{"$type":"class","alias":"widget.toolbar","extended":"Ext.Container,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extenders":"Ext.BreadcrumbBar,Ext.grid.PagingToolbar,Ext.tab.Bar","extends":"Ext.Container","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Container,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.FocusableContainer,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.mixin.Queryable,Ext.state.Stateful","name":"Ext.Toolbar","requires":"Ext.Button,Ext.Title,Ext.Spacer,Ext.layout.Box","text":"{@link Ext.Toolbar}s are most commonly used as docked items as within a {@link Ext.Container}.\nThey can be docked either `{@link #cfg!top top}` or `{@link #cfg!bottom bottom}` using the {@link #docked} configuration.\n\nThey allow you to insert items (normally {@link Ext.Button buttons}) and also add a\n{@link #title}.\n\nThe {@link #defaultType} of {@link Ext.Toolbar} is {@link Ext.Button}.\n\nYou can alternatively use {@link Ext.TitleBar} if you want the title to automatically adjust the\nsize of its items.\n\n## Examples\n\n```javascript\n@example({ framework: 'extjs' })\n    Ext.create('Ext.Container', {\n        fullscreen: true,\n        layout: {\n            type: 'vbox',\n            pack: 'center'\n        },\n        items: [\n            {\n                xtype : 'toolbar',\n                docked: 'top',\n                title: 'My Toolbar'\n            },\n            {\n                xtype: 'container',\n                defaults: {\n                    xtype: 'button',\n                    margin: '10 10 0 10'\n                },\n                items: [\n                    {\n                        text: 'Toggle docked',\n                        handler: function() {\n                            var toolbar = Ext.ComponentQuery.query('toolbar')[0],\n                                newDocked = (toolbar.getDocked() === 'top') ? 'bottom' : 'top';\n\n                            toolbar.setDocked(newDocked);\n                        }\n                    },\n                    {\n                        text: 'Toggle UI',\n                        handler: function() {\n                            var toolbar = Ext.ComponentQuery.query('toolbar')[0],\n                                newUi = (toolbar.getUi() === 'light') ? 'dark' : 'light';\n\n                            toolbar.setUi(newUi);\n                        }\n                    },\n                    {\n                        text: 'Change title',\n                        handler: function() {\n                            var toolbar = Ext.ComponentQuery.query('toolbar')[0],\n                                titles = ['My Toolbar', 'Ext.Toolbar',\n                                         'Configurations are awesome!', 'Beautiful.'],\n                                  // internally, the title configuration gets converted into a\n                                  // {@link Ext.Title} component,\n                                  // so you must get the title configuration of that component\n                                title = toolbar.getTitle().getTitle(),\n                                newTitle = titles[titles.indexOf(title) + 1] || titles[0];\n\n                            toolbar.setTitle(newTitle);\n                        }\n                    }\n                ]\n            }\n        ]\n    });\n```\n\n```html\n@example({framework: 'ext-web-components', packages:['ext-web-components'], tab: 1 })\n<ext-panel shadow bodyPadding=0>\n    <ext-toolbar docked=\"top\">\n        <ext-button text=\"Default\" badgeText=\"2\">\n        </ext-button>\n        <ext-spacer>\n            <ext-segmentedbutton>\n                <ext-button text=\"Option 1\" pressed></ext-button>\n                <ext-button text=\"Option 2\"></ext-button>\n            </ext-segmentedbutton>\n        </ext-spacer>\n        <ext-button ui=\"action\" text=\"Action\">\n        </ext-button>\n    </ext-toolbar>\n    Some Text!\n</ext-panel>\n```\n```javascript\n@example({framework: 'ext-web-components', tab: 2, packages: ['ext-web-components']})\n\nimport '@sencha/ext-web-components/dist/ext-toolbar.component';\nimport '@sencha/ext-web-components/dist/ext-button.component';\nimport '@sencha/ext-web-components/dist/ext-spacer.component';\nimport '@sencha/ext-web-components/dist/ext-segmentedbutton.component';\nimport '@sencha/ext-web-components/dist/ext-panel.component';\n\nexport default class ToolbarComponent {}\n```\n\n```javascript\n@example({framework: 'ext-react', packages:['ext-react']})\nimport React, { Component } from 'react';\nimport { ExtToolbar, ExtPanel, ExtButton, ExtSegmentedButton, ExtSpacer, ExtSearchField }\n   from '@sencha/ext-react';\n\n export default class MyExample extends Component {\n     render() {\n         return (\n             <ExtPanel shadow bodyPadding={0}>\n                 <ExtToolbar docked=\"top\">\n                     <ExtButton text=\"Default\" badgeText=\"2\"/>\n                     <ExtSpacer/>\n                     <ExtSegmentedButton>\n                         <ExtButton text=\"Option 1\" pressed/>\n                         <ExtButton text=\"Option 2\"/>\n                     </ExtSegmentedButton>\n                     <ExtSpacer/>\n                     <ExtButton ui=\"action\" text=\"Action\"/>\n                 </ExtToolbar>\n                Some Text!\n             </ExtPanel>\n         )\n     }\n }\n```\n\n```javascript\n@example({framework: 'ext-angular', packages:['ext-angular']})\n import { Component } from '@angular/core'\n declare var Ext: any;\n\n @Component({\n     selector: 'app-root-1',\n     styles: [`\n             `],\n     template: `\n         <ExtToolBar docked=\"top\">\n             <ExtButton text=\"Default\" badgeText=\"2\"></ExtButton>\n             <ExtSpacer></ExtSpacer>\n             <ExtSegmentedButton>\n                 <ExtButton text=\"Option 1\" pressed=\"true\"></ExtButton>\n                 <ExtButton text=\"Option 2\"></ExtButton>\n             </ExtSegmentedButton>\n             <ExtSpacer> </ExtSpacer>\n             <ExtButton ui=\"action\" text=\"Action\"></ExtButton>\n         </ExtToolBar>\n             `\n })\n export class AppComponent {\n }\n```\n## Notes\n\nYou must use a HTML5 doctype for {@link #docked} `{@link #cfg!bottom bottom}` to work. To do this, simply add the\nfollowing code to the HTML file:\n\n    <!doctype html>\n\nSo your index.html file should look a little like this:\n\n    <!doctype html>\n    <html>\n        <head>\n            <title>MY application title</title>\n            ...\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"defaultButtonUI","text":"A default {@link Ext.Component#ui ui} to use for {@link Ext.Button Button} items.\n","type":"String","value":"null","src":{"accessor":"434,208,0","name":"434,208,0","text":"434,206,12,82","type":"434,205,18","value":"434,208,0"}},{"$type":"property","accessor":true,"name":"defaultType","text":"The default xtype to create.\n","type":"String","value":"'button'","src":{"accessor":"434,200,12","name":"434,198,26","text":"434,199,12,29","type":"434,198,18","value":"434,202,0"}},{"$type":"property","accessor":true,"name":"docked","text":"The docked position for this {@link Ext.Toolbar}.\nIf you specify `{@link #cfg!left left}` or `{@link #cfg!right right}`, the {@link #layout} configuration will automatically\nchange to a `vbox`. It's also recommended to adjust the {@link #width} of the toolbar if\nyou do this.\n","type":"String","src":{"accessor":"434,216,12","name":"434,211,26","text":"434,212,12,239","type":"434,211,18"}},{"$type":"property","accessor":true,"name":"layout","text":"Configuration for this Container's layout. Example:\n\n    Ext.create('Ext.Container', {\n        layout: {\n            type: 'hbox',\n            align: 'middle'\n        },\n        items: [\n            {\n                xtype: 'panel',\n                flex: 1,\n                style: 'background-color: red;'\n            },\n            {\n                xtype: 'panel',\n                flex: 2,\n                style: 'background-color: green'\n            }\n        ]\n    });\n\n__Note:__ If you set the {@link #docked} configuration to `{@link #cfg!left left}` or `{@link #cfg!right right}`, the default\nlayout will change from the `hbox` to a `vbox`.\n","type":"Object/String","value":"{\n    type: 'box',\n    align: 'center'\n}","src":{"accessor":"434,251,12","name":"434,227,33","text":"434,227,40,52:434,228,12,560","type":"434,227,18","value":"434,253,0"}},{"$type":"property","accessor":true,"name":"minHeight","text":"The minimum height height of the Toolbar.\n","type":"Number/String","value":"null","src":{"accessor":"434,222,12","name":"434,220,33","text":"434,221,12,42","type":"434,220,18","value":"434,224,0"}},{"$type":"property","accessor":true,"name":"title","text":"The title of the toolbar.\n","type":"String/Ext.Title","value":"null","src":{"accessor":"434,193,12","name":"434,191,36","text":"434,192,12,26","type":"434,191,18","value":"434,195,0"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"applyTitle","items":[{"$type":"param","name":"title","src":{"name":"434,288,0"}}],"src":{"access":"434,286,8","name":"434,288,0"}},{"$type":"method","name":"getTitle","text":"Returns an {@link Ext.Title} component.\n","items":[{"$type":"return","type":"Ext.Title","src":{"type":"434,338,17"}}],"src":{"name":"434,337,16","text":"434,335,8,40"}},{"$type":"method","name":"hideTitle","text":"Hides the title, if it exists.\n","src":{"name":"434,326,0","text":"434,324,8,31"}},{"$type":"method","name":"setTitle","text":"Use this to update the {@link #title} configuration.\n","items":[{"$type":"param","name":"title","text":"You can either pass a String, or a config/instance of\n{@link Ext.Title}.\n","type":"String/Ext.Title","src":{"name":"434,345,34","text":"434,345,40,54:434,346,8,19","type":"434,345,16"}}],"src":{"name":"434,344,16","text":"434,342,8,53"}},{"$type":"method","name":"showTitle","text":"Shows the title, if it exists.\n","src":{"name":"434,315,0","text":"434,313,8,31"}},{"$type":"method","access":"private","name":"updateTitle","items":[{"$type":"param","name":"newTitle","src":{"name":"434,302,0"}},{"$type":"param","name":"oldTitle","src":{"name":"434,302,0"}}],"src":{"access":"434,300,8","name":"434,302,0"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"isToolbar","value":"true","src":{"access":"434,185,8","name":"434,187,0","value":"434,187,0"}}]},{"$type":"sass-mixins","items":[{"$type":"method","name":"toolbar-ui","text":"Creates a visual theme for a Toolbar.\n","items":[{"$type":"param","name":"$ui","text":"The name of the UI being created. Can not included spaces or special punctuation\n(used in CSS class names).\n","type":"string","src":{"name":"1165,190,20","text":"1165,191,4,109","type":"1165,190,12"}},{"$type":"param","access":"protected","name":"$xtype","optional":true,"text":"The {@link Ext.Class#xtype} to use\nin CSS selectors.  For use by UI mixins of derived classes.\n","type":"String","value":"toolbar","src":{"access":"1165,194,38","name":"1165,194,21","text":"1165,194,49,35:1165,195,4,61","type":"1165,194,12","value":"1165,194,28"}},{"$type":"param","name":"$background-color","text":"Toolbar background-color\n","type":"color","src":{"name":"1165,197,19","text":"1165,198,4,26","type":"1165,197,12"}},{"$type":"param","name":"$background-gradient","text":"Toolbar background-gradient. Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","src":{"name":"1165,200,25","text":"1165,201,4,143","type":"1165,200,12"}},{"$type":"param","name":"$color","text":"Toolbar color\n","type":"color","src":{"name":"1165,204,19","text":"1165,205,4,15","type":"1165,204,12"}},{"$type":"param","name":"$border-width","text":"Toolbar border-width\n","type":"number/list","src":{"name":"1165,207,25","text":"1165,208,4,22","type":"1165,207,12"}},{"$type":"param","name":"$border-style","text":"Toolbar border-style\n","type":"string/list","src":{"name":"1165,210,25","text":"1165,211,4,22","type":"1165,210,12"}},{"$type":"param","name":"$border-color","text":"Toolbar border-color\n","type":"color","src":{"name":"1165,213,19","text":"1165,214,4,22","type":"1165,213,12"}},{"$type":"param","name":"$box-shadow","text":"Toolbar box-shadow\n","type":"color","src":{"name":"1165,216,19","text":"1165,217,4,20","type":"1165,216,12"}},{"$type":"param","name":"$font-weight","text":"Toolbar font-weight\n","type":"string/number","src":{"name":"1165,219,27","text":"1165,220,4,21","type":"1165,219,12"}},{"$type":"param","name":"$font-size","text":"Toolbar font-size\n","type":"number","src":{"name":"1165,222,20","text":"1165,223,4,19","type":"1165,222,12"}},{"$type":"param","name":"$font-size-big","text":"Toolbar font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,225,20","text":"1165,226,4,75","type":"1165,225,12"}},{"$type":"param","name":"$line-height","text":"Toolbar line-height\n","type":"number","src":{"name":"1165,228,20","text":"1165,229,4,21","type":"1165,228,12"}},{"$type":"param","name":"$line-height-big","text":"Toolbar line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,231,20","text":"1165,232,4,77","type":"1165,231,12"}},{"$type":"param","name":"$font-family","text":"Toolbar font-family\n","type":"string","src":{"name":"1165,234,20","text":"1165,235,4,21","type":"1165,234,12"}},{"$type":"param","name":"$padding","text":"Toolbar padding\n","type":"number/list","src":{"name":"1165,237,25","text":"1165,238,4,17","type":"1165,237,12"}},{"$type":"param","name":"$padding-big","text":"Toolbar padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","src":{"name":"1165,240,25","text":"1165,241,4,73","type":"1165,240,12"}},{"$type":"param","name":"$horizontal-spacing","text":"The space in between horizontally aligned Toolbar items\n","type":"number","src":{"name":"1165,243,20","text":"1165,244,4,57","type":"1165,243,12"}},{"$type":"param","name":"$horizontal-spacing-big","text":"The space in between horizontally aligned Toolbar items in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,246,20","text":"1165,247,4,113","type":"1165,246,12"}},{"$type":"param","name":"$vertical-spacing","text":"The space in between vertically aligned Toolbar items\n","type":"number","src":{"name":"1165,250,20","text":"1165,251,4,55","type":"1165,250,12"}},{"$type":"param","name":"$vertical-spacing-big","text":"The space in between vertically aligned Toolbar items in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,253,20","text":"1165,254,4,111","type":"1165,253,12"}},{"$type":"param","name":"$title-color","text":"Toolbar {@link Ext.Title Title} color\n","type":"color","src":{"name":"1165,257,19","text":"1165,258,4,39","type":"1165,257,12"}},{"$type":"param","name":"$title-font-weight","text":"Toolbar {@link Ext.Title Title} font-weight\n","type":"string/number","src":{"name":"1165,260,27","text":"1165,261,4,45","type":"1165,260,12"}},{"$type":"param","name":"$title-font-size","text":"Toolbar {@link Ext.Title Title} font-size\n","type":"number","src":{"name":"1165,263,20","text":"1165,264,4,43","type":"1165,263,12"}},{"$type":"param","name":"$title-font-size-big","text":"Toolbar {@link Ext.Title Title} font-size in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,266,20","text":"1165,267,4,99","type":"1165,266,12"}},{"$type":"param","name":"$title-padding","text":"Toolbar {@link Ext.Title Title} padding\n","type":"number","src":{"name":"1165,270,20","text":"1165,271,4,41","type":"1165,270,12"}},{"$type":"param","name":"$title-padding-big","text":"Toolbar {@link Ext.Title Title} padding in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,273,20","text":"1165,274,4,97","type":"1165,273,12"}},{"$type":"param","name":"$title-font-family","text":"Toolbar {@link Ext.Title Title} font-family\n","type":"string","src":{"name":"1165,277,20","text":"1165,278,4,45","type":"1165,277,12"}},{"$type":"param","name":"$min-height","text":"Toolbar min-height\n","type":"number","src":{"name":"1165,280,20","text":"1165,281,4,20","type":"1165,280,12"}},{"$type":"param","name":"$min-height-big","text":"Toolbar min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","src":{"name":"1165,283,20","text":"1165,284,4,75","type":"1165,283,12"}}],"src":{"name":"1165,286,7","text":"1165,188,4,39"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$toolbar-background-color","text":"Toolbar background-color\n","type":"color","value":"$background-color","src":{"dynamic":"1165,9,28","name":"1165,9,1","text":"1165,7,4,25","type":"1165,6,10","value":"1165,9,36"}},{"$type":"property","dynamic":true,"name":"$toolbar-background-gradient","text":"Toolbar background-gradient. Can be either the name of a gradient defined by\n{@link Global_CSS#background-gradient} or a list of color stops.\n","type":"string/list","value":"null","src":{"dynamic":"1165,16,31","name":"1165,16,1","text":"1165,13,4,142","type":"1165,12,10","value":"1165,16,39"}},{"$type":"property","dynamic":true,"name":"$toolbar-border-color","text":"Toolbar border-color\n","type":"color/list","value":"$neutral-medium-dark-color","src":{"dynamic":"1165,40,24","name":"1165,40,1","text":"1165,38,4,21","type":"1165,37,10","value":"1165,40,32"}},{"$type":"property","dynamic":true,"name":"$toolbar-border-style","text":"Toolbar border-style\n","type":"string/list","value":"solid","src":{"dynamic":"1165,34,24","name":"1165,34,1","text":"1165,32,4,21","type":"1165,31,10","value":"1165,34,32"}},{"$type":"property","dynamic":true,"name":"$toolbar-border-width","text":"Toolbar border-width\n","type":"number/list","value":"1px","src":{"dynamic":"1165,28,24","name":"1165,28,1","text":"1165,26,4,21","type":"1165,25,10","value":"1165,28,32"}},{"$type":"property","dynamic":true,"name":"$toolbar-box-shadow","text":"Toolbar box-shadow\n","type":"list","value":"null","src":{"dynamic":"1165,46,22","name":"1165,46,1","text":"1165,44,4,19","type":"1165,43,10","value":"1165,46,30"}},{"$type":"property","dynamic":true,"name":"$toolbar-color","text":"Toolbar color\n","type":"color","value":"$color","src":{"dynamic":"1165,22,17","name":"1165,22,1","text":"1165,20,4,14","type":"1165,19,10","value":"1165,22,25"}},{"$type":"property","dynamic":true,"name":"$toolbar-font-family","text":"Toolbar font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1165,82,23","name":"1165,82,1","text":"1165,80,4,20","type":"1165,79,10","value":"1165,82,31"}},{"$type":"property","dynamic":true,"name":"$toolbar-font-size","text":"Toolbar font-size\n","type":"number","value":"$font-size","src":{"dynamic":"1165,58,21","name":"1165,58,1","text":"1165,56,4,18","type":"1165,55,10","value":"1165,58,29"}},{"$type":"property","dynamic":true,"name":"$toolbar-font-size-big","text":"Toolbar font-size in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$font-size-big","src":{"dynamic":"1165,64,25","name":"1165,64,1","text":"1165,62,4,74","type":"1165,61,10","value":"1165,64,33"}},{"$type":"property","dynamic":true,"name":"$toolbar-font-weight","text":"Toolbar font-weight\n","type":"string/number","value":"$font-weight-bold","src":{"dynamic":"1165,52,23","name":"1165,52,1","text":"1165,50,4,20","type":"1165,49,10","value":"1165,52,31"}},{"$type":"property","name":"$toolbar-footer-ui","text":"Parameters for the \"footer\" toolbar UI.\nSet to `null` to eliminate the UI from the CSS output.\n","type":"map","src":{"name":"1165,183,1","text":"1165,180,4,95","type":"1165,179,10"}},{"$type":"property","dynamic":true,"name":"$toolbar-horizontal-spacing","text":"The space in between horizontally aligned Toolbar items\n","type":"number","value":"8px","src":{"dynamic":"1165,100,30","name":"1165,100,1","text":"1165,98,4,56","type":"1165,97,10","value":"1165,100,38"}},{"$type":"property","dynamic":true,"name":"$toolbar-horizontal-spacing-big","text":"The space in between horizontally aligned Toolbar items in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"10px","src":{"dynamic":"1165,107,34","name":"1165,107,1","text":"1165,104,4,112","type":"1165,103,10","value":"1165,107,42"}},{"$type":"property","dynamic":true,"name":"$toolbar-line-height","text":"Toolbar line-height\n","type":"number","value":"16px","src":{"dynamic":"1165,70,23","name":"1165,70,1","text":"1165,68,4,20","type":"1165,67,10","value":"1165,70,31"}},{"$type":"property","dynamic":true,"name":"$toolbar-line-height-big","text":"Toolbar line-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1165,76,27","name":"1165,76,1","text":"1165,74,4,76","type":"1165,73,10","value":"1165,76,35"}},{"$type":"property","dynamic":true,"name":"$toolbar-min-height","text":"Toolbar min-height\n","type":"number","value":"36px","src":{"dynamic":"1165,170,22","name":"1165,170,1","text":"1165,168,4,19","type":"1165,167,10","value":"1165,170,30"}},{"$type":"property","dynamic":true,"name":"$toolbar-min-height-big","text":"Toolbar min-height in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"44px","src":{"dynamic":"1165,176,26","name":"1165,176,1","text":"1165,174,4,75","type":"1165,173,10","value":"1165,176,34"}},{"$type":"property","dynamic":true,"name":"$toolbar-padding","text":"Toolbar padding\n","type":"number/list","value":"6px 8px","src":{"dynamic":"1165,88,19","name":"1165,88,1","text":"1165,86,4,16","type":"1165,85,10","value":"1165,88,27"}},{"$type":"property","dynamic":true,"name":"$toolbar-padding-big","text":"Toolbar padding in the {@link Global_CSS#$enable-big big} sizing scheme\n","type":"number/list","value":"6px 10px","src":{"dynamic":"1165,94,23","name":"1165,94,1","text":"1165,92,4,72","type":"1165,91,10","value":"1165,94,31"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-color","text":"Toolbar {@link Ext.Title Title} color\n","type":"color","value":"$highlight-color","src":{"dynamic":"1165,126,23","name":"1165,126,1","text":"1165,124,4,38","type":"1165,123,10","value":"1165,126,31"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-font-family","text":"Toolbar {@link Ext.Title Title} font-family\n","type":"string","value":"$font-family","src":{"dynamic":"1165,151,29","name":"1165,151,1","text":"1165,149,4,44","type":"1165,148,10","value":"1165,151,37"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-font-size","text":"Toolbar {@link Ext.Title Title} font-size\n","type":"number","value":"$toolbar-font-size","src":{"dynamic":"1165,138,27","name":"1165,138,1","text":"1165,136,4,42","type":"1165,135,10","value":"1165,138,35"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-font-size-big","text":"Toolbar {@link Ext.Title Title} font-size in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"$toolbar-font-size-big","src":{"dynamic":"1165,145,31","name":"1165,145,1","text":"1165,142,4,98","type":"1165,141,10","value":"1165,145,39"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-font-weight","text":"Toolbar {@link Ext.Title Title} font-weight\n","type":"string/number","value":"$toolbar-font-weight","src":{"dynamic":"1165,132,29","name":"1165,132,1","text":"1165,130,4,44","type":"1165,129,10","value":"1165,132,37"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-padding","text":"Toolbar {@link Ext.Title Title} title-padding\n","type":"number","value":"null","src":{"dynamic":"1165,157,25","name":"1165,157,1","text":"1165,155,4,46","type":"1165,154,10","value":"1165,157,33"}},{"$type":"property","dynamic":true,"name":"$toolbar-title-padding-big","text":"Toolbar {@link Ext.Title Title} title-padding in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"null","src":{"dynamic":"1165,164,29","name":"1165,164,1","text":"1165,161,4,102","type":"1165,160,10","value":"1165,164,37"}},{"$type":"property","dynamic":true,"name":"$toolbar-vertical-spacing","text":"The space in between vertically aligned Toolbar items\n","type":"number","value":"6px","src":{"dynamic":"1165,113,28","name":"1165,113,1","text":"1165,111,4,54","type":"1165,110,10","value":"1165,113,36"}},{"$type":"property","dynamic":true,"name":"$toolbar-vertical-spacing-big","text":"The space in between vertically aligned Toolbar items in the\n{@link Global_CSS#$enable-big big} sizing scheme\n","type":"number","value":"8px","src":{"dynamic":"1165,120,32","name":"1165,120,1","text":"1165,117,4,110","type":"1165,116,10","value":"1165,120,40"}}]}],"src":{"alias":"434,175,0","extends":"434,174,0","name":"1165,2,11","requires":"434,178,0:434,179,0:434,180,0:434,181,0","text":"434,2,4,2159:434,60,2,256:434,63,4,3371"},"group":"Other Components","displayName":"Toolbar"},{"$type":"class","alias":"widget.video","extended":"Ext.Media,Ext.Component,Ext.Widget,Ext.Evented,Ext.Base","extends":"Ext.Media","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable,Ext.state.Stateful","name":"Ext.Video","text":"Provides a simple Container for HTML5 Video.\n\n## Notes\n\n- There are quite a few issues with the `<video>` tag on Android devices. On Android 2+,\n  the video will appear and play on first attempt, but any attempt afterwards will not work.\n\n## Useful Properties\n\n- {@link #url}\n- {@link #autoPause}\n- {@link #autoResume}\n\n## Useful Methods\n\n- {@link #method-pause}\n- {@link #method-play}\n- {@link #toggle}\n\n## Example\n\n    var panel = Ext.create('Ext.Panel', {\n        fullscreen: true,\n        layout: 'fit',\n        items: [\n            {\n                xtype    : 'video',\n                url      : 'porsche911.mov',\n                posterUrl: 'porsche.png'\n            }\n        ]\n    });\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"posterUrl","text":"Location of a poster image to be shown before showing the video.\n","type":"String","value":"null","src":{"accessor":"435,49,12","name":"435,47,26","text":"435,48,12,65","type":"435,47,18","value":"435,51,0"}},{"$type":"property","accessor":true,"name":"showPosterOnPause","optional":true,"since":"6.5.0","text":"When paused, the {@link #posterUrl}\nwill be shown. If set to `false`, the poster will not be shown when the video\nis paused.\n\nShowing a poster may save on device resources as the `<video>` element is\nresource intensive whereas the `<img>` is not as intensive. Not showing a poster\nmay slow down parts of the application including scrolling as the device is\nrepainting the screen.\n","type":"Boolean","value":"true","src":{"accessor":"435,65,0","name":"435,54,28","since":"435,63,19","text":"435,54,52,36:435,55,12,345","type":"435,54,18","value":"435,54,46"}},{"$type":"property","accessor":true,"name":"url","text":"Location of the video to play. This should be in H.264 format and in a .mov file format.\n","type":"String/Array","src":{"accessor":"435,43,12","name":"435,41,32","text":"435,42,12,89","type":"435,41,18"}}]},{"$type":"methods","items":[{"$type":"method","access":"private","name":"onGhostTap","text":"Called when the {@link #ghost} element is tapped.\n","src":{"access":"435,144,8","name":"435,147,0","text":"435,145,8,50"}},{"$type":"method","access":"private","name":"onPause","text":"native video tag display only, move the media down so we can control the Viewport\n","items":[{"$type":"param","name":"e","src":{"name":"435,161,0"}}],"src":{"access":"435,158,8","name":"435,161,0","text":"435,159,8,82"}},{"$type":"method","access":"private","name":"onPlay","text":"native video tag display only, move the media down so we can control the Viewport\n","items":[{"$type":"param","name":"e","src":{"name":"435,176,0"}}],"src":{"access":"435,173,8","name":"435,176,0","text":"435,174,8,82"}},{"$type":"method","name":"updatePosterUrl","text":"Updates the URL to the poster, even if it is rendered.\n","items":[{"$type":"param","name":"newUrl","type":"Object","src":{"name":"435,184,24","type":"435,184,16"}}],"src":{"name":"435,186,0","text":"435,183,8,55"}}]},{"$type":"properties","items":[{"$type":"property","access":"private","name":"ghost","type":"Ext.dom.Element","value":"'ghost'","src":{"access":"435,73,12","name":"435,72,40","type":"435,72,23","value":"435,75,0"}}]},{"$type":"vars","items":[{"$type":"property","dynamic":true,"name":"$video-background-color","text":"The background color of the video component.\n","type":"color","value":"#000","src":{"dynamic":"1166,9,26","name":"1166,6,17","text":"1166,7,4,45","type":"1166,6,10","value":"1166,9,34"}},{"$type":"property","dynamic":true,"name":"$video-ghost-background-color","text":"The background color of the poster image.\n","type":"color","value":"$video-background-color","src":{"dynamic":"1166,14,32","name":"1166,11,17","text":"1166,12,4,42","type":"1166,11,10","value":"1166,14,40"}}]}],"src":{"alias":"435,37,0","extends":"435,36,0","name":"1166,2,11","text":"435,2,4,693"},"group":"Other Components","displayName":"Video"},{"$type":"class","alias":"widget.widget","alternateClassNames":"Ext.Gadget","disable":"DuplicateAlternateClassName","extended":"Ext.Evented,Ext.Base","extenders":"Ext.AbstractComponent,Ext.Component,Ext.draw.SurfaceBase,Ext.field.trigger.Base,Ext.grid.cell.Base,Ext.list.AbstractTreeItem,Ext.scroll.indicator.Indicator","extends":"Ext.Evented,Object","mixed":"Ext.Mixin,Ext.mixin.Accessible,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Identifiable,Ext.mixin.Inheritable,Ext.mixin.Keyboard,Ext.mixin.Observable,Ext.mixin.Pluggable","mixins":"Ext.mixin.Inheritable,Ext.mixin.Bindable,Ext.mixin.ComponentDelegation,Ext.mixin.Pluggable,Ext.mixin.Keyboard,Ext.mixin.Factoryable,Ext.mixin.Focusable,Ext.mixin.Accessible","name":"Ext.Widget","package":"core","requires":"Ext.dom.Element","since":"5.0.0","text":"Ext.Widget is a light-weight Component that consists of nothing more than a template\nElement that can be cloned to quickly and efficiently replicate many instances.\nExt.Widget is typically not instantiated directly, because the default template is\njust a single element with no listeners. Instead Ext.Widget should be extended to\ncreate Widgets that have a useful markup structure and event listeners.\n\nFor example:\n\n     Ext.define('MyWidget', {\n         extend: 'Ext.Widget',\n\n         // The element template passed to Ext.Element.create()\n         element: {\n             reference: 'element',\n             listeners: {\n                 click: 'onClick'\n             },\n             children: [{\n                 reference: 'innerElement',\n                 listeners: {\n                     click: 'onInnerClick'\n                 }\n             }]\n         },\n\n         constructor: function(config) {\n             // It is important to remember to call the Widget superclass constructor\n             // when overriding the constructor in a derived class. This ensures that\n             // the element is initialized from the template, and that initConfig() is\n             // is called.\n             this.callParent([config]);\n\n             // After calling the superclass constructor, the Element is available and\n             // can safely be manipulated. Reference Elements are instances of\n             // Ext.Element, and are cached on each Widget instance by reference name.\n             Ext.getBody().appendChild(this.element);\n         },\n\n         onClick: function() {\n             // listeners use this Widget instance as their scope\n             console.log('element clicked', this);\n         },\n\n         onInnerClick: function() {\n             // access the innerElement reference by name\n             console.log('inner element clicked', this.innerElement);\n         }\n     });\n","items":[{"$type":"configs","items":[{"$type":"property","accessor":true,"name":"alignSelf","optional":true,"text":"Specifies the self alignment of this widget in a box layout\n","type":"String","value":"null","src":{"accessor":"689,255,0","name":"689,252,27","text":"689,253,12,60","type":"689,252,18","value":"689,255,0"}},{"$type":"property","accessor":true,"name":"alwaysOnTop","optional":true,"since":"6.2.0","text":"A flag indicating that this component should\nbe above its floated siblings.\n\nThis may be a positive number to prioritize the ordering of multiple visible always on\ntop components.\n\nThis may be set to a *negative* number to prioritize a component to the *bottom* of the\nz-index stack.\n","type":"Boolean/Number","value":"false","src":{"accessor":"689,211,0","name":"689,200,35","since":"689,209,19","text":"689,200,54,45:689,201,12,240","type":"689,200,18","value":"689,200,47"}},{"$type":"property","accessor":true,"name":"border","text":"Enables or disables bordering on this component.\nThe following values are accepted:\n\n- `null` or `true (default): Do nothing and allow the border to be specified\nby the theme.\n- `false`: suppress the default border provided by the theme.\n\nPlease note that enabling bordering via this config will not add a `border-color`\nor `border-style` CSS property to the component; you provide the `border-color`\nand `border-style` via CSS rule or {@link #style} configuration\n(if not already provide by the theme).\n\n## Using {@link #style}:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        style: 'border: 1px solid blue;'\n        // ...\n    });\n\n## Using CSS:\n\n    Ext.Viewport.add({\n        centered: true,\n        width: 100,\n        height: 100,\n\n        cls: 'my-component'\n        // ...\n    });\n\nAnd your CSS file:\n\n    .my-component {\n        border: 1px solid red;\n    }\n","type":"Boolean","value":"null","src":{"accessor":"18,298,12","name":"18,258,27","text":"18,258,34,49:18,259,12,870","type":"18,258,18","value":"18,300,0"}},{"$type":"property","accessor":true,"name":"cls","text":"The CSS class to add to this widget's element, in\naddition to the {@link #baseCls}. In many cases, this property will be specified\nby the derived widget class. See {@link #userCls} for adding additional CSS\nclasses to widget instances (such as items in a {@link Ext.Container}).\n","type":"String/String[]","value":"null","src":{"accessor":"18,219,12","name":"18,215,35","text":"18,215,39,50:18,216,12,229","type":"18,215,18","value":"18,221,0"}},{"$type":"property","accessor":true,"name":"constrainAlign","optional":true,"text":"A specification of the constraint to apply when {@link #showBy} or {@link #alignTo}\nis called to align a {@link #floated} or positioned component.\n\nDefaults to the parent container for *positioned* components (components\nwhich have their {@link #cfg!top}, {@link #cfg!right}, {@link #cfg!bottom} or\n{@link #cfg!left} set to move them out of their container's layout flow).\n\nDefaults to the viewport for {@link #floated} components.\n\nMay be a {@link Ext.ComponentQuery ComponentQuery} selector to find an ancestor\ncomponent to constrain within.\n\nMay be `false` to specify that constraining is not applied.\n\nYou may also specify an element, or a {@link Ext.util.Region Region}\n","type":"String/Ext.util.Region/Ext.dom.Element","value":"null","src":{"accessor":"689,249,0","name":"689,232,59","text":"689,233,12,675","type":"689,232,18","value":"689,249,0"}},{"$type":"property","accessor":true,"evented":true,"name":"disabled","optional":true,"text":"Whether or not this component is disabled\n","type":"Boolean","value":"null","src":{"accessor":"18,503,12","evented":"18,504,12","name":"18,501,28","text":"18,502,12,42","type":"18,501,18","value":"18,506,0"}},{"$type":"property","access":"private","accessor":true,"deprecatedMessage":"Inline event handlers are deprecated\n","deprecatedVersion":"6.6.0","name":"eventHandlers","text":"A map of event type to the corresponding handler method\nname. This is used internally by native event handling mechanism.\n","type":"Object","value":"{\n    focus: 'handleFocusEvent',\n    blur: 'handleBlurEvent'\n}","src":{"access":"18,361,12","accessor":"18,364,0","deprecatedMessage":"18,362,12","deprecatedVersion":"18,362,12","name":"18,359,26","text":"18,359,40,56:18,360,12,66","type":"18,359,18","value":"18,364,0"}},{"$type":"property","accessor":true,"name":"flex","text":"The flex of this item *if* this item item is inside a {@link Ext.layout.HBox}\nor {@link Ext.layout.VBox} layout.\n\nYou can also update the flex of a component dynamically using\nthe {@link Ext.layout.FlexBox#setItemFlex} method.\n\nWhen supplied as a string or number this option supports the same syntax\nas CSS [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex).\nFor example:\n\n    flex: '1 2 auto'\n\nsets `flex-grow` property to `0`, `flex-shrink` to `2` and `flex-basis` to\n`'auto'`.\n\nThe default `flex-shrink` value for box layout items is set to `0` in the\nstylesheet, which is different from the browser's default `flex-shrink` value\nof `1`.  This accommodates the majority use case for applications since where\nnon-flexed components are typically not expected to shrink smaller than their\ndefault size.\n\nFor convenience when only a single number is supplied it is used as the value\nfor both `flex-grow` and `flex-shrink`, for example `flex: 3` is the same as\n`flex: '3 3'`\n\nAn object form is also accepted:\n\n    flex: {\n        grow: 1,\n        shrink: 2,\n        basis: 'auto'\n    }\n\nWhen the object form is supplied `shrink` always defaults to `0` regardless\nof the value of `grow`.\n\nAlthough `'auto'` is the default value for flex-basis, flex-basis defaults to 0%\nwhen flex is supplied as a single numeric or string value (e.g. `flex: 1`). If\nthis behavior is not desired either explicitly set flex-basis to `'auto'` or use\nthe object form to set only grow and/or shrink:\n\n    flex: {\n        grow: 2\n    }\n","type":"Number/String/Object","value":"null","src":{"accessor":"689,84,0","name":"689,38,40","text":"689,39,12,1522","type":"689,38,18","value":"689,86,0"}},{"$type":"property","accessor":true,"name":"floated","optional":true,"since":"6.2.0","text":"A Component may be floated above all other components in the application. This means that\nthe component is absolutely positioned, and will move to the front and occlude other\nsibling floated component if clicked.\n\nA Floated component may have floated descendants. It will bring these decendants to the\nfront with it when brought to the front of its sibling floated components.\n\nBy default, descendant floated components are all positioned using the viewport\ncoordinate system. To make a floating component a positioning parent for descendants,\nand have the ancestors positioned relatively, configure the parent floated component\nwith `{@link #cfg-relative}: true`.\n","type":"Boolean","value":"false","src":{"accessor":"689,145,0","name":"689,130,28","since":"689,143,19","text":"689,131,12,666","type":"689,130,18","value":"689,130,36"}},{"$type":"property","accessor":true,"evented":true,"name":"height","text":"The height of this Component; must be a valid CSS length value, e.g: `300`, `100px`,\n`30%`, etc. By default, if this is not explicitly set, this Component's element will\nsimply have its own natural size. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size.\n","type":"Number/String","value":"null","src":{"accessor":"18,485,12","evented":"18,486,12","name":"18,480,33","text":"18,481,12,297","type":"18,480,18","value":"18,488,0"}},{"$type":"property","accessor":true,"evented":true,"name":"hidden","optional":true,"text":"Whether or not this Component is hidden (its CSS `display` property is set to `none`).\n\nDefaults to `true` for {@link #floated} Components.\n","type":"Boolean","value":"null","src":{"accessor":"18,495,12","evented":"18,496,12","name":"18,491,28","text":"18,492,12,140","type":"18,491,18","value":"18,498,0"}},{"$type":"property","accessor":true,"name":"hideMode","optional":true,"since":"6.5.0","text":"A String which specifies how this component's DOM element will be hidden. The\naccepted values are any of these:\n\n- `'clip'` : Hide using {@link Ext.dom.Element#CLIP clip}.\n- `'display'` : Hide using {@link Ext.dom.Element#DISPLAY display}.\n- `'offsets'` : Hide using positioning {@link Ext.dom.Element#OFFSETS offsets}.\n- `'opacity'` : Hide using {@link Ext.dom.Element#OPACITY opacity}.\n- `'visibility'` : Hide using {@link Ext.dom.Element#VISIBILITY visibility}.\n\nHiding using ``display`` results in having no dimensions as well as resetting\nscroll positions to 0.\n\nThe other modes overcome this but may have different trade-offs in certain\ncircumstances.\n","type":"'clip'/'display'/'offsets'/'opacity'/'visibility'","value":"'display'","src":{"accessor":"18,454,0","name":"18,436,70","since":"18,452,19","text":"18,437,12,659","type":"18,436,18","value":"18,436,79"}},{"$type":"property","name":"id","text":"The **unique id of this component instance.**\n\nIt should not be necessary to use this configuration except for singleton objects in\nyour application. Components created with an id may be accessed globally\nusing {@link Ext#getCmp Ext.getCmp}.\n\nInstead of using assigned ids, use the {@link #itemId} config,\nand {@link Ext.ComponentQuery ComponentQuery} which provides selector-based searching\nfor Sencha Components analogous to DOM querying. The {@link Ext.Container} class\ncontains {@link Ext.Container#down shortcut methods} to query its descendant Components\nby selector.\n\nNote that this id will also be used as the element id for the containing HTML element\nthat is rendered to the page for this component. This allows you to write id-based CSS\nrules to style the specific instance of this component uniquely, and also to select\nsub-elements using this component's id as the parent.\n\n**Note**: to avoid complications imposed by a unique id also see `{@link #itemId}`.\n\nDefaults to an auto-assigned id.\n","type":"String","src":{"name":"689,90,26","text":"689,91,12,1005","type":"689,90,18"}},{"$type":"property","access":"private","accessor":true,"name":"instanceCls","since":"6.5.0","text":"\nAn extra CSS class or classes to augment the {@link #classCls} on an individual instance\n","type":"String/String[]","value":"null","src":{"access":"18,461,12","accessor":"18,464,0","name":"18,457,35","since":"18,462,19","text":"18,458,12,91","type":"18,457,18","value":"18,464,0"}},{"$type":"property","accessor":true,"name":"itemId","text":"An itemId can be used as an alternative way to get a reference to a component when no\nobject reference is available. Instead of using an `{@link #id}` with {@link Ext#getCmp},\nuse `{@link #cfg!itemId itemId}` with {@link Ext.Container#getComponent} which will retrieve `{@link #cfg!itemId itemId}`'s or\n{@link #id}'s. Since `{@link #cfg!itemId itemId}`'s are an index to the container's internal MixedCollection,\nthe `{@link #cfg!itemId itemId}` is scoped locally to the container - avoiding potential conflicts with\n{@link Ext.ComponentManager} which requires a **unique** `{@link #id}`.\n\nAlso see {@link #id}, {@link Ext.Container#query}, {@link Ext.Container#down} and\n{@link Ext.Container#child}.\n","type":"String","value":"undefined","src":{"accessor":"689,125,12","name":"689,114,26","text":"689,115,12,622","type":"689,114,18","value":"689,127,0"}},{"$type":"property","accessor":true,"name":"margin","text":"The margin to use on this Component. Can be specified as a number (in which\ncase all edges get the same margin) or a CSS string like '5 10 10 10'\n","type":"Number/String","value":"null","src":{"accessor":"18,228,0","name":"18,224,33","text":"18,225,12,146","type":"18,224,18","value":"18,228,0"}},{"$type":"property","name":"name","text":"Name for the widget to be used with {@link Ext.Container#lookupName}\net al.\n","type":"String","value":"null","src":{"name":"18,371,22","text":"18,371,27,69:18,372,8,7","type":"18,371,14","value":"18,374,0"}},{"$type":"property","accessor":true,"name":"relative","optional":true,"since":"6.2.0","text":"*Only valid when a component is `{@link #cfg-floated}`*\n\nConfigure this as `true` if you require descendant floated components to be positioned\nrelative to this component's coordinate space, not the viewport's coordinate space.\n\n*Note:* The coordinate space is this Component's encapsulating element's area. Not that\nof the inner element in which static child items are rendered by the layout.\n","type":"Boolean","value":"false","src":{"accessor":"689,159,0","name":"689,148,28","since":"689,157,19","text":"689,149,12,395","type":"689,148,18","value":"689,148,37"}},{"$type":"property","accessor":true,"name":"renderTo","optional":true,"text":"Optional element to render this Component to.\nNot required if this component is an {@link Ext.Container#items item} of a Container\nof a Container.\n","type":"Ext.Element","value":"null","src":{"accessor":"18,382,0","name":"18,378,32","text":"18,378,42,46:18,379,12,101","type":"18,378,18","value":"18,382,0"}},{"$type":"property","accessor":true,"name":"ripple","since":"6.5.0","text":"Set to truthy, Color or Object value for the ripple.\n","type":"Boolean/Object/String","value":"null","items":[{"$type":"property","name":"color","text":"The background color of the ripple.\n","type":"String","src":{"name":"18,411,33","text":"18,411,39,36","type":"18,411,18"}},{"$type":"property","name":"position","text":"Position for the ripple to start at [x,y].\nDetermines if a Ripple effect should happen whenever this element is pressed.\n\nFor example:\n     {\n         ripple: true\n     }\n\nOr:\n\n     {\n         ripple: {\n             color: 'red'\n         }\n     }\n\nFor complex components, individual elements can suppress ripples by adding the\n`x-no-ripple` class to disable rippling for a tree of elements.\n","type":"Array","src":{"name":"18,412,32","text":"18,412,41,43:18,413,12,349","type":"18,412,18"}}],"src":{"accessor":"18,433,0","name":"18,409,41","since":"18,431,19","text":"18,410,12,53","type":"18,409,18","value":"18,433,0"}},{"$type":"property","accessor":true,"name":"shadow","optional":true,"since":"6.2.0","text":"Configure as `true` for the component to have a drop shadow. 'false' will suppress any\ndefault shadow. By default the theme will determine the presence of a shadow.\n","type":"Boolean","value":"null","src":{"accessor":"689,186,0","name":"689,180,28","since":"689,184,19","text":"689,181,12,166","type":"689,180,18","value":"689,186,0"}},{"$type":"property","accessor":true,"name":"shim","optional":true,"since":"6.2.0","text":"*Only valid when a component is `{@link #cfg-floated}`*\n\nConfigure as `true` for the component to use an `<iframe>` as an underlay to ensure\ncertain non-standard browser plugins are occluded by this component.\n","type":"Boolean","value":"false","src":{"accessor":"689,197,0","name":"689,189,28","since":"689,195,19","text":"689,190,12,211","type":"689,189,18","value":"689,189,33"}},{"$type":"property","accessor":"w","name":"style","text":"Additional CSS styles that will be rendered into an inline style attribute when\nthe widget is rendered.\n\nYou can pass either a string syntax:\n\n    style: 'background:red'\n\nOr by using an object:\n\n    style: {\n        background: 'red'\n    }\n\nWhen using the object syntax, you can define CSS Properties by using a string:\n\n    style: {\n        'border-left': '1px solid red'\n    }\n\nAlthough the object syntax is much easier to read, we suggest you to use the\nstring syntax for better performance.\n","type":"String/Object","value":"null","src":{"accessor":"18,253,12","name":"18,231,33","text":"18,232,12,496","type":"18,231,18","value":"18,255,0"}},{"$type":"property","accessor":true,"name":"toFrontOnShow","optional":true,"text":"True to automatically call {@link #toFront} when a {@link #cfg-floated} Component is\nshown.\n","type":"Boolean","value":"true","src":{"accessor":"689,218,0","name":"689,214,28","text":"689,215,12,92","type":"689,214,18","value":"689,214,42"}},{"$type":"property","accessor":true,"name":"touchAction","text":"\nEmulates the behavior of the CSS\n[touch-action](https://www.w3.org/TR/pointerevents/#the-touch-action-css-property)\nproperty in a cross-browser compatible manner.\n\nKeys in this object are touch action names, and values are `false` to disable\na touch action or `true` to enable it.  Accepted keys are:\n\n- `panX`\n- `panY`\n- `pinchZoom`\n- `doubleTapZoom`\n\nAll touch actions are enabled (`true`) by default, so it is usually only necessary\nto specify which touch actions to disable.  For example, the following disables\nonly horizontal scrolling and pinch-to-zoom on the component's main element:\n\n    touchAction: {\n        panX: false,\n        pinchZoom: false\n    }\n\nTouch actions can be specified on reference elements using the reference element\nname, for example:\n\n    // disables horizontal scrolling on the main element, and double-tap-zoom\n    // on the child element named \"body\"\n    touchAction: {\n        panY: false\n        body: {\n            doubleTapZoom: false\n        }\n    }\n\nThe primary motivation for setting the touch-action of an element is to prevent\nthe browser's default handling of a gesture such as pinch-to-zoom, or\ndrag-to-scroll, so that the application can implement its own handling of that\ngesture on the element.  Suppose, for example, a component has a custom drag\nhandler on its element and wishes to prevent horizontal scrolling of its container\nwhile it is being dragged:\n\n    Ext.create('Ext.Widget', {\n        touchAction: {\n            panX: false\n        },\n        listeners: {\n            drag: function(e) {\n                // implement drag logic\n            }\n        }\n    });\n","type":"Object","value":"null","src":{"accessor":"18,356,0","name":"18,356,0","text":"18,304,12,1623","type":"18,303,18","value":"18,356,0"}},{"$type":"property","access":"private","accessor":true,"name":"translatable","type":"Object","value":"null","src":{"access":"689,223,12","accessor":"689,224,12","name":"689,222,26","type":"689,222,18","value":"689,228,0"}},{"$type":"property","accessor":true,"name":"ui","text":"The ui or uis to be used on this Component\n\nWhen a ui is configured, CSS class names are added to the {@link #element}, created\nby appending the ui name(s) to each {@link #classCls} and/or {@link #baseCls}.\n","type":"String/String[]","value":"null","src":{"accessor":"18,390,0","name":"18,385,35","text":"18,385,38,43:18,386,12,164","type":"18,385,18","value":"18,390,0"}},{"$type":"property","accessor":true,"name":"userCls","text":"One or more CSS classes to add to the component's primary element. This config\nis intended solely for use by the component instantiator (the \"user\"), not by\nderived classes.\n\nFor example:\n\n     items: [{\n         xtype: 'button',\n         userCls: 'my-button'\n     ...\n     }]\n","type":"String/String[]","value":"null","src":{"accessor":"18,406,0","name":"18,393,35","text":"18,394,12,277","type":"18,393,18","value":"18,406,0"}},{"$type":"property","accessor":true,"evented":true,"name":"width","text":"The width of this Component; must be a valid CSS length value, e.g: `300`, `100px`,\n`30%`, etc. By default, if this is not explicitly set, this Component's element will\nsimply have its own natural size. If set to `auto`, it will set the width to `null`\nmeaning it will have its own natural size.\n","type":"Number/String","value":"null","src":{"accessor":"18,474,12","evented":"18,475,12","name":"18,469,33","text":"18,470,12,296","type":"18,469,18","value":"18,477,0"}},{"$type":"property","accessor":true,"name":"x","optional":true,"text":"*Only valid when a component is `{@link #cfg-floated}`*\n\nThe x position at which to position this component. This is usually viewport-relative.\nBut if there is a `{@link #relative}: true` ancestor, it will be relative to that.\n","type":"Number","value":"0","src":{"accessor":"689,168,0","name":"689,162,27","text":"689,163,12,227","type":"689,162,18","value":"689,162,29"}},{"$type":"property","accessor":true,"name":"y","optional":true,"text":"*Only valid when a component is `{@link #cfg-floated}`*\n\nThe x position at which to position this component. This is usually viewport-relative.\nBut if there is a `{@link #relative}: true` ancestor, it will be relative to that.\n","type":"Number","value":"0","src":{"accessor":"689,177,0","name":"689,171,27","text":"689,172,12,227","type":"689,171,18","value":"689,171,29"}}]},{"$type":"events","items":[{"$type":"event","name":"beforetofront","text":"Fires before a {@link #cfg-floated} component is brought to the front of the visual stack.\n","items":[{"$type":"param","name":"this","text":"The component instance\n","type":"Ext.Component","src":{"name":"689,320,31","text":"689,320,36,23","type":"689,320,16"}}],"src":{"name":"689,318,15","text":"689,319,8,91"}},{"$type":"event","name":"tofront","text":"Fires when a {@link #cfg-floated} component has been brought to the front of the visual\nstack.\n","items":[{"$type":"param","name":"this","text":"The component instance\n","type":"Ext.Component","src":{"name":"689,327,31","text":"689,327,36,23","type":"689,327,16"}}],"src":{"name":"689,324,15","text":"689,325,8,95"}},{"$type":"event","name":"beforedisabledchange","text":"This event fires when `{@link #cfg!disabled disabled}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!disabled disabled}`.","type":"Boolean","src":{"type":"18,501,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!disabled disabled}`.","type":"Boolean","src":{"type":"18,501,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"disabledchange","text":"This event fires when `{@link #cfg!disabled disabled}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!disabled disabled}`.","type":"Boolean","src":{"type":"18,501,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!disabled disabled}`.","type":"Boolean","src":{"type":"18,501,18"}}]},{"$type":"event","name":"beforeheightchange","text":"This event fires when `{@link #cfg!height height}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!height height}`.","type":"Number/String","src":{"type":"18,480,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!height height}`.","type":"Number/String","src":{"type":"18,480,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"heightchange","text":"This event fires when `{@link #cfg!height height}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!height height}`.","type":"Number/String","src":{"type":"18,480,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!height height}`.","type":"Number/String","src":{"type":"18,480,18"}}]},{"$type":"event","name":"beforehiddenchange","text":"This event fires when `{@link #cfg!hidden hidden}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!hidden hidden}`.","type":"Boolean","src":{"type":"18,491,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!hidden hidden}`.","type":"Boolean","src":{"type":"18,491,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"hiddenchange","text":"This event fires when `{@link #cfg!hidden hidden}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!hidden hidden}`.","type":"Boolean","src":{"type":"18,491,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!hidden hidden}`.","type":"Boolean","src":{"type":"18,491,18"}}]},{"$type":"event","name":"beforewidthchange","text":"This event fires when `{@link #cfg!width width}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!width width}`.","type":"Number/String","src":{"type":"18,469,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!width width}`.","type":"Number/String","src":{"type":"18,469,18"}},{"$type":"return","text":"Return `false` to cancel the change.","type":"Boolean"}]},{"$type":"event","name":"widthchange","text":"This event fires when `{@link #cfg!width width}` changes.","undocumented":true,"items":[{"$type":"param","name":"sender","text":"The instance firing this event.","type":"Ext.Widget"},{"$type":"param","name":"value","text":"The current value of `{@link #cfg!width width}`.","type":"Number/String","src":{"type":"18,469,18"}},{"$type":"param","name":"oldValue","text":"The previous value of `{@link #cfg!width width}`.","type":"Number/String","src":{"type":"18,469,18"}}]}]},{"$type":"methods","items":[{"$type":"method","name":"addCls","text":"Adds a CSS class (or classes) to this Component's rendered element.\n","items":[{"$type":"param","name":"cls","text":"The CSS class(es) to add.\n","type":"String/String[]","src":{"name":"18,1318,33","text":"18,1318,37,26","type":"18,1318,16"}},{"$type":"param","name":"prefix","optional":true,"text":"Optional prefix to add to each class.\n","type":"String","value":"\"\"","src":{"name":"18,1319,25","text":"18,1319,36,38","type":"18,1319,16","value":"18,1319,32"}},{"$type":"param","name":"suffix","optional":true,"text":"Optional suffix to add to each class.\n","type":"String","value":"\"\"","src":{"name":"18,1320,25","text":"18,1320,36,38","type":"18,1320,16","value":"18,1320,32"}}],"src":{"name":"18,1322,0","text":"18,1317,8,68"}},{"$type":"method","access":"private","name":"addElementReference","text":"Adds an element reference to this Widget instance.\n","items":[{"$type":"param","name":"name","text":"The name of the reference\n","type":"String","src":{"name":"18,1761,28","text":"18,1761,33,26","type":"18,1761,20"}},{"$type":"param","name":"domNode","type":"HTMLElement","src":{"name":"18,1762,33","type":"18,1762,20"}},{"$type":"return","type":"Ext.dom.Element","src":{"type":"18,1763,21"}}],"src":{"access":"18,1764,12","name":"18,1766,0","text":"18,1760,12,51"}},{"$type":"method","access":"private","name":"addElementReferenceOnDemand","text":"Reduces instantiation time for a Widget by lazily instantiating Ext.Element\nreferences the first time they are used.  This optimization only works for elements\nwith no listeners specified.\n","items":[{"$type":"param","name":"name","text":"The name of the reference\n","type":"String","src":{"name":"18,1727,28","text":"18,1727,33,26","type":"18,1727,20"}},{"$type":"param","name":"domNode","type":"HTMLElement","src":{"name":"18,1728,33","type":"18,1728,20"}}],"src":{"access":"18,1729,12","name":"18,1731,0","text":"18,1723,12,190"}},{"$type":"method","name":"afterRender","since":"6.5.0","template":true,"text":"This method is called after the component is initially added to the DOM. If this\ncomponent {@link Ext.Container contains} other components, the `{@link #method!afterRender afterRender}` method\nfor child components is called *before* the parent's `{@link #method!afterRender afterRender}`.\n\nImplementations of this method should avoid reading from the DOM but are free to\nwrite to the DOM as needed. To read the DOM, consider implementing\n{@link #onRender onRender} instead.\n\nThis method is not generally needed because components always have their own DOM\n{@link #property!element elements} and these are maintained by config property\nupdaters prior to insertion in the DOM. In general, it is always best to manipulate\nthe component's elements outside the DOM where there is no associated reflow or\nlayout cost. This method is useful for situations where the component's elements\nmust be in the DOM in order to be manipulated correctly.\n","src":{"name":"689,811,16","since":"689,812,15","template":"689,810,8","text":"689,795,8,882"}},{"$type":"method","access":"private","name":"alignTo","items":[{"$type":"param","name":"component","src":{"name":"689,655,0"}},{"$type":"param","name":"alignment","src":{"name":"689,655,0"}},{"$type":"param","name":"options","src":{"name":"689,655,0"}}],"src":{"access":"689,653,8","name":"689,655,0"}},{"$type":"method","access":"protected","name":"applyStyle","items":[{"$type":"param","name":"style","src":{"name":"18,1489,0"}},{"$type":"param","name":"oldStyle","src":{"name":"18,1489,0"}}],"src":{"access":"18,1487,8","name":"18,1489,0"}},{"$type":"method","name":"destroy","text":"Destroys the Widget. This method should not be overridden in custom Widgets,\nbecause it sets the flags and does final cleanup that must go last. Instead,\noverride {@link #doDestroy} method to add functionality at destruction time.\n","src":{"name":"18,792,0","text":"18,788,8,231"}},{"$type":"method","name":"disable","text":"Disables this Component\n","src":{"name":"18,728,0","text":"18,726,8,24"}},{"$type":"method","access":"private","name":"doAddListener","items":[{"$type":"param","name":"name","src":{"name":"18,1850,0"}},{"$type":"param","name":"fn","src":{"name":"18,1850,0"}},{"$type":"param","name":"scope","src":{"name":"18,1850,0"}},{"$type":"param","name":"options","src":{"name":"18,1850,0"}},{"$type":"param","name":"order","src":{"name":"18,1850,0"}},{"$type":"param","name":"caller","src":{"name":"18,1850,0"}},{"$type":"param","name":"manager","src":{"name":"18,1850,0"}}],"src":{"access":"18,1848,12","name":"18,1850,0"}},{"$type":"method","name":"doDestroy","since":"6.2.0","text":"Perform the actual destruction sequence. This is the method to override in your\nsubclasses to add steps specific to the destruction of custom Component or Widget.\n\nAs a rule of thumb, subclasses should destroy their child Components, Elements,\nand/or other objects before calling parent method. Any object references will be\nnulled after this method has finished, to prevent the possibility of memory leaks.\n","src":{"name":"18,825,0","since":"18,823,15","text":"18,816,8,409"}},{"$type":"method","access":"private","name":"doInheritUi","src":{"access":"689,1109,12","name":"689,1111,0"}},{"$type":"method","access":"private","name":"doUninheritUi","src":{"access":"689,1130,12","name":"689,1132,0"}},{"$type":"method","name":"enable","text":"Enables this Component\n","src":{"name":"18,735,0","text":"18,733,8,23"}},{"$type":"method","access":"private","name":"findFloatParent","text":"The method finds this floated component's floatParent. That means a DOM positioning\ncontainer which acts as a root element for sibling floated components, and allows allows\nfloated components to be absolutely positioned, and their encapsulating elements to be\nreordered to produce a visual stacking effect.\n\nThis component's element is appended to its floatParent.\n\nThere is a global floatParent element, created on demand when the first top level\nfloated component is shown. This may be an item child of a container configured with\n`{@link #cfg-floated}: true`, or a free `{@link #cfg!floated floated}` component which is programatically\n{@link Ext.Component#show shown}.\n\nChild items of components inside a floated component may also be configured `{@link #cfg!floated floated}`.\nThese are give a floatParent which is created on demand wrapping the nearest `{@link #cfg!floated floated}`\nancestor. This means that when that ancestor's element is brought to the top of the\nstack (by moving its element to the end of its own floatParent), the descendant elements\nwill automatically remain above.\n","items":[{"$type":"param","name":"needsShow","src":{"name":"689,1303,0"}}],"src":{"access":"689,1301,12","name":"689,1303,0","text":"689,1283,12,1034"}},{"$type":"method","access":"protected","name":"getAlignmentInfo","text":"Prepares information on aligning this to component using alignment.\nAlso checks to see if this is already aligned to component according to alignment.\n","items":[{"$type":"param","name":"component","src":{"name":"689,589,0"}},{"$type":"param","name":"alignment","src":{"name":"689,589,0"}}],"src":{"access":"689,587,8","name":"689,589,0","text":"689,585,8,151"}},{"$type":"method","access":"private","name":"getAlignRegion","items":[{"$type":"param","name":"component","src":{"name":"689,721,0"}},{"$type":"param","name":"alignment","src":{"name":"689,721,0"}},{"$type":"param","name":"options","src":{"name":"689,721,0"}}],"src":{"access":"689,719,8","name":"689,721,0"}},{"$type":"method","access":"private","name":"getClassCls","src":{"access":"18,920,8","name":"18,922,0"}},{"$type":"method","access":"private","name":"getCurrentAlignmentInfo","text":"Current Alignment information from the last alignTo call\n","src":{"access":"689,636,8","name":"689,638,0","text":"689,635,8,57"}},{"$type":"method","access":"protected","name":"getElementConfig","text":"A template method for modifying the {@link #element} config before it is processed.\nBy default adds the result of `this.getTemplate()` as the `children` array of\n{@link #element} if `children` were not specified in the original\n{@link #element} config.  Typically this method should not need to be implemented\nin subclasses.  Instead the {@link #element} property should be use to configure\nthe element template for a given Widget subclass.\n\nThis method is called once when the first instance of each Widget subclass is\ncreated.  The element config object that is returned is cached and used as the template\nfor all successive instances.  The scope object for this method is the class prototype,\nnot the instance.\n","items":[{"$type":"return","text":"the element config object\n","type":"Object","src":{"text":"18,889,25,26","type":"18,889,17"}}],"src":{"access":"18,890,8","name":"18,892,0","text":"18,877,8,715"}},{"$type":"method","access":"private","name":"getFloatParent","text":"*For {@link #cfg-floated} components only. *\n\nFinds the owning {@link #cfg-floated} component (if any) responsible for\nthe base z-index stack position of this compoonent, and, if that component\nis {@link #cfg-relative}, for the coordinate system in which this component\nis positioned.\n\nIf this is a top level floated component, this method will return `null`\n","items":[{"$type":"return","text":"The owning floated component or `null` if this\ncomponent is top level floated.\n","type":"Ext.Component","src":{"text":"689,1228,36,47:689,1229,12,32","type":"689,1228,21"}}],"src":{"access":"689,1230,12","name":"689,1232,0","text":"689,1220,12,359"}},{"$type":"method","access":"private","name":"getFloatWrap","text":"This method returns, or creates on demand the floatWrap element which wraps the passed\nfloated component. It enables that floated component to act as a host for descendant\nfloated components.\n","items":[{"$type":"return","text":"The passed component's floatWrap element.\n","type":"Ext.Element","src":{"text":"689,1332,34,42","type":"689,1332,21"}}],"src":{"access":"689,1333,12","name":"689,1335,0","text":"689,1328,12,193"}},{"$type":"method","name":"getSize","text":"Returns the height and width of the Component.\n","items":[{"$type":"return","text":"The current `{@link #cfg!height height}` and `{@link #cfg!width width}` of the Component.\n","type":"Object","items":[{"$type":"property","name":"width","type":"Number","src":{"name":"18,908,32","type":"18,908,17"}},{"$type":"property","name":"height","type":"Number","src":{"name":"18,909,32","type":"18,909,17"}}],"src":{"text":"18,907,25,51","type":"18,907,17"}}],"src":{"name":"18,911,0","text":"18,906,8,47"}},{"$type":"method","name":"hasCls","text":"Checks if the specified CSS class exists on this element's DOM node.\n","items":[{"$type":"param","name":"className","text":"The CSS class to check for.\n","type":"String","src":{"name":"18,1365,24","text":"18,1365,34,28","type":"18,1365,16"}},{"$type":"return","text":"`true` if the class exists, else `false`.\n","type":"Boolean","src":{"text":"18,1366,26,42","type":"18,1366,17"}}],"src":{"name":"18,1369,0","text":"18,1364,8,69"}},{"$type":"method","access":"protected","name":"initElement","text":"Initializes the Element for this Widget instance.  If this is the first time a\nWidget of this type has been instantiated the {@link #element} config will be\nprocessed to create an Element.  This Element is then cached on the prototype (see\nafterCachedConfig) so that future instances can obtain their element by simply\ncloning the Element that was cached by the first instance.\n","src":{"access":"18,965,8","name":"18,967,0","text":"18,960,8,378"}},{"$type":"method","access":"private","name":"initElementListeners","text":"Called for the first instance of this Widget to create an object that contains the\nlistener configs for all of the element references keyed by reference name. The\nobject is cached on the prototype and has the following shape:\n\n    _elementListeners: {\n        element: {\n            click: 'onClick',\n            scope: this\n        },\n        fooReference: {\n            tap: {\n                fn: someFunction,\n                delay: 100\n            }\n        }\n    }\n\nThe returned object is prototype chained to the _elementListeners object of its\nsuperclass, and each key in the object is prototype chained to object with the\ncorresponding key in the superclass _elementListeners.  This allows element\nlisteners to be inherited and overridden when subclassing widgets.\n\nThis method is invoked with the prototype object as the scope\n","items":[{"$type":"param","name":"elementConfig","src":{"name":"18,1943,0"}}],"src":{"access":"18,1941,12","name":"18,1943,0","text":"18,1917,12,837"}},{"$type":"method","access":"private","name":"initUiReference","text":"Initializes a \"uiReference\".  Ui rerefences are reference elements that have\nclassCls and ui info in their CSS class names.  They can be used by setting\nuiCls in the template, or by invoking this method to setup the ui reference\nafter element/template initialization (Toolable uses this for its dock wrapper)\n","items":[{"$type":"param","name":"referenceName","type":"String","src":{"name":"18,2120,28","type":"18,2120,20"}},{"$type":"param","name":"uiCls","type":"String","src":{"name":"18,2121,28","type":"18,2121,20"}},{"$type":"param","name":"isInstance","optional":true,"text":"pass `false` if this is not an instance-level\nreference\n","type":"Boolean","value":"false","src":{"name":"18,2122,30","text":"18,2122,48,46:18,2123,12,10","type":"18,2122,20","value":"18,2122,41"}}],"src":{"access":"18,2124,12","name":"18,2126,0","text":"18,2116,12,309"}},{"$type":"method","access":"private","name":"insertFloatedDom","text":"This method inserts this floated component's DOM into its owning floatParent.\n","items":[{"$type":"param","name":"needsShow","src":{"name":"689,1412,0"}}],"src":{"access":"689,1410,12","name":"689,1412,0","text":"689,1409,12,78"}},{"$type":"method","name":"is","text":"Tests whether this Widget matches a {@link Ext.ComponentQuery ComponentQuery}\nselector string.\n","items":[{"$type":"param","name":"selector","text":"The selector string to test against.\n","type":"String","src":{"name":"18,1136,24","text":"18,1136,33,37","type":"18,1136,16"}},{"$type":"return","text":"`true` if this Widget matches the selector.\n","type":"Boolean","src":{"text":"18,1137,26,44","type":"18,1137,17"}}],"src":{"name":"18,1139,0","text":"18,1134,8,95"}},{"$type":"method","name":"isDisabled","text":"Returns `true` if this Component is currently disabled.\n","items":[{"$type":"return","text":"`true` if currently disabled.\n","type":"Boolean","src":{"text":"18,741,26,30","type":"18,741,17"}}],"src":{"name":"18,743,0","text":"18,740,8,56"}},{"$type":"method","name":"isEnabled","text":"Returns `true` if this Component is not currently disabled.\n","items":[{"$type":"return","text":"`true` if not currently disabled.\n","type":"Boolean","src":{"text":"18,749,26,34","type":"18,749,17"}}],"src":{"name":"18,751,0","text":"18,748,8,60"}},{"$type":"method","access":"private","name":"isHeighted","src":{"access":"18,1574,8","name":"18,1576,0"}},{"$type":"method","name":"isHidden","text":"Returns `true` if this Component is currently hidden.\n","items":[{"$type":"param","name":"deep","optional":true,"text":"`true` to check if this component\nis hidden because a parent container is hidden. Alternatively, a reference to the\ntop-most parent at which to stop climbing.\n","type":"Boolean/Ext.Widget","value":"false","src":{"name":"18,1145,37","text":"18,1145,49,34:18,1146,8,125","type":"18,1145,16","value":"18,1145,42"}},{"$type":"return","text":"`true` if currently hidden.\n","type":"Boolean","src":{"text":"18,1148,26,28","type":"18,1148,17"}}],"src":{"name":"18,1150,0","text":"18,1144,8,54"}},{"$type":"method","name":"isHidden","text":"Returns `true` if this Component is currently hidden.\n","items":[{"$type":"param","name":"deep","optional":true,"text":"`true` to check if this component\nis hidden because a parent container is hidden. Alternatively, a reference to the\ntop-most parent at which to stop climbing.\n","type":"Boolean/Ext.Widget","value":"false","src":{"name":"689,412,37","text":"689,412,49,34:689,413,8,125","type":"689,412,16","value":"689,412,42"}},{"$type":"return","text":"`true` if currently hidden.\n","type":"Boolean","src":{"text":"689,415,26,28","type":"689,415,17"}}],"src":{"name":"689,417,0","text":"689,411,8,54"}},{"$type":"method","name":"isVisible","text":"Returns `true` if this Component is currently visible.\n\nA Widget is visible if its element is not hidden, *and* has been\n{@link #property!rendered} *and* has not been destroyed.\n","items":[{"$type":"param","name":"deep","optional":true,"text":"`true` to check if this component\nis visible and all parents are also visible.\n\nContrast this with the {@link #isHidden} method which just checks the\nhidden state of the component.\n","type":"Boolean","value":"false","src":{"name":"18,1172,26","text":"18,1172,38,34:18,1173,8,147","type":"18,1172,16","value":"18,1172,31"}},{"$type":"return","text":"`true` if currently visible.\n","type":"Boolean","src":{"text":"18,1177,26,29","type":"18,1177,17"}}],"src":{"name":"18,1179,0","text":"18,1167,8,179"}},{"$type":"method","access":"private","name":"isWidthed","src":{"access":"18,1565,8","name":"18,1567,0"}},{"$type":"method","name":"isXType","text":"Tests whether or not this Component is of a specific xtype. This can test whether this\nComponent is descended from the xtype (default) or whether it is directly of the xtype\nspecified (`shallow = true`).\n**If using your own subclasses, be aware that a Component must register its own xtype\nto participate in determination of inherited xtypes.__\n\nFor a list of all available xtypes, see the {@link Ext.Component} header.\n\nExample usage:\n\n    var t = new Ext.field.Text();\n    var isText = t.isXType('textfield'); // true\n    var isBoxSubclass = t.isXType('field'); // true, descended from Ext.field.Field\n    var isBoxInstance = t.isXType('field', true); // false, not a direct\n                                                  // Ext.field.Field instance\n","items":[{"$type":"param","name":"xtype","text":"The xtype to check for this Component.\n","type":"String","src":{"name":"18,1200,24","text":"18,1200,30,39","type":"18,1200,16"}},{"$type":"param","name":"shallow","optional":true,"text":"`false` to check whether this Component is descended\nfrom the xtype (this is the default), or `true` to check whether this Component is directly\nof the specified xtype.\n","type":"Boolean","src":{"name":"18,1201,25","optional":"18,1201,34","text":"18,1201,44,53:18,1202,8,116","type":"18,1201,16"}},{"$type":"return","text":"`true` if this component descends from the specified xtype, `false`\notherwise.\n","type":"Boolean","src":{"text":"18,1204,26,68:18,1205,8,11","type":"18,1204,17"}}],"src":{"name":"18,1207,0","text":"18,1184,8,756"}},{"$type":"method","name":"lookupTpl","since":"6.2.0","text":"Gets a named template instance for this class. See {@link Ext.XTemplate#getTpl}.\n","items":[{"$type":"param","name":"name","text":"The name of the property that holds the template.\n","type":"String","src":{"name":"18,1213,24","text":"18,1213,29,50","type":"18,1213,16"}},{"$type":"return","text":"The template, `null` if not found.\n","type":"Ext.XTemplate","src":{"text":"18,1214,32,35","type":"18,1214,17"}}],"src":{"name":"18,1218,0","since":"18,1216,15","text":"18,1212,8,81"}},{"$type":"method","access":"private","name":"onAdded","items":[{"$type":"param","name":"parent","src":{"name":"689,445,0"}},{"$type":"param","name":"instanced","src":{"name":"689,445,0"}}],"src":{"access":"689,443,8","name":"689,445,0"}},{"$type":"method","name":"onRender","since":"6.5.0","template":true,"text":"This method is called the first time a component is inserted into the DOM. If this\ncomponent {@link Ext.Container contains} other components, the `{@link #method!onRender onRender}` method\nfor child components is called *after* the parent's `{@link #method!onRender onRender}`.\n\nImplementations of this method should avoid modifying the DOM but are free to read\nfrom and measure elements as needed. To adjust the DOM, consider implementing\n{@link #afterRender afterRender} instead.\n\nIf this method is overridden, be sure to use `callParent` to call the base class\nversion.\n\n     onRender: function() {\n         this.callParent();\n\n         // custom actions\n     }\n\nThis method is not generally needed because components always have their own DOM\n{@link #property!element elements} and these are maintained by config property\nupdaters prior to insertion in the DOM. In general, it is always best to interrogate\nthe component's elements outside the DOM where there is no associated reflow or\nlayout cost. This method is useful for situations where the component's elements\nmust be in the DOM. For example to be measured correctly.\n","src":{"name":"689,845,0","since":"689,843,15","template":"689,842,8","text":"689,818,8,1081"}},{"$type":"method","access":"private","name":"owns","text":"Returns `true` if the passed element is within the container tree of this component.\n\nFor example if a menu's submenu contains an {@link Ext.form.field.Date}, that top level\nmenu owns the elements of the date picker. Using this method, you can tell if an event\ntook place within a certain component tree.\n","items":[{"$type":"param","name":"element","src":{"name":"689,1088,0"}}],"src":{"access":"689,1081,12","name":"689,1088,0","text":"689,1082,12,305"}},{"$type":"method","access":"private","name":"processElementConfig","text":"Recursively processes the element templates for this class and its superclasses,\nascending the hierarchy until it reaches a superclass whose element template\nhas already been processed.  This method is invoked using the prototype as the scope.\n","items":[{"$type":"return","type":"Object","src":{"type":"18,2014,21"}}],"src":{"access":"18,2013,12","name":"18,2016,0","text":"18,2009,12,245"}},{"$type":"method","access":"private","name":"realign","items":[{"$type":"param","name":"component","src":{"name":"689,710,0"}},{"$type":"param","name":"alignment","src":{"name":"689,710,0"}},{"$type":"param","name":"options","src":{"name":"689,710,0"}}],"src":{"access":"689,708,8","name":"689,710,0"}},{"$type":"method","name":"removeCls","text":"Removes the given CSS class(es) from this widget's primary element.\n","items":[{"$type":"param","name":"cls","text":"The class(es) to remove.\n","type":"String/String[]","src":{"name":"18,1338,33","text":"18,1338,37,25","type":"18,1338,16"}},{"$type":"param","name":"prefix","optional":true,"text":"Optional prefix to prepend before each class.\n","type":"String","value":"\"\"","src":{"name":"18,1339,25","text":"18,1339,36,46","type":"18,1339,16","value":"18,1339,32"}},{"$type":"param","name":"suffix","optional":true,"text":"Optional suffix to append to each class.\n","type":"String","value":"\"\"","src":{"name":"18,1340,25","text":"18,1340,36,41","type":"18,1340,16","value":"18,1340,32"}}],"src":{"name":"18,1342,0","text":"18,1337,8,68"}},{"$type":"method","name":"replaceCls","text":"Replaces specified classes with the newly specified classes.\nIt uses the {@link #addCls} and {@link #removeCls} methods, so if the class(es) you\nare removing don't exist, it will still add the new classes.\n","items":[{"$type":"param","name":"oldCls","text":"The class(es) to remove.\n","type":"String/String[]","src":{"name":"18,1352,33","text":"18,1352,40,25","type":"18,1352,16"}},{"$type":"param","name":"newCls","text":"The class(es) to add.\n","type":"String/String[]","src":{"name":"18,1353,33","text":"18,1353,40,22","type":"18,1353,16"}},{"$type":"param","name":"prefix","optional":true,"text":"Optional prefix to prepend before each class.\n","type":"String","value":"\"\"","src":{"name":"18,1354,25","text":"18,1354,36,46","type":"18,1354,16","value":"18,1354,32"}},{"$type":"param","name":"suffix","optional":true,"text":"Optional suffix to append to each class.\n","type":"String","value":"\"\"","src":{"name":"18,1355,25","text":"18,1355,36,41","type":"18,1355,16","value":"18,1355,32"}}],"src":{"name":"18,1357,0","text":"18,1349,8,206"}},{"$type":"method","access":"private","name":"setCurrentAlignmentInfo","text":"Sets the current Alignment information, called by alignTo\n","items":[{"$type":"param","name":"alignmentInfo","src":{"name":"689,646,0"}}],"src":{"access":"689,644,8","name":"689,646,0","text":"689,643,8,58"}},{"$type":"method","access":"private","name":"setRendered","text":"All Components need a potentially recursive setRendered because some are\npseudo containers, such as grid {@link Ext.grid.Row rows}, and some mix in\n{@link Ext.mixin.Toolable Toolable}.\n","items":[{"$type":"param","name":"rendered","type":"Boolean","src":{"name":"689,997,29","type":"689,997,20"}},{"$type":"param","name":"root","optional":true,"type":"Boolean","src":{"name":"689,998,30","type":"689,998,20"}}],"src":{"access":"689,999,12","name":"689,1001,0","text":"689,994,12,185"}},{"$type":"method","name":"setSize","text":"Sets the size of the Component.\n","items":[{"$type":"param","name":"width","text":"The new width for the Component.\n","type":"Number","src":{"name":"18,1294,24","text":"18,1294,30,33","type":"18,1294,16"}},{"$type":"param","name":"height","text":"The new height for the Component.\n","type":"Number","src":{"name":"18,1295,24","text":"18,1295,31,34","type":"18,1295,16"}}],"src":{"name":"18,1297,0","text":"18,1293,8,32"}},{"$type":"method","access":"private","name":"syncAlwaysOnTop","text":"Fixes up the alwaysOnTop order of this floated widget within its siblings.\n","items":[{"$type":"param","access":"private","name":"fromMousedown","src":{"access":"689,1597,34","name":"689,1597,19"}},{"$type":"return","text":"`true` if this was the topmost widget among its siblings.\n","type":"Boolean","src":{"text":"689,1598,30,58","type":"689,1598,21"}}],"src":{"access":"689,1595,12","name":"689,1600,0","text":"689,1596,12,75"}},{"$type":"method","access":"private","name":"syncFloatWrap","text":"Synchronizes the size and position of the {@link #getFloatWrap floatWrap}\nwhen this Widget is resized\n","src":{"access":"689,1386,12","name":"689,1388,0","text":"689,1384,12,102"}},{"$type":"method","chainable":true,"fires":"beforetofront,tofront","name":"toFront","text":"Brings a {@link #cfg-floated} Component to the front of any other visible, floated\nComponents while honoring all {@link #cfg!alwaysOnTop} settings. This may not become\ntopmost if another visible floated component has a higher {@link #cfg!alwaysOnTop} value.\n\nIf this Component becomes the topmost *modal* floated component, the the shared modal\nmask is moved to just below this Component.\n","items":[{"$type":"param","access":"private","name":"fromMousedown","optional":true,"type":"Boolean","src":{"access":"689,508,42","name":"689,508,26","type":"689,508,16"}},{"$type":"return","text":"this\n","type":"Ext.Component","src":{"text":"689,509,32,5","type":"689,509,17"}}],"src":{"chainable":"689,538,0","fires":"689,523,0:689,534,0","name":"689,511,0","text":"689,502,8,389"}},{"$type":"method","chainable":true,"name":"toggleCls","text":"Toggles the specified CSS class on this element (removes it if it already exists,\notherwise adds it).\n","items":[{"$type":"param","name":"className","text":"The CSS class to toggle.\n","type":"String","src":{"name":"18,1276,24","text":"18,1276,34,25","type":"18,1276,16"}},{"$type":"param","name":"state","optional":true,"text":"If specified as `true`, causes the class to be added. If\nspecified as `false`, causes the class to be removed.\n","type":"Boolean","src":{"name":"18,1277,26","text":"18,1277,33,57:18,1278,8,54","type":"18,1277,16"}},{"$type":"return","name":"this","src":{"name":"18,1284,0"}}],"src":{"chainable":"18,1279,8","name":"18,1281,0","text":"18,1274,8,102"}},{"$type":"method","name":"up","text":"Walks up the ownership hierarchy looking for an ancestor Component which matches\nthe passed simple selector.\n\nExample:\n\n    var owningTabPanel = grid.up('tabpanel');\n","items":[{"$type":"param","name":"selector","optional":true,"text":"The simple selector to test.\n","type":"String","src":{"name":"18,1590,24","optional":"18,1590,34","text":"18,1590,44,29","type":"18,1590,16"}},{"$type":"param","name":"limit","optional":true,"text":"This may be a selector upon which to stop\nthe upward scan, or a limit of the number of steps, or Component reference to stop on.\n","type":"String/Number/Ext.Component","src":{"name":"18,1591,46","text":"18,1591,53,42:18,1592,8,87","type":"18,1591,16"}},{"$type":"return","text":"The matching ancestor Container (or `undefined` if no match\nwas found).\n","type":"Ext.Container","src":{"text":"18,1593,32,60:18,1594,8,12","type":"18,1593,17"}}],"src":{"name":"18,1596,0","text":"18,1583,8,167"}},{"$type":"method","access":"private","name":"updateCls","text":"All cls methods directly report to the {@link #cls} configuration, so anytime it changes,\n{@link #updateCls} will be called\n","items":[{"$type":"param","name":"newCls","src":{"name":"18,1378,0"}},{"$type":"param","name":"oldCls","src":{"name":"18,1378,0"}}],"src":{"access":"18,1374,8","name":"18,1378,0","text":"18,1375,8,124"}},{"$type":"method","access":"protected","name":"updateHeight","items":[{"$type":"param","name":"height","src":{"name":"18,1554,15"}}],"src":{"access":"18,1555,8","name":"18,1557,0"}},{"$type":"method","access":"protected","name":"updateWidth","items":[{"$type":"param","name":"width","src":{"name":"18,1543,15"}}],"src":{"access":"18,1544,8","name":"18,1546,0"}}]},{"$type":"properties","items":[{"$type":"property","access":"protected","name":"baseCls","text":"The base CSS class to apply to this widget's element.\nUsed as the prefix for {@link #ui}-specific class names.\nDefaults to the value of {@link #classCls} or (`x-` + the {@link #xtype}) of the widget\nif {@link #classCls} is `null`\n","value":"null","src":{"access":"18,523,8","name":"18,526,0","text":"18,519,8,230","value":"18,526,0"}},{"$type":"property","access":"protected","name":"classCls","text":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example\n\n    Ext.define('Foo', {\n        extend: 'Ext.Widget',\n        classCls: 'foo'\n    });\n\n    Ext.define('Bar', {\n        extend: 'Foo',\n        classCls: 'bar'\n    });\n\n    var bar = new Bar();\n\n    console.log(bar.element.className); // outputs 'foo bar'\n","value":"null","src":{"access":"18,548,8","name":"18,551,0","text":"18,529,8,532","value":"18,551,0"}},{"$type":"property","access":"protected","name":"classClsRoot","text":"When set to `true` during widget class definition, that class will be the \"root\" for\n{@link #classCls} inheritance. Derived classes may set this to `true` to avoid\ninheriting a {@link #classCls} from their superclass.\n","value":"true","src":{"access":"18,558,8","name":"18,560,0","text":"18,554,8,218","value":"18,560,0"}},{"$type":"property","access":"protected","name":"element","text":"A configuration object for Ext.Element.create() that is used to create the Element\ntemplate.  Subclasses should avoid overriding this property and instead add elements\nusing {@link #template}.\n\nSupports all the standard options of a Ext.Element.create() config and adds 3\nadditional options:\n\n1. `{@link #cfg!reference reference}` - this option specifies a name for Element references.  These\nreferences names become properties of the Widget instance and refer to Ext.Element\ninstances that were created using the template:\n\n         element: {\n             reference: 'element',\n             children: [{\n                 reference: 'innerElement'\n             }]\n         }\n\nAfter construction of a widget the reference elements are accessible as follows:\n\n    var foo = new FooWidget(),\n        innerEl = foo.innerElement; // an Ext.Element that wraps the innerElement\n\nThe reference attribute is optional, but all Widgets must have a `'element'`\nreference on some element within the template (usually the outermost one).\n\n2. `{@link #cfg!listeners listeners}` - a standard listeners object as specified by {@link Ext.mixin.Observable}.\n\n         element: {\n             reference: 'element',\n             listeners: {\n                 click: 'onClick'\n             },\n             children: [{\n                 reference: 'innerElement',\n                 listeners: {\n                     click: 'onInnerClick'\n                 }\n             }]\n         }\n\nSince listeners cannot be attached without an Ext.Element reference the `{@link #cfg!reference reference}`\nproperty MUST be specified in order to use `{@link #cfg!listeners listeners}`.\n\nThe Widget instance is used as the scope for all listeners specified in this way,\nso it is invalid to use the `scope` option in the `{@link #cfg!listeners listeners}` config since it will\nalways be overwritten using `this`.\n\n3. `uiCls` - a suffix to be appended to the ui-specific CSS class for each `{@link #ui}`\nfor this widget.  These ui classes are constructed by appending the `{@link #cfg!ui ui}` to each\n`{@link #classCls}` or `{@link #baseCls}` for the widget.  As such, `uiCls` should\nnever be used on the main `{@link #property!element element}` reference, as its `uiCls` is computed automatically.\n\nFor example, assume a widget is defined with a `{@link #cfg!ui ui}` of `'alt action'` and a\n`uiCls` of `'inner-el'` on its `innerElement` reference element:\n\n         Ext.define('Doodad', {\n             extend: 'Ext.Widget',\n             xtype: 'doodad',\n\n             classCls: 'x-doodad',\n\n             ui: 'alt action',\n\n             element: {\n                 reference: 'element',\n\n                 children: [{\n                     reference: 'innerElement',\n                     cls: 'x-inner-el',\n                     uiCls: 'inner-el'\n                 }]\n             }\n         });\n\nThis would result in the following markup when rendered:\n\n    <div class=\"x-doodad x-doodad-alt x-doodad-action\">\n        <div class=\"x-inner-el x-doodad-inner-el x-doodad-alt-inner-el x-doodad-action-inner-el\"></div>\n    </div>\n\nThese additional classes can be used to style the reference element for a particular\nui; however, use of `uiCls` is not typically necessary or recommended.  Reference\nelements should usually be styled using simple descendant selectors:\n\n    .x-doodad-alt .x-inner-el {\n        color: red;\n    }\n\nWhen there is a possibility that widgets can be nested it is best to use direct\nchild selectors to avoid the possibility of selecting all descendants instead\nof just the reference element for the intended widget:\n\n    .x-doodad-alt > .x-inner-el {\n        color: red;\n    }\n\nOnly use `uiCls` when there is a possibility of nesting, AND there may be a variable\nnumber of elements between the main `{@link #property!element element}` and the reference element in question.\nFor example, Ext.Container with docked items has a different number of elements\nin between its `{@link #property!element element}` and its `bodyElement` than a Container without docked items\nbecause of the wrapping elements that are dynamically added to support docking.\nTo ensure it does not style all descendants it must use a `uiCls` to style its\n`bodyElement`:\n\n    .x-container-alt-body-el {\n        background: #fff;\n    }\n\nNote that when `uiCls` is specified it also adds a class name that does not contain\nthe `{@link #cfg!ui ui}` using just the `{@link #property!classCls classCls}` and/or `{@link #property!baseCls baseCls}` as the prefix.  This class name\ncan be used for base-level styling that does not relate to any particular UI:\n\n    .x-container-body-el {\n        position: relative;\n    }\n","type":"Object","value":"{\n    reference: 'element'\n}","src":{"access":"18,204,8","name":"18,86,27","text":"18,87,8,4364","type":"18,86,19","value":"18,206,0"}},{"$type":"property","access":"private","name":"floatedSelector","optional":true,"readonly":true,"text":"The CSS selector to match floated elements.\n","type":"String","value":"\".x-floated\"","src":{"access":"689,279,8","name":"689,278,28","readonly":"689,280,8","text":"689,278,58,44","type":"689,278,19","value":"689,278,44"}},{"$type":"property","access":"private","name":"floatingCls","optional":true,"readonly":true,"text":"The CSS class to add to this component when it\nis floated at the viewport level.\n","type":"String","value":"\"x-floated\"","src":{"access":"689,272,8","name":"689,270,28","readonly":"689,273,8","text":"689,270,53,47:689,271,8,34","type":"689,270,19","value":"689,270,40"}},{"$type":"property","access":"private","name":"floatWrapCls","optional":true,"readonly":true,"text":"The CSS class to add to this component's\nfloatWrap when it's created.\n","type":"String","value":"\"x-float-wrap\"","src":{"access":"689,302,8","name":"689,300,28","readonly":"689,303,8","text":"689,300,57,41:689,301,8,29","type":"689,300,19","value":"689,300,41"}},{"$type":"property","name":"inheritUi","text":"Set to `true` on widgets that should inherit {@link #ui} from their parent container.\nThis property is typically set on the class body, but can be set on an instance as long\nas it is set prior to the instance being added to its container.  This property is\ninspected at the moment a widget is added to a container, and any UIs on the container\nare added to the widget at that time.  Inherited UIs are in addition to the widget's\nown {@link #ui}, and are updated when the container's UI changes.\n","type":"Boolean/String","value":"false","src":{"name":"689,267,0","text":"689,260,8,495","type":"689,259,19","value":"689,267,0"}},{"$type":"property","access":"private","name":"isInner","value":"true","src":{"access":"689,331,8","name":"689,333,0","value":"689,333,0"}},{"$type":"property","access":"private","name":"noBorderCls","optional":true,"readonly":true,"text":"The CSS class to add to this component should not have\na border.\n","type":"String","value":"Ext.baseCSSPrefix + 'noborder-trbl'","src":{"access":"18,574,8","name":"18,572,28","readonly":"18,575,8","text":"18,572,41,55:18,573,8,10","type":"18,572,19","value":"18,577,0"}},{"$type":"property","access":"private","name":"shadowCls","optional":true,"readonly":true,"text":"The CSS class to add to this component when it has a shadow.\n","type":"String","value":"Ext.baseCSSPrefix + 'shadow'","src":{"access":"689,286,8","name":"689,285,28","readonly":"689,287,8","text":"689,285,39,61","type":"689,285,19","value":"689,289,0"}},{"$type":"property","access":"private","name":"shadowCls","optional":true,"readonly":true,"text":"The CSS class to add to this component should not have a\nshadow.\n","type":"String","value":"Ext.baseCSSPrefix + 'no-shadow'","src":{"access":"689,294,8","name":"689,292,28","readonly":"689,295,8","text":"689,292,39,57:689,293,8,8","type":"689,292,19","value":"689,297,0"}},{"$type":"property","access":"private","name":"shimCls","optional":true,"readonly":true,"text":"The CSS class to add to this component's shim element\nif enabled.\n","type":"String","value":"\"x-shim\"","src":{"access":"689,310,8","name":"689,308,28","readonly":"689,311,8","text":"689,308,46,54:689,309,8,12","type":"689,308,19","value":"689,308,36"}},{"$type":"property","access":"protected","name":"template","text":"An array of child elements to use as the children of the main element in the {@link\n#element} template.  Only used if \"children\" are not specified explicitly in the\n{@link #element} template.\n","type":"Array","value":"[]","src":{"access":"18,514,8","name":"18,510,26","text":"18,511,8,192","type":"18,510,19","value":"18,516,0"}},{"$type":"property","access":"private","name":"uiReferences","text":"A map that tracks all reference elements configured with a `uiCls`.\nContains the `{@link #property!element element}` reference by default since the `{@link #property!element element}` always gets\nnon-suffixed ui-specific CSS class names added to it (see {@link #syncUiCls})\n","type":"Object","src":{"access":"18,978,16","name":"18,977,35","text":"18,979,16,222","type":"18,977,27"}}]},{"$type":"static-properties","items":[{"$type":"property","name":"floatInset","static":true,"text":"The inset from document edges within which floated components are constrained for\nreadability so that they do not merge into the document edge.\nThe default value is 8.\n","type":"Number","value":"8","src":{"name":"689,18,31","static":"689,16,-1","text":"689,19,12,168","type":"689,18,23","value":"689,23,0"}}]}],"src":{"alias":"18,56,0","alternateClassNames":"18,58,0","disable":"18,52,4","extends":"18,55,0:??","mixins":"18,65,0:18,66,0:18,67,0:18,68,0:18,69,0:18,70,0:18,71,0:18,72,0","name":"689,2,11","requires":"18,61,0","since":"18,51,11","text":"18,2,4,1899"},"displayName":"Widget"}]}